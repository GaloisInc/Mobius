-- Informal System Chart

system_chart MOBIUS_TOOLS_WIKI
indexing
  author: "JoeKiniry", "DermotCochran"
explanation "The MOBIUS Tools Wiki is a collaborative development environment for the documentation and communication between developers of the MOBIUS program verification environment.\
	    \The MOBIUS Tools Wiki includes homepages for all subsystems and components. It records all interactions between developers as well as all changes to the source code.\
	    \ It is first point of reference for all MOBIUS developers. It is based on Trac and integrated with Subversion and Hudson."
cluster COLLABORATIVE_DEVELOPMENT_ENVIRONMENTS description "This BON cluster contains concepts related to the use of Collaborative Development Environments (CDEs) within MOBIUS" 
cluster COMMUNICATIONS description "The Communications cluster contains the concept of e-mail, tickets, wikis and other forms of communication between MOBIUS developers." 
cluster COMPONENTS description "The Components cluster in BON is the set of concepts relating to subsystems, modules, systems architecture and dependencies." 
cluster COORDINATIONS description "Meetings and Publications"
cluster LANGUAGES description "This BON cluster describes the Software Languages e.g. Java used within MOBIUS"
cluster LOGICS description "This BON cluster contains the formal Logics used within MOBIUS, including the MOBIUS base logic." 
cluster PLUGINS description "Plugins are software subcomponents which interact with a software platform or framework e.g. Eclipse." 
cluster PROVERS description "The Provers cluster (in BON) is the set of concepts relating to Theorem Provers."
cluster RELEASES description "The Releases cluster contains the concepts of versions, platforms, milestones, features and changes." 
cluster RESOURCES description "The Resources cluster contains the concepts of sites, people, ownership of, responsibility for and commitment to tasks." 
cluster STANDARDS description "The Standards cluster contains Coding Standards, Documentation Standards, Specification Standards and other elements of the Software Development Process." 
cluster STATUSES description "This BON cluster contains the concept of release status, component status and development status i.e. the current non-historical information about the MOBIUS tools" 
cluster SYSTEMS description "Components, subsystems and third-party platforms"
cluster WORKSPACES description "Eclipse workspaces"
end

-- Informal Cluster Charts

cluster_chart COLLABORATIVE_DEVELOPMENT_ENVIRONMENTS
explanation "A collaborative development environment (CDE) consists of integated tools such as wikis, version control and issue tracking which support the development process"
class CDE description "A collaborative develeopment environment"
class CHANGE_LOG description "A record of changes recorded by a version control system"
class FILE_DISTRIBUTION description "A mechanism for release of particular versions of software"
class G_FORGE description "A CDE with ticket tracking and CVS support"
class MILESTONE description "A deadline or target date for a release"
class TAG description "A label associated with a particular version of a file"
class TICKET description "A task, enhancement request or defect report"
class TIMELINE description "A sequence of milestones, events and changes"
class TRAC description "A CDE with wiki, ticket tracking and Subverison support"
class VERSION_CONTROL description "A system for tracking changes to source code e.g. CVS or Subversion"
end

cluster_chart COMMUNICATIONS
explanation "The way in which useful information is exchanged between MOBIUS developers and with third-party collaborators"
class CITATION description "A bibliographic reference to an existing document or publication"
class DESCRIPTION description "A one line summary of a component or class"
class DOCUMENT_STATUS description "The stage of the documentation within its workflow"
class DOCUMENT_TITLE description "The name by which a document is both publicly and uniquely identified"
class EXAMPLE description "A detailed instance of how a software component might be used"
class EXPLANATION description "A detailed overview of a component or class"
class HOME_PAGE description "The top level page of a website or the main page for a software component"
class INDEX description "Web page with links to all other web pages"
class LICENSE description "The terms and conditions for usage of a software component"
class NEWS description "Information about recent changes in status"
class REFERENCE description "The mention of a document within another context"
class TABLE_OF_CONTENTS description "Section of a document or page that list major divisions of content"
class VERSION description "An iteration within the lifecycle of a component"
class WEB_SITE description "A web server at which HTML documents and servlets are hosted"
class WIKI description "A collection of web pages designed to enable anyone who accesses it to contribute or modify content, using a simplified markup language"
end

cluster_chart COMPONENTS
explanation "Subsystems or plugins developed or mainatained and upgraded by MOBIUS developers"
class API description "Application Programmer Interface"
class CLI description "Command Line Interface"
class COMPONENT description "A self-contained subsystem of the MOBIUS PVE"
class DETAIL description "Full information about the component"
class DEPENDENCY description "Other components which are used by this component"
class REPOSITORY description "The location for this component within the version control system"
class SPECIFICATION description "The formal model for the functional behaviour of this component"
class UPDATE_SITE description "The web page from which this component can be downloaded and installed e.g. an Eclipse update site URL"
cluster COLLABORATIVE_DEVELOPMENT_ENVIRONMENTS description "CDE used to manage MOBIUS components"
cluster RELEASES description "Releases of MOBIUS components"
cluster RESOURCES description "Resources allocated to work on MOBIUS components"
end

cluster_chart COORDINATIONS
explanation "Meetings and Publications"
class MEETING description "Active face-to-face co-ordination between two or more people"
class PUBLICATION description "New and original research accepted by peer review"
class PUBLICATION_VENUE description "Meeting at which new publications are presented"
class TEMPORAL_ORDER description "Sequence of events"
end

cluster_chart LANGUAGES
explanation "Languages used or processed by MOBIUS components"
class ABSTRACT_SYNTAX_TREE description "An abstract representation of the syntax of a formal language expression"
class BOOGIE_PL description "Intermediate language derived from a specification language and used to generate verification conditions"
class BUSINESS_OBJECT_NOTATION description "A formal language for the modeling of object-orientated software"
class BYTECODE_MODELING_LANGUAGE description "Specification language embedded with the Java bytecode, which can be generated from Java Modeling Language (JML)"
class CODE description "An expression or set of expressions written in a programming language"
class FORMAL_LANGUAGE description "A language which has a formal syntax and semantics, which can be processed automatically"
class JAVA_BYTE_CODE description "Object code which can be run on a Java Virtual Machine"
class JAVA_MODELING_LANGUAGE description "Design-by-contract specification language embedded as comments for the Java programming language"
class JAVA_PROGRAMMING_LANGUAGE description "Object orientated programing language which can be compiled into bytecode"
class LEXER description "A tool that processes the lexiographic structure of a document i.e. converts a sequence of characters into a sequence of tokens"
class OBJECT_CODE description "Program code which can be interpreted as machine instructions"
class PARSER description "A tool which can analyse the structure of a formal language"
class PROGRAMMING_LANGUAGE description "A formal language that can either be compiled into object code, or interpreted as machine instructions"
class SEMANTICS description "The meaning and interpretation of a language"
class SMT description "Formal language used for theorem proving"
class SOURCE_CODE description "Program code which can compiled into object code"
class SPECIFICATION_LANGUAGE description "A formal language used to describe the behavior of a system"
class SYNTAX description "The structure and grammer of a language"
class TYPE_CHECKER description "A tool that checks the object type definitions used in a formal language"
end

cluster_chart LOGICS
explanation "The theory and calculus used in MOBIUS"
class BICOLANO description "A Coq formalisation of the MOBIUS byte code logic"
class ESCJAVA2_LOGIC description "The logic embedded within ESCJava2"
class LOGIC description "Formal theory or calculus"
class MOBIUS_BYTECODE_LOGIC description "Theory and calculus of the MOBIUS byte code"
end

cluster_chart RELEASES
explanation "The process for distribution and packaging of a stable version of each component"
class DOWNLOAD description "An electronic distribution mechanism for the release"
class LINUX_RELEASE description "A release for the latest version of Eclipse with JML4 on a linux 32-bit platform"
class MAC_OS_X_RELEASE description "A release for the latest version of Eclipse with JML4 on a universal binary Mac OS X platform"
class PLATFORM description "The operating environment on which the release can be used"
class RELEASE description "The process of preparing and making available the latest version of a usable software component"
class SCHEDULE description "The timeline for a release"
class WINDOWS_RELEASE description "A release for the latest version of Eclipse with JML4 and its supported versions of XP or Vista"
cluster COMMUNICATIONS description "The propagation of information about the release"
cluster RESOURCES description "The people and time commitment required to complete the release"
end

cluster_chart RESOURCES
explanation "The assignment of people, commitment of time and ownership of tasks"
class AUTHOR description "A person with responibility for one or more documents or programs"
class COMMITMENT description "The allocation of time to the completion of a task"
class CONTACT_DETAILS description "The means by which to commmunicate with a person"
class ELECTRONIC_MAIL_ADDRESS description "The address at which a person will receive electronic documents"
class INSTANT_MESSENGER_ID description "The address at which a person will accept an electronic dialog"
class MAINTAINER description "A person responsible for one or more components"
class OWNER description "A person with responsibility for one or more tasks"
class PERSON description "A member of the group or team"
class PERSONNEL description "One or more people who might be assigned to work on a task"
class PHONE_NUMBER description "The number at which a person will receive phone calls"
class RESOURCE description "An abstract representation of a person's time, energy and commitment to a task"
class RESPONSIBILITY description "The assignment of one or more people to as task"
class SITE description "A physical location at which people work and which might also have associated web pages"
class WEB_PAGE description "A Hyper Text Markup Language (HTML) document"
end

cluster_chart PLUGINS
explanation "Plugins are software subcomponents which interact with a software platform or framework e.g. Eclipse.  For our purposes, a component is an object that provides a certain type of service within the context of the application. There is at most one instance of any component: components are singletons. That implies that a component does not map to an entity of the application's object model; instead, compoennts represent functional subsystems. Components can declare extension points that other components can plug in to. This allows one component to enhance the functionality of the component it extends, without the extended component even knowing that the extending component exists. All that is needed is that the original component exposes – and uses – one or more extension points See Trac Component Architecture for an example of a Plugin Architecture. Other examples are Maven and Hudson"
class FEATURE description "A set of Eclipse plugins and sub-features"
class FX7_PLUGIN description "An Eclipse plugin that bundles the FX7 theorem prover"
class JAVAFE_PLUGIN description "An Eclipse plugin that provides an API for the Java 1.4 front-end of ESC/Java2"
class JML4_PLUGIN description "An major customisation of the Eclipse framework that supports the Java Modeling Language (JML) infrastructure"
class JML_FOLDING_PLUGIN description "An Eclipse plugin that extends the text editor so to permit folding of JML syntax"
class PLUGIN description "A software component that interacts with other components via a shared framework and platform"
class PROVER_EDITOR_PLUGIN description "An Eclipse plugin that permits editing of theorem proving languages"
class SIMPLIFY_PLUGIN description "An Eclipse plugin that bundles the Simplify theorem prover"
class UMBRA_EDITOR_PLUGIN description "An Eclipse plugin that permits editing of Java Bytecode with embedded Bytecode Modeling Language (BML) annotations"
end

cluster_chart PROVERS
explanation "Tools that help to check verification conditions"
class AUTOMATED_PROVER description "An automated theorem prover"
class COQ_PROVER description "Theorem prover for Coq language"
class CVC3_PROVER description "CVC3 theorem prover"
class FX7_PROVER description "Fx7 theorem prover"
class INTERACTIVE_PROVER description "An interactive theorem prover"
class ISABELLE_PROVER description "Isabelle theorem prover"
class PROVER description "A theorem prover"
class PVS_PROVER description "Theorem prover for PVS langauge"
class SIMPLIFY_PROVER description "Simplify theorem prover"
class YICES_PROVER description "Yices theorem prover"
end

cluster_chart STANDARDS
explanation "Agreed patterns and templates for layout of text and code"
class CODING_STANDARD description "Standard conventions for layout and formating of software code"
class DOCUMENTATION_STANDARD description "Standard layouts for wiki pages and user manuals"
class SPECIFICATION_STANDARD description "Consistent interpretation and usage of formal specifications e.g. design-by-contract and refinement"
class STANDARD description "Best practice and examples of how to develop high quality software"
end

cluster_chart STATUSES
explanation "The stages with the lifecycle or workflow of a component or feature"
class ACTIVE description "Actively being developed and maintained"
class ALPHA description "Feature complete and ready for internal testing"
class ASPIRATIONAL description "Proposed feature which has not been developed yet"
class BETA description "Feature freeze and ready for external testing"
class CODENAME description "Name given to an aspirational feature"
class DELTA description "Stable production release"
class DEPRECATED description "Older feature which is no longer being supported or mantained"
class GAMMA description "Release candidate which is code complete"
class LEGACY description "Component which has reached its final release"
class NOT_ACTIVE description "Unfinished but not being maintained"
class OBSOLETE description "Feature or component which is no longer useful"
class STABLE description "Component or feature which has not changed recently"
class STATUS description "The position of a component or feature within the software development lifecycle"
class WISHLIST description "Prioritized list of aspirational features"
end

cluster_chart SYSTEMS 
explanation "Hierarchy of subsystems, components and features within MOBIUS"
class BON_SUBSYSTEM description "Subsystem for processing of BON specifications"
class BYTECODE_SUBSYSTEM description "Subsystem for verification of byte code"
class COMPOSITIONAL_TYPE_CHECKER description "Subsystems for typechecking"
class DAIKON description "Dynanic invariant detector"
class ECLIPSE description "An IDE with a plugin architecture"
class EMACS description "An advanced test editor"
class ESCJAVA2 description "Extended Static Checking for Java component"
class FREEBOOGIE description "BoogiePL processor"
class HAWK description "Advanced verification-centric test infrastructure"
class HOUDINI description "Annotation assistant for ESC/Java2"
class INVARIANT_GENERATION description "Inferring of invariants from source code"
class JML_SUBSYSTEM description "Infrastructure for processing JML annotations"
class LOGGING description "Logging infrastructure for all MOBIUS components"
class PCC_SUBSYSTEM description "Subsystem for checking Proof Carrying Code (PCC) certificates"
class PRECONDITION_GENERATION description "Inferring of preconditions from source code"
class RACE_CONDITION_CHECKER description "Subsystems for checking race conditions"
class SOURCECODE_SUBSYSTEM description "Subsystem for verification of source code"
class SPECIFICATION_CHECKER description "Checking the internal consistency of a specification"
class SUBSYSTEM description "MOBIUS component or plugin for an external system"
class SYSTEM description "Third party system which is used by the MOBIUS PVE"
class VERIFICATION_CONDITION_GENERATION description "Generation of conditions which can be verified by a theorem prover"
cluster PLUGINS description "Eclipse plugins used within MOBIUS"
cluster PROVERS description "Theorem provers used within MOBIUS"
cluster RELEASES description "Releases of MOBIUS components and subsystems"
end

cluster_chart WORKSPACES
explanation "Workspaces that can be used with the Mobius PVE"
class ECLIPSE_WORKSPACE description "Workspace configuration for the Eclipse IDE"
class EXAMPLES_WORKSPACE description "Eclipse workspace which contains samples for use with the Mobius PVE"
class MOBIUS_DEVELOPER_WORKSPACE description "Eclipse workspace which contains source code and repository URLs for working on the PVE"  
end

-- Informal Class Charts

class_chart ABSTRACT_SYNTAX_TREE
end

class_chart ACTIVE
end

class_chart ALPHA
end

class_chart API
end

class_chart ASPIRATIONAL
end

class_chart AUTHOR
end

class_chart AUTOMATED_PROVER
end

class_chart BETA
end

class_chart BICOLANO
end

class_chart BON_SUBSYSTEM
end

class_chart BOOGIE_PL
end

class_chart BUSINESS_OBJECT_NOTATION
end

class_chart BYTECODE_MODELING_LANGUAGE 
end

class_chart BYTECODE_SUBSYSTEM
end

class_chart CDE
end

class_chart CHANGE_LOG
end

class_chart CITATION
end

class_chart CLI
end

class_chart CODE
end

class_chart CODENAME
end

class_chart CODING_STANDARD
end

class_chart COMMITMENT
end

class_chart COMPONENT
end

class_chart COMPOSITIONAL_TYPE_CHECKER
end

class_chart CONTACT_DETAILS
end

class_chart COQ_PROVER
end

class_chart CVC3_PROVER
end

class_chart DAIKON
end

class_chart DELTA
end

class_chart DEPENDENCY
end

class_chart DEPRECATED
end

class_chart DESCRIPTION
end

class_chart DETAIL
end

class_chart DOCUMENT_STATUS
end

class_chart DOCUMENT_TITLE
end

class_chart DOCUMENTATION_STANDARD
end

class_chart DOWNLOAD
end

class_chart ECLIPSE
end

class_chart ECLIPSE_WORKSPACE
end

class_chart ELECTRONIC_MAIL_ADDRESS
end

class_chart EMACS
end

class_chart ESCJAVA2
end

class_chart ESCJAVA2_LOGIC
end

class_chart EXAMPLE
end

class_chart EXAMPLES_WORKSPACE
end

class_chart EXPLANATION
end

class_chart FEATURE
end

class_chart FORMAL_LANGUAGE
end

class_chart FILE_DISTRIBUTION
end

class_chart FREEBOOGIE
end

class_chart FX7_PLUGIN
end

class_chart FX7_PROVER
end

class_chart G_FORGE
end

class_chart GAMMA
end

class_chart HAWK
end

class_chart HOME_PAGE
end

class_chart HOUDINI
end

class_chart INDEX
end

class_chart INSTANT_MESSENGER_ID
end

class_chart INTERACTIVE_PROVER
end

class_chart INVARIANT_GENERATION
end

class_chart ISABELLE_PROVER
end

class_chart JAVA_BYTE_CODE
end

class_chart JAVA_MODELING_LANGUAGE
end

class_chart JAVA_PROGRAMMING_LANGUAGE
end

class_chart JAVAFE_PLUGIN
end

class_chart JML_FOLDING_PLUGIN
end

class_chart JML_SUBSYSTEM
end

class_chart JML4_PLUGIN
end

class_chart LEGACY
end

class_chart LEXER
end

class_chart LOGGING
end

class_chart LICENSE
end

class_chart LINUX_RELEASE
end

class_chart LOGIC
end

class_chart MAINTAINER
end

class_chart MAC_OS_X_RELEASE
end

class_chart MEETING
end

class_chart MILESTONE
end

class_chart MOBIUS_DEVELOPER_WORKSPACE
end

class_chart MOBIUS_BYTECODE_LOGIC
end

class_chart NEWS
end

class_chart NOT_ACTIVE
end

class_chart OBJECT_CODE
end

class_chart OBSOLETE
end

class_chart OWNER
end

class_chart PARSER
end

class_chart PCC_SUBSYSTEM
end

class_chart PERSON
end

class_chart PERSONNEL
end

class_chart PHONE_NUMBER
end

class_chart PLATFORM
end

class_chart PLUGIN
end

class_chart PRECONDITION_GENERATION
end

class_chart PROGRAMMING_LANGUAGE
end

class_chart PROVER
end

class_chart PROVER_EDITOR_PLUGIN
end

class_chart PUBLICATION
end

class_chart PUBLICATION_VENUE
end

class_chart PVS_PROVER
end

class_chart RACE_CONDITION_CHECKER
end

class_chart REFERENCE
end

class_chart RESOURCE
end

class_chart RELEASE
end

class_chart RESPONSIBILITY
end

class_chart REPOSITORY
end

class_chart SCHEDULE
end

class_chart SIMPLIFY_PLUGIN
end

class_chart SIMPLIFY_PROVER
end

class_chart SEMANTICS
end

class_chart SITE
end

class_chart SMT
end

class_chart SOURCE_CODE
end

class_chart SOURCECODE_SUBSYSTEM
end

class_chart SPECIFICATION
end

class_chart SPECIFICATION_CHECKER
end

class_chart SPECIFICATION_LANGUAGE
end

class_chart SPECIFICATION_STANDARD
end

class_chart STABLE
end

class_chart STANDARD
end

class_chart STATUS
end

class_chart SUBSYSTEM
end

class_chart SYNTAX
end

class_chart SYSTEM
end

class_chart TABLE_OF_CONTENTS
end

class_chart TAG
end

class_chart TEMPORAL_ORDER
end

class_chart TICKET
end

class_chart TIMELINE
end

class_chart TRAC
end

class_chart TYPE_CHECKER
end

class_chart UMBRA_EDITOR_PLUGIN
end

class_chart UPDATE_SITE
end

class_chart VERIFICATION_CONDITION_GENERATION
end

class_chart VERSION
end

class_chart VERSION_CONTROL
end

class_chart WEB_PAGE
end

class_chart WEB_SITE
end

class_chart WIKI
end

class_chart WINDOWS_RELEASE
end

class_chart WISHLIST
indexing
  in_cluster: "STATUSES"
explanation "List of aspirational features in order of priority"
query
   "How many features on the wishlist?",
   "How many features on the wishlist for this component?",
   "What is the highest item on the wishlist?",
   "What is the highest item on the wishlist for this component?",
   "What is the relative priority of these two features?",
   "What would this feature depend on?"
command
   "Add a feature for a component to the wishlist!",
   "Move feature to the top of the list!",
   "Move feature to the bottom of the list!",
   "Add a dependency to this feature!",
   "Remove a dependency from this feature!",
   "Remove this feature from this list unless another feature depends on it!"
constraint
   "Each feature appears only once on the list",
   "No two features have equal priority",
   "Each feature is associated with a new or existing component",
   "No feature is associated with an obsolete component",
   "No feature has a higher priority than its dependencies i.e. other features on which it depends",
   "No feature is co-dependent on another feature",
   "No feature is in conflict with a higher priority feature"
end

class_chart YICES_PROVER
indexing
  in_cluster: "PROVERS"
explanation "YICES SMT Solver"
inherit PROVER
end