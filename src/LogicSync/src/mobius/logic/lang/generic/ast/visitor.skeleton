
// You can copy and paste the text below when you define a visitor that
// needs to override most functions on the base class.

  /** {@inheritDoc} */
  @Override
  public Application evalApplication(final Term next, final Term first) {
    assert false : "not implemented";
    return null;
  }

  /** {@inheritDoc} */
  @Override
  public Atom evalAtom(final Term next, final String id) {
    assert false : "not implemented";
    return null;
  }

  /** {@inheritDoc} */
  @Override
  public ClauseList evalClauseList(final LinkedList<GenericAst> list) {
    assert false : "not implemented";
    return null;
  }

  /** {@inheritDoc} */
  @Override
  public Doc evalDoc(final String content) {
    assert false : "not implemented";
    return null;
  }

  /** {@inheritDoc} */
  @Override
  public Forall evalForall(final Term next, final Atom vars, final Term term) {
    assert false : "not implemented";
    return null;
  }

  /** {@inheritDoc} */
  @Override
  public Formula evalFormula(final String id, final Term term) {
    assert false : "not implemented";
    return null;
  }

  /** {@inheritDoc} */
  @Override
  public Symbol evalSymbol(final String id) {
    assert false : "not implemented";
    return null;
  }

  /** {@inheritDoc} */
  @Override
  public Term evalTerm(final Term next) {
    assert false : "not implemented";
    return null;
  }


