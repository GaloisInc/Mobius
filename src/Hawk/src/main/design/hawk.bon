-- Hawk is a verification-centric test framework for use with Hudson and Maven
-- It will manage and automate the complete test cycle including generation of test case
-- to ensure complete specification, behavioral and functional coverage of the system.

-- Informal System Chart

system_chart HAWK
explanation 
  "Hawk is a verification-centric test framework that uses Hudson and \
  \Maven on multiple servers to achieve full functional, behavioral and specification test coverage."
cluster BUILDS
  description 
  "The build process needed to run the tests"
cluster HARDWARE 
description 
  "The hardware used to run the tests"
cluster SOFTWARE 
  description 
  "The software used to run the tests"
cluster SOURCE_CODE_MANAGEMENT 
  description 
  "The organisation of the source code"
cluster STATUSES 
description 
  "The status of a test run"
cluster TESTS
  description 
  "The structure of the tests"
end

-- Informal Cluster Charts

cluster_chart BUILDS
explanation
  "The build process and infrastructure needed to run tests"
class BUILD description "Automated compilation of a software component from up-to-date source code\
      \optionally including running of automatic test suites"
class BUILD_CONFIGURATION description "Configuration for building and testing a project"
class BUILD_HISTORY description "List of recent builds for a project test configuration"
class DOWNSTREAM description "Project which depends on an artifact built from this project"
class DURATION description "Length of time required to run tests, including end-to-end time and times for each test"
class EXECUTOR description "Machine, virtual machine or slave process on which builds and tests are run"
class PROJECT description "Software component or subsystem which can be built and tested as a unit"
class PROJECT_RELATIONSHIP description "The dependency relationship between project builds"
class QUEUE description "Build Queue"
class UPSTREAM description "Project which creates an artifact which is required by this project"
end

cluster_chart HARDWARE
end

cluster_chart SOFTWARE
end

cluster_chart SOURCE_CODE_MANAGEMENT
end

cluster_chart STATUSES
explanation
  "The outcomes of a test run"
class STATUS
description
  "The outcome of any test run"
class SUCCESS
description
  "The outcome of a successful test run"
class FAILURE
description
  "The outcome of a test run with one or more failures"
class RUNNING
description
  "The status of a test in progress"
class ERROR
description
  "The status of a test run which was unable to run any tests"
class TIMED_OUT
description
  "The state of having failed to complete a build"
end

cluster_chart TESTS
explanation
  "Tests and test results"
class ACTUAL_RESULT description "The result of a test instance in the current build"
class CODE_COVERAGE description "The classes, methods and statements exercised by the tests"
class EXPECTED_RESULT description "The range of permitted results for a given test instance"
class GENERATED_TEST description "Automatically generated Hawk test used to fill gaps in coverage or for regression testing"
class HAND_WRITTEN_TEST description "Existing test manually converted to a Hawk test for regression testing"
class LEGACY_TEST description "Existing test case re-used for Hawk testing"
class PLATFORM_SPECIFIC_TEST description "Test cases handwritten for a specific platform"
class PARAMETER description "The configuration options within a test"
class RESULT description "The output of a test case for a given set of parameters"
class SPECIFICATION_COVERAGE description "The functional behaviours and scenarios covered by the tests"
class TEST_CASE description "A single test scenario with one or more parameters"
class TEST_COVERAGE description "The scope of the test and its limitations"
class TEST_RUN description "The complete set of tests for a project"
class TEST_SUITE description "A cluster of tests"
end

-- Informal Class Charts

class_chart ACTUAL_RESULT
inherit RESULT
end

class_chart BUILD
end

class_chart BUILD_CONFIGURATION
end

class_chart BUILD_HISTORY
end

class_chart CODE_COVERAGE
inherit TEST_COVERAGE
end

class_chart DOWNSTREAM
inherit PROJECT
end

class_chart DURATION
end

class_chart ERROR
end

class_chart EXECUTOR
end

class_chart EXPECTED_RESULT
inherit RESULT
end

class_chart FAILURE
end

class_chart GENERATED_TEST
inherit TEST_CASE
end

class_chart HAND_WRITTEN_TEST
inherit TEST_CASE
end

class_chart LEGACY_TEST
inherit HAND_WRITTEN_TEST
end

class_chart PARAMETER
end

class_chart PLATFORM_SPECIFIC_TEST
inherit HAND_WRITTEN_TEST
end

class_chart PROJECT
end

class_chart PROJECT_RELATIONSHIP
end

class_chart QUEUE
end

class_chart RESULT
end

class_chart RUNNING
end

class_chart SPECIFICATION_COVERAGE
inherit TEST_COVERAGE
end

class_chart STATUS
end

class_chart SUCCESS
end

class_chart TEST_CASE
end

class_chart TEST_COVERAGE
end

class_chart TEST_RUN
end

class_chart TEST_SUITE
end

class_chart TIMED_OUT
end

class_chart UPSTREAM
inherit PROJECT
end