{nullable_by_default=NULLABLE_BY_DEFAULT, <:=SUBTYPE_OF, <-=LEFT_ARROW, 
refining=REFINING, \space=BSSPACE, ghost=GHOST, maintaining=LOOP_INVARIANT, 
invariant=INVARIANT, signals_only=SIGNALS_ONLY, \pre=BSPRE, choose=CHOOSE, 
spec_safe_math=SPEC_SAFE_MATH, <#=LOCK_LT, \into=BSINTO, \num_of=BSNUMOF, 
exceptional_example=EXCEPTIONAL_EXAMPLE, or=OR, <#==LOCK_LE, \lblpos=BSLBLPOS, 
measured_by=MEASURED_BY, for_example=FOR_EXAMPLE, nowarn=NOWARN, implies_that=IMPLIES_THAT, 
extract=EXTRACT, non_null=NONNULL, pure=PURE, \real=BSREAL, \readonly=BSREADONLY, 
unreachable=UNREACHABLE, \only_called=BSONLYCALLED, code_bigint_math=CODE_BIGINT_MATH, 
refines=REFINES, axiom=AXIOM, \forall=BSFORALL, \lblneg=BSLBLNEG, continues=CONTINUES, 
\warn_op=BSWARNOP, spec_bigint_math=SPEC_BIGINT_MATH, \values=BSVALUES, \type=BSTYPELC, 
\TYPE=BSTYPEUC, \elemtype=BSELEMTYPE, \index=BSINDEX, query=QUERY, behavior=BEHAVIOR, 
\lockset=BSLOCKSET, constraint=CONSTRAINT, <=!=>=INEQUIVALENCE, \only_assigned=BSONLYASSIGNED, 
\fresh=BSFRESH, debug=DEBUG, refine=REFINES, havoc=HAVOC, exsures=SIGNALS, ensures=ENSURES, 
\working_space=BSWORKINGSPACE, \same=BSSAME, immutable=IMMUTABLE, model_program=MODEL_PROGRAM, 
\nonnullelements=BSNONNULLELEMENTS, spec_java_math=SPEC_JAVA_MATH, diverges=DIVERGES, 
\only_captured=BSONLYCAPTURED, readable=READABLE, post=ENSURES, weakly=WEAKLY, 
\java_math=BSJAVAMATH, |}=SPEC_GROUP_END, \not_modified=BSNOTMODIFIED, nullable=NULLABLE, 
\bigint_math=BSBIGINT_MATH, field=FIELD, \typeof=BSTYPEOF, represents=REPRESENTS, 
<==>=EQUIVALENCE, assert=ASSERT, method=METHOD, \reach=BSREACH, readonly=READONLY, 
\duration=BSDURATION, spec_public=SPEC_PUBLIC, normal_behavior=NORMAL_BEHAVIOR, 
initializer=INITIALIZER, rep=REP, ==>=IMPLIES, old=OLD, monitors_for=MONITORS_FOR, 
decreasing=DECREASES, \only_accessed=BSONLYACCESSED, \max=BSMAX, writable=WRITABLE, 
{|=SPEC_GROUP_START, \such_that=BSSUCHTHAT, <===REVERSE_IMPLIES, code_java_math=CODE_JAVA_MATH, 
uninitialized=UNINITIALIZED, non_null_by_default=NON_NULL_BY_DEFAULT, \warn=BSWARN, 
..=DOT_DOT, when=WHEN, \min=BSMIN, \lbl=BSLBLANY, returns=RETURNS, -jml declaration-=JMLDECL, 
instance=INSTANCE, normal_behaviour=NORMAL_BEHAVIOR, working_space=WORKING_SPACE, 
assignable=ASSIGNABLE, \nothing=BSNOTHING, <JMLSTART>=STARTJMLCOMMENT, normal_example=NORMAL_EXAMPLE, 
spec_protected=SPEC_PROTECTED, code=CODE, forall=FORALL, \exists=BSEXISTS, requires=REQUIRES, 
signals=SIGNALS, \peer=BSPEER, loop_invariant=LOOP_INVARIANT, \invariant_for=BSINVARIANTFOR, 
decreases=DECREASES, captures=CAPTURES, example=EXAMPLE, \not_specified=BSNOTSPECIFIED, 
modifies=ASSIGNABLE, abrupt_behavior=ABRUPT_BEHAVIOR, model=MODEL, modifiable=ASSIGNABLE, 
behaviour=BEHAVIOR, set=SET, breaks=BREAKS, exceptional_behavior=EXCEPTIONAL_BEHAVIOR, 
\everything=BSEVERYTHING, initially=INITIALLY, \result=BSRESULT, callable=CALLABLE, 
\nowarn_op=BSNOWARNOP, accessible=ACCESSIBLE, \old=BSOLD, \sum=BSSUM, \product=BSPRODUCT, 
monitored=MONITORED, code_safe_math=CODE_SAFE_MATH, constructor=CONSTRUCTOR, 
static_initializer=STATIC_INITIALIZER, peer=PEER, ->=RIGHT_ARROW, \not_assigned=BSNOTASSIGNED, 
helper=HELPER, exceptional_behaviour=EXCEPTIONAL_BEHAVIOR, <JMLEND>=ENDJMLCOMMENT, 
\bigint=BSBIGINT, \rep=BSREP, \safe_math=BSSAFEMATH, in=IN, choose_if=CHOOSE_IF, 
duration=DURATION, \is_initialized=BSISINITIALIZED, maps=MAPS, pre=REQUIRES, 
(*...*)=INFORMAL_COMMENT, secret=SECRET, abrupt_behaviour=ABRUPT_BEHAVIOR, 
\nowarn=BSNOWARN, assume=ASSUME, also=ALSO, hence_by=HENCE_BY}