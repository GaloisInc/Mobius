[ebrowse-hs "ebrowse 5.0" " -x" () ()][ebrowse-ts [ebrowse-cs "CVC3" "CVC3" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CVC3" "std" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CVC3" "MiniSat" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CVC3" "SAT" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CVC3" () 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "PushEntry" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "struct PushEntry {" 6582"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" ]
()([ebrowse-ms "d_clauseID" () 0 () "  int d_clauseID;" 6707 0  () () 0]
[ebrowse-ms "d_ok" () 0 () "  bool d_ok;" 6868 0  () () 0]
[ebrowse-ms "d_qhead" () 0 () "  size_type d_qhead;" 6774 0  () () 0]
[ebrowse-ms "d_thead" () 0 () "  size_type d_thead;" 6795 0  () () 0]
[ebrowse-ms "d_trailSize" () 0 () "  size_type d_trailSize;" 6753 0  () () 0]
)
([ebrowse-ms "PushEntry" () 0 () "ze, size_type qhead, size_type thead, bool ok) :" 6883 0  () "ze, size_type qhead, size_type thead, bool ok) :" 6883]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ArrayTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/array_theorem_producer.cpp" ]
()()
([ebrowse-ms "ArrayTheoremProducer" () 0 () () 0 0  () "rayTheoremProducer(TheoryArray* theoryArray)
  :" 1168]
[ebrowse-ms "arrayNotEq" () 0 () () 0 0  () "Theorem ArrayTheoremProducer::arrayNotEq(const" 10089]
[ebrowse-ms "interchangeIndices" () 0 () () 0 0  () "ArrayTheoremProducer::interchangeIndices(const" 8126]
[ebrowse-ms "liftReadIte" () 0 () () 0 0  () "Theorem ArrayTheoremProducer::liftReadIte(const" 9568]
[ebrowse-ms "readArrayLiteral" () 0 () () 0 0  () "ArrayTheoremProducer::readArrayLiteral(const" 8651]
[ebrowse-ms "rewriteReadWrite" () 0 () () 0 0  () "ArrayTheoremProducer::rewriteReadWrite(const" 4467]
[ebrowse-ms "rewriteReadWrite2" () 0 () () 0 0  () "ArrayTheoremProducer::rewriteReadWrite2(const" 5312]
[ebrowse-ms "rewriteRedundantWrite1" () 0 () () 0 0  () "rayTheoremProducer::rewriteRedundantWrite1(const" 6421]
[ebrowse-ms "rewriteRedundantWrite2" () 0 () () 0 0  () "rayTheoremProducer::rewriteRedundantWrite2(const" 7619]
[ebrowse-ms "rewriteSameStore" () 0 () () 0 0  () "ArrayTheoremProducer::rewriteSameStore(const" 2003]
[ebrowse-ms "rewriteWriteWrite" () 0 () () 0 0  () "ArrayTheoremProducer::rewriteWriteWrite(const" 3555]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "hash_set" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_set.h" "  class hash_set {" 2693"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_set.h" ]
()([ebrowse-ms "d_table" () 0 () "    _hash_table d_table;" 3362 1  () () 0]
)
([ebrowse-ms "begin" () 4 () "    const_iterator begin()" 6133 0  () "    const_iterator begin()" 6133]
[ebrowse-ms "begin" () 0 () "    iterator begin()" 6037 0  () "    iterator begin()" 6037]
[ebrowse-ms "bucket_count" () 4 () "    size_type bucket_count()" 5744 0  () "    size_type bucket_count()" 5744]
[ebrowse-ms "clear" () 0 () "    void clear()" 4450 0  () "    void clear()" 4450]
[ebrowse-ms "contains" () 4 () "    bool contains(const" 5244 0  () "    bool contains(const" 5244]
[ebrowse-ms "count" () 4 () "    size_type count(const" 5406 0  () "    size_type count(const" 5406]
[ebrowse-ms "empty" () 4 () "    bool empty()" 5514 0  () "    bool empty()" 5514]
[ebrowse-ms "end" () 4 () "    const_iterator end()" 6320 0  () "    const_iterator end()" 6320]
[ebrowse-ms "end" () 0 () "    iterator end()" 6226 0  () "    iterator end()" 6226]
[ebrowse-ms "erase" () 0 () "    size_type erase(const" 5120 0  () "    size_type erase(const" 5120]
[ebrowse-ms "find" () 4 () "    const_iterator find(const" 4702 0  () "    const_iterator find(const" 4702]
[ebrowse-ms "find" () 0 () "    iterator find(const" 4583 0  () "    iterator find(const" 4583]
[ebrowse-ms "hash_set" () 0 () "    hash_set(const hash_set& other) :" 4072 0  () "    hash_set(const hash_set& other) :" 4072]
[ebrowse-ms "hash_set" () 0 () " const _HashFcn& hash, const _EqualKey& equal) :" 3903 0  () " const _HashFcn& hash, const _EqualKey& equal) :" 3903]
[ebrowse-ms "hash_set" () 0 () "e_type initial_capacity, const _HashFcn& hash) :" 3722 0  () "e_type initial_capacity, const _HashFcn& hash) :" 3722]
[ebrowse-ms "hash_set" () 0 () "    hash_set(size_type initial_capacity) :" 3576 0  () "    hash_set(size_type initial_capacity) :" 3576]
[ebrowse-ms "hash_set" () 0 () "    hash_set() :" 3460 0  () "    hash_set() :" 3460]
[ebrowse-ms "insert" () 0 () "    std::pair<iterator, bool> insert(const" 4905 0  () "    std::pair<iterator, bool> insert(const" 4905]
[ebrowse-ms "load_factor" () 4 () "    float load_factor()" 5877 0  () "    float load_factor()" 5877]
[ebrowse-ms "operator =" () 0 () "    hash_set& operator=(const" 4187 0  () "    hash_set& operator=(const" 4187]
[ebrowse-ms "size" () 4 () "    size_type size()" 5626 0  () "    size_type size()" 5626]
[ebrowse-ms "swap" () 0 () "    void swap(hash_set" 4319 0  () "    void swap(hash_set" 4319]
)
()
()
()
([ebrowse-ms "_hash_table" () 0 () "shFcn, _EqualKey, _Identity<_Key> > _hash_table;" 2804 1  () () 0]
[ebrowse-ms "const_iterator" () 0 () "name _hash_table::const_iterator const_iterator;" 3282 0  () () 0]
[ebrowse-ms "hasher" () 0 () "    typedef typename _hash_table::hasher hasher;" 3081 0  () () 0]
[ebrowse-ms "iterator" () 0 () "typedef typename _hash_table::iterator iterator;" 3217 0  () () 0]
[ebrowse-ms "key_equal" () 0 () "pedef typename _hash_table::key_equal key_equal;" 3136 0  () () 0]
[ebrowse-ms "key_type" () 0 () "typedef typename _hash_table::key_type key_type;" 2975 0  () () 0]
[ebrowse-ms "size_type" () 0 () "pedef typename _hash_table::size_type size_type;" 2922 0  () () 0]
[ebrowse-ms "value_type" () 0 () "def typename _hash_table::value_type value_type;" 3032 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "CoreSatAPI" "CVC3::TheoryCore" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_core.h" "  class CoreSatAPI {" 6295"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_core.h" ]
([ebrowse-ts [ebrowse-cs "CoreSatAPI_implBase" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_impl_base.cpp" "  class CoreSatAPI_implBase :" 921"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_impl_base.cpp" ]
()([ebrowse-ms "d_se" () 0 () "    SearchImplBase* d_se;" 978 2  () () 0]
)
([ebrowse-ms "CoreSatAPI_implBase" () 0 () "    CoreSatAPI_implBase(SearchImplBase* se) :" 1027 0  () "    CoreSatAPI_implBase(SearchImplBase* se) :" 1027]
[ebrowse-ms "addAssumption" () 1 () "    virtual Theorem addAssumption(const" 1234 0  () "    virtual Theorem addAssumption(const" 1234]
[ebrowse-ms "addLemma" () 1 () "    virtual void addLemma(const" 1116 0  () "    virtual void addLemma(const" 1116]
[ebrowse-ms "addSplitter" () 1 () "    virtual void addSplitter(const" 1332 0  () "    virtual void addSplitter(const" 1332]
[ebrowse-ms "check" () 1 () "    virtual bool check(const" 1426 0  () "bool CoreSatAPI_implBase::check(const" 1480]
[ebrowse-ms "~CoreSatAPI_implBase" () 1 () "    virtual ~CoreSatAPI_implBase()" 1081 0  () "    virtual ~CoreSatAPI_implBase()" 1081]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchSatCoreSatAPI" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" "class SearchSatCoreSatAPI :" 1070"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" ]
()([ebrowse-ms "d_ss" () 0 () "  SearchSat* d_ss;" 1120 2  () () 0]
)
([ebrowse-ms "SearchSatCoreSatAPI" () 0 () "  SearchSatCoreSatAPI(SearchSat* ss) :" 1160 0  () "  SearchSatCoreSatAPI(SearchSat* ss) :" 1160]
[ebrowse-ms "addAssumption" () 1 () "  Theorem addAssumption(const" 1361 0  () "  Theorem addAssumption(const" 1361]
[ebrowse-ms "addLemma" () 1 () "  void addLemma(const" 1229 0  () "  void addLemma(const" 1229]
[ebrowse-ms "addSplitter" () 1 () "  void addSplitter(const" 1446 0  () "  void addSplitter(const" 1446]
[ebrowse-ms "check" () 1 () "  bool check(const" 1526 0  () "bool SearchSatCoreSatAPI::check(const" 1582]
[ebrowse-ms "~SearchSatCoreSatAPI" () 0 () "  ~SearchSatCoreSatAPI()" 1204 0  () "  ~SearchSatCoreSatAPI()" 1204]
)
()
()
()
()
()()
])()
([ebrowse-ms "CoreSatAPI" () 0 () "    CoreSatAPI() {" 6322 0  () "    CoreSatAPI() {" 6322]
[ebrowse-ms "addAssumption" () 9 () "    virtual Theorem addAssumption(const" 6683 0  () () 0]
[ebrowse-ms "addLemma" () 9 () "    virtual void addLemma(const" 6433 0  () () 0]
[ebrowse-ms "addSplitter" () 9 () "    virtual void addSplitter(const" 7015 0  () () 0]
[ebrowse-ms "check" () 9 () "    virtual bool check(const" 7127 0  () () 0]
[ebrowse-ms "~CoreSatAPI" () 1 () "    virtual ~CoreSatAPI()" 6351 0  () "    virtual ~CoreSatAPI()" 6351]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "struct" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_quant.h" "  typedef struct{" 11359() ]
()([ebrowse-ms "common_pos" () 0 () "   std::vector<std::vector<size_t> > common_pos;" 11409 0  () () 0]
[ebrowse-ms "uncomm_list" () 0 () "::vector<ExprMap<CDList<Expr>* >* > uncomm_list;" 11573 0  () () 0]
[ebrowse-ms "univThm" () 0 () "    Theorem univThm;" 11597 0  () () 0]
[ebrowse-ms "univ_id" () 0 () "    size_t univ_id;" 11634 0  () () 0]
[ebrowse-ms "var_binds_found" () 0 () "td::vector<CDMap<Expr, bool>* > var_binds_found;" 11516 0  () () 0]
[ebrowse-ms "var_pos" () 0 () "    std::vector<std::vector<size_t> > var_pos;" 11456 0  () () 0]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryArith3" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith3.cpp" ]
()()
([ebrowse-ms "TheoryArith3" () 0 () () 0 0  () "TheoryArith3::TheoryArith3(TheoryCore* core)
  :" 60371]
[ebrowse-ms "addSharedTerm" () 0 () () 0 0  () "void TheoryArith3::addSharedTerm(const" 67604]
[ebrowse-ms "addToBuffer" () 0 () () 0 0  () "void TheoryArith3::addToBuffer(const" 37570]
[ebrowse-ms "assertFact" () 0 () () 0 0  () "void TheoryArith3::assertFact(const" 67682]
[ebrowse-ms "assignVariables" () 0 () () 0 0  () "void TheoryArith3::assignVariables(std" 75531]
[ebrowse-ms "canon" () 0 () () 0 0  () "Theorem TheoryArith3::canon(const" 7346]
[ebrowse-ms "canonConjunctionEquiv" () 0 () () 0 0  () "TheoryArith3::canonConjunctionEquiv(const" 13956]
[ebrowse-ms "canonPred" () 0 () () 0 0  () "TheoryArith3::canonPred(const" 12948]
[ebrowse-ms "canonPredEquiv" () 0 () () 0 0  () "TheoryArith3::canonPredEquiv(const" 13426]
[ebrowse-ms "canonSimplify" () 0 () () 0 0  () "TheoryArith3::canonSimplify(const" 11834]
[ebrowse-ms "checkAssertEqInvariant" () 0 () () 0 0  () "void TheoryArith3::checkAssertEqInvariant(const" 87221]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "void TheoryArith3::checkSat(bool" 71381]
[ebrowse-ms "checkType" () 0 () () 0 0  () "void TheoryArith3::checkType(const" 89088]
[ebrowse-ms "collectVars" () 0 () () 0 0  () "void TheoryArith3::collectVars(const" 63606]
[ebrowse-ms "computeBaseType" () 0 () () 0 0  () "Type TheoryArith3::computeBaseType(const" 93056]
[ebrowse-ms "computeModel" () 0 () () 0 0  () "void TheoryArith3::computeModel(const" 77190]
[ebrowse-ms "computeModelBasic" () 0 () () 0 0  () "void TheoryArith3::computeModelBasic(const" 76475]
[ebrowse-ms "computeModelTerm" () 0 () () 0 0  () "void TheoryArith3::computeModelTerm(const" 85966]
[ebrowse-ms "computeNormalFactor" () 0 () () 0 0  () "TheoryArith3::computeNormalFactor(const" 40834]
[ebrowse-ms "computeTCC" () 0 () () 0 0  () "TheoryArith3::computeTCC(const" 93290]
[ebrowse-ms "computeType" () 0 () () 0 0  () "void TheoryArith3::computeType(const" 90386]
[ebrowse-ms "computeTypePred" () 0 () () 0 0  () "Expr TheoryArith3::computeTypePred(const" 86794]
[ebrowse-ms "createProofRules3" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer3.cpp" "ithProofRules* TheoryArith3::createProofRules3()" 1264]
[ebrowse-ms "currentMaxCoefficient" () 0 () () 0 0  () "ational TheoryArith3::currentMaxCoefficient(Expr" 53232]
[ebrowse-ms "doSolve" () 0 () () 0 0  () "Theorem TheoryArith3::doSolve(const" 14477]
[ebrowse-ms "findBounds" () 0 () () 0 0  () "TheoryArith3::findBounds(const" 73812]
[ebrowse-ms "findRationalBound" () 0 () () 0 0  () "TheoryArith3::findRationalBound(const" 73259]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  () "Cardinality TheoryArith3::finiteTypeInfo(Expr" 89724]
[ebrowse-ms "fixCurrentMaxCoefficient" () 0 () () 0 0  () "void TheoryArith3::fixCurrentMaxCoefficient(Expr" 54176]
[ebrowse-ms "freeConstIneq" () 0 () () 0 0  () "onst Rational& TheoryArith3::freeConstIneq(const" 2776]
[ebrowse-ms "getFactors" () 0 () () 0 0  () "void TheoryArith3::getFactors(const" 23987]
[ebrowse-ms "isIntegerDerive" () 0 () () 0 0  () "Theorem TheoryArith3::isIntegerDerive(const" 2331]
[ebrowse-ms "isIntegerThm" () 0 () () 0 0  () "Theorem TheoryArith3::isIntegerThm(const" 2135]
[ebrowse-ms "isStale" () 0 () () 0 0  () "bool TheoryArith3::isStale(const" 43160]
[ebrowse-ms "isolateVariable" () 0 () () 0 0  () "Theorem TheoryArith3::isolateVariable(const" 38318]
[ebrowse-ms "kidsCanonical" () 0 () () 0 0  () "bool TheoryArith3::kidsCanonical(const" 5489]
[ebrowse-ms "lessThanVar" () 0 () () 0 0  () "bool TheoryArith3::lessThanVar(const" 42164]
[ebrowse-ms "normalize" () 0 () () 0 0  () "Theorem TheoryArith3::normalize(const" 79542]
[ebrowse-ms "normalizeProjectIneqs" () 0 () () 0 0  () "heorem TheoryArith3::normalizeProjectIneqs(const" 48627]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  () "TheoryArith3::parseExprOp(const" 93752]
[ebrowse-ms "pickIntEqMonomial" () 0 () () 0 0  () "bool TheoryArith3::pickIntEqMonomial(const" 20016]
[ebrowse-ms "pickMonomial" () 0 () () 0 0  () "Expr TheoryArith3::pickMonomial(const" 55296]
[ebrowse-ms "print" () 0 () () 0 0  () "TheoryArith3::print(ExprStream" 97215]
[ebrowse-ms "processBuffer" () 0 () () 0 0  () "void TheoryArith3::processBuffer()" 35645]
[ebrowse-ms "processFiniteInterval" () 0 () () 0 0  () "TheoryArith3::processFiniteInterval(const" 63993]
[ebrowse-ms "processFiniteIntervals" () 0 () () 0 0  () "TheoryArith3::processFiniteIntervals(const" 66222]
[ebrowse-ms "processIntEq" () 0 () () 0 0  () "TheoryArith3::processIntEq(const" 30363]
[ebrowse-ms "processRealEq" () 0 () () 0 0  () "TheoryArith3::processRealEq(const" 21514]
[ebrowse-ms "processSimpleIntEq" () 0 () () 0 0  () "TheoryArith3::processSimpleIntEq(const" 24874]
[ebrowse-ms "projectInequalities" () 0 () () 0 0  () "void TheoryArith3::projectInequalities(const" 44796]
[ebrowse-ms "refineCounterExample" () 0 () () 0 0  () "void TheoryArith3::refineCounterExample()" 72105]
[ebrowse-ms "rewrite" () 0 () () 0 0  () "Theorem TheoryArith3::rewrite(const" 79667]
[ebrowse-ms "selectSmallestByCoefficient" () 0 () () 0 0  () "TheoryArith3::selectSmallestByCoefficient(vector" 54287]
[ebrowse-ms "separateMonomial" () 0 () () 0 0  () "void TheoryArith3::separateMonomial(const" 43963]
[ebrowse-ms "setup" () 0 () () 0 0  () "void TheoryArith3::setup(const" 83281]
[ebrowse-ms "setupRec" () 0 () () 0 0  () "TheoryArith3::setupRec(const" 67277]
[ebrowse-ms "solve" () 0 () () 0 0  () "Theorem TheoryArith3::solve(const" 85140]
[ebrowse-ms "solvedForm" () 0 () () 0 0  () "TheoryArith3::solvedForm(const" 31727]
[ebrowse-ms "substAndCanonize" () 0 () () 0 0  () "TheoryArith3::substAndCanonize(const" 34925]
[ebrowse-ms "update" () 0 () () 0 0  () "void TheoryArith3::update(const" 83900]
[ebrowse-ms "updateStats" () 0 () () 0 0  () "void TheoryArith3::updateStats(const" 37427]
[ebrowse-ms "updateStats" () 0 () () 0 0  () "void TheoryArith3::updateStats(const" 36483]
[ebrowse-ms "updateSubsumptionDB" () 0 () () 0 0  () "TheoryArith3::updateSubsumptionDB(const" 3220]
[ebrowse-ms "~TheoryArith3" () 0 () () 0 0  () "TheoryArith3::~TheoryArith3()" 63145]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CLFlags" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/command_line_flags.h" "class CLFlags {" 7602"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/command_line_flags.h" ]
()([ebrowse-ms "d_map" () 0 () "  CharMap d_map;" 7678 2  () () 0]
)
([ebrowse-ms "addFlag" () 0 () "  void addFlag(const" 8107 0  () "  void addFlag(const" 8107]
[ebrowse-ms "countFlags" () 4 () "  size_t countFlags(const" 8590 0  () "  size_t countFlags(const" 8590]
[ebrowse-ms "countFlags" () 4 () "  size_t countFlags(const" 8244 0  () "  size_t countFlags(const" 8244]
[ebrowse-ms "getFlag" () 4 () "  const CLFlag& getFlag(const" 9038 0  () "  const CLFlag& getFlag(const" 9038]
[ebrowse-ms "getFlag0" () 0 () "  CLFlag& getFlag0(const" 7833 2  () "  CLFlag& getFlag0(const" 7833]
[ebrowse-ms "operator []" () 4 () "  const CLFlag& operator[](const" 9240 0  () "  const CLFlag& operator[](const" 9240]
[ebrowse-ms "setFlag" () 0 () "  void setFlag(const" 10128 0  () "  void setFlag(const" 10128]
[ebrowse-ms "setFlag" () 0 () "  void setFlag(const" 9939 0  () "  void setFlag(const" 9939]
[ebrowse-ms "setFlag" () 0 () "  void setFlag(const" 9778 0  () "  void setFlag(const" 9778]
[ebrowse-ms "setFlag" () 0 () "  void setFlag(const" 9706 0  () "  void setFlag(const" 9706]
[ebrowse-ms "setFlag" () 0 () "  void setFlag(const" 9849 0  () "  void setFlag(const" 9849]
)
()
()
()
([ebrowse-ms "CharMap" () 0 () "  typedef std::map<std::string, CLFlag> CharMap;" 7661 2  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "UFProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_proof_rules.h" "  class UFProofRules {" 811"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "UFTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_theorem_producer.h" "class UFTheoremProducer:" 881"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_theorem_producer.h" ]
()([ebrowse-ms "d_theoryUF" () 0 () "    TheoryUF* d_theoryUF;" 953 2  () () 0]
)
([ebrowse-ms "UFTheoremProducer" () 0 () "oducer(TheoremManager* tm, TheoryUF* theoryUF) :" 1031 0  () "oducer(TheoremManager* tm, TheoryUF* theoryUF) :" 1031]
[ebrowse-ms "applyLambda" () 1 () "    Theorem applyLambda(const" 1247 0  () () 0]
[ebrowse-ms "relToClosure" () 1 () "    Theorem relToClosure(const" 1142 0  () () 0]
[ebrowse-ms "relTrans" () 1 () "    Theorem relTrans(const" 1184 0  () () 0]
[ebrowse-ms "rewriteOpDef" () 1 () "    Theorem rewriteOpDef(const" 1288 0  () () 0]
)
()
()
()
()
()()
])()
([ebrowse-ms "applyLambda" () 9 () "    virtual Theorem applyLambda(const" 1265 0  () () 0]
[ebrowse-ms "relToClosure" () 9 () "    virtual Theorem relToClosure(const" 1077 0  () () 0]
[ebrowse-ms "relTrans" () 9 () "    virtual Theorem relTrans(const" 1131 0  () () 0]
[ebrowse-ms "rewriteOpDef" () 9 () "    virtual Theorem rewriteOpDef(const" 1378 0  () () 0]
[ebrowse-ms "~UFProofRules" () 1 () "    virtual ~UFProofRules()" 867 0  () "    virtual ~UFProofRules()" 867]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprBoundInfo" "CVC3::TheoryArithNew" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  	  	struct ExprBoundInfo {" 21366"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" ]
()([ebrowse-ms "bound" () 0 () "  	  		EpsRational bound;" 21423 0  () () 0]
[ebrowse-ms "e" () 0 () "  	  		Expr e;" 21488 0  () () 0]
)
([ebrowse-ms "ExprBoundInfo" () 0 () "  	  		ExprBoundInfo():" 21686 0  () "  	  		ExprBoundInfo():" 21686]
[ebrowse-ms "ExprBoundInfo" () 0 () "ndInfo(const EpsRational& bound, const Expr& e):" 21549 0  () "ndInfo(const EpsRational& bound, const Expr& e):" 21549]
[ebrowse-ms "operator <" () 4 () "  	  		bool operator < (const" 21852 0  () "  	  		bool operator < (const" 21852]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryAPI" "SAT::DPLLT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt.h" "  class TheoryAPI {" 596"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt.h" ]
([ebrowse-ts [ebrowse-cs "SearchSatTheoryAPI" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" "class SearchSatTheoryAPI :" 1734"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" ]
()([ebrowse-ms "d_cm" () 0 () "  ContextManager* d_cm;" 1783 2  () () 0]
[ebrowse-ms "d_ss" () 0 () "  SearchSat* d_ss;" 1802 2  () () 0]
)
([ebrowse-ms "SearchSatTheoryAPI" () 0 () "    :" 1841 0  () "    :" 1841]
[ebrowse-ms "assertLit" () 1 () "  void assertLit(Lit" 2021 0  () "  void assertLit(Lit" 2021]
[ebrowse-ms "checkConsistent" () 1 () "LT::ConsistentResult checkConsistent(CNF_Formula" 2107 0  () "LT::ConsistentResult checkConsistent(CNF_Formula" 2107]
[ebrowse-ms "getExplanation" () 1 () "  void getExplanation(Lit" 2342 0  () "  void getExplanation(Lit" 2342]
[ebrowse-ms "getImplication" () 1 () "  Lit getImplication()" 2281 0  () "  Lit getImplication()" 2281]
[ebrowse-ms "getNewClauses" () 1 () "  bool getNewClauses(CNF_Formula" 2437 0  () "  bool getNewClauses(CNF_Formula" 2437]
[ebrowse-ms "outOfResources" () 1 () "  bool outOfResources()" 2209 0  () "  bool outOfResources()" 2209]
[ebrowse-ms "pop" () 1 () "  void pop()" 1976 0  () "  void pop()" 1976]
[ebrowse-ms "push" () 1 () "  void push()" 1938 0  () "  void push()" 1938]
[ebrowse-ms "~SearchSatTheoryAPI" () 0 () "  ~SearchSatTheoryAPI()" 1921 0  () "  ~SearchSatTheoryAPI()" 1921]
)
()
()
()
()
()()
])()
([ebrowse-ms "TheoryAPI" () 0 () "    TheoryAPI() {" 622 0  () "    TheoryAPI() {" 622]
[ebrowse-ms "assertLit" () 9 () "    virtual void assertLit(Lit" 876 0  () () 0]
[ebrowse-ms "checkConsistent" () 9 () "ual ConsistentResult checkConsistent(CNF_Formula" 1703 0  () () 0]
[ebrowse-ms "getExplanation" () 9 () "    virtual void getExplanation(Lit" 2953 0  () () 0]
[ebrowse-ms "getImplication" () 9 () "    virtual Lit getImplication()" 2322 0  () () 0]
[ebrowse-ms "getNewClauses" () 9 () "    virtual bool getNewClauses(CNF_Formula" 3538 0  () () 0]
[ebrowse-ms "outOfResources" () 9 () "    virtual bool outOfResources()" 1979 0  () () 0]
[ebrowse-ms "pop" () 9 () "    virtual void pop()" 787 0  () () 0]
[ebrowse-ms "push" () 9 () "    virtual void push()" 720 0  () () 0]
[ebrowse-ms "~TheoryAPI" () 1 () "    virtual ~TheoryAPI()" 650 0  () "    virtual ~TheoryAPI()" 650]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ArithProofRules" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.cpp" ]
()()
([ebrowse-ms "rewriteLeavesConst" () 0 () () 0 0  () "heorem ArithProofRules::rewriteLeavesConst(const" 103285]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ArithProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_proof_rules.h" "  class ArithProofRules {" 784"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "ArithTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.h" "  class ArithTheoremProducer:" 879"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.h" ]
()([ebrowse-ms "d_theoryArith" () 0 () "    TheoryArithNew* d_theoryArith;" 963 2  () () 0]
)
([ebrowse-ms "ArithTheoremProducer" () 0 () "heoremManager* tm, TheoryArithNew* theoryArith):" 2432 0  () "heoremManager* tm, TheoryArithNew* theoryArith):" 2432]
[ebrowse-ms "IsIntegerElim" () 1 () "    Theorem IsIntegerElim(const" 11646 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12334 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12263 0  () () 0]
[ebrowse-ms "canonCombineLikeTerms" () 1 () "    virtual Expr canonCombineLikeTerms(const" 5436 0  () () 0]
[ebrowse-ms "canonComboLikeTerms" () 1 () "    virtual Theorem canonComboLikeTerms(const" 7758 0  () () 0]
[ebrowse-ms "canonDivide" () 1 () "    virtual Theorem canonDivide(const" 6414 0  () () 0]
[ebrowse-ms "canonDivideConst" () 1 () "    virtual Theorem canonDivideConst(const" 3900 0  () () 0]
[ebrowse-ms "canonDivideMult" () 1 () "    virtual Theorem canonDivideMult(const" 4019 0  () () 0]
[ebrowse-ms "canonDividePlus" () 1 () "    virtual Theorem canonDividePlus(const" 4273 0  () () 0]
[ebrowse-ms "canonDivideVar" () 1 () "    virtual Theorem canonDivideVar(const" 4381 0  () () 0]
[ebrowse-ms "canonFlattenSum" () 1 () "    virtual Theorem canonFlattenSum(const" 7614 0  () () 0]
[ebrowse-ms "canonInvert" () 1 () "    virtual Theorem canonInvert(const" 5973 0  () () 0]
[ebrowse-ms "canonInvertConst" () 1 () "    virtual Theorem canonInvertConst(const" 5766 0  () () 0]
[ebrowse-ms "canonInvertLeaf" () 1 () "    virtual Theorem canonInvertLeaf(const" 5819 0  () () 0]
[ebrowse-ms "canonInvertMult" () 1 () "    virtual Theorem canonInvertMult(const" 5924 0  () () 0]
[ebrowse-ms "canonInvertPow" () 1 () "    virtual Theorem canonInvertPow(const" 5871 0  () () 0]
[ebrowse-ms "canonMult" () 1 () "    virtual Theorem canonMult(const" 6567 0  () () 0]
[ebrowse-ms "canonMultConstConst" () 1 () "    virtual Theorem canonMultConstConst(const" 7083 0  () () 0]
[ebrowse-ms "canonMultConstMult" () 1 () "    virtual Expr canonMultConstMult(const" 5011 0  () () 0]
[ebrowse-ms "canonMultConstPlus" () 1 () "    virtual Expr canonMultConstPlus(const" 5080 0  () () 0]
[ebrowse-ms "canonMultConstSum" () 1 () "    virtual Theorem canonMultConstSum(const" 7362 0  () () 0]
[ebrowse-ms "canonMultConstTerm" () 1 () "      canonMultConstTerm(const" 7211 0  () () 0]
[ebrowse-ms "canonMultLeafLeaf" () 1 () "    virtual Expr canonMultLeafLeaf(const" 5287 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowMult" () 1 () "    virtual Expr canonMultLeafOrPowMult(const" 5362 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowOrMultPlus" () 1 () "	canonMultLeafOrPowOrMultPlus(const" 5521 0  () () 0]
[ebrowse-ms "canonMultMtermMterm" () 1 () "    virtual Theorem canonMultMtermMterm(const" 5666 0  () () 0]
[ebrowse-ms "canonMultOne" () 1 () "    virtual Theorem canonMultOne(const" 6984 0  () () 0]
[ebrowse-ms "canonMultPlusPlus" () 1 () "    virtual Expr canonMultPlusPlus(const" 5591 0  () () 0]
[ebrowse-ms "canonMultPowLeaf" () 1 () "    virtual Expr canonMultPowLeaf(const" 5217 0  () () 0]
[ebrowse-ms "canonMultPowPow" () 1 () "    virtual Expr canonMultPowPow(const" 5148 0  () () 0]
[ebrowse-ms "canonMultTerm1Term2" () 1 () "    virtual Theorem canonMultTerm1Term2(const" 6812 0  () () 0]
[ebrowse-ms "canonMultTermConst" () 1 () "    virtual Theorem canonMultTermConst(const" 6672 0  () () 0]
[ebrowse-ms "canonMultZero" () 1 () "    virtual Theorem canonMultZero(const" 6907 0  () () 0]
[ebrowse-ms "canonPlus" () 1 () "    virtual Theorem canonPlus(const" 5712 0  () () 0]
[ebrowse-ms "canonPowConst" () 1 () "    virtual Theorem canonPowConst(const" 7486 0  () () 0]
[ebrowse-ms "canonUMinusToDivide" () 1 () "    virtual Theorem canonUMinusToDivide(const" 3764 0  () () 0]
[ebrowse-ms "clashingBounds" () 1 () "    Theorem clashingBounds(const" 12175 0  () () 0]
[ebrowse-ms "compactNonLinearTerm" () 1 () "    Theorem compactNonLinearTerm(const" 13411 0  () () 0]
[ebrowse-ms "constPredicate" () 1 () "    virtual Theorem constPredicate(const" 8772 0  () () 0]
[ebrowse-ms "constRHSGrayShadow" () 0 () "    Rational constRHSGrayShadow(const" 11228 0  () () 0]
[ebrowse-ms "create_t" () 0 () "    Expr create_t(const" 1301 2  () () 0]
[ebrowse-ms "create_t2" () 0 () "    Expr create_t2(const" 1390 2  () () 0]
[ebrowse-ms "create_t3" () 0 () "    Expr create_t3(const" 1511 2  () () 0]
[ebrowse-ms "cycleConflict" () 1 () "    Theorem cycleConflict(const" 12959 0  () () 0]
[ebrowse-ms "darkGrayShadow2ab" () 1 () "    Theorem darkGrayShadow2ab(const" 10290 0  () () 0]
[ebrowse-ms "darkGrayShadow2ba" () 1 () "    Theorem darkGrayShadow2ba(const" 10492 0  () () 0]
[ebrowse-ms "darkShadow" () 0 () "    Expr darkShadow(const" 2844 0  () "    Expr darkShadow(const" 2844]
[ebrowse-ms "diseqToIneq" () 1 () "    Theorem diseqToIneq(const" 12026 0  () () 0]
[ebrowse-ms "divideEqnNonConst" () 1 () "    virtual Theorem divideEqnNonConst(const" 9316 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "    Theorem dummyTheorem(const" 12079 0  () () 0]
[ebrowse-ms "elimPower" () 1 () "    virtual Theorem elimPower(const" 8132 0  () () 0]
[ebrowse-ms "elimPowerConst" () 1 () "    virtual Theorem elimPowerConst(const" 8315 0  () () 0]
[ebrowse-ms "eqElimIntRule" () 1 () "    Theorem eqElimIntRule(const" 11696 0  () () 0]
[ebrowse-ms "eqToIneq" () 1 () "    virtual Theorem eqToIneq(const" 9649 0  () () 0]
[ebrowse-ms "equalLeaves1" () 1 () "    Theorem equalLeaves1(const" 11850 0  () () 0]
[ebrowse-ms "equalLeaves2" () 1 () "    Theorem equalLeaves2(const" 11894 0  () () 0]
[ebrowse-ms "equalLeaves3" () 1 () "    Theorem equalLeaves3(const" 11938 0  () () 0]
[ebrowse-ms "equalLeaves4" () 1 () "    Theorem equalLeaves4(const" 11982 0  () () 0]
[ebrowse-ms "evenPowerEqNegConst" () 1 () "    virtual Theorem evenPowerEqNegConst(const" 8455 0  () () 0]
[ebrowse-ms "expandDarkShadow" () 1 () "    Theorem expandDarkShadow(const" 10695 0  () () 0]
[ebrowse-ms "expandGrayShadow" () 1 () "    Theorem expandGrayShadow(const" 10927 0  () () 0]
[ebrowse-ms "expandGrayShadow0" () 1 () "    Theorem expandGrayShadow0(const" 10753 0  () () 0]
[ebrowse-ms "expandGrayShadowConst" () 1 () "    Theorem expandGrayShadowConst(const" 10989 0  () () 0]
[ebrowse-ms "expandGrayShadowRewrite" () 1 () "    Theorem expandGrayShadowRewrite(const" 13349 0  () () 0]
[ebrowse-ms "f" () 0 () "    Rational f(const" 2257 2  () () 0]
[ebrowse-ms "finiteInterval" () 1 () "    Theorem finiteInterval(const" 10159 0  () () 0]
[ebrowse-ms "flipInequality" () 1 () "    virtual Theorem flipInequality(const" 9743 0  () () 0]
[ebrowse-ms "grayShadow" () 0 () "    Expr grayShadow(const" 3103 0  () "    Expr grayShadow(const" 3103]
[ebrowse-ms "grayShadowConst" () 1 () "    Theorem grayShadowConst(const" 11045 0  () () 0]
[ebrowse-ms "implyDiffLogicBothBounds" () 1 () "    Theorem implyDiffLogicBothBounds(const" 13542 0  () () 0]
[ebrowse-ms "implyEqualities" () 1 () "    Theorem implyEqualities(const" 13036 0  () () 0]
[ebrowse-ms "implyNegatedInequality" () 1 () "    Theorem implyNegatedInequality(const" 12487 0  () () 0]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 1 () "   Theorem implyNegatedInequalityDiffLogic(const" 13242 0  () () 0]
[ebrowse-ms "implyWeakerInequality" () 1 () "    Theorem implyWeakerInequality(const" 12408 0  () () 0]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 1 () "    Theorem implyWeakerInequalityDiffLogic(const" 13127 0  () () 0]
[ebrowse-ms "intEqIrrational" () 1 () "    virtual Theorem intEqIrrational(const" 8588 0  () () 0]
[ebrowse-ms "intEqualityRationalConstant" () 1 () "    Theorem intEqualityRationalConstant(const" 12876 0  () () 0]
[ebrowse-ms "intType" () 0 () "    Type intType()" 2712 0  () "    Type intType()" 2712]
[ebrowse-ms "intVarEqnConst" () 1 () "    Theorem intVarEqnConst(const" 11578 0  () () 0]
[ebrowse-ms "integerSplit" () 1 () "    Theorem integerSplit(const" 12552 0  () () 0]
[ebrowse-ms "isIntConst" () 1 () "    Theorem isIntConst(const" 11808 0  () () 0]
[ebrowse-ms "leftMinusRight" () 1 () "    virtual Theorem leftMinusRight(const" 8968 0  () () 0]
[ebrowse-ms "lessThanToLE" () 1 () "    Theorem lessThanToLE(const" 11320 0  () () 0]
[ebrowse-ms "lessThanToLERewrite" () 1 () "    Theorem lessThanToLERewrite(const" 11451 0  () () 0]
[ebrowse-ms "minusToPlus" () 1 () "    virtual Theorem minusToPlus(const" 3624 0  () () 0]
[ebrowse-ms "modEq" () 0 () "    Rational modEq(const" 1193 2  () () 0]
[ebrowse-ms "monomialModM" () 0 () "    Expr monomialModM(const" 1931 2  () () 0]
[ebrowse-ms "monomialMulF" () 0 () "    Expr monomialMulF(const" 2132 2  () () 0]
[ebrowse-ms "moveSumConstantRight" () 1 () "    virtual Theorem moveSumConstantRight(const" 6325 0  () () 0]
[ebrowse-ms "multEqZero" () 1 () "    virtual Theorem multEqZero(const" 7863 0  () () 0]
[ebrowse-ms "multEqn" () 1 () "    virtual Theorem multEqn(const" 9188 0  () () 0]
[ebrowse-ms "multIneqn" () 1 () "    virtual Theorem multIneqn(const" 9553 0  () () 0]
[ebrowse-ms "negatedInequality" () 1 () "    Theorem negatedInequality(const" 9966 0  () () 0]
[ebrowse-ms "nonLinearIneqSignSplit" () 1 () "    Theorem nonLinearIneqSignSplit(const" 13475 0  () () 0]
[ebrowse-ms "oneElimination" () 1 () "    Theorem oneElimination(const" 12127 0  () () 0]
[ebrowse-ms "plusPredicate" () 1 () "    virtual Theorem plusPredicate(const" 9057 0  () () 0]
[ebrowse-ms "powEqZero" () 1 () "    virtual Theorem powEqZero(const" 7989 0  () () 0]
[ebrowse-ms "powerOfOne" () 1 () "    Theorem powerOfOne(const" 13694 0  () () 0]
[ebrowse-ms "rafineStrictInteger" () 1 () "    Theorem rafineStrictInteger(const" 12704 0  () () 0]
[ebrowse-ms "rat" () 0 () "    Expr rat(Rational" 2600 0  () "    Expr rat(Rational" 2600]
[ebrowse-ms "realShadow" () 1 () "    Theorem realShadow(const" 10006 0  () () 0]
[ebrowse-ms "realShadowEq" () 1 () "    Theorem realShadowEq(const" 10081 0  () () 0]
[ebrowse-ms "realType" () 0 () "    Type realType()" 2655 0  () "    Type realType()" 2655]
[ebrowse-ms "rightMinusLeft" () 1 () "    virtual Theorem rightMinusLeft(const" 8870 0  () () 0]
[ebrowse-ms "simpleIneqInt" () 1 () "    Theorem simpleIneqInt(const" 12787 0  () () 0]
[ebrowse-ms "simplifiedMultExpr" () 1 () "    virtual Expr simplifiedMultExpr(std" 4943 0  () () 0]
[ebrowse-ms "splitGrayShadow" () 1 () "    Theorem splitGrayShadow(const" 10809 0  () () 0]
[ebrowse-ms "splitGrayShadowSmall" () 1 () "    Theorem splitGrayShadowSmall(const" 10870 0  () () 0]
[ebrowse-ms "substitute" () 0 () "    Expr substitute(const" 2316 2  () () 0]
[ebrowse-ms "sumModM" () 0 () "    void sumModM(std" 1813 2  () () 0]
[ebrowse-ms "sumMulF" () 0 () "    void sumMulF(std" 2014 2  () () 0]
[ebrowse-ms "trustedRewrite" () 1 () "    Theorem trustedRewrite(const" 12631 0  () () 0]
[ebrowse-ms "uMinusToMult" () 1 () "    virtual Theorem uMinusToMult(const" 3543 0  () () 0]
[ebrowse-ms "varToMult" () 1 () "    virtual Theorem varToMult(const" 3466 0  () () 0]
)
()
([ebrowse-ms "greaterthan" () 0 () "    static bool greaterthan(const" 4880 0  () () 0]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ArithTheoremProducer3" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer3.h" "  class ArithTheoremProducer3:" 878"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer3.h" ]
()([ebrowse-ms "d_theoryArith" () 0 () "    TheoryArith3* d_theoryArith;" 960 2  () () 0]
)
([ebrowse-ms "ArithTheoremProducer3" () 0 () "(TheoremManager* tm, TheoryArith3* theoryArith):" 2429 0  () "(TheoremManager* tm, TheoryArith3* theoryArith):" 2429]
[ebrowse-ms "IsIntegerElim" () 1 () "    Theorem IsIntegerElim(const" 11640 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12329 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12258 0  () () 0]
[ebrowse-ms "canonCombineLikeTerms" () 1 () "    virtual Expr canonCombineLikeTerms(const" 5431 0  () () 0]
[ebrowse-ms "canonComboLikeTerms" () 1 () "    virtual Theorem canonComboLikeTerms(const" 7753 0  () () 0]
[ebrowse-ms "canonDivide" () 1 () "    virtual Theorem canonDivide(const" 6409 0  () () 0]
[ebrowse-ms "canonDivideConst" () 1 () "    virtual Theorem canonDivideConst(const" 3895 0  () () 0]
[ebrowse-ms "canonDivideMult" () 1 () "    virtual Theorem canonDivideMult(const" 4014 0  () () 0]
[ebrowse-ms "canonDividePlus" () 1 () "    virtual Theorem canonDividePlus(const" 4268 0  () () 0]
[ebrowse-ms "canonDivideVar" () 1 () "    virtual Theorem canonDivideVar(const" 4376 0  () () 0]
[ebrowse-ms "canonFlattenSum" () 1 () "    virtual Theorem canonFlattenSum(const" 7609 0  () () 0]
[ebrowse-ms "canonInvert" () 1 () "    virtual Theorem canonInvert(const" 5968 0  () () 0]
[ebrowse-ms "canonInvertConst" () 1 () "    virtual Theorem canonInvertConst(const" 5761 0  () () 0]
[ebrowse-ms "canonInvertLeaf" () 1 () "    virtual Theorem canonInvertLeaf(const" 5814 0  () () 0]
[ebrowse-ms "canonInvertMult" () 1 () "    virtual Theorem canonInvertMult(const" 5919 0  () () 0]
[ebrowse-ms "canonInvertPow" () 1 () "    virtual Theorem canonInvertPow(const" 5866 0  () () 0]
[ebrowse-ms "canonMult" () 1 () "    virtual Theorem canonMult(const" 6562 0  () () 0]
[ebrowse-ms "canonMultConstConst" () 1 () "    virtual Theorem canonMultConstConst(const" 7078 0  () () 0]
[ebrowse-ms "canonMultConstMult" () 1 () "    virtual Expr canonMultConstMult(const" 5006 0  () () 0]
[ebrowse-ms "canonMultConstPlus" () 1 () "    virtual Expr canonMultConstPlus(const" 5075 0  () () 0]
[ebrowse-ms "canonMultConstSum" () 1 () "    virtual Theorem canonMultConstSum(const" 7357 0  () () 0]
[ebrowse-ms "canonMultConstTerm" () 1 () "      canonMultConstTerm(const" 7206 0  () () 0]
[ebrowse-ms "canonMultLeafLeaf" () 1 () "    virtual Expr canonMultLeafLeaf(const" 5282 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowMult" () 1 () "    virtual Expr canonMultLeafOrPowMult(const" 5357 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowOrMultPlus" () 1 () "	canonMultLeafOrPowOrMultPlus(const" 5516 0  () () 0]
[ebrowse-ms "canonMultMtermMterm" () 1 () "    virtual Theorem canonMultMtermMterm(const" 5661 0  () () 0]
[ebrowse-ms "canonMultOne" () 1 () "    virtual Theorem canonMultOne(const" 6979 0  () () 0]
[ebrowse-ms "canonMultPlusPlus" () 1 () "    virtual Expr canonMultPlusPlus(const" 5586 0  () () 0]
[ebrowse-ms "canonMultPowLeaf" () 1 () "    virtual Expr canonMultPowLeaf(const" 5212 0  () () 0]
[ebrowse-ms "canonMultPowPow" () 1 () "    virtual Expr canonMultPowPow(const" 5143 0  () () 0]
[ebrowse-ms "canonMultTerm1Term2" () 1 () "    virtual Theorem canonMultTerm1Term2(const" 6807 0  () () 0]
[ebrowse-ms "canonMultTermConst" () 1 () "    virtual Theorem canonMultTermConst(const" 6667 0  () () 0]
[ebrowse-ms "canonMultZero" () 1 () "    virtual Theorem canonMultZero(const" 6902 0  () () 0]
[ebrowse-ms "canonPlus" () 1 () "    virtual Theorem canonPlus(const" 5707 0  () () 0]
[ebrowse-ms "canonPowConst" () 1 () "    virtual Theorem canonPowConst(const" 7481 0  () () 0]
[ebrowse-ms "canonUMinusToDivide" () 1 () "    virtual Theorem canonUMinusToDivide(const" 3759 0  () () 0]
[ebrowse-ms "clashingBounds" () 1 () "    Theorem clashingBounds(const" 12170 0  () () 0]
[ebrowse-ms "compactNonLinearTerm" () 1 () "    Theorem compactNonLinearTerm(const" 13402 0  () () 0]
[ebrowse-ms "constPredicate" () 1 () "    virtual Theorem constPredicate(const" 8767 0  () () 0]
[ebrowse-ms "constRHSGrayShadow" () 0 () "    Rational constRHSGrayShadow(const" 11223 0  () () 0]
[ebrowse-ms "create_t" () 0 () "    Expr create_t(const" 1298 2  () () 0]
[ebrowse-ms "create_t2" () 0 () "    Expr create_t2(const" 1387 2  () () 0]
[ebrowse-ms "create_t3" () 0 () "    Expr create_t3(const" 1508 2  () () 0]
[ebrowse-ms "cycleConflict" () 1 () "    Theorem cycleConflict(const" 12950 0  () () 0]
[ebrowse-ms "darkGrayShadow2ab" () 1 () "    Theorem darkGrayShadow2ab(const" 10285 0  () () 0]
[ebrowse-ms "darkGrayShadow2ba" () 1 () "    Theorem darkGrayShadow2ba(const" 10487 0  () () 0]
[ebrowse-ms "darkShadow" () 0 () "    Expr darkShadow(const" 2839 0  () "    Expr darkShadow(const" 2839]
[ebrowse-ms "diseqToIneq" () 1 () "    Theorem diseqToIneq(const" 12021 0  () () 0]
[ebrowse-ms "divideEqnNonConst" () 1 () "    virtual Theorem divideEqnNonConst(const" 9311 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "    Theorem dummyTheorem(const" 12074 0  () () 0]
[ebrowse-ms "elimPower" () 1 () "    virtual Theorem elimPower(const" 8127 0  () () 0]
[ebrowse-ms "elimPowerConst" () 1 () "    virtual Theorem elimPowerConst(const" 8310 0  () () 0]
[ebrowse-ms "eqElimIntRule" () 1 () "    Theorem eqElimIntRule(const" 11691 0  () () 0]
[ebrowse-ms "eqToIneq" () 1 () "    virtual Theorem eqToIneq(const" 9644 0  () () 0]
[ebrowse-ms "equalLeaves1" () 1 () "    Theorem equalLeaves1(const" 11845 0  () () 0]
[ebrowse-ms "equalLeaves2" () 1 () "    Theorem equalLeaves2(const" 11889 0  () () 0]
[ebrowse-ms "equalLeaves3" () 1 () "    Theorem equalLeaves3(const" 11933 0  () () 0]
[ebrowse-ms "equalLeaves4" () 1 () "    Theorem equalLeaves4(const" 11977 0  () () 0]
[ebrowse-ms "evenPowerEqNegConst" () 1 () "    virtual Theorem evenPowerEqNegConst(const" 8450 0  () () 0]
[ebrowse-ms "expandDarkShadow" () 1 () "    Theorem expandDarkShadow(const" 10690 0  () () 0]
[ebrowse-ms "expandGrayShadow" () 1 () "    Theorem expandGrayShadow(const" 10922 0  () () 0]
[ebrowse-ms "expandGrayShadow0" () 1 () "    Theorem expandGrayShadow0(const" 10748 0  () () 0]
[ebrowse-ms "expandGrayShadowConst" () 1 () "    Theorem expandGrayShadowConst(const" 10984 0  () () 0]
[ebrowse-ms "expandGrayShadowRewrite" () 1 () "    Theorem expandGrayShadowRewrite(const" 13340 0  () () 0]
[ebrowse-ms "f" () 0 () "    Rational f(const" 2254 2  () () 0]
[ebrowse-ms "finiteInterval" () 1 () "    Theorem finiteInterval(const" 10154 0  () () 0]
[ebrowse-ms "flipInequality" () 1 () "    virtual Theorem flipInequality(const" 9738 0  () () 0]
[ebrowse-ms "grayShadow" () 0 () "    Expr grayShadow(const" 3098 0  () "    Expr grayShadow(const" 3098]
[ebrowse-ms "grayShadowConst" () 1 () "    Theorem grayShadowConst(const" 11040 0  () () 0]
[ebrowse-ms "implyDiffLogicBothBounds" () 1 () "    Theorem implyDiffLogicBothBounds(const" 13533 0  () () 0]
[ebrowse-ms "implyEqualities" () 1 () "    Theorem implyEqualities(const" 13027 0  () () 0]
[ebrowse-ms "implyNegatedInequality" () 1 () "    Theorem implyNegatedInequality(const" 12482 0  () () 0]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 1 () "   Theorem implyNegatedInequalityDiffLogic(const" 13233 0  () () 0]
[ebrowse-ms "implyWeakerInequality" () 1 () "    Theorem implyWeakerInequality(const" 12403 0  () () 0]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 1 () "    Theorem implyWeakerInequalityDiffLogic(const" 13118 0  () () 0]
[ebrowse-ms "intEqIrrational" () 1 () "    virtual Theorem intEqIrrational(const" 8583 0  () () 0]
[ebrowse-ms "intEqualityRationalConstant" () 1 () "    Theorem intEqualityRationalConstant(const" 12867 0  () () 0]
[ebrowse-ms "intType" () 0 () "    Type intType()" 2707 0  () "    Type intType()" 2707]
[ebrowse-ms "intVarEqnConst" () 1 () "    Theorem intVarEqnConst(const" 11573 0  () () 0]
[ebrowse-ms "integerSplit" () 1 () "    Theorem integerSplit(const" 12547 0  () () 0]
[ebrowse-ms "isIntConst" () 1 () "    Theorem isIntConst(const" 11803 0  () () 0]
[ebrowse-ms "leftMinusRight" () 1 () "    virtual Theorem leftMinusRight(const" 8963 0  () () 0]
[ebrowse-ms "lessThanToLE" () 1 () "    Theorem lessThanToLE(const" 11315 0  () () 0]
[ebrowse-ms "lessThanToLERewrite" () 1 () "    Theorem lessThanToLERewrite(const" 11446 0  () () 0]
[ebrowse-ms "minusToPlus" () 1 () "    virtual Theorem minusToPlus(const" 3619 0  () () 0]
[ebrowse-ms "modEq" () 0 () "    Rational modEq(const" 1190 2  () () 0]
[ebrowse-ms "monomialModM" () 0 () "    Expr monomialModM(const" 1928 2  () () 0]
[ebrowse-ms "monomialMulF" () 0 () "    Expr monomialMulF(const" 2129 2  () () 0]
[ebrowse-ms "moveSumConstantRight" () 1 () "    virtual Theorem moveSumConstantRight(const" 6320 0  () () 0]
[ebrowse-ms "multEqZero" () 1 () "    virtual Theorem multEqZero(const" 7858 0  () () 0]
[ebrowse-ms "multEqn" () 1 () "    virtual Theorem multEqn(const" 9183 0  () () 0]
[ebrowse-ms "multIneqn" () 1 () "    virtual Theorem multIneqn(const" 9548 0  () () 0]
[ebrowse-ms "negatedInequality" () 1 () "    Theorem negatedInequality(const" 9961 0  () () 0]
[ebrowse-ms "nonLinearIneqSignSplit" () 1 () "    Theorem nonLinearIneqSignSplit(const" 13466 0  () () 0]
[ebrowse-ms "oneElimination" () 1 () "    Theorem oneElimination(const" 12122 0  () () 0]
[ebrowse-ms "plusPredicate" () 1 () "    virtual Theorem plusPredicate(const" 9052 0  () () 0]
[ebrowse-ms "powEqZero" () 1 () "    virtual Theorem powEqZero(const" 7984 0  () () 0]
[ebrowse-ms "powerOfOne" () 1 () "    Theorem powerOfOne(const" 13685 0  () () 0]
[ebrowse-ms "rafineStrictInteger" () 1 () "    Theorem rafineStrictInteger(const" 12699 0  () () 0]
[ebrowse-ms "rat" () 0 () "    Expr rat(Rational" 2595 0  () "    Expr rat(Rational" 2595]
[ebrowse-ms "realShadow" () 1 () "    Theorem realShadow(const" 10001 0  () () 0]
[ebrowse-ms "realShadowEq" () 1 () "    Theorem realShadowEq(const" 10076 0  () () 0]
[ebrowse-ms "realType" () 0 () "    Type realType()" 2650 0  () "    Type realType()" 2650]
[ebrowse-ms "rightMinusLeft" () 1 () "    virtual Theorem rightMinusLeft(const" 8865 0  () () 0]
[ebrowse-ms "simpleIneqInt" () 1 () "    Theorem simpleIneqInt(const" 12778 0  () () 0]
[ebrowse-ms "simplifiedMultExpr" () 1 () "    virtual Expr simplifiedMultExpr(std" 4938 0  () () 0]
[ebrowse-ms "splitGrayShadow" () 1 () "    Theorem splitGrayShadow(const" 10804 0  () () 0]
[ebrowse-ms "splitGrayShadowSmall" () 1 () "    Theorem splitGrayShadowSmall(const" 10865 0  () () 0]
[ebrowse-ms "substitute" () 0 () "    Expr substitute(const" 2313 2  () () 0]
[ebrowse-ms "sumModM" () 0 () "    void sumModM(std" 1810 2  () () 0]
[ebrowse-ms "sumMulF" () 0 () "    void sumMulF(std" 2011 2  () () 0]
[ebrowse-ms "trustedRewrite" () 1 () "    Theorem trustedRewrite(const" 12626 0  () () 0]
[ebrowse-ms "uMinusToMult" () 1 () "    virtual Theorem uMinusToMult(const" 3538 0  () () 0]
[ebrowse-ms "varToMult" () 1 () "    virtual Theorem varToMult(const" 3461 0  () () 0]
)
()
([ebrowse-ms "greaterthan" () 0 () "    static bool greaterthan(const" 4875 0  () () 0]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ArithTheoremProducerOld" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer_old.h" "  class ArithTheoremProducerOld:" 864"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer_old.h" ]
()([ebrowse-ms "d_theoryArith" () 0 () "    TheoryArithOld* d_theoryArith;" 948 2  () () 0]
)
([ebrowse-ms "ArithTheoremProducerOld" () 0 () "heoremManager* tm, TheoryArithOld* theoryArith):" 2503 0  () "heoremManager* tm, TheoryArithOld* theoryArith):" 2503]
[ebrowse-ms "IsIntegerElim" () 1 () "    Theorem IsIntegerElim(const" 11661 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12334 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12263 0  () () 0]
[ebrowse-ms "canonCombineLikeTerms" () 1 () "    virtual Expr canonCombineLikeTerms(const" 5505 0  () () 0]
[ebrowse-ms "canonComboLikeTerms" () 1 () "    virtual Theorem canonComboLikeTerms(const" 7811 0  () () 0]
[ebrowse-ms "canonDivide" () 1 () "    virtual Theorem canonDivide(const" 6477 0  () () 0]
[ebrowse-ms "canonDivideConst" () 1 () "    virtual Theorem canonDivideConst(const" 3971 0  () () 0]
[ebrowse-ms "canonDivideMult" () 1 () "    virtual Theorem canonDivideMult(const" 4090 0  () () 0]
[ebrowse-ms "canonDividePlus" () 1 () "    virtual Theorem canonDividePlus(const" 4344 0  () () 0]
[ebrowse-ms "canonDivideVar" () 1 () "    virtual Theorem canonDivideVar(const" 4452 0  () () 0]
[ebrowse-ms "canonFlattenSum" () 1 () "    virtual Theorem canonFlattenSum(const" 7671 0  () () 0]
[ebrowse-ms "canonInvert" () 1 () "    virtual Theorem canonInvert(const" 6041 0  () () 0]
[ebrowse-ms "canonInvertConst" () 1 () "    virtual Theorem canonInvertConst(const" 5834 0  () () 0]
[ebrowse-ms "canonInvertLeaf" () 1 () "    virtual Theorem canonInvertLeaf(const" 5887 0  () () 0]
[ebrowse-ms "canonInvertMult" () 1 () "    virtual Theorem canonInvertMult(const" 5992 0  () () 0]
[ebrowse-ms "canonInvertPow" () 1 () "    virtual Theorem canonInvertPow(const" 5939 0  () () 0]
[ebrowse-ms "canonMult" () 1 () "    virtual Theorem canonMult(const" 6626 0  () () 0]
[ebrowse-ms "canonMultConstConst" () 1 () "    virtual Theorem canonMultConstConst(const" 7141 0  () () 0]
[ebrowse-ms "canonMultConstMult" () 1 () "    virtual Expr canonMultConstMult(const" 5080 0  () () 0]
[ebrowse-ms "canonMultConstPlus" () 1 () "    virtual Expr canonMultConstPlus(const" 5149 0  () () 0]
[ebrowse-ms "canonMultConstSum" () 1 () "    virtual Theorem canonMultConstSum(const" 7419 0  () () 0]
[ebrowse-ms "canonMultConstTerm" () 1 () "      canonMultConstTerm(const" 7268 0  () () 0]
[ebrowse-ms "canonMultLeafLeaf" () 1 () "    virtual Expr canonMultLeafLeaf(const" 5356 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowMult" () 1 () "    virtual Expr canonMultLeafOrPowMult(const" 5431 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowOrMultPlus" () 1 () "	canonMultLeafOrPowOrMultPlus(const" 5589 0  () () 0]
[ebrowse-ms "canonMultMtermMterm" () 1 () "    virtual Theorem canonMultMtermMterm(const" 5734 0  () () 0]
[ebrowse-ms "canonMultOne" () 1 () "    virtual Theorem canonMultOne(const" 7043 0  () () 0]
[ebrowse-ms "canonMultPlusPlus" () 1 () "    virtual Expr canonMultPlusPlus(const" 5659 0  () () 0]
[ebrowse-ms "canonMultPowLeaf" () 1 () "    virtual Expr canonMultPowLeaf(const" 5286 0  () () 0]
[ebrowse-ms "canonMultPowPow" () 1 () "    virtual Expr canonMultPowPow(const" 5217 0  () () 0]
[ebrowse-ms "canonMultTerm1Term2" () 1 () "    virtual Theorem canonMultTerm1Term2(const" 6871 0  () () 0]
[ebrowse-ms "canonMultTermConst" () 1 () "    virtual Theorem canonMultTermConst(const" 6731 0  () () 0]
[ebrowse-ms "canonMultZero" () 1 () "    virtual Theorem canonMultZero(const" 6966 0  () () 0]
[ebrowse-ms "canonPlus" () 1 () "    virtual Theorem canonPlus(const" 5780 0  () () 0]
[ebrowse-ms "canonPowConst" () 1 () "    virtual Theorem canonPowConst(const" 7543 0  () () 0]
[ebrowse-ms "canonUMinusToDivide" () 1 () "    virtual Theorem canonUMinusToDivide(const" 3835 0  () () 0]
[ebrowse-ms "clashingBounds" () 1 () "    Theorem clashingBounds(const" 12179 0  () () 0]
[ebrowse-ms "compactNonLinearTerm" () 1 () "    Theorem compactNonLinearTerm(const" 13366 0  () () 0]
[ebrowse-ms "constPredicate" () 1 () "    virtual Theorem constPredicate(const" 8821 0  () () 0]
[ebrowse-ms "constRHSGrayShadow" () 0 () "    Rational constRHSGrayShadow(const" 11251 0  () () 0]
[ebrowse-ms "create_t" () 0 () "    Expr create_t(const" 1286 2  () () 0]
[ebrowse-ms "create_t2" () 0 () "    Expr create_t2(const" 1375 2  () () 0]
[ebrowse-ms "create_t3" () 0 () "    Expr create_t3(const" 1496 2  () () 0]
[ebrowse-ms "cycleConflict" () 1 () "    Theorem cycleConflict(const" 12934 0  () () 0]
[ebrowse-ms "darkGrayShadow2ab" () 1 () "    Theorem darkGrayShadow2ab(const" 10329 0  () () 0]
[ebrowse-ms "darkGrayShadow2ba" () 1 () "    Theorem darkGrayShadow2ba(const" 10524 0  () () 0]
[ebrowse-ms "darkShadow" () 0 () "    Expr darkShadow(const" 2915 0  () "    Expr darkShadow(const" 2915]
[ebrowse-ms "diseqToIneq" () 1 () "    Theorem diseqToIneq(const" 12042 0  () () 0]
[ebrowse-ms "divideEqnNonConst" () 1 () "    virtual Theorem divideEqnNonConst(const" 9363 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "    Theorem dummyTheorem(const" 12091 0  () () 0]
[ebrowse-ms "elimPower" () 1 () "    virtual Theorem elimPower(const" 8181 0  () () 0]
[ebrowse-ms "elimPowerConst" () 1 () "    virtual Theorem elimPowerConst(const" 8364 0  () () 0]
[ebrowse-ms "eqElimIntRule" () 1 () "    Theorem eqElimIntRule(const" 11712 0  () () 0]
[ebrowse-ms "eqToIneq" () 1 () "    virtual Theorem eqToIneq(const" 9696 0  () () 0]
[ebrowse-ms "equalLeaves1" () 1 () "    Theorem equalLeaves1(const" 11866 0  () () 0]
[ebrowse-ms "equalLeaves2" () 1 () "    Theorem equalLeaves2(const" 11910 0  () () 0]
[ebrowse-ms "equalLeaves3" () 1 () "    Theorem equalLeaves3(const" 11954 0  () () 0]
[ebrowse-ms "equalLeaves4" () 1 () "    Theorem equalLeaves4(const" 11998 0  () () 0]
[ebrowse-ms "evenPowerEqNegConst" () 1 () "    virtual Theorem evenPowerEqNegConst(const" 8504 0  () () 0]
[ebrowse-ms "expandDarkShadow" () 1 () "    Theorem expandDarkShadow(const" 10718 0  () () 0]
[ebrowse-ms "expandGrayShadow" () 1 () "    Theorem expandGrayShadow(const" 10950 0  () () 0]
[ebrowse-ms "expandGrayShadow0" () 1 () "    Theorem expandGrayShadow0(const" 10776 0  () () 0]
[ebrowse-ms "expandGrayShadowConst" () 1 () "    Theorem expandGrayShadowConst(const" 11012 0  () () 0]
[ebrowse-ms "expandGrayShadowRewrite" () 1 () "    Theorem expandGrayShadowRewrite(const" 13308 0  () () 0]
[ebrowse-ms "f" () 0 () "    Rational f(const" 2242 2  () () 0]
[ebrowse-ms "finiteInterval" () 1 () "    Theorem finiteInterval(const" 10202 0  () () 0]
[ebrowse-ms "flipInequality" () 1 () "    virtual Theorem flipInequality(const" 9790 0  () () 0]
[ebrowse-ms "getLeaves" () 0 () "    void getLeaves(const" 2360 2  () () 0]
[ebrowse-ms "grayShadow" () 0 () "    Expr grayShadow(const" 3174 0  () "    Expr grayShadow(const" 3174]
[ebrowse-ms "grayShadowConst" () 1 () "    Theorem grayShadowConst(const" 11068 0  () () 0]
[ebrowse-ms "implyDiffLogicBothBounds" () 1 () "    Theorem implyDiffLogicBothBounds(const" 13489 0  () () 0]
[ebrowse-ms "implyEqualities" () 1 () "    Theorem implyEqualities(const" 13007 0  () () 0]
[ebrowse-ms "implyNegatedInequality" () 1 () "    Theorem implyNegatedInequality(const" 12479 0  () () 0]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 1 () "   Theorem implyNegatedInequalityDiffLogic(const" 13205 0  () () 0]
[ebrowse-ms "implyWeakerInequality" () 1 () "    Theorem implyWeakerInequality(const" 12404 0  () () 0]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 1 () "    Theorem implyWeakerInequalityDiffLogic(const" 13094 0  () () 0]
[ebrowse-ms "intEqIrrational" () 1 () "    virtual Theorem intEqIrrational(const" 8637 0  () () 0]
[ebrowse-ms "intEqualityRationalConstant" () 1 () "    Theorem intEqualityRationalConstant(const" 12855 0  () () 0]
[ebrowse-ms "intType" () 0 () "    Type intType()" 2783 0  () "    Type intType()" 2783]
[ebrowse-ms "intVarEqnConst" () 1 () "    Theorem intVarEqnConst(const" 11594 0  () () 0]
[ebrowse-ms "integerSplit" () 1 () "    Theorem integerSplit(const" 12544 0  () () 0]
[ebrowse-ms "isIntConst" () 1 () "    Theorem isIntConst(const" 11824 0  () () 0]
[ebrowse-ms "leftMinusRight" () 1 () "    virtual Theorem leftMinusRight(const" 9017 0  () () 0]
[ebrowse-ms "lessThanToLE" () 1 () "    Theorem lessThanToLE(const" 11343 0  () () 0]
[ebrowse-ms "lessThanToLERewrite" () 1 () "    Theorem lessThanToLERewrite(const" 11470 0  () () 0]
[ebrowse-ms "minusToPlus" () 1 () "    virtual Theorem minusToPlus(const" 3695 0  () () 0]
[ebrowse-ms "modEq" () 0 () "    Rational modEq(const" 1178 2  () () 0]
[ebrowse-ms "monomialModM" () 0 () "    Expr monomialModM(const" 1916 2  () () 0]
[ebrowse-ms "monomialMulF" () 0 () "    Expr monomialMulF(const" 2117 2  () () 0]
[ebrowse-ms "moveSumConstantRight" () 1 () "    virtual Theorem moveSumConstantRight(const" 6388 0  () () 0]
[ebrowse-ms "multEqZero" () 1 () "    virtual Theorem multEqZero(const" 7912 0  () () 0]
[ebrowse-ms "multEqn" () 1 () "    virtual Theorem multEqn(const" 9235 0  () () 0]
[ebrowse-ms "multIneqn" () 1 () "    virtual Theorem multIneqn(const" 9600 0  () () 0]
[ebrowse-ms "negatedInequality" () 1 () "    Theorem negatedInequality(const" 10009 0  () () 0]
[ebrowse-ms "nonLinearIneqSignSplit" () 1 () "    Theorem nonLinearIneqSignSplit(const" 13426 0  () () 0]
[ebrowse-ms "oneElimination" () 1 () "    Theorem oneElimination(const" 12135 0  () () 0]
[ebrowse-ms "plusPredicate" () 1 () "    virtual Theorem plusPredicate(const" 9106 0  () () 0]
[ebrowse-ms "powEqZero" () 1 () "    virtual Theorem powEqZero(const" 8038 0  () () 0]
[ebrowse-ms "powerOfOne" () 1 () "    Theorem powerOfOne(const" 13633 0  () () 0]
[ebrowse-ms "rafineStrictInteger" () 1 () "    Theorem rafineStrictInteger(const" 12691 0  () () 0]
[ebrowse-ms "rat" () 0 () "    Expr rat(Rational" 2671 0  () "    Expr rat(Rational" 2671]
[ebrowse-ms "realShadow" () 1 () "    Theorem realShadow(const" 10049 0  () () 0]
[ebrowse-ms "realShadowEq" () 1 () "    Theorem realShadowEq(const" 10124 0  () () 0]
[ebrowse-ms "realType" () 0 () "    Type realType()" 2726 0  () "    Type realType()" 2726]
[ebrowse-ms "rewriteLeavesConst" () 1 () "    Theorem rewriteLeavesConst(const" 13681 0  () () 0]
[ebrowse-ms "rightMinusLeft" () 1 () "    virtual Theorem rightMinusLeft(const" 8919 0  () () 0]
[ebrowse-ms "simpleIneqInt" () 1 () "    Theorem simpleIneqInt(const" 12770 0  () () 0]
[ebrowse-ms "simplifiedMultExpr" () 1 () "    virtual Expr simplifiedMultExpr(std" 5012 0  () () 0]
[ebrowse-ms "splitGrayShadow" () 1 () "    Theorem splitGrayShadow(const" 10832 0  () () 0]
[ebrowse-ms "splitGrayShadowSmall" () 1 () "    Theorem splitGrayShadowSmall(const" 10893 0  () () 0]
[ebrowse-ms "substitute" () 0 () "    Expr substitute(const" 2301 2  () () 0]
[ebrowse-ms "sumModM" () 0 () "    void sumModM(std" 1798 2  () () 0]
[ebrowse-ms "sumMulF" () 0 () "    void sumMulF(std" 1999 2  () () 0]
[ebrowse-ms "trustedRewrite" () 1 () "    Theorem trustedRewrite(const" 12619 0  () () 0]
[ebrowse-ms "uMinusToMult" () 1 () "    virtual Theorem uMinusToMult(const" 3614 0  () () 0]
[ebrowse-ms "varToMult" () 1 () "    virtual Theorem varToMult(const" 3537 0  () () 0]
)
()
([ebrowse-ms "greaterthan" () 0 () "    static bool greaterthan(const" 4949 0  () () 0]
)
()
()
()()
])()
([ebrowse-ms "IsIntegerElim" () 9 () "    virtual Theorem IsIntegerElim(const" 11348 0  () () 0]
[ebrowse-ms "addInequalities" () 9 () "    virtual Theorem addInequalities(const" 16254 0  () () 0]
[ebrowse-ms "addInequalities" () 9 () "    virtual Theorem addInequalities(const" 16171 0  () () 0]
[ebrowse-ms "canonComboLikeTerms" () 9 () "    virtual Theorem canonComboLikeTerms(const" 4577 0  () () 0]
[ebrowse-ms "canonDivide" () 9 () "    virtual Theorem canonDivide(const" 3362 0  () () 0]
[ebrowse-ms "canonDivideConst" () 9 () "    virtual Theorem canonDivideConst(const" 1988 0  () () 0]
[ebrowse-ms "canonDivideMult" () 9 () "    virtual Theorem canonDivideMult(const" 2112 0  () () 0]
[ebrowse-ms "canonDividePlus" () 9 () "    virtual Theorem canonDividePlus(const" 2380 0  () () 0]
[ebrowse-ms "canonDivideVar" () 9 () "    virtual Theorem canonDivideVar(const" 2493 0  () () 0]
[ebrowse-ms "canonFlattenSum" () 9 () "    virtual Theorem canonFlattenSum(const" 4454 0  () () 0]
[ebrowse-ms "canonInvert" () 9 () "    virtual Theorem canonInvert(const" 3286 0  () () 0]
[ebrowse-ms "canonMult" () 9 () "    virtual Theorem canonMult(const" 3179 0  () () 0]
[ebrowse-ms "canonMultConstConst" () 9 () "    virtual Theorem canonMultConstConst(const" 3903 0  () () 0]
[ebrowse-ms "canonMultConstSum" () 9 () "    virtual Theorem canonMultConstSum(const" 4192 0  () () 0]
[ebrowse-ms "canonMultConstTerm" () 9 () "      canonMultConstTerm(const" 4036 0  () () 0]
[ebrowse-ms "canonMultMtermMterm" () 9 () "    virtual Theorem canonMultMtermMterm(const" 3010 0  () () 0]
[ebrowse-ms "canonMultOne" () 9 () "    virtual Theorem canonMultOne(const" 3799 0  () () 0]
[ebrowse-ms "canonMultTerm1Term2" () 9 () "    virtual Theorem canonMultTerm1Term2(const" 3617 0  () () 0]
[ebrowse-ms "canonMultTermConst" () 9 () "    virtual Theorem canonMultTermConst(const" 3472 0  () () 0]
[ebrowse-ms "canonMultZero" () 9 () "    virtual Theorem canonMultZero(const" 3717 0  () () 0]
[ebrowse-ms "canonPlus" () 9 () "    virtual Theorem canonPlus(const" 3094 0  () () 0]
[ebrowse-ms "canonPowConst" () 9 () "    virtual Theorem canonPowConst(const" 4321 0  () () 0]
[ebrowse-ms "canonUMinusToDivide" () 9 () "    virtual Theorem canonUMinusToDivide(const" 1483 0  () () 0]
[ebrowse-ms "clashingBounds" () 9 () "    virtual Theorem clashingBounds(const" 16071 0  () () 0]
[ebrowse-ms "compactNonLinearTerm" () 9 () "    virtual Theorem compactNonLinearTerm(const" 17490 0  () () 0]
[ebrowse-ms "constPredicate" () 9 () "    virtual Theorem constPredicate(const" 5649 0  () () 0]
[ebrowse-ms "cycleConflict" () 9 () "    virtual Theorem cycleConflict(const" 16974 0  () () 0]
[ebrowse-ms "darkGrayShadow2ab" () 9 () "    virtual Theorem darkGrayShadow2ab(const" 8044 0  () () 0]
[ebrowse-ms "darkGrayShadow2ba" () 9 () "    virtual Theorem darkGrayShadow2ba(const" 8580 0  () () 0]
[ebrowse-ms "diseqToIneq" () 9 () "    virtual Theorem diseqToIneq(const" 15888 0  () () 0]
[ebrowse-ms "divideEqnNonConst" () 9 () "    virtual Theorem divideEqnNonConst(const" 6320 0  () () 0]
[ebrowse-ms "dummyTheorem" () 9 () "    virtual Theorem dummyTheorem(const" 15949 0  () () 0]
[ebrowse-ms "elimPower" () 9 () "    virtual Theorem elimPower(const" 4963 0  () () 0]
[ebrowse-ms "elimPowerConst" () 9 () "    virtual Theorem elimPowerConst(const" 5150 0  () () 0]
[ebrowse-ms "eqElimIntRule" () 9 () "    virtual Theorem eqElimIntRule(const" 15196 0  () () 0]
[ebrowse-ms "eqToIneq" () 9 () "    virtual Theorem eqToIneq(const" 6711 0  () () 0]
[ebrowse-ms "equalLeaves1" () 9 () "    virtual Theorem equalLeaves1(const" 15571 0  () () 0]
[ebrowse-ms "equalLeaves2" () 9 () "    virtual Theorem equalLeaves2(const" 15629 0  () () 0]
[ebrowse-ms "equalLeaves3" () 9 () "    virtual Theorem equalLeaves3(const" 15687 0  () () 0]
[ebrowse-ms "equalLeaves4" () 9 () "    virtual Theorem equalLeaves4(const" 15745 0  () () 0]
[ebrowse-ms "evenPowerEqNegConst" () 9 () "    virtual Theorem evenPowerEqNegConst(const" 5294 0  () () 0]
[ebrowse-ms "expandDarkShadow" () 9 () "    virtual Theorem expandDarkShadow(const" 8838 0  () () 0]
[ebrowse-ms "expandGrayShadow" () 9 () "    virtual Theorem expandGrayShadow(const" 9462 0  () () 0]
[ebrowse-ms "expandGrayShadow0" () 9 () "    virtual Theorem expandGrayShadow0(const" 8954 0  () () 0]
[ebrowse-ms "expandGrayShadowConst" () 9 () "    virtual Theorem expandGrayShadowConst(const" 9982 0  () () 0]
[ebrowse-ms "expandGrayShadowRewrite" () 9 () "   virtual Theorem expandGrayShadowRewrite(const" 17416 0  () () 0]
[ebrowse-ms "finiteInterval" () 9 () "    virtual Theorem finiteInterval(const" 7561 0  () () 0]
[ebrowse-ms "flipInequality" () 9 () "    virtual Theorem flipInequality(const" 6810 0  () () 0]
[ebrowse-ms "grayShadowConst" () 9 () "    virtual Theorem grayShadowConst(const" 10171 0  () () 0]
[ebrowse-ms "implyDiffLogicBothBounds" () 9 () "  virtual Theorem implyDiffLogicBothBounds(const" 17645 0  () () 0]
[ebrowse-ms "implyEqualities" () 9 () "    virtual Theorem implyEqualities(const" 17059 0  () () 0]
[ebrowse-ms "implyNegatedInequality" () 9 () "    virtual Theorem implyNegatedInequality(const" 16431 0  () () 0]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 9 () "al Theorem implyNegatedInequalityDiffLogic(const" 17289 0  () () 0]
[ebrowse-ms "implyWeakerInequality" () 9 () "    virtual Theorem implyWeakerInequality(const" 16340 0  () () 0]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 9 () "ual Theorem implyWeakerInequalityDiffLogic(const" 17162 0  () () 0]
[ebrowse-ms "intEqIrrational" () 9 () "    virtual Theorem intEqIrrational(const" 5431 0  () () 0]
[ebrowse-ms "intEqualityRationalConstant" () 9 () "irtual Theorem intEqualityRationalConstant(const" 16879 0  () () 0]
[ebrowse-ms "intVarEqnConst" () 9 () "    virtual Theorem intVarEqnConst(const" 11151 0  () () 0]
[ebrowse-ms "integerSplit" () 9 () "    virtual Theorem integerSplit(const" 16508 0  () () 0]
[ebrowse-ms "isIntConst" () 9 () "    virtual Theorem isIntConst(const" 15517 0  () () 0]
[ebrowse-ms "leftMinusRight" () 9 () "    virtual Theorem leftMinusRight(const" 5895 0  () () 0]
[ebrowse-ms "lessThanToLE" () 9 () "    virtual Theorem lessThanToLE(const" 10530 0  () () 0]
[ebrowse-ms "lessThanToLERewrite" () 9 () "    virtual Theorem lessThanToLERewrite(const" 10679 0  () () 0]
[ebrowse-ms "minusToPlus" () 9 () "    virtual Theorem minusToPlus(const" 1247 0  () () 0]
[ebrowse-ms "moveSumConstantRight" () 9 () "    virtual Theorem moveSumConstantRight(const" 1837 0  () () 0]
[ebrowse-ms "multEqZero" () 9 () "    virtual Theorem multEqZero(const" 4686 0  () () 0]
[ebrowse-ms "multEqn" () 9 () "    virtual Theorem multEqn(const" 6188 0  () () 0]
[ebrowse-ms "multIneqn" () 9 () "    virtual Theorem multIneqn(const" 6610 0  () () 0]
[ebrowse-ms "negatedInequality" () 9 () "    virtual Theorem negatedInequality(const" 7111 0  () () 0]
[ebrowse-ms "nonLinearIneqSignSplit" () 9 () "    virtual Theorem nonLinearIneqSignSplit(const" 17566 0  () () 0]
[ebrowse-ms "oneElimination" () 9 () "    virtual Theorem oneElimination(const" 16011 0  () () 0]
[ebrowse-ms "plusPredicate" () 9 () "    virtual Theorem plusPredicate(const" 6027 0  () () 0]
[ebrowse-ms "powEqZero" () 9 () "    virtual Theorem powEqZero(const" 4816 0  () () 0]
[ebrowse-ms "powerOfOne" () 9 () "    virtual Theorem powerOfOne(const" 17805 0  () () 0]
[ebrowse-ms "rafineStrictInteger" () 9 () "    virtual Theorem rafineStrictInteger(const" 16687 0  () () 0]
[ebrowse-ms "realShadow" () 9 () "    virtual Theorem realShadow(const" 7220 0  () () 0]
[ebrowse-ms "realShadowEq" () 9 () "    virtual Theorem realShadowEq(const" 7392 0  () () 0]
[ebrowse-ms "rewriteLeavesConst" () 1 () "    virtual Theorem rewriteLeavesConst(const" 17869 0  () () 0]
[ebrowse-ms "rightMinusLeft" () 9 () "    virtual Theorem rightMinusLeft(const" 5772 0  () () 0]
[ebrowse-ms "simpleIneqInt" () 9 () "    virtual Theorem simpleIneqInt(const" 16778 0  () () 0]
[ebrowse-ms "splitGrayShadow" () 9 () "    virtual Theorem splitGrayShadow(const" 9271 0  () () 0]
[ebrowse-ms "splitGrayShadowSmall" () 9 () "    virtual Theorem splitGrayShadowSmall(const" 9343 0  () () 0]
[ebrowse-ms "trustedRewrite" () 9 () "    virtual Theorem trustedRewrite(const" 16599 0  () () 0]
[ebrowse-ms "uMinusToMult" () 9 () "    virtual Theorem uMinusToMult(const" 1161 0  () () 0]
[ebrowse-ms "varToMult" () 9 () "    virtual Theorem varToMult(const" 1079 0  () () 0]
[ebrowse-ms "~ArithProofRules" () 1 () "    virtual ~ArithProofRules()" 843 0  () "    virtual ~ArithProofRules()" 843]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "hash_map" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_map.h" "  class hash_map {" 2842"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_map.h" ]
()([ebrowse-ms "d_table" () 0 () "    _hash_table d_table;" 3884 1  () () 0]
)
([ebrowse-ms "begin" () 4 () "    const_iterator begin()" 7098 0  () "    const_iterator begin()" 7098]
[ebrowse-ms "begin" () 0 () "    iterator begin()" 7002 0  () "    iterator begin()" 7002]
[ebrowse-ms "bucket_count" () 4 () "    size_type bucket_count()" 6709 0  () "    size_type bucket_count()" 6709]
[ebrowse-ms "clear" () 0 () "    void clear()" 4972 0  () "    void clear()" 4972]
[ebrowse-ms "contains" () 4 () "    bool contains(const" 6209 0  () "    bool contains(const" 6209]
[ebrowse-ms "count" () 4 () "    size_type count(const" 6371 0  () "    size_type count(const" 6371]
[ebrowse-ms "empty" () 4 () "    bool empty()" 6479 0  () "    bool empty()" 6479]
[ebrowse-ms "end" () 4 () "    const_iterator end()" 7285 0  () "    const_iterator end()" 7285]
[ebrowse-ms "end" () 0 () "    iterator end()" 7191 0  () "    iterator end()" 7191]
[ebrowse-ms "erase" () 0 () "    const_iterator erase(const" 6084 0  () "    const_iterator erase(const" 6084]
[ebrowse-ms "find" () 4 () "    const_iterator find(const" 5224 0  () "    const_iterator find(const" 5224]
[ebrowse-ms "find" () 0 () "    iterator find(const" 5105 0  () "    iterator find(const" 5105]
[ebrowse-ms "hash_map" () 0 () "    hash_map(const hash_map& other) :" 4594 0  () "    hash_map(const hash_map& other) :" 4594]
[ebrowse-ms "hash_map" () 0 () " const _HashFcn& hash, const _EqualKey& equal) :" 4425 0  () " const _HashFcn& hash, const _EqualKey& equal) :" 4425]
[ebrowse-ms "hash_map" () 0 () "e_type initial_capacity, const _HashFcn& hash) :" 4244 0  () "e_type initial_capacity, const _HashFcn& hash) :" 4244]
[ebrowse-ms "hash_map" () 0 () "    hash_map(size_type initial_capacity) :" 4098 0  () "    hash_map(size_type initial_capacity) :" 4098]
[ebrowse-ms "hash_map" () 0 () "    hash_map() :" 3982 0  () "    hash_map() :" 3982]
[ebrowse-ms "insert" () 0 () "    std::pair<iterator, bool> insert(const" 5703 0  () "    std::pair<iterator, bool> insert(const" 5703]
[ebrowse-ms "load_factor" () 4 () "    float load_factor()" 6842 0  () "    float load_factor()" 6842]
[ebrowse-ms "operator =" () 0 () "    hash_map& operator=(const" 4709 0  () "    hash_map& operator=(const" 4709]
[ebrowse-ms "operator []" () 0 () "    data_type& operator[](const" 5460 0  () "    data_type& operator[](const" 5460]
[ebrowse-ms "size" () 4 () "    size_type size()" 6591 0  () "    size_type size()" 6591]
[ebrowse-ms "swap" () 0 () "    void swap(hash_map" 4841 0  () "    void swap(hash_map" 4841]
)
()
()
()
([ebrowse-ms "_hash_table" () 0 () "          _hash_table;" 3299 1  () () 0]
[ebrowse-ms "const_iterator" () 0 () "name _hash_table::const_iterator const_iterator;" 3806 0  () () 0]
[ebrowse-ms "data_type" () 0 () "    typedef _Data data_type;" 3499 0  () () 0]
[ebrowse-ms "hasher" () 0 () "    typedef typename _hash_table::hasher hasher;" 3605 0  () () 0]
[ebrowse-ms "iterator" () 0 () "typedef typename _hash_table::iterator iterator;" 3741 0  () () 0]
[ebrowse-ms "key_equal" () 0 () "pedef typename _hash_table::key_equal key_equal;" 3660 0  () () 0]
[ebrowse-ms "key_type" () 0 () "typedef typename _hash_table::key_type key_type;" 3470 0  () () 0]
[ebrowse-ms "size_type" () 0 () "pedef typename _hash_table::size_type size_type;" 3417 0  () () 0]
[ebrowse-ms "value_type" () 0 () "def typename _hash_table::value_type value_type;" 3556 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "DebugFlag" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  class DebugFlag {" 3253"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" ]
()([ebrowse-ms "d_flag" () 0 () "    bool* d_flag;" 3282 2  () () 0]
)
([ebrowse-ms "DebugFlag" () 0 () "    DebugFlag(bool& flag) :" 3442 0  () "    DebugFlag(bool& flag) :" 3442]
[ebrowse-ms "operator ++" () 0 () "    bool operator++(int" 3874 0  () "    bool operator++(int" 3874]
[ebrowse-ms "operator ++" () 0 () "    bool operator++()" 3722 0  () "    bool operator++()" 3722]
[ebrowse-ms "operator --" () 0 () "    bool operator--(int" 3804 0  () "    bool operator--(int" 3804]
[ebrowse-ms "operator --" () 0 () "    bool operator--()" 3665 0  () "    bool operator--()" 3665]
[ebrowse-ms "operator =" () 0 () "    DebugFlag& operator=(bool" 3993 0  () "    DebugFlag& operator=(bool" 3993]
[ebrowse-ms "~DebugFlag" () 0 () "    ~DebugFlag()" 3504 0  () "    ~DebugFlag()" 3504]
)
()
()
([ebrowse-ms "operator !=" () 2 () "    friend bool operator!=(const" 4156 0  () "  inline bool operator!=(const" 7313]
[ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 4249 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(const" 4086 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
)
()
()()
][ebrowse-ts [ebrowse-cs "ltstr" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "struct ltstr{" 1355"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "  bool operator()(const" 1379 0  () "  bool operator()(const" 1379]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "NotifyList" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/notifylist.h" "class NotifyList {" 717"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/notifylist.h" ]
()([ebrowse-ms "d_elist" () 0 () "  CDList<Expr> d_elist;" 768 2  () () 0]
[ebrowse-ms "d_tlist" () 0 () "  CDList<Theory*> d_tlist;" 744 2  () () 0]
)
([ebrowse-ms "NotifyList" () 0 () "  NotifyList(Context* c) :" 798 0  () "  NotifyList(Context* c) :" 798]
[ebrowse-ms "add" () 0 () "  void add(Theory" 955 0  () "  void add(Theory" 955]
[ebrowse-ms "getExpr" () 4 () "  Expr getExpr(int" 1097 0  () "  Expr getExpr(int" 1097]
[ebrowse-ms "getTheory" () 4 () "  Theory* getTheory(int" 1046 0  () "  Theory* getTheory(int" 1046]
[ebrowse-ms "size" () 4 () "  unsigned size()" 904 0  () "  unsigned size()" 904]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "GraphEdge" "CVC3::TheoryArithOld" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	struct GraphEdge {" 15554() ]
()([ebrowse-ms "c" () 0 () "		Rational c;" 15588 0  () () 0]
[ebrowse-ms "x" () 0 () "		Expr x;" 15564 0  () () 0]
[ebrowse-ms "y" () 0 () "		Expr y;" 15574 0  () () 0]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SolverStats" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "struct SolverStats {" 6032"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" ]
()([ebrowse-ms "debug" () 0 () "    debug;" 6239 0  () () 0]
[ebrowse-ms "max_level" () 0 () "gations, conflicts, theory_conflicts, max_level;" 6117 0  () () 0]
)
([ebrowse-ms "SolverStats" () 0 () "  SolverStats() :" 6255 0  () "  SolverStats() :" 6255]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ContextMemoryManager" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/context/context.cpp" ]
()([ebrowse-ms "s_freePages" () 0 () () 0 0  () "vector<char*> ContextMemoryManager::s_freePages;" 661]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "mpq_class" "CVC3" 0() () 0() ]
([ebrowse-ts [ebrowse-cs "Impl" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  class Rational::Impl :" 1014"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" ]
()([ebrowse-ms "d_denom" () 0 () "    long int d_denom;" 2594 2  () () 0]
[ebrowse-ms "d_n" () 0 () "    mpq_t d_n;" 892 2  () () 0]
[ebrowse-ms "d_num" () 0 () "    long int d_num;" 2557 2  () () 0]
)
([ebrowse-ms "Impl" () 0 () "      :" 1464 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "      :" 1464]
[ebrowse-ms "Impl" () 0 () "    Impl(int n, int d) :" 1402 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    Impl(int n, int d) :" 1402]
[ebrowse-ms "Impl" () 0 () ", unsigned int d, unsigned int /* dummy arg */);" 1768 0  () () 0]
[ebrowse-ms "Impl" () 0 () "    Impl(mpz_t n) {" 1538 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    Impl(mpz_t n) {" 1538]
[ebrowse-ms "Impl" () 0 () "    Impl(mpz_t n, mpz_t d) {" 1362 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    Impl(mpz_t n, mpz_t d) {" 1362]
[ebrowse-ms "Impl" () 0 () "    Impl(mpq_t n) {" 1218 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    Impl(mpq_t n) {" 1218]
[ebrowse-ms "Impl" () 0 () "      :" 1654 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "      :" 1654]
[ebrowse-ms "Impl" () 0 () "    Impl(const string &n, int base):" 1578 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    Impl(const string &n, int base):" 1578]
[ebrowse-ms "Impl" () 0 () "    Impl(long int n, long int d);" 1677 0  () "    Impl(long int n, long int d):" 2902]
[ebrowse-ms "Impl" () 0 () "    Impl(const Impl &x) :" 1322 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    Impl(const Impl &x) :" 1322]
[ebrowse-ms "Impl" () 0 () "    Impl() :" 1098 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    Impl() :" 1098]
[ebrowse-ms "canonicalize" () 0 () "    void canonicalize()" 959 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    void canonicalize()" 959]
[ebrowse-ms "ceil" () 4 () "    Impl ceil()" 3204 0  () () 0]
[ebrowse-ms "floor" () 4 () "    Impl floor()" 3157 0  () () 0]
[ebrowse-ms "getDen" () 0 () "    mpz_class getDen()" 1932 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    mpz_class getDen()" 1932]
[ebrowse-ms "getDen" () 4 () "    Impl getDen()" 2351 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    Impl getDen()" 2351]
[ebrowse-ms "getInt" () 4 () "    int getInt()" 2444 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    int getInt()" 2444]
[ebrowse-ms "getNum" () 0 () "    mpz_class getNum()" 1887 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    mpz_class getNum()" 1887]
[ebrowse-ms "getNum" () 4 () "    Impl getNum()" 2234 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    Impl getNum()" 2234]
[ebrowse-ms "getUnsigned" () 4 () "    unsigned int getUnsigned()" 2782 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    unsigned int getUnsigned()" 2782]
[ebrowse-ms "isInteger" () 4 () "    bool isInteger()" 3278 0  () () 0]
[ebrowse-ms "operator -" () 4 () "    Impl operator-()" 3111 0  () () 0]
[ebrowse-ms "operator =" () 0 () "    Impl& operator=(const" 2094 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    Impl& operator=(const" 2094]
[ebrowse-ms "toString" () 4 () "    string toString(int" 6526 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "    string toString(int" 6526]
[ebrowse-ms "~Impl" () 1 () "    virtual ~Impl()" 1788 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    virtual ~Impl()" 1788]
)
()
()
([ebrowse-ms "gcd" () 0 () "    friend Impl gcd(const" 5719 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational gcd(const" 4676]
[ebrowse-ms "intRoot" () 0 () "    friend Impl intRoot(const" 5364 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational intRoot(const" 6609]
[ebrowse-ms "lcm" () 0 () "    friend Impl lcm(const" 6170 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational lcm(const" 5340]
[ebrowse-ms "mod" () 0 () "    friend Impl mod(const" 5026 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational mod(const" 6347]
[ebrowse-ms "operator !=" () 34 () "    friend bool operator!=(const" 3461 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(const" 7313]
[ebrowse-ms "operator %" () 0 () "    friend Impl operator%(const" 4631 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    Rational operator%(const" 9389]
[ebrowse-ms "operator *" () 2 () "    friend Impl operator*(const" 4340 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator*(const" 8347]
[ebrowse-ms "operator +" () 2 () "    friend Impl operator+(const" 4023 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator+(const" 8156]
[ebrowse-ms "operator -" () 2 () "    friend Impl operator-(const" 4180 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator-(const" 8251]
[ebrowse-ms "operator /" () 2 () "    friend Impl operator/(const" 4494 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator/(const" 8442]
[ebrowse-ms "operator <" () 2 () "    friend bool operator<(const" 3582 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "inline bool operator<(const" 10630]
[ebrowse-ms "operator <<" () 0 () "    friend ostream& operator<<(ostream" 6829 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator <=" () 34 () "    friend bool operator<=(const" 3688 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator<=(const" 14830]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(const" 3336 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
[ebrowse-ms "operator >" () 34 () "    friend bool operator>(const" 3794 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>(const" 14929]
[ebrowse-ms "operator >=" () 34 () "    friend bool operator>=(const" 3900 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>=(const" 15028]
)
()
()()
])()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Trigger" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_quant.h" " class Trigger {" 1214() ]
()([ebrowse-ms "bvs" () 0 () "   std::vector<Expr> bvs;" 1290 0  () () 0]
[ebrowse-ms "hasRWOp" () 0 () "   bool hasRWOp;" 1321 0  () () 0]
[ebrowse-ms "hasT2" () 0 () "   bool hasT2;" 1354 0  () () 0]
[ebrowse-ms "hasTrans" () 0 () "   bool hasTrans;" 1339 0  () () 0]
[ebrowse-ms "head" () 0 () "   Expr head;" 1304 0  () () 0]
[ebrowse-ms "isMulti" () 0 () "   bool isMulti;" 1483 0  () () 0]
[ebrowse-ms "isSimple" () 0 () "   bool isSimple;" 1393 0  () () 0]
[ebrowse-ms "isSuperSimple" () 0 () "   bool isSuperSimple;" 1441 0  () () 0]
[ebrowse-ms "multiId" () 0 () "   size_t multiId;" 1525 0  () () 0]
[ebrowse-ms "multiIndex" () 0 () "   size_t multiIndex;" 1505 0  () () 0]
[ebrowse-ms "polarity" () 0 () "   Polarity polarity;" 1260 0  () () 0]
[ebrowse-ms "trig" () 0 () "   Expr trig;" 1238 0  () () 0]
)
([ebrowse-ms "Trigger" () 0 () "re* core, Expr e, Polarity pol, std::set<Expr>);" 1548 0  () () 0]
[ebrowse-ms "getBVs" () 0 () "   std::vector<Expr> getBVs()" 1678 0  () () 0]
[ebrowse-ms "getEx" () 0 () "   Expr  getEx()" 1647 0  () () 0]
[ebrowse-ms "getHead" () 0 () "   Expr  getHead()" 1725 0  () () 0]
[ebrowse-ms "hasRW" () 0 () "   bool  hasRW()" 1769 0  () () 0]
[ebrowse-ms "hasTr" () 0 () "   bool  hasTr()" 1815 0  () () 0]
[ebrowse-ms "hasTr2" () 0 () "   bool  hasTr2()" 1863 0  () () 0]
[ebrowse-ms "isMultiTrig" () 0 () "   bool  isMultiTrig()" 2003 0  () () 0]
[ebrowse-ms "isNeg" () 0 () "   bool  isNeg()" 1629 0  () () 0]
[ebrowse-ms "isPos" () 0 () "   bool  isPos()" 1611 0  () () 0]
[ebrowse-ms "isSimp" () 0 () "   bool  isSimp()" 1903 0  () () 0]
[ebrowse-ms "isSuperSimp" () 0 () "   bool  isSuperSimp()" 1953 0  () () 0]
[ebrowse-ms "setHead" () 0 () "   void  setHead(Expr" 1702 0  () () 0]
[ebrowse-ms "setMultiTrig" () 0 () "   void  setMultiTrig()" 1979 0  () () 0]
[ebrowse-ms "setRWOp" () 0 () "   void  setRWOp(bool" 1748 0  () () 0]
[ebrowse-ms "setSimp" () 0 () "   void  setSimp()" 1884 0  () () 0]
[ebrowse-ms "setSuperSimp" () 0 () "   void  setSuperSimp()" 1929 0  () () 0]
[ebrowse-ms "setTrans" () 0 () "   void  setTrans(bool" 1794 0  () () 0]
[ebrowse-ms "setTrans2" () 0 () "   void  setTrans2(bool" 1841 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Trigger" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" ]
()()
([ebrowse-ms "Trigger" () 0 () () 0 0  () "Expr e, Polarity pol, std::set<Expr> boundVars){" 1281]
[ebrowse-ms "getBVs" () 0 () () 0 0  () "std::vector<Expr> Trigger::getBVs()" 1828]
[ebrowse-ms "getEx" () 0 () () 0 0  () "Expr Trigger::getEx()" 1868]
[ebrowse-ms "getHead" () 0 () () 0 0  () "Expr Trigger::getHead()" 1955]
[ebrowse-ms "hasRW" () 0 () () 0 0  () "bool Trigger::hasRW()" 2045]
[ebrowse-ms "hasTr" () 0 () () 0 0  () "bool Trigger::hasTr()" 2140]
[ebrowse-ms "hasTr2" () 0 () () 0 0  () "bool Trigger::hasTr2()" 2235]
[ebrowse-ms "isMultiTrig" () 0 () () 0 0  () "bool Trigger::isMultiTrig()" 2541]
[ebrowse-ms "isNeg" () 0 () () 0 0  () "bool Trigger::isNeg()" 1742]
[ebrowse-ms "isPos" () 0 () () 0 0  () "bool Trigger::isPos()" 1672]
[ebrowse-ms "isSimp" () 0 () () 0 0  () "bool Trigger::isSimp()" 2325]
[ebrowse-ms "isSuperSimp" () 0 () () 0 0  () "bool Trigger::isSuperSimp()" 2433]
[ebrowse-ms "setHead" () 0 () () 0 0  () "void Trigger::setHead(Expr" 1914]
[ebrowse-ms "setMultiTrig" () 0 () () 0 0  () "void Trigger::setMultiTrig()" 2490]
[ebrowse-ms "setRWOp" () 0 () () 0 0  () "void Trigger::setRWOp(bool" 2001]
[ebrowse-ms "setSimp" () 0 () () 0 0  () "void Trigger::setSimp()" 2279]
[ebrowse-ms "setSuperSimp" () 0 () () 0 0  () "void Trigger::setSuperSimp()" 2377]
[ebrowse-ms "setTrans" () 0 () () 0 0  () "void Trigger::setTrans(bool" 2095]
[ebrowse-ms "setTrans2" () 0 () () 0 0  () "void Trigger::setTrans2(bool" 2192]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TypeComp" "CVC3::TheoryQuant" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_quant.h" "   class  TypeComp {" 4783"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_quant.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "     bool operator() (const" 4846 0  () "     bool operator() (const" 4846]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SimulateTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_theorem_producer.cpp" ]
()()
([ebrowse-ms "expandSimulate" () 0 () () 0 0  () "em SimulateTheoremProducer::expandSimulate(const" 1376]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Rational" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  class CVC_DLL Rational {" 1238"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" ]
()([ebrowse-ms "d_n" () 0 () "    Impl *d_n;" 1280 2  () () 0]
)
([ebrowse-ms "Rational" () 0 () "string& n, const std::string& d, int base = 10);" 2042 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    :" 3345]
[ebrowse-ms "Rational" () 0 () "al(const char* n, const char* d, int base = 10);" 1983 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    :" 3125]
[ebrowse-ms "Rational" () 0 () "  Rational(const std::string& n, int base = 10);" 1932 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    :" 2937]
[ebrowse-ms "Rational" () 0 () "    Rational(const char* n, int base = 10);" 1888 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    :" 2743]
[ebrowse-ms "Rational" () 0 () "    Rational(int n, int d = 1);" 1854 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational::Rational(int n, int d):" 2543]
[ebrowse-ms "Rational" () 0 () "    Rational(const Rational &n);" 1823 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational::Rational(const Impl& t):" 2380]
[ebrowse-ms "Rational" () 0 () "    Rational();" 1779 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational::Rational() :" 2001]
[ebrowse-ms "getCreated" () 0 () "    int& getCreated()" 1441 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "    int& getCreated()" 1441]
[ebrowse-ms "getDeleted" () 0 () "    int& getDeleted()" 1539 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "    int& getDeleted()" 1539]
[ebrowse-ms "getDenominator" () 4 () "    Rational getDenominator()" 3967 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational Rational::getDenominator()" 3843]
[ebrowse-ms "getInt" () 4 () "    int getInt()" 4148 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  int Rational::getInt()" 7599]
[ebrowse-ms "getNumerator" () 4 () "    Rational getNumerator()" 3930 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational Rational::getNumerator()" 3750]
[ebrowse-ms "getUnsigned" () 4 () "    unsigned int getUnsigned()" 4381 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  unsigned int Rational::getUnsigned()" 7729]
[ebrowse-ms "hash" () 4 () "    size_t hash()" 2323 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  size_t Rational::hash()" 6904]
[ebrowse-ms "isInteger" () 4 () "    bool isInteger()" 4070 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  bool Rational::isInteger()" 3928]
[ebrowse-ms "isUnsigned" () 4 () "    bool isUnsigned()" 4226 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "    bool isUnsigned()" 4226]
[ebrowse-ms "operator *=" () 0 () "    Rational &operator*=(const" 3423 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational &Rational::operator*=(const" 7409]
[ebrowse-ms "operator ++" () 0 () "    Rational operator++(int" 3633 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "    Rational operator++(int" 3633]
[ebrowse-ms "operator ++" () 0 () "    const Rational& operator++()" 3542 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "    const Rational& operator++()" 3542]
[ebrowse-ms "operator +=" () 0 () "    Rational &operator+=(const" 3331 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational &Rational::operator+=(const" 7203]
[ebrowse-ms "operator -" () 4 () "    Rational operator-()" 3293 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational Rational::operator-()" 7102]
[ebrowse-ms "operator --" () 0 () "    Rational operator--(int" 3829 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "    Rational operator--(int" 3829]
[ebrowse-ms "operator --" () 0 () "    const Rational& operator--()" 3738 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "    const Rational& operator--()" 3738]
[ebrowse-ms "operator -=" () 0 () "    Rational &operator-=(const" 3377 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational &Rational::operator-=(const" 7306]
[ebrowse-ms "operator /=" () 0 () "    Rational &operator/=(const" 3469 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational &Rational::operator/=(const" 7512]
[ebrowse-ms "operator =" () 0 () "    Rational& operator=(const" 2180 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational& Rational::operator=(const" 4020]
[ebrowse-ms "print" () 4 () "    void print()" 5451 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  void Rational::print()" 7009]
[ebrowse-ms "printStats" () 0 () "    void printStats()" 1637 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  void Rational::printStats()" 7879]
[ebrowse-ms "toString" () 4 () "    std::string toString(int" 2224 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  string Rational::toString(int" 6729]
[ebrowse-ms "~Rational" () 0 () "    ~Rational()" 2130 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational::~Rational()" 3566]
)
()
()
([ebrowse-ms "abs" () 0 () "    friend CVC_DLL Rational abs(const" 4872 0  () () 0]
[ebrowse-ms "ceil" () 0 () "    friend CVC_DLL Rational ceil(const" 5090 0  () () 0]
[ebrowse-ms "floor" () 0 () "    friend CVC_DLL Rational floor(const" 4981 0  () () 0]
[ebrowse-ms "gcd" () 0 () "    friend CVC_DLL Rational gcd(const" 4670 0  () () 0]
[ebrowse-ms "gcd" () 0 () "    friend CVC_DLL Rational gcd(const" 4599 0  () () 0]
[ebrowse-ms "intRoot" () 0 () "    friend CVC_DLL Rational intRoot(const" 5346 0  () () 0]
[ebrowse-ms "lcm" () 0 () "    friend CVC_DLL Rational lcm(const" 4806 0  () () 0]
[ebrowse-ms "lcm" () 0 () "    friend CVC_DLL Rational lcm(const" 4735 0  () () 0]
[ebrowse-ms "mod" () 0 () "    friend CVC_DLL Rational mod(const" 5200 0  () () 0]
[ebrowse-ms "operator !=" () 2 () "    friend CVC_DLL bool operator!=(const" 2750 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(const" 7313]
[ebrowse-ms "operator %" () 0 () "    friend CVC_DLL Rational operator%(const" 3213 0  () () 0]
[ebrowse-ms "operator *" () 2 () "    friend CVC_DLL Rational operator*(const" 2987 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator*(const" 8347]
[ebrowse-ms "operator +" () 2 () "    friend CVC_DLL Rational operator+(const" 2829 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator+(const" 8156]
[ebrowse-ms "operator -" () 2 () "    friend CVC_DLL Rational operator-(const" 2908 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator-(const" 8251]
[ebrowse-ms "operator /" () 2 () "    friend CVC_DLL Rational operator/(const" 3066 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator/(const" 8442]
[ebrowse-ms "operator <" () 2 () "    friend CVC_DLL bool operator<(const" 2447 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "inline bool operator<(const" 10630]
[ebrowse-ms "operator <<" () 0 () "    friend std::ostream &operator<<(std" 4429 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator <=" () 2 () "    friend CVC_DLL bool operator<=(const" 2523 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator<=(const" 14830]
[ebrowse-ms "operator ==" () 2 () "    friend CVC_DLL bool operator==(const" 2372 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
[ebrowse-ms "operator >" () 2 () "    friend CVC_DLL bool operator>(const" 2598 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>(const" 14929]
[ebrowse-ms "operator >=" () 2 () "    friend CVC_DLL bool operator>=(const" 2674 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>=(const" 15028]
)
()
()()
][ebrowse-ts [ebrowse-cs "VarOrder" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_varorder.h" "class VarOrder {" 2470"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_varorder.h" ]
()([ebrowse-ms "activity" () 0 () "  const std::vector<double>&  activity;" 2604 2  () () 0]
[ebrowse-ms "assigns" () 0 () "  const std::vector<char>&    assigns;" 2509 2  () () 0]
[ebrowse-ms "heap" () 0 () "  Heap<VarOrder_lt>   heap;" 2684 2  () () 0]
[ebrowse-ms "random_seed" () 0 () "  double              random_seed;" 2719 2  () () 0]
)
([ebrowse-ms "VarOrder" () 0 () "or<char>& ass, const std::vector<double>& act) :" 2789 0  () "or<char>& ass, const std::vector<double>& act) :" 2789]
[ebrowse-ms "newVar" () 2 () "    inline void newVar(int" 2990 0  () "void VarOrder::newVar(int" 3463]
[ebrowse-ms "newVar" () 2 () "    inline void newVar(void" 2961 0  () "void VarOrder::newVar(void" 3360]
[ebrowse-ms "select" () 2 () "    inline Var  select(double" 3239 0  () "Var VarOrder::select(double" 3735]
[ebrowse-ms "undo" () 2 () "    inline void undo(Var" 3121 0  () "void VarOrder::undo(Var" 3649]
[ebrowse-ms "update" () 2 () "    inline void update(Var" 3028 0  () "void VarOrder::update(Var" 3567]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ContextObjChain" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/context/context.cpp" ]
()()
([ebrowse-ms "name" () 4 () () 0 0  () "std::string ContextObjChain::name()" 3749]
[ebrowse-ms "restore" () 0 () () 0 0  () "ContextObjChain* ContextObjChain::restore(void" 2796]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ContextObjChain" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" "class ContextObjChain {" 3914"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" ]
()([ebrowse-ms "d_data" () 0 () "  ContextObj* d_data;" 4434 2  () () 0]
[ebrowse-ms "d_master" () 0 () "  ContextObj* d_master;" 4494 2  () () 0]
[ebrowse-ms "d_restore" () 0 () "  ContextObjChain* d_restore;" 4339 2  () () 0]
[ebrowse-ms "d_restoreChainNext" () 0 () "  ContextObjChain* d_restoreChainNext;" 4054 2  () () 0]
[ebrowse-ms "d_restoreChainPrev" () 0 () "  ContextObjChain** d_restoreChainPrev;" 4240 2  () () 0]
)
([ebrowse-ms "ContextObj" () 2 () "inline ContextObj::ContextObj(Context" 11555 0  () "inline ContextObj::ContextObj(Context" 11555]
[ebrowse-ms "ContextObjChain" () 0 () "    :" 4576 2  () "    :" 4576]
[ebrowse-ms "IF_DEBUG" () 0 () "  IF_DEBUG(std" 5335 0  () () 0]
[ebrowse-ms "addToChain" () 2 () "inline void Scope::addToChain(ContextObjChain" 10687 0  () "inline void Scope::addToChain(ContextObjChain" 10687]
[ebrowse-ms "isCurrent" () 6 () "inline bool Scope::isCurrent(void" 10589 0  () "inline bool Scope::isCurrent(void" 10589]
[ebrowse-ms "restore" () 2 () "inline void Scope::restore(void" 11014 0  () "inline void Scope::restore(void" 11014]
[ebrowse-ms "topScope" () 6 () "inline Scope* Scope::topScope()" 10941 0  () "inline Scope* Scope::topScope()" 10941]
[ebrowse-ms "~ContextObjChain" () 0 () "  ~ContextObjChain()" 4873 0  () "  ~ContextObjChain()" 4873]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 5282 0  () "  void operator delete(void" 5282]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 5081 0  () "  void operator delete(void" 5081]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 4994 0  () "  void operator delete(void" 4994]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 5209 0  () "  void* operator new(size_t" 5209]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 4905 0  () "  void* operator new(size_t" 4905]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "Derivation" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_derivation.cpp" ]
()()
([ebrowse-ms "checkDerivation" () 0 () () 0 0  () "void Derivation::checkDerivation(Clause" 4500]
[ebrowse-ms "computeRootReason" () 0 () () 0 0  () "int Derivation::computeRootReason(Lit" 1558]
[ebrowse-ms "createProof" () 0 () () 0 0  () "SAT::SatProof* Derivation::createProof(Clause" 8612]
[ebrowse-ms "createProof" () 0 () () 0 0  () "SAT::SatProof* Derivation::createProof()" 8322]
[ebrowse-ms "finish" () 0 () () 0 0  () "void Derivation::finish(Clause" 3636]
[ebrowse-ms "pop" () 0 () () 0 0  () "void Derivation::pop(int" 13522]
[ebrowse-ms "printDerivation" () 0 () () 0 0  () "void Derivation::printDerivation(Clause" 11706]
[ebrowse-ms "printDerivation" () 0 () () 0 0  () "void Derivation::printDerivation()" 11417]
[ebrowse-ms "push" () 0 () () 0 0  () "void Derivation::push(int" 13427]
[ebrowse-ms "~Derivation" () 0 () () 0 0  () "Derivation::~Derivation()" 1063]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Derivation" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_derivation.h" "  class Derivation {" 2143"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_derivation.h" ]
()([ebrowse-ms "d_clauses" () 0 () "    TClauses d_clauses;" 2377 2  () () 0]
[ebrowse-ms "d_emptyClause" () 0 () "    Clause* d_emptyClause;" 3083 2  () () 0]
[ebrowse-ms "d_inferences" () 0 () "    TInferences d_inferences;" 2927 2  () () 0]
[ebrowse-ms "d_inputClauses" () 0 () "    TInputClauses d_inputClauses;" 2704 2  () () 0]
[ebrowse-ms "d_removedClauses" () 0 () "    std::deque<Clause*> d_removedClauses;" 3009 2  () () 0]
[ebrowse-ms "d_unitClauses" () 0 () "    TClauses d_unitClauses;" 2831 2  () () 0]
)
([ebrowse-ms "Derivation" () 0 () "    Derivation() :" 3111 0  () "    Derivation() :" 3111]
[ebrowse-ms "checkDerivation" () 0 () "    void checkDerivation(Clause" 7312 0  () () 0]
[ebrowse-ms "computeRootReason" () 0 () "    int computeRootReason(Lit" 5820 0  () () 0]
[ebrowse-ms "createProof" () 0 () "    SAT::SatProof* createProof(Clause" 7455 0  () () 0]
[ebrowse-ms "createProof" () 0 () "    SAT::SatProof* createProof()" 7416 0  () () 0]
[ebrowse-ms "finish" () 0 () "    void finish(Clause" 6125 0  () () 0]
[ebrowse-ms "pop" () 0 () "    void pop(int" 7664 0  () () 0]
[ebrowse-ms "printDerivation" () 0 () "    void printDerivation()" 7252 0  () () 0]
[ebrowse-ms "printDerivation" () 0 () "    void printDerivation(Clause" 7165 0  () () 0]
[ebrowse-ms "push" () 0 () "    void push(int" 7559 0  () () 0]
[ebrowse-ms "registerClause" () 0 () "    void registerClause(Clause" 3431 0  () "    void registerClause(Clause" 3431]
[ebrowse-ms "registerInference" () 0 () "    void registerInference(int" 5073 0  () "    void registerInference(int" 5073]
[ebrowse-ms "registerInputClause" () 0 () "    void registerInputClause(int" 4527 0  () "    void registerInputClause(int" 4527]
[ebrowse-ms "removedClause" () 0 () "    void removedClause(Clause" 4831 0  () "    void removedClause(Clause" 4831]
[ebrowse-ms "~Derivation" () 0 () "    ~Derivation()" 3155 0  () () 0]
)
()
()
()
([ebrowse-ms "TClauses" () 0 () "  typedef Hash::hash_map<int, Clause*> TClauses;" 2204 0  () () 0]
[ebrowse-ms "TInferences" () 0 () "def Hash::hash_map<int, Inference*> TInferences;" 2308 0  () () 0]
[ebrowse-ms "TInputClauses" () 0 () "    typedef Hash::hash_set<int> TInputClauses;" 2251 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "TheoremValue" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem_value.h" "  class TheoremValue
  {" 1743"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem_value.h" ]
([ebrowse-ts [ebrowse-cs "RWTheoremValue" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem_value.h" "  class RWTheoremValue :" 13738"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem_value.h" ]
()([ebrowse-ms "d_assump" () 0 () "    Assumptions* d_assump;" 13965 1  () () 0]
[ebrowse-ms "d_lhs" () 0 () "    Expr d_lhs;" 13922 1  () () 0]
[ebrowse-ms "d_rhs" () 0 () "    Expr d_rhs;" 13938 1  () () 0]
)
([ebrowse-ms "RWTheoremValue" () 0 () "      :" 16098 2  () "      :" 16098]
[ebrowse-ms "RWTheoremValue" () 0 () "      :" 15748 2  () "      :" 15748]
[ebrowse-ms "getAssumptionsRef" () 5 () "    const Assumptions& getAssumptionsRef()" 17227 0  () "    const Assumptions& getAssumptionsRef()" 17227]
[ebrowse-ms "getExpr" () 5 () "    const Expr& getExpr()" 16379 2  () "    const Expr& getExpr()" 16379]
[ebrowse-ms "getLHS" () 5 () "    const Expr& getLHS()" 16729 2  () "    const Expr& getLHS()" 16729]
[ebrowse-ms "getMM" () 1 () "    MemoryManager* getMM()" 17378 0  () "    MemoryManager* getMM()" 17378]
[ebrowse-ms "getRHS" () 5 () "    const Expr& getRHS()" 16778 2  () "    const Expr& getRHS()" 16778]
[ebrowse-ms "init" () 0 () "    void init(const" 13997 2  () "    void init(const" 13997]
[ebrowse-ms "isRewrite" () 5 () "    bool isRewrite()" 17161 0  () "    bool isRewrite()" 17161]
[ebrowse-ms "~RWTheoremValue" () 0 () "    ~RWTheoremValue()" 16853 0  () "    ~RWTheoremValue()" 16853]
)
()
([ebrowse-ms "delete" () 0 () "    void operator delete(void" 17625 0  () "    void operator delete(void" 17625]
[ebrowse-ms "delete" () 0 () "    void operator delete(void" 17532 0  () "    void operator delete(void" 17532]
[ebrowse-ms "new" () 0 () "    void* operator new(size_t" 17437 0  () "    void* operator new(size_t" 17437]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "RegTheoremValue" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem_value.h" "  class RegTheoremValue :" 10433"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem_value.h" ]
()([ebrowse-ms "d_assump" () 0 () "    Assumptions d_assump;" 10562 1  () () 0]
)
([ebrowse-ms "RegTheoremValue" () 0 () "      :" 10686 2  () "      :" 10686]
[ebrowse-ms "getAssumptionsRef" () 5 () "    const Assumptions& getAssumptionsRef()" 12461 0  () "    const Assumptions& getAssumptionsRef()" 12461]
[ebrowse-ms "getMM" () 1 () "    MemoryManager* getMM()" 12541 0  () "    MemoryManager* getMM()" 12541]
[ebrowse-ms "~RegTheoremValue" () 0 () "    ~RegTheoremValue()" 12183 0  () "    ~RegTheoremValue()" 12183]
)
()
([ebrowse-ms "delete" () 0 () "    void operator delete(void" 12786 0  () "    void operator delete(void" 12786]
[ebrowse-ms "delete" () 0 () "    void operator delete(void" 12693 0  () "    void operator delete(void" 12693]
[ebrowse-ms "new" () 0 () "    void* operator new(size_t" 12598 0  () "    void* operator new(size_t" 12598]
)
()
()
()()
])([ebrowse-ms "d_cachedValue" () 0 () "    int d_cachedValue : 28;" 2567 1  () () 0]
[ebrowse-ms "d_clauselit" () 0 () "    bool d_clauselit : 1;" 2781 1  () () 0]
[ebrowse-ms "d_expand" () 0 () "    bool d_expand : 1;" 2696 1  () () 0]
[ebrowse-ms "d_flag" () 0 () "    unsigned d_flag;" 2491 1  () () 0]
[ebrowse-ms "d_isAssump" () 0 () "    bool d_isAssump : 1;" 2673 1  () () 0]
[ebrowse-ms "d_isSubst" () 0 () "    bool d_isSubst : 1;" 2592 1  () () 0]
[ebrowse-ms "d_proof" () 0 () "    Proof d_proof;" 2087 1  () () 0]
[ebrowse-ms "d_quantLevel" () 0 () "    unsigned d_quantLevel;" 2304 1  () () 0]
[ebrowse-ms "d_refcount" () 0 () "    unsigned d_refcount;" 2161 1  () () 0]
[ebrowse-ms "d_scopeLevel" () 0 () "    int d_scopeLevel;" 2231 1  () () 0]
[ebrowse-ms "d_thm" () 0 () "    Expr d_thm;" 2038 1  () () 0]
[ebrowse-ms "d_tm" () 0 () "    TheoremManager* d_tm;" 1975 1  () () 0]
)
([ebrowse-ms "TheoremValue" () 0 () "    TheoremValue(const TheoremValue& t) {" 3559 2  () "    TheoremValue(const TheoremValue& t) {" 3559]
[ebrowse-ms "TheoremValue" () 0 () "		 const Proof& pf, bool isAssump) :" 3231 2  () "		 const Proof& pf, bool isAssump) :" 3231]
[ebrowse-ms "clearAllFlags" () 0 () "    void clearAllFlags()" 3902 2  () "    void clearAllFlags()" 3902]
[ebrowse-ms "findQuantLevelDebug" () 0 () "    unsigned findQuantLevelDebug()" 7065 2  () "    unsigned findQuantLevelDebug()" 7065]
[ebrowse-ms "getAssumptionsRef" () 13 () "  virtual const Assumptions& getAssumptionsRef()" 9164 2  () () 0]
[ebrowse-ms "getCachedValue" () 4 () "    int getCachedValue()" 4102 2  () "    int getCachedValue()" 4102]
[ebrowse-ms "getExpandFlag" () 0 () "    bool getExpandFlag()" 4318 2  () "    bool getExpandFlag()" 4318]
[ebrowse-ms "getExpr" () 5 () "    virtual const Expr& getExpr()" 8578 2  () "    virtual const Expr& getExpr()" 8578]
[ebrowse-ms "getLHS" () 5 () "    virtual const Expr& getLHS()" 8635 2  () "    virtual const Expr& getLHS()" 8635]
[ebrowse-ms "getLitFlag" () 0 () "    bool getLitFlag()" 4440 2  () "    bool getLitFlag()" 4440]
[ebrowse-ms "getMM" () 9 () "    virtual MemoryManager* getMM()" 9646 0  () () 0]
[ebrowse-ms "getProof" () 0 () "    const Proof& getProof()" 9253 2  () "    const Proof& getProof()" 9253]
[ebrowse-ms "getQuantLevel" () 0 () "    unsigned getQuantLevel()" 4559 2  () "    unsigned getQuantLevel()" 4559]
[ebrowse-ms "getQuantLevelDebug" () 0 () "    unsigned getQuantLevelDebug()" 4619 2  () "    unsigned getQuantLevelDebug()" 4619]
[ebrowse-ms "getRHS" () 5 () "    virtual const Expr& getRHS()" 8890 2  () "    virtual const Expr& getRHS()" 8890]
[ebrowse-ms "getScope" () 0 () "    int getScope()" 4494 2  () "    int getScope()" 4494]
[ebrowse-ms "isAssump" () 4 () "    bool isAssump()" 9196 2  () "    bool isAssump()" 9196]
[ebrowse-ms "isFlagged" () 4 () "    bool isFlagged()" 3822 2  () "    bool isFlagged()" 3822]
[ebrowse-ms "isRewrite" () 5 () "    virtual bool isRewrite()" 8519 2  () "    virtual bool isRewrite()" 8519]
[ebrowse-ms "isSubst" () 0 () "    bool isSubst()" 4206 2  () "    bool isSubst()" 4206]
[ebrowse-ms "operator =" () 0 () "    TheoremValue& operator=(const" 3686 2  () "    TheoremValue& operator=(const" 3686]
[ebrowse-ms "recQuantLevel" () 0 () "    unsigned recQuantLevel(Expr" 4780 2  () "    unsigned recQuantLevel(Expr" 4780]
[ebrowse-ms "setCachedValue" () 0 () "    void setCachedValue(int" 4032 2  () "    void setCachedValue(int" 4032]
[ebrowse-ms "setExpandFlag" () 0 () "    void setExpandFlag(bool" 4257 2  () "    void setExpandFlag(bool" 4257]
[ebrowse-ms "setFlag" () 0 () "    void setFlag()" 3963 2  () "    void setFlag()" 3963]
[ebrowse-ms "setLitFlag" () 0 () "    void setLitFlag(bool" 4379 2  () "    void setLitFlag(bool" 4379]
[ebrowse-ms "setQuantLevel" () 0 () "    void setQuantLevel(unsigned" 4714 2  () "    void setQuantLevel(unsigned" 4714]
[ebrowse-ms "setSubst" () 0 () "    void setSubst()" 4165 2  () "    void setSubst()" 4165]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 9494 0  () "    std::string toString()" 9494]
[ebrowse-ms "~TheoremValue" () 1 () "    virtual ~TheoremValue()" 9330 0  () "    virtual ~TheoremValue()" 9330]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ostream" "std::std" 0() () 0() ]
([ebrowse-ts [ebrowse-cs "fdostream" "std" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/fdstream.h" "class fdostream :" 2144"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/fdstream.h" ]
()([ebrowse-ms "buf" () 0 () "    fdoutbuf buf;" 2197 1  () () 0]
)
([ebrowse-ms "fdostream" () 0 () "    fdostream (int fd) :" 2226 0  () "    fdostream (int fd) :" 2226]
)
()
()
()
()
()()
])()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNF_Rules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_rules.h" "  class CNF_Rules {" 856"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_rules.h" ]
([ebrowse-ts [ebrowse-cs "CNF_TheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_theorem_producer.h" "    :" 819"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_theorem_producer.h" ]
()([ebrowse-ms "d_flags" () 0 () "    const CLFlags& d_flags;" 896 2  () () 0]
[ebrowse-ms "d_smartClauses" () 0 () "    const bool& d_smartClauses;" 928 2  () () 0]
)
([ebrowse-ms "CNFAddUnit" () 1 () "    Theorem CNFAddUnit(const" 1365 0  () () 0]
[ebrowse-ms "CNFConvert" () 1 () "    Theorem CNFConvert(const" 1409 0  () () 0]
[ebrowse-ms "CNFITEtranslate" () 1 () "    Theorem CNFITEtranslate(const" 1635 0  () () 0]
[ebrowse-ms "CNF_TheoremProducer" () 0 () "      :" 978 0  () "      :" 978]
[ebrowse-ms "CNFtranslate" () 1 () "    Theorem CNFtranslate(const" 1522 0  () () 0]
[ebrowse-ms "getSmartClauses" () 0 () "    void getSmartClauses(const" 1174 0  () () 0]
[ebrowse-ms "ifLiftRule" () 1 () "    Theorem ifLiftRule(const" 1469 0  () () 0]
[ebrowse-ms "learnedClauses" () 1 () "    void learnedClauses(const" 1251 0  () () 0]
[ebrowse-ms "~CNF_TheoremProducer" () 0 () "    ~CNF_TheoremProducer()" 1138 0  () "    ~CNF_TheoremProducer()" 1138]
)
()
()
()
()
()()
])()
([ebrowse-ms "CNFAddUnit" () 9 () "    virtual Theorem CNFAddUnit(const" 1681 0  () () 0]
[ebrowse-ms "CNFConvert" () 9 () "    virtual Theorem CNFConvert(const" 1738 0  () () 0]
[ebrowse-ms "CNFITEtranslate" () 9 () "    virtual Theorem CNFITEtranslate(const" 1940 0  () () 0]
[ebrowse-ms "CNFtranslate" () 9 () "    virtual Theorem CNFtranslate(const" 1812 0  () () 0]
[ebrowse-ms "ifLiftRule" () 9 () "    virtual Theorem ifLiftRule(const" 1618 0  () () 0]
[ebrowse-ms "learnedClauses" () 9 () "    virtual void learnedClauses(const" 1383 0  () () 0]
[ebrowse-ms "~CNF_Rules" () 1 () "    virtual ~CNF_Rules()" 959 0  () "    virtual ~CNF_Rules()" 959]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryDatatype" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_theorem_producer.cpp" ]
()()
([ebrowse-ms "TheoryDatatype" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "ryDatatype::TheoryDatatype(TheoryCore* core)
  :" 1116]
[ebrowse-ms "addSharedTerm" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::addSharedTerm(const" 6359]
[ebrowse-ms "assertFact" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::assertFact(const" 6590]
[ebrowse-ms "canCollapse" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "bool TheoryDatatype::canCollapse(const" 39056]
[ebrowse-ms "checkSat" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::checkSat(bool" 7068]
[ebrowse-ms "checkType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::checkType(const" 12595]
[ebrowse-ms "computeModelTerm" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::computeModelTerm(const" 17708]
[ebrowse-ms "computeTCC" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Expr TheoryDatatype::computeTCC(const" 17784]
[ebrowse-ms "computeType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::computeType(const" 16010]
[ebrowse-ms "createProofRules" () 0 () () 0 0  () "TheoryDatatype::createProofRules()" 1074]
[ebrowse-ms "dataType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Expr TheoryDatatype::dataType(const" 27120]
[ebrowse-ms "datatypeConsExpr" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Expr TheoryDatatype::datatypeConsExpr(const" 33964]
[ebrowse-ms "datatypeSelExpr" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Expr TheoryDatatype::datatypeSelExpr(const" 34466]
[ebrowse-ms "datatypeTestExpr" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Expr TheoryDatatype::datatypeTestExpr(const" 34866]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Cardinality TheoryDatatype::finiteTypeInfo(Expr" 13184]
[ebrowse-ms "getConsForTester" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Expr TheoryDatatype::getConsForTester(const" 35613]
[ebrowse-ms "getConsPos" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "unsigned TheoryDatatype::getConsPos(const" 35920]
[ebrowse-ms "getConstant" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Expr TheoryDatatype::getConstant(const" 36504]
[ebrowse-ms "getReachablePredicate" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" " Op& TheoryDatatype::getReachablePredicate(const" 38810]
[ebrowse-ms "getSelectorInfo" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "unsigned>& TheoryDatatype::getSelectorInfo(const" 35305]
[ebrowse-ms "initializeLabels" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::initializeLabels(const" 3539]
[ebrowse-ms "instantiate" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::instantiate(const" 2119]
[ebrowse-ms "mergeLabels" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::mergeLabels(const" 5593]
[ebrowse-ms "mergeLabels" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::mergeLabels(const" 4771]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Expr TheoryDatatype::parseExprOp(const" 21705]
[ebrowse-ms "print" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "ExprStream& TheoryDatatype::print(ExprStream" 18720]
[ebrowse-ms "rewrite" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Theorem TheoryDatatype::rewrite(const" 9392]
[ebrowse-ms "setup" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::setup(const" 9784]
[ebrowse-ms "solve" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "Theorem TheoryDatatype::solve(const" 12332]
[ebrowse-ms "update" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "void TheoryDatatype::update(const" 10286]
[ebrowse-ms "~TheoryDatatype" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype.cpp" "TheoryDatatype::~TheoryDatatype()" 2056]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Inference" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_derivation.cpp" ]
()()
([ebrowse-ms "toString" () 4 () () 0 0  () "std::string Inference::toString()" 781]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Inference" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_derivation.h" "  class Inference {" 971"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_derivation.h" ]
()([ebrowse-ms "d_start" () 0 () "    int d_start;" 1090 2  () () 0]
[ebrowse-ms "d_steps" () 0 () "    TSteps d_steps;" 1235 2  () () 0]
)
([ebrowse-ms "Inference" () 0 () "    Inference(int clauseID) :" 1264 0  () "    Inference(int clauseID) :" 1264]
[ebrowse-ms "add" () 0 () "    void add(Lit" 1496 0  () "    void add(Lit" 1496]
[ebrowse-ms "add" () 0 () "    void add(Lit" 1394 0  () "    void add(Lit" 1394]
[ebrowse-ms "getStart" () 4 () "    int getStart()" 1576 0  () "    int getStart()" 1576]
[ebrowse-ms "getSteps" () 4 () "    const TSteps& getSteps()" 1642 0  () "    const TSteps& getSteps()" 1642]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 1780 0  () () 0]
)
()
()
()
([ebrowse-ms "TSteps" () 0 () "ypedef std::vector<std::pair<Lit, int> > TSteps;" 1035 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "ExprManager" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" "  class CVC_DLL ExprManager {" 1509"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" ]
()([ebrowse-ms "d_bool" () 0 () "    Expr d_bool;" 4341 2  () () 0]
[ebrowse-ms "d_cm" () 0 () "    ContextManager* d_cm;" 1713 2  () () 0]
[ebrowse-ms "d_dagPrinting" () 0 () "    const bool* d_dagPrinting;" 3430 2  () () 0]
[ebrowse-ms "d_disableGC" () 0 () "    bool d_disableGC;" 5115 2  () () 0]
[ebrowse-ms "d_emptyVec" () 0 () "    std::vector<Expr> d_emptyVec;" 4490 2  () () 0]
[ebrowse-ms "d_exprSet" () 0 () "    ExprValueSet d_exprSet;" 4092 2  () () 0]
[ebrowse-ms "d_false" () 0 () "    Expr d_false;" 4359 2  () () 0]
[ebrowse-ms "d_flagCounter" () 0 () "    unsigned d_flagCounter;" 1957 2  () () 0]
[ebrowse-ms "d_inGC" () 0 () "    bool d_inGC;" 5680 2  () () 0]
[ebrowse-ms "d_indent" () 0 () "    int d_indent;" 2960 2  () () 0]
[ebrowse-ms "d_indentTransient" () 0 () "    int d_indentTransient;" 3130 2  () () 0]
[ebrowse-ms "d_index" () 0 () "    ExprIndex d_index;" 1891 2  () () 0]
[ebrowse-ms "d_inputLang" () 0 () "    const std::string* d_inputLang;" 3287 2  () () 0]
[ebrowse-ms "d_kindMap" () 0 () "    std::hash_map<int, std::string> d_kindMap;" 2083 2  () () 0]
[ebrowse-ms "d_kindMapByName" () 0 () "p<std::string, int, HashString> d_kindMapByName;" 2484 2  () () 0]
[ebrowse-ms "d_lineWidth" () 0 () "    const int* d_lineWidth;" 3217 2  () () 0]
[ebrowse-ms "d_mm" () 0 () "    std::vector<MemoryManager*> d_mm;" 4191 2  () () 0]
[ebrowse-ms "d_mmFlag" () 0 () "    const std::string d_mmFlag;" 3541 2  () () 0]
[ebrowse-ms "d_notifyObj" () 0 () "    ExprManagerNotifyObj* d_notifyObj;" 1841 2  () () 0]
[ebrowse-ms "d_nullExpr" () 0 () "    Expr d_nullExpr;" 4568 2  () () 0]
[ebrowse-ms "d_outputLang" () 0 () "    const std::string* d_outputLang;" 3359 2  () () 0]
[ebrowse-ms "d_pending" () 0 () "    std::deque<ExprValue*> d_pending;" 5755 2  () () 0]
[ebrowse-ms "d_pointerHash" () 0 () "    std::hash<void*> d_pointerHash;" 4273 2  () () 0]
[ebrowse-ms "d_postponeGC" () 0 () "    bool d_postponeGC;" 5516 2  () () 0]
[ebrowse-ms "d_postponed" () 0 () "    std::vector<ExprValue*> d_postponed;" 5615 2  () () 0]
[ebrowse-ms "d_prettyPrinter" () 0 () "    PrettyPrinter *d_prettyPrinter;" 2622 2  () () 0]
[ebrowse-ms "d_printDepth" () 0 () "    const int* d_printDepth;" 2835 2  () () 0]
[ebrowse-ms "d_rebuildCache" () 0 () "    ExprHashMap<Expr> d_rebuildCache;" 5816 2  () () 0]
[ebrowse-ms "d_simpCacheTagCurrent" () 0 () "    unsigned d_simpCacheTagCurrent;" 4873 2  () () 0]
[ebrowse-ms "d_tm" () 0 () "    TheoremManager* d_tm;" 1772 2  () () 0]
[ebrowse-ms "d_true" () 0 () "    Expr d_true;" 4376 2  () () 0]
[ebrowse-ms "d_typeComputer" () 0 () "    TypeComputer* d_typeComputer;" 6482 2  () () 0]
[ebrowse-ms "d_typeKinds" () 0 () "    std::hash_set<int> d_typeKinds;" 2164 2  () () 0]
[ebrowse-ms "d_withIndentation" () 0 () "    const bool* d_withIndentation;" 2912 2  () () 0]
)
([ebrowse-ms "ExprManager" () 0 () "nager(ContextManager* cm, const CLFlags& flags);" 8024 0  () () 0]
[ebrowse-ms "IF_DEBUG" () 0 () "    IF_DEBUG(bool" 5834 2  () "    IF_DEBUG(bool" 5834]
[ebrowse-ms "andExpr" () 0 () "    Expr andExpr(const" 10954 0  () "    Expr andExpr(const" 10954]
[ebrowse-ms "boolExpr" () 0 () "    const Expr& boolExpr()" 9508 0  () "    const Expr& boolExpr()" 9508]
[ebrowse-ms "checkType" () 0 () "    void checkType(const" 7364 2  () () 0]
[ebrowse-ms "clear" () 0 () "    void clear()" 8578 0  () () 0]
[ebrowse-ms "clearFlags" () 0 () "    void clearFlags()" 9420 0  () "    void clearFlags()" 9420]
[ebrowse-ms "computeType" () 0 () "    void computeType(const" 7284 2  () () 0]
[ebrowse-ms "dagPrinting" () 4 () "    bool dagPrinting()" 13301 0  () "    bool dagPrinting()" 13301]
[ebrowse-ms "falseExpr" () 0 () "    const Expr& falseExpr()" 9574 0  () "    const Expr& falseExpr()" 9574]
[ebrowse-ms "finiteTypeInfo" () 0 () "    Cardinality finiteTypeInfo(Expr" 7879 2  () () 0]
[ebrowse-ms "gc" () 0 () "    void gc(ExprValue" 8772 0  () () 0]
[ebrowse-ms "getCM" () 4 () "    ContextManager* getCM()" 11284 0  () "    ContextManager* getCM()" 11284]
[ebrowse-ms "getCurrentContext" () 4 () "    Context* getCurrentContext()" 11396 0  () "    Context* getCurrentContext()" 11396]
[ebrowse-ms "getEmptyVector" () 0 () "    const std::vector<Expr>& getEmptyVector()" 9760 0  () "    const std::vector<Expr>& getEmptyVector()" 9760]
[ebrowse-ms "getFlag" () 0 () "    unsigned getFlag()" 7011 2  () "    unsigned getFlag()" 7011]
[ebrowse-ms "getInputLang" () 4 () "    InputLanguage getInputLang()" 13145 0  () () 0]
[ebrowse-ms "getKind" () 0 () "    int getKind(const" 14883 0  () () 0]
[ebrowse-ms "getKindName" () 0 () "    const std::string& getKindName(int" 14775 0  () () 0]
[ebrowse-ms "getMM" () 0 () "    MemoryManager* getMM(size_t" 11783 0  () "    MemoryManager* getMM(size_t" 11783]
[ebrowse-ms "getMemory" () 0 () "    unsigned long getMemory(int" 15267 0  () () 0]
[ebrowse-ms "getNullExpr" () 0 () "    const Expr& getNullExpr()" 9869 0  () "    const Expr& getNullExpr()" 9869]
[ebrowse-ms "getOutputLang" () 4 () "    InputLanguage getOutputLang()" 13231 0  () () 0]
[ebrowse-ms "getPrinter" () 4 () "    PrettyPrinter* getPrinter()" 13457 0  () "    PrettyPrinter* getPrinter()" 13457]
[ebrowse-ms "getSimpCacheTag" () 4 () "    unsigned getSimpCacheTag()" 11964 0  () "    unsigned getSimpCacheTag()" 11964]
[ebrowse-ms "getTM" () 4 () "    TheoremManager* getTM()" 11667 0  () "    TheoremManager* getTM()" 11667]
[ebrowse-ms "hash" () 6 () "    size_t hash(const" 11207 0  () "inline size_t ExprManager::hash(const" 19271]
[ebrowse-ms "hash" () 6 () "    size_t hash(const" 2645 2  () "inline size_t ExprManager::hash(const" 16313]
[ebrowse-ms "incIndent" () 0 () "    int incIndent(int" 12934 0  () () 0]
[ebrowse-ms "indent" () 0 () "    int indent(int" 12714 0  () () 0]
[ebrowse-ms "indent" () 4 () "    int indent()" 12587 0  () "    int indent()" 12587]
[ebrowse-ms "installExprValue" () 0 () "    void installExprValue(ExprValue" 4605 2  () () 0]
[ebrowse-ms "invalidateSimpCache" () 0 () "    void invalidateSimpCache()" 12081 0  () "    void invalidateSimpCache()" 12081]
[ebrowse-ms "isActive" () 0 () "    bool isActive()" 8673 0  () () 0]
[ebrowse-ms "isKindRegistered" () 0 () "    bool isKindRegistered(int" 14477 0  () "    bool isKindRegistered(int" 14477]
[ebrowse-ms "isTypeKind" () 0 () "    bool isTypeKind(int" 14587 0  () "    bool isTypeKind(int" 14587]
[ebrowse-ms "lastIndex" () 0 () "    ExprIndex lastIndex()" 9323 0  () "    ExprIndex lastIndex()" 9323]
[ebrowse-ms "lineWidth" () 4 () "    int lineWidth()" 12507 0  () "    int lineWidth()" 12507]
[ebrowse-ms "newBoundVarExpr" () 2 () "    Expr newBoundVarExpr(const" 10538 0  () "inline Expr ExprManager::newBoundVarExpr(const" 18065]
[ebrowse-ms "newBoundVarExpr" () 2 () "    Expr newBoundVarExpr(const" 10420 0  () "inline Expr ExprManager::newBoundVarExpr(const" 17634]
[ebrowse-ms "newBoundVarExpr" () 2 () "    Expr newBoundVarExpr(const" 10345 0  () "inline Expr ExprManager::newBoundVarExpr(const" 17441]
[ebrowse-ms "newClosureExpr" () 2 () "    Expr newClosureExpr(int" 10757 0  () "inline Expr ExprManager::newClosureExpr(int" 18748]
[ebrowse-ms "newClosureExpr" () 2 () "    Expr newClosureExpr(int" 10649 0  () "inline Expr ExprManager::newClosureExpr(int" 18501]
[ebrowse-ms "newExpr" () 0 () "    Expr newExpr(ExprValue" 10006 0  () "    Expr newExpr(ExprValue" 10006]
[ebrowse-ms "newExprValue" () 0 () "    ExprValue* newExprValue(ExprValue" 6936 2  () () 0]
[ebrowse-ms "newKind" () 0 () "    void newKind(int" 13993 0  () () 0]
[ebrowse-ms "newLeafExpr" () 2 () "    Expr newLeafExpr(const" 10074 0  () "inline Expr ExprManager::newLeafExpr(const" 16478]
[ebrowse-ms "newRatExpr" () 2 () "    Expr newRatExpr(const" 10155 0  () "inline Expr ExprManager::newRatExpr(const" 16915]
[ebrowse-ms "newSkolemExpr" () 2 () "    Expr newSkolemExpr(const" 10198 0  () "inline Expr ExprManager::newSkolemExpr(const" 17027]
[ebrowse-ms "newStringExpr" () 2 () "    Expr newStringExpr(const" 10112 0  () "inline Expr ExprManager::newStringExpr(const" 16805]
[ebrowse-ms "newSymbolExpr" () 2 () "    Expr newSymbolExpr(const" 10287 0  () "inline Expr ExprManager::newSymbolExpr(const" 17310]
[ebrowse-ms "newVarExpr" () 2 () "    Expr newVarExpr(const" 10241 0  () "inline Expr ExprManager::newVarExpr(const" 17200]
[ebrowse-ms "nextFlag" () 0 () "    unsigned nextFlag()" 7140 2  () "    unsigned nextFlag()" 7140]
[ebrowse-ms "nextIndex" () 0 () "    ExprIndex nextIndex()" 9275 0  () "    ExprIndex nextIndex()" 9275]
[ebrowse-ms "orExpr" () 0 () "    Expr orExpr(const" 11049 0  () "    Expr orExpr(const" 11049]
[ebrowse-ms "postponeGC" () 0 () "    void postponeGC()" 8886 0  () "    void postponeGC()" 8886]
[ebrowse-ms "printDepth" () 4 () "    int printDepth()" 12290 0  () "    int printDepth()" 12290]
[ebrowse-ms "rebuild" () 0 () "    Expr rebuild(const" 9142 0  () () 0]
[ebrowse-ms "rebuildRec" () 0 () "    Expr rebuildRec(const" 6822 2  () () 0]
[ebrowse-ms "registerPrettyPrinter" () 0 () "    void registerPrettyPrinter(PrettyPrinter" 14240 0  () () 0]
[ebrowse-ms "registerSubclass" () 0 () "    size_t registerSubclass(size_t" 15186 0  () () 0]
[ebrowse-ms "registerTypeComputer" () 0 () "    void registerTypeComputer(TypeComputer" 12185 0  () "    void registerTypeComputer(TypeComputer" 12185]
[ebrowse-ms "restoreIndent" () 0 () "    void restoreIndent()" 13034 0  () "    void restoreIndent()" 13034]
[ebrowse-ms "resumeGC" () 0 () "    void resumeGC()" 9017 0  () () 0]
[ebrowse-ms "scopelevel" () 0 () "    int scopelevel()" 11493 0  () "    int scopelevel()" 11493]
[ebrowse-ms "setTM" () 0 () "    void setTM(TheoremManager" 11586 0  () "    void setTM(TheoremManager" 11586]
[ebrowse-ms "trueExpr" () 0 () "    const Expr& trueExpr()" 9639 0  () "    const Expr& trueExpr()" 9639]
[ebrowse-ms "unregisterPrettyPrinter" () 0 () "    void unregisterPrettyPrinter()" 14347 0  () () 0]
[ebrowse-ms "withIndentation" () 4 () "    bool withIndentation()" 12391 0  () "    bool withIndentation()" 12391]
[ebrowse-ms "~ExprManager" () 0 () "    ~ExprManager()" 8090 0  () () 0]
)
()
()
()
([ebrowse-ms "ExprValueSet" () 0 () "hash_set<ExprValue*, HashEV, EqEV> ExprValueSet;" 4019 2  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "ExprManager" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_manager.cpp" ]
()()
([ebrowse-ms "ExprManager" () 0 () () 0 0  () "er of buckets is 1024 (it's kinda arbitrary)
  :" 1778]
[ebrowse-ms "checkType" () 0 () () 0 0  () "void ExprManager::checkType(const" 14539]
[ebrowse-ms "clear" () 0 () () 0 0  () "void ExprManager::clear()" 4650]
[ebrowse-ms "computeType" () 0 () () 0 0  () "void ExprManager::computeType(const" 14316]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  () "Cardinality ExprManager::finiteTypeInfo(Expr" 14779]
[ebrowse-ms "gc" () 0 () () 0 0  () "void ExprManager::gc(ExprValue" 6132]
[ebrowse-ms "getInputLang" () 4 () () 0 0  () "ExprManager::getInputLang()" 11097]
[ebrowse-ms "getKind" () 0 () () 0 0  () "int ExprManager::getKind(const" 12806]
[ebrowse-ms "getKindName" () 0 () () 0 0  () "const string& ExprManager::getKindName(int" 12579]
[ebrowse-ms "getMemory" () 0 () () 0 0  () "unsigned long ExprManager::getMemory(int" 13351]
[ebrowse-ms "getOutputLang" () 4 () () 0 0  () "ExprManager::getOutputLang()" 11188]
[ebrowse-ms "incIndent" () 0 () () 0 0  () "ExprManager::incIndent(int" 10905]
[ebrowse-ms "indent" () 0 () () 0 0  () "ExprManager::indent(int" 10602]
[ebrowse-ms "installExprValue" () 0 () () 0 0  () "void ExprManager::installExprValue(ExprValue" 952]
[ebrowse-ms "isActive" () 0 () () 0 0  () "bool ExprManager::isActive()" 6033]
[ebrowse-ms "newExprValue" () 0 () () 0 0  () "ExprValue* ExprManager::newExprValue(ExprValue" 8978]
[ebrowse-ms "newKind" () 0 () () 0 0  () "void ExprManager::newKind(int" 11348]
[ebrowse-ms "rebuild" () 0 () () 0 0  () "Expr ExprManager::rebuild(const" 7050]
[ebrowse-ms "rebuildRec" () 0 () () 0 0  () "Expr ExprManager::rebuildRec(const" 7983]
[ebrowse-ms "registerPrettyPrinter" () 0 () () 0 0  () "ExprManager::registerPrettyPrinter(PrettyPrinter" 12157]
[ebrowse-ms "registerSubclass" () 0 () () 0 0  () "size_t ExprManager::registerSubclass(size_t" 13051]
[ebrowse-ms "resumeGC" () 0 () () 0 0  () "ExprManager::resumeGC()" 6724]
[ebrowse-ms "unregisterPrettyPrinter" () 0 () () 0 0  () "void ExprManager::unregisterPrettyPrinter()" 12388]
[ebrowse-ms "~ExprManager" () 0 () () 0 0  () "ExprManager::~ExprManager()" 4185]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TCMapPair" "CVC3::TheoryUF" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_uf.h" "  typedef struct TCMapPair {" 1444() ]
()([ebrowse-ms "appearsFirstMap" () 0 () "    ExprMap<CDList<Theorem>*> appearsFirstMap;" 1491 0  () () 0]
[ebrowse-ms "appearsSecondMap" () 0 () "    ExprMap<CDList<Theorem>*> appearsSecondMap;" 1539 0  () () 0]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Statistics" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "  class Statistics {" 5323"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/statistics.cpp" ]
()([ebrowse-ms "d_counters" () 0 () "    StatCounterMap d_counters;" 5544 2  () () 0]
[ebrowse-ms "d_flags" () 0 () "    StatFlagMap d_flags;" 5513 2  () () 0]
[ebrowse-ms "d_os" () 0 () "    std::ostream* d_os;" 5380 2  () () 0]
)
([ebrowse-ms "Statistics" () 0 () "    Statistics() {" 5590 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "    Statistics() {" 5590]
[ebrowse-ms "counter" () 0 () "    StatCounter counter(const" 5919 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "    StatCounter counter(const" 5919]
[ebrowse-ms "flag" () 0 () "    StatFlag flag(const" 5828 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "    StatFlag flag(const" 5828]
[ebrowse-ms "printAll" () 4 () "    std::ostream& printAll(std" 6054 0  () "ostream& Statistics::printAll(ostream" 906]
[ebrowse-ms "~Statistics" () 0 () "    ~Statistics()" 5665 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "    ~Statistics()" 5665]
)
()
()
([ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 6115 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
)
([ebrowse-ms "StatCounterMap" () 0 () "pedef std::map<std::string, int> StatCounterMap;" 5488 2  () () 0]
[ebrowse-ms "StatFlagMap" () 0 () "typedef std::map<std::string, bool> StatFlagMap;" 5433 2  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "DPLLTMiniSat" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_minisat.cpp" ]
()()
([ebrowse-ms "DPLLTMiniSat" () 0 () () 0 0  () "			   bool printStats, bool createProof)
  :" 885]
[ebrowse-ms "addAssertion" () 0 () () 0 0  () "void DPLLTMiniSat::addAssertion(const" 7250]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "QueryResult DPLLTMiniSat::checkSat(const" 4414]
[ebrowse-ms "continueCheck" () 0 () () 0 0  () "QueryResult DPLLTMiniSat::continueCheck(const" 5027]
[ebrowse-ms "getActiveSolver" () 0 () () 0 0  () "MiniSat::Solver* DPLLTMiniSat::getActiveSolver()" 1336]
[ebrowse-ms "getCurAssignments" () 0 () () 0 0  () "ctor<SAT::Lit> DPLLTMiniSat::getCurAssignments()" 7053]
[ebrowse-ms "getCurClauses" () 0 () () 0 0  () "vector<SAT::Lit> > DPLLTMiniSat::getCurClauses()" 7166]
[ebrowse-ms "getSatProof" () 0 () () 0 0  () "VC3::Proof DPLLTMiniSat::getSatProof(CNF_Manager" 11643]
[ebrowse-ms "getValue" () 0 () () 0 0  () "Var::Val DPLLTMiniSat::getValue(Var" 7876]
[ebrowse-ms "pop" () 0 () () 0 0  () "void DPLLTMiniSat::pop()" 6197]
[ebrowse-ms "push" () 0 () () 0 0  () "void DPLLTMiniSat::push()" 5907]
[ebrowse-ms "pushSolver" () 0 () () 0 0  () "void DPLLTMiniSat::pushSolver()" 1479]
[ebrowse-ms "search" () 0 () () 0 0  () "QueryResult DPLLTMiniSat::search()" 1711]
[ebrowse-ms "~DPLLTMiniSat" () 0 () () 0 0  () "DPLLTMiniSat::~DPLLTMiniSat()" 1110]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprHashMap" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" "  class ExprHashMap {" 7262"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" ]
()([ebrowse-ms "d_map" () 0 () "    ExprHashMapType d_map;" 7379 2  () () 0]
)
([ebrowse-ms "ExprHashMap" () 0 () "    ExprHashMap(const ExprHashMap& map):" 10829 0  () "    ExprHashMap(const ExprHashMap& map):" 10829]
[ebrowse-ms "ExprHashMap" () 0 () "    ExprHashMap(size_t n):" 10766 0  () "    ExprHashMap(size_t n):" 10766]
[ebrowse-ms "ExprHashMap" () 0 () "    ExprHashMap() {" 10678 0  () "    ExprHashMap() {" 10678]
[ebrowse-ms "begin" () 4 () "    const_iterator begin()" 11664 0  () "    const_iterator begin()" 11664]
[ebrowse-ms "begin" () 0 () "    iterator begin()" 11548 0  () "    iterator begin()" 11548]
[ebrowse-ms "clear" () 0 () "    void clear()" 11129 0  () "    void clear()" 11129]
[ebrowse-ms "count" () 4 () "    size_t count(const" 11013 0  () "    size_t count(const" 11013]
[ebrowse-ms "empty" () 4 () "    bool empty()" 10908 0  () "    bool empty()" 10908]
[ebrowse-ms "end" () 4 () "    const_iterator end()" 11737 0  () "    const_iterator end()" 11737]
[ebrowse-ms "end" () 0 () "    iterator end()" 11603 0  () "    iterator end()" 11603]
[ebrowse-ms "erase" () 32 () "      void erase(InputIterator" 11439 0  () "      void erase(InputIterator" 11439]
[ebrowse-ms "erase" () 0 () "    void erase(const" 11234 0  () "    void erase(const" 11234]
[ebrowse-ms "find" () 4 () "    const_iterator find(const" 11882 0  () "    const_iterator find(const" 11882]
[ebrowse-ms "find" () 0 () "    iterator find(const" 11807 0  () "    iterator find(const" 11807]
[ebrowse-ms "insert" () 32 () "      void insert(InputIterator" 11330 0  () "      void insert(InputIterator" 11330]
[ebrowse-ms "insert" () 0 () "    void insert(const" 11171 0  () "    void insert(const" 11171]
[ebrowse-ms "operator []" () 0 () "    Data& operator[](const" 11082 0  () "    Data& operator[](const" 11082]
[ebrowse-ms "size" () 4 () "    size_t size()" 10958 0  () "    size_t size()" 10958]
)
()
()
()
([ebrowse-ms "ExprHashMapType" () 0 () "pedef std::hash_map<Expr, Data> ExprHashMapType;" 7329 2  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "Theorem" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "template<> struct hash<CVC3::Theorem>
{" 15206"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "  size_t operator()(const" 15232 0  () "  size_t operator()(const" 15232]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Theorem" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  class CVC_DLL Theorem {" 2570"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem.cpp" ]
()()
([ebrowse-ms "GetSatAssumptions" () 4 () "    void GetSatAssumptions(std" 6462 0  () "void Theorem::GetSatAssumptions(vector" 8709]
[ebrowse-ms "GetSatAssumptionsRec" () 4 () "    void GetSatAssumptionsRec(std" 4896 2  () "void Theorem::GetSatAssumptionsRec(vector" 8134]
[ebrowse-ms "Theorem" () 0 () "    Theorem():" 5666 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    Theorem():" 5666]
[ebrowse-ms "Theorem" () 0 () "    Theorem(TheoremValue* thm) :" 3944 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    Theorem(TheoremValue* thm) :" 3944]
[ebrowse-ms "Theorem" () 0 () "    Theorem(const Theorem &th);" 5722 0  () "  Theorem::Theorem(const Expr& e) :" 5014]
[ebrowse-ms "Theorem" () 0 () "            int scope = -1);" 4386 2  () "                   int scope) {" 4111]
[ebrowse-ms "Theorem" () 0 () "oof& pf, bool isAssump = false, int scope = -1);" 4050 2  () "		   bool isAssump, int scope) {" 3410]
[ebrowse-ms "clearAllFlags" () 4 () "    void clearAllFlags()" 8152 0  () "  void Theorem::clearAllFlags()" 12115]
[ebrowse-ms "exprValue" () 4 () "    ExprValue* exprValue()" 4962 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    ExprValue* exprValue()" 4962]
[ebrowse-ms "getAssumptionsAndCong" () 4 () "    void getAssumptionsAndCong(std" 6889 0  () "void Theorem::getAssumptionsAndCong(vector" 10510]
[ebrowse-ms "getAssumptionsAndCongRec" () 4 () "    void getAssumptionsAndCongRec(std" 4764 2  () "void Theorem::getAssumptionsAndCongRec(set" 9076]
[ebrowse-ms "getAssumptionsRec" () 4 () "    void getAssumptionsRec(std" 4694 2  () "void Theorem::getAssumptionsRec(set" 7356]
[ebrowse-ms "getAssumptionsRef" () 4 () "    const Assumptions& getAssumptionsRef()" 7082 0  () "const Assumptions& Theorem::getAssumptionsRef()" 11023]
[ebrowse-ms "getCachedValue" () 4 () "    int getCachedValue()" 9307 0  () "  int Theorem::getCachedValue()" 12794]
[ebrowse-ms "getExpandFlag" () 4 () "    bool getExpandFlag()" 8523 0  () "  bool Theorem::getExpandFlag()" 13582]
[ebrowse-ms "getExpr" () 4 () "    Expr getExpr()" 6359 0  () "  Expr Theorem::getExpr()" 6574]
[ebrowse-ms "getLHS" () 4 () "    const Expr& getLHS()" 6391 0  () "  const Expr& Theorem::getLHS()" 6849]
[ebrowse-ms "getLeafAssumptions" () 4 () "    void getLeafAssumptions(std" 6701 0  () "void Theorem::getLeafAssumptions(vector" 7713]
[ebrowse-ms "getLitFlag" () 4 () "    bool getLitFlag()" 8847 0  () "  bool Theorem::getLitFlag()" 14039]
[ebrowse-ms "getProof" () 4 () "    Proof getProof()" 7208 0  () "  Proof Theorem::getProof()" 11493]
[ebrowse-ms "getQuantLevel" () 4 () "    unsigned getQuantLevel()" 7443 0  () "  unsigned Theorem::getQuantLevel()" 14502]
[ebrowse-ms "getQuantLevelDebug" () 4 () "    unsigned getQuantLevelDebug()" 7485 0  () "  unsigned Theorem::getQuantLevelDebug()" 14731]
[ebrowse-ms "getRHS" () 4 () "    const Expr& getRHS()" 6423 0  () "  const Expr& Theorem::getRHS()" 7039]
[ebrowse-ms "getScope" () 4 () "    int getScope()" 7354 0  () "  int Theorem::getScope()" 14340]
[ebrowse-ms "hash" () 4 () "    size_t hash()" 7618 0  () "  size_t Theorem::hash()" 15214]
[ebrowse-ms "isAbsLiteral" () 4 () "    bool isAbsLiteral()" 8920 0  () "  bool Theorem::isAbsLiteral()" 14264]
[ebrowse-ms "isAssump" () 4 () "    bool isAssump()" 6190 0  () "  bool Theorem::isAssump()" 11241]
[ebrowse-ms "isFlagged" () 4 () "    bool isFlagged()" 8067 0  () "  bool Theorem::isFlagged()" 11887]
[ebrowse-ms "isNull" () 4 () "    bool isNull()" 6001 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    bool isNull()" 6001]
[ebrowse-ms "isRefl" () 4 () "    bool isRefl()" 6250 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    bool isRefl()" 6250]
[ebrowse-ms "isRewrite" () 4 () "    bool isRewrite()" 6111 0  () "  bool Theorem::isRewrite()" 6380]
[ebrowse-ms "isSubst" () 4 () "    bool isSubst()" 8379 0  () "  bool Theorem::isSubst()" 13172]
[ebrowse-ms "matches" () 4 () "    bool matches(const" 9174 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    bool matches(const" 9174]
[ebrowse-ms "operator =" () 0 () "    Theorem& operator=(const" 5792 0  () "  Theorem& Theorem::operator=(const" 2498]
[ebrowse-ms "pprintx" () 4 () "    void pprintx()" 7772 0  () "  void Theorem::pprintx()" 5809]
[ebrowse-ms "pprintxnodag" () 4 () "    void pprintxnodag()" 7803 0  () "  void Theorem::pprintxnodag()" 5870]
[ebrowse-ms "print" () 4 () "    std::ostream& print(std" 9447 0  () "  ostream& Theorem::print(ostream" 16960]
[ebrowse-ms "print" () 4 () "    void print()" 7832 0  () "  void Theorem::print()" 5929]
[ebrowse-ms "printDebug" () 4 () "    void printDebug()" 5353 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    void printDebug()" 5353]
[ebrowse-ms "printx" () 4 () "    void printx()" 7716 0  () "  void Theorem::printx()" 5690]
[ebrowse-ms "printxnodag" () 4 () "    void printxnodag()" 7746 0  () "  void Theorem::printxnodag()" 5749]
[ebrowse-ms "proves" () 4 () "    bool proves(const" 9094 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    bool proves(const" 9094]
[ebrowse-ms "recursivePrint" () 4 () "    void recursivePrint(int" 4652 2  () "  void Theorem::recursivePrint(int" 15317]
[ebrowse-ms "refutes" () 4 () "    bool refutes(const" 8951 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    bool refutes(const" 8951]
[ebrowse-ms "setCachedValue" () 4 () "    void setCachedValue(int" 9268 0  () "  void Theorem::setCachedValue(int" 12544]
[ebrowse-ms "setExpandFlag" () 4 () "    void setExpandFlag(bool" 8449 0  () "  void Theorem::setExpandFlag(bool" 13348]
[ebrowse-ms "setFlag" () 4 () "    void setFlag()" 8209 0  () "  void Theorem::setFlag()" 12333]
[ebrowse-ms "setLitFlag" () 4 () "    void setLitFlag(bool" 8683 0  () "  void Theorem::setLitFlag(bool" 13817]
[ebrowse-ms "setQuantLevel" () 0 () "    void setQuantLevel(unsigned" 7579 0  () "  void Theorem::setQuantLevel(unsigned" 14964]
[ebrowse-ms "setSubst" () 4 () "    void setSubst()" 8306 0  () "  void Theorem::setSubst()" 13029]
[ebrowse-ms "thm" () 4 () "    TheoremValue* thm()" 5011 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    TheoremValue* thm()" 5011]
[ebrowse-ms "toString" () 6 () "    std::string toString()" 7669 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline std::string Theorem::toString()" 14156]
[ebrowse-ms "withAssumptions" () 4 () "    bool withAssumptions()" 5975 0  () "  bool Theorem::withAssumptions()" 6222]
[ebrowse-ms "withProof" () 4 () "    bool withProof()" 5941 0  () "  bool Theorem::withProof()" 6072]
[ebrowse-ms "~Theorem" () 0 () "    ~Theorem()" 5840 0  () "  Theorem::~Theorem()" 5116]
)
()
([ebrowse-ms "TheoremEq" () 0 () "    static bool TheoremEq(const" 9648 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    static bool TheoremEq(const" 9648]
)
([ebrowse-ms "compare" () 0 () "    friend int compare(const" 3399 2  () () 0]
[ebrowse-ms "compareByPtr" () 0 () "    friend int compareByPtr(const" 3535 2  () () 0]
[ebrowse-ms "operator !=" () 0 () "    friend bool operator!=(const" 3783 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    friend bool operator!=(const" 3783]
[ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 9538 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 0 () "    friend bool operator==(const" 3638 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    friend bool operator==(const" 3638]
)
()
()()
][ebrowse-ts [ebrowse-cs "CommonTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/common_theorem_producer.cpp" ]
()()
([ebrowse-ms "CommonTheoremProducer" () 0 () () 0 0  () "r::CommonTheoremProducer(TheoremManager* tm)
  :" 972]
[ebrowse-ms "ackermann" () 0 () () 0 0  () "Theorem CommonTheoremProducer::ackermann(const" 40624]
[ebrowse-ms "andElim" () 0 () () 0 0  () "Theorem CommonTheoremProducer::andElim(const" 23759]
[ebrowse-ms "andIntro" () 0 () () 0 0  () "Theorem CommonTheoremProducer::andIntro(const" 24450]
[ebrowse-ms "andIntro" () 0 () () 0 0  () "Theorem CommonTheoremProducer::andIntro(const" 24273]
[ebrowse-ms "assumpRule" () 0 () () 0 0  () "Theorem CommonTheoremProducer::assumpRule(const" 4787]
[ebrowse-ms "contradictionRule" () 0 () () 0 0  () "m CommonTheoremProducer::contradictionRule(const" 19050]
[ebrowse-ms "excludedMiddle" () 0 () () 0 0  () "orem CommonTheoremProducer::excludedMiddle(const" 19640]
[ebrowse-ms "findITE" () 0 () () 0 0  () "void CommonTheoremProducer::findITE(const" 41215]
[ebrowse-ms "iffContrapositive" () 0 () () 0 0  () "m CommonTheoremProducer::iffContrapositive(const" 21207]
[ebrowse-ms "iffFalseElim" () 0 () () 0 0  () "heorem CommonTheoremProducer::iffFalseElim(const" 20772]
[ebrowse-ms "iffMP" () 0 () () 0 0  () "Theorem CommonTheoremProducer::iffMP(const" 22080]
[ebrowse-ms "iffNotFalse" () 0 () () 0 0  () "Theorem CommonTheoremProducer::iffNotFalse(const" 20115]
[ebrowse-ms "iffTrue" () 0 () () 0 0  () "Theorem CommonTheoremProducer::iffTrue(const" 19861]
[ebrowse-ms "iffTrueElim" () 0 () () 0 0  () "Theorem CommonTheoremProducer::iffTrueElim(const" 20374]
[ebrowse-ms "implContrapositive" () 0 () () 0 0  () " CommonTheoremProducer::implContrapositive(const" 27065]
[ebrowse-ms "implIntro" () 0 () () 0 0  () "Theorem CommonTheoremProducer::implIntro(const" 25397]
[ebrowse-ms "implIntro3" () 0 () () 0 0  () "CommonTheoremProducer::implIntro3(const" 2403]
[ebrowse-ms "implMP" () 0 () () 0 0  () "Theorem CommonTheoremProducer::implMP(const" 22857]
[ebrowse-ms "liftOneITE" () 0 () () 0 0  () "Theorem CommonTheoremProducer::liftOneITE(const" 41954]
[ebrowse-ms "notNotElim" () 0 () () 0 0  () "Theorem CommonTheoremProducer::notNotElim(const" 21646]
[ebrowse-ms "notToIff" () 0 () () 0 0  () "Theorem CommonTheoremProducer::notToIff(const" 29314]
[ebrowse-ms "queryTCC" () 0 () () 0 0  () "CommonTheoremProducer::queryTCC(const" 1420]
[ebrowse-ms "reflexivityRule" () 0 () () 0 0  () "rem CommonTheoremProducer::reflexivityRule(const" 4998]
[ebrowse-ms "rewriteAnd" () 0 () () 0 0  () "Theorem CommonTheoremProducer::rewriteAnd(const" 40407]
[ebrowse-ms "rewriteIff" () 0 () () 0 0  () "Theorem CommonTheoremProducer::rewriteIff(const" 30229]
[ebrowse-ms "rewriteIteFalse" () 0 () () 0 0  () "CommonTheoremProducer::rewriteIteFalse(const" 28130]
[ebrowse-ms "rewriteIteSame" () 0 () () 0 0  () "CommonTheoremProducer::rewriteIteSame(const" 28727]
[ebrowse-ms "rewriteIteTrue" () 0 () () 0 0  () "CommonTheoremProducer::rewriteIteTrue(const" 27530]
[ebrowse-ms "rewriteNotExists" () 0 () () 0 0  () "em CommonTheoremProducer::rewriteNotExists(const" 35604]
[ebrowse-ms "rewriteNotFalse" () 0 () () 0 0  () "rem CommonTheoremProducer::rewriteNotFalse(const" 34384]
[ebrowse-ms "rewriteNotForall" () 0 () () 0 0  () "em CommonTheoremProducer::rewriteNotForall(const" 35105]
[ebrowse-ms "rewriteNotNot" () 0 () () 0 0  () "eorem CommonTheoremProducer::rewriteNotNot(const" 34737]
[ebrowse-ms "rewriteNotTrue" () 0 () () 0 0  () "orem CommonTheoremProducer::rewriteNotTrue(const" 34041]
[ebrowse-ms "rewriteOr" () 0 () () 0 0  () "Theorem CommonTheoremProducer::rewriteOr(const" 40516]
[ebrowse-ms "rewriteReflexivity" () 0 () () 0 0  () " CommonTheoremProducer::rewriteReflexivity(const" 5122]
[ebrowse-ms "rewriteUsingSymmetry" () 0 () () 0 0  () "ommonTheoremProducer::rewriteUsingSymmetry(const" 6798]
[ebrowse-ms "skolemize" () 0 () () 0 0  () "Theorem CommonTheoremProducer::skolemize(const" 38484]
[ebrowse-ms "skolemizeRewrite" () 0 () () 0 0  () "em CommonTheoremProducer::skolemizeRewrite(const" 36404]
[ebrowse-ms "skolemizeRewriteVar" () 0 () () 0 0  () "CommonTheoremProducer::skolemizeRewriteVar(const" 36935]
[ebrowse-ms "substitutivityRule" () 0 () () 0 0  () " CommonTheoremProducer::substitutivityRule(const" 17294]
[ebrowse-ms "substitutivityRule" () 0 () () 0 0  () " CommonTheoremProducer::substitutivityRule(const" 14260]
[ebrowse-ms "substitutivityRule" () 0 () () 0 0  () " CommonTheoremProducer::substitutivityRule(const" 10830]
[ebrowse-ms "substitutivityRule" () 0 () () 0 0  () " CommonTheoremProducer::substitutivityRule(const" 12396]
[ebrowse-ms "symmetryRule" () 0 () () 0 0  () "heorem CommonTheoremProducer::symmetryRule(const" 5693]
[ebrowse-ms "transitivityRule" () 0 () () 0 0  () "em CommonTheoremProducer::transitivityRule(const" 7601]
[ebrowse-ms "trueTheorem" () 0 () () 0 0  () "Theorem CommonTheoremProducer::trueTheorem()" 40296]
[ebrowse-ms "varIntroRule" () 0 () () 0 0  () "heorem CommonTheoremProducer::varIntroRule(const" 37941]
[ebrowse-ms "varIntroSkolem" () 0 () () 0 0  () "orem CommonTheoremProducer::varIntroSkolem(const" 39350]
[ebrowse-ms "xorToIff" () 0 () () 0 0  () "Theorem CommonTheoremProducer::xorToIff(const" 29742]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryCore" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" ]
()()
([ebrowse-ms "TheoryCore" () 0 () () 0 0  () "                     Statistics& statistics)
  :" 20237]
[ebrowse-ms "addFact" () 0 () () 0 0  () "void TheoryCore::addFact(const" 88144]
[ebrowse-ms "addToVarDB" () 0 () () 0 0  () "void TheoryCore::addToVarDB(const" 96805]
[ebrowse-ms "assertEqualities" () 0 () () 0 0  () "void TheoryCore::assertEqualities(const" 106547]
[ebrowse-ms "assertFact" () 0 () () 0 0  () "void TheoryCore::assertFact(const" 27701]
[ebrowse-ms "assertFactCore" () 0 () () 0 0  () "void TheoryCore::assertFactCore(const" 9131]
[ebrowse-ms "assertFormula" () 0 () () 0 0  () "void TheoryCore::assertFormula(const" 11495]
[ebrowse-ms "assignValue" () 0 () () 0 0  () "void TheoryCore::assignValue(const" 96077]
[ebrowse-ms "assignValue" () 0 () () 0 0  () "void TheoryCore::assignValue(const" 95392]
[ebrowse-ms "buildModel" () 0 () () 0 0  () "void TheoryCore::buildModel(ExprMap" 98859]
[ebrowse-ms "callTheoryPreprocess" () 0 () () 0 0  () "Theorem TheoryCore::callTheoryPreprocess(const" 24814]
[ebrowse-ms "checkEquation" () 0 () () 0 0  () "void TheoryCore::checkEquation(const" 34882]
[ebrowse-ms "checkSATCore" () 0 () () 0 0  () "bool TheoryCore::checkSATCore()" 89649]
[ebrowse-ms "checkSolved" () 0 () () 0 0  () "void TheoryCore::checkSolved(const" 35611]
[ebrowse-ms "checkType" () 0 () () 0 0  () "void TheoryCore::checkType(const" 41078]
[ebrowse-ms "collectBasicVars" () 0 () () 0 0  () "void TheoryCore::collectBasicVars()" 96933]
[ebrowse-ms "collectModelValues" () 0 () () 0 0  () "void TheoryCore::collectModelValues(const" 102291]
[ebrowse-ms "computeBaseType" () 0 () () 0 0  () "Type TheoryCore::computeBaseType(const" 47014]
[ebrowse-ms "computeModelBasic" () 0 () () 0 0  () "void TheoryCore::computeModelBasic(const" 87529]
[ebrowse-ms "computeTCC" () 0 () () 0 0  () "Expr TheoryCore::computeTCC(const" 47771]
[ebrowse-ms "computeType" () 0 () () 0 0  () "void TheoryCore::computeType(const" 42706]
[ebrowse-ms "computeTypePred" () 0 () () 0 0  () "Expr TheoryCore::computeTypePred(const" 49426]
[ebrowse-ms "createProofRules" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_theorem_producer.cpp" "les* TheoryCore::createProofRules(TheoremManager" 1215]
[ebrowse-ms "enqueueSE" () 0 () () 0 0  () "void TheoryCore::enqueueSE(const" 17827]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  () "Cardinality TheoryCore::finiteTypeInfo(Expr" 42032]
[ebrowse-ms "getCurQuantLevel" () 0 () () 0 0  () "int TheoryCore::getCurQuantLevel()" 26158]
[ebrowse-ms "getImpliedLiteral" () 0 () () 0 0  () "Theorem TheoryCore::getImpliedLiteral(void" 91787]
[ebrowse-ms "getImpliedLiteralByIndex" () 0 () () 0 0  () "em TheoryCore::getImpliedLiteralByIndex(unsigned" 92042]
[ebrowse-ms "getModelValue" () 0 () () 0 0  () "Theorem TheoryCore::getModelValue(const" 17960]
[ebrowse-ms "getQuantLevelForTerm" () 0 () () 0 0  () "unsigned TheoryCore::getQuantLevelForTerm(const" 26253]
[ebrowse-ms "getTheoremForTerm" () 0 () () 0 0  () "Theorem TheoryCore::getTheoremForTerm(const" 25080]
[ebrowse-ms "incomplete" () 0 () () 0 0  () "bool TheoryCore::incomplete(vector" 90494]
[ebrowse-ms "initTimeLimit" () 0 () () 0 0  () "void TheoryCore::initTimeLimit()" 105566]
[ebrowse-ms "isBasicKind" () 0 () () 0 0  () "bool TheoryCore::isBasicKind(int" 19083]
[ebrowse-ms "parseExpr" () 0 () () 0 0  () "Expr TheoryCore::parseExpr(const" 92195]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  () "Expr TheoryCore::parseExprOp(const" 49899]
[ebrowse-ms "print" () 0 () () 0 0  () "ExprStream& TheoryCore::print(ExprStream" 56105]
[ebrowse-ms "processCond" () 0 () () 0 0  () "Expr TheoryCore::processCond(const" 18234]
[ebrowse-ms "processFactQueue" () 0 () () 0 0  () "bool TheoryCore::processFactQueue(EffortLevel" 3206]
[ebrowse-ms "processNotify" () 0 () () 0 0  () "void TheoryCore::processNotify(const" 4605]
[ebrowse-ms "processUpdates" () 0 () () 0 0  () "void TheoryCore::processUpdates()" 8214]
[ebrowse-ms "refineCounterExample" () 0 () () 0 0  () "void TheoryCore::refineCounterExample()" 86931]
[ebrowse-ms "registerAtom" () 0 () () 0 0  () "void TheoryCore::registerAtom(const" 90772]
[ebrowse-ms "rewrite" () 0 () () 0 0  () "Theorem TheoryCore::rewrite(const" 27934]
[ebrowse-ms "rewriteCore" () 0 () () 0 0  () "Theorem TheoryCore::rewriteCore(const" 7245]
[ebrowse-ms "rewriteLitCore" () 0 () () 0 0  () "Theorem TheoryCore::rewriteLitCore(const" 17143]
[ebrowse-ms "rewriteLiteral" () 0 () () 0 0  () "Theorem TheoryCore::rewriteLiteral(const" 104926]
[ebrowse-ms "setFindLiteral" () 0 () () 0 0  () "void TheoryCore::setFindLiteral(const" 15559]
[ebrowse-ms "setIncomplete" () 0 () () 0 0  () "void TheoryCore::setIncomplete(const" 109269]
[ebrowse-ms "setInconsistent" () 0 () () 0 0  () "void TheoryCore::setInconsistent(const" 110963]
[ebrowse-ms "setTimeLimit" () 0 () () 0 0  () "void TheoryCore::setTimeLimit(unsigned" 105479]
[ebrowse-ms "setupSubFormulas" () 0 () () 0 0  () "void TheoryCore::setupSubFormulas(const" 7709]
[ebrowse-ms "setupTerm" () 0 () () 0 0  () "void TheoryCore::setupTerm(const" 111351]
[ebrowse-ms "simplify" () 0 () () 0 0  () "Theorem TheoryCore::simplify(const" 4870]
[ebrowse-ms "simplifyOp" () 0 () () 0 0  () "Theorem TheoryCore::simplifyOp(const" 37712]
[ebrowse-ms "solve" () 0 () () 0 0  () "Theorem TheoryCore::solve(const" 36589]
[ebrowse-ms "timeLimitReached" () 0 () () 0 0  () "bool TheoryCore::timeLimitReached()" 105655]
[ebrowse-ms "typePred" () 0 () () 0 0  () "Theorem TheoryCore::typePred(const" 109363]
[ebrowse-ms "update" () 0 () () 0 0  () "void TheoryCore::update(const" 33084]
[ebrowse-ms "~TheoryCore" () 0 () () 0 0  () "TheoryCore::~TheoryCore()" 24641]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Op" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_op.h" "class Op {" 1708"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_op.cpp" ]
()([ebrowse-ms "d_expr" () 0 () "  Expr d_expr;" 1843 2  () () 0]
[ebrowse-ms "d_kind" () 0 () "  int d_kind;" 1828 2  () () 0]
)
([ebrowse-ms "Op" () 0 () "  Op(int kind) :" 2228 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_op.h" "  Op(int kind) :" 2228]
[ebrowse-ms "Op" () 0 () "  Op() :" 2155 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_op.h" "  Op() :" 2155]
[ebrowse-ms "Op" () 0 () "  Op(const Op& op):" 2370 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_op.h" "  Op(const Op& op):" 2370]
[ebrowse-ms "Op" () 0 () "  Op(ExprManager* em, const Op& op);" 2503 0  () "Op::Op(ExprManager* em, const Op& op) :" 625]
[ebrowse-ms "getExpr" () 4 () "  const Expr& getExpr()" 2791 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_op.h" "  const Expr& getExpr()" 2791]
[ebrowse-ms "getKind" () 4 () "  int getKind()" 2676 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_op.h" "  int getKind()" 2676]
[ebrowse-ms "operator =" () 0 () "  Op& operator=(const" 2613 0  () "Op& Op::operator=(const" 763]
[ebrowse-ms "toString" () 4 () "  std::string toString()" 2920 0  () "string Op::toString()" 909]
[ebrowse-ms "~Op" () 0 () "  ~Op()" 2562 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_op.h" "  ~Op()" 2562]
)
()
()
([ebrowse-ms "operator <<" () 0 () "  friend std::ostream& operator<<(std" 2965 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 0 () "  friend bool operator==(const" 3094 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_op.h" "  friend bool operator==(const" 3094]
)
()
()()
][ebrowse-ts [ebrowse-cs "lbool" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "class lbool {" 7418"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" ]
()([ebrowse-ms "value" () 0 () "    int     value;" 7437 2  () () 0]
)
([ebrowse-ms "lbool" () 0 () "    lbool(bool x) :" 7535 0  () "    lbool(bool x) :" 7535]
[ebrowse-ms "lbool" () 0 () "    lbool()       :" 7499 0  () "    lbool()       :" 7499]
[ebrowse-ms "lbool" () 64 () "    explicit lbool(int v) :" 7460 2  () "    explicit lbool(int v) :" 7460]
[ebrowse-ms "operator !=" () 4 () "    bool  operator != (const" 7718 0  () "    bool  operator != (const" 7718]
[ebrowse-ms "operator ==" () 4 () "    bool  operator == (const" 7636 0  () "    bool  operator == (const" 7636]
[ebrowse-ms "operator ~" () 4 () "    lbool operator ~  (void" 7799 0  () "    lbool operator ~  (void" 7799]
[ebrowse-ms "toInt" () 4 () "    int toInt(void" 7581 0  () "    int toInt(void" 7581]
)
()
()
([ebrowse-ms "toInt" () 2 () "    friend int   toInt  (lbool" 7878 0  () "inline int   toInt  (lbool" 7947]
[ebrowse-ms "toLbool" () 2 () "    friend lbool toLbool(int" 7911 0  () "inline lbool toLbool(int" 7997]
)
()
()()
][ebrowse-ts [ebrowse-cs "yy_buffer_state" () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "struct yy_buffer_state
	{" 6163() ]
()([ebrowse-ms "yy_at_bol" () 0 () "	int yy_at_bol;" 7060 0  () () 0]
[ebrowse-ms "yy_bs_column" () 0 () "    int yy_bs_column;" 7129 0  () () 0]
[ebrowse-ms "yy_bs_lineno" () 0 () "    int yy_bs_lineno;" 7083 0  () () 0]
[ebrowse-ms "yy_buf_pos" () 0 () "	char *yy_buf_pos;" 6243 0  () () 0]
[ebrowse-ms "yy_buf_size" () 0 () "	yy_size_t yy_buf_size;" 6391 0  () () 0]
[ebrowse-ms "yy_buffer_status" () 0 () "	int yy_buffer_status;" 7287 0  () () 0]
[ebrowse-ms "yy_ch_buf" () 0 () "	char *yy_ch_buf;" 6204 0  () () 0]
[ebrowse-ms "yy_fill_buffer" () 0 () "	int yy_fill_buffer;" 7263 0  () () 0]
[ebrowse-ms "yy_input_file" () 0 () "	FILE *yy_input_file;" 6185 0  () () 0]
[ebrowse-ms "yy_is_interactive" () 0 () "	int yy_is_interactive;" 6901 0  () () 0]
[ebrowse-ms "yy_is_our_buffer" () 0 () "	int yy_is_our_buffer;" 6662 0  () () 0]
[ebrowse-ms "yy_n_chars" () 0 () "	int yy_n_chars;" 6494 0  () () 0]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SmartCDO" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smartcdo.h" "class SmartCDO {" 1575"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smartcdo.h" ]
()([ebrowse-ms "d_data" () 0 () "  RefCDO<T>* d_data;" 2671 2  () () 0]
)
([ebrowse-ms "SmartCDO" () 0 () "  SmartCDO(const SmartCDO<T>& cdo) :" 3345 0  () "  SmartCDO(const SmartCDO<T>& cdo) :" 3345]
[ebrowse-ms "SmartCDO" () 0 () "    {" 3099 0  () "    {" 3099]
[ebrowse-ms "SmartCDO" () 0 () "    {" 2944 0  () "    {" 2944]
[ebrowse-ms "SmartCDO" () 0 () "  SmartCDO():" 2842 0  () "  SmartCDO():" 2842]
[ebrowse-ms "T" () 4 () "  operator T()" 3951 0  () "  operator T()" 3951]
[ebrowse-ms "get" () 4 () "  const T& get()" 3834 0  () "  const T& get()" 3834]
[ebrowse-ms "isNull" () 4 () "  bool isNull()" 2739 0  () "  bool isNull()" 2739]
[ebrowse-ms "operator =" () 4 () "  const SmartCDO<T>& operator=(const" 4012 0  () "  const SmartCDO<T>& operator=(const" 4012]
[ebrowse-ms "operator =" () 0 () "  SmartCDO<T>& operator=(const" 3461 0  () "  SmartCDO<T>& operator=(const" 3461]
[ebrowse-ms "set" () 4 () "  void set(const" 3688 0  () "  void set(const" 3688]
[ebrowse-ms "~SmartCDO" () 0 () "  ~SmartCDO()" 3244 0  () "  ~SmartCDO()" 3244]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "UFTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_theorem_producer.cpp" ]
()()
([ebrowse-ms "applyLambda" () 0 () () 0 0  () "Theorem UFTheoremProducer::applyLambda(const" 2878]
[ebrowse-ms "relToClosure" () 0 () () 0 0  () "Theorem UFTheoremProducer::relToClosure(const" 1363]
[ebrowse-ms "relTrans" () 0 () () 0 0  () "Theorem UFTheoremProducer::relTrans(const" 1911]
[ebrowse-ms "rewriteOpDef" () 0 () () 0 0  () "Theorem UFTheoremProducer::rewriteOpDef(const" 3787]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "unary_function" "Hash::std" 32() () 0() ]
([ebrowse-ts [ebrowse-cs "_Identity" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_set.h" "  struct _Identity :" 2117"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_set.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "    const _Tp& operator()(const" 2187 0  () "    const _Tp& operator()(const" 2187]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "_Select1st" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_map.h" "  struct _Select1st :" 2161"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_map.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "nst typename _Pair::first_type& operator()(const" 2280 0  () "nst typename _Pair::first_type& operator()(const" 2280]
)
()
()
()
()
()()
])()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "int" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" "  template<> struct hash<unsigned int> {" 3055"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "    size_t operator()(unsigned" 3086 0  () "    size_t operator()(unsigned" 3086]
[ebrowse-ms "operator ()" () 4 () "    size_t operator()(int" 2981 0  () "    size_t operator()(int" 2981]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ArithTheoremProducerOld" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer_old.cpp" ]
()()
([ebrowse-ms "IsIntegerElim" () 0 () () 0 0  () "rem ArithTheoremProducerOld::IsIntegerElim(const" 82817]
[ebrowse-ms "addInequalities" () 0 () () 0 0  () "m ArithTheoremProducerOld::addInequalities(const" 118675]
[ebrowse-ms "addInequalities" () 0 () () 0 0  () "m ArithTheoremProducerOld::addInequalities(const" 93037]
[ebrowse-ms "canonCombineLikeTerms" () 0 () () 0 0  () "hTheoremProducerOld::canonCombineLikeTerms(const" 13117]
[ebrowse-ms "canonComboLikeTerms" () 0 () () 0 0  () "ithTheoremProducerOld::canonComboLikeTerms(const" 33868]
[ebrowse-ms "canonDivide" () 0 () () 0 0  () "ArithTheoremProducerOld::canonDivide(const" 28242]
[ebrowse-ms "canonDivideConst" () 0 () () 0 0  () " ArithTheoremProducerOld::canonDivideConst(const" 2792]
[ebrowse-ms "canonDivideMult" () 0 () () 0 0  () "m ArithTheoremProducerOld::canonDivideMult(const" 3521]
[ebrowse-ms "canonDividePlus" () 0 () () 0 0  () "m ArithTheoremProducerOld::canonDividePlus(const" 4609]
[ebrowse-ms "canonDivideVar" () 0 () () 0 0  () "em ArithTheoremProducerOld::canonDivideVar(const" 5520]
[ebrowse-ms "canonFlattenSum" () 0 () () 0 0  () "ArithTheoremProducerOld::canonFlattenSum(const" 33110]
[ebrowse-ms "canonInvert" () 0 () () 0 0  () "ArithTheoremProducerOld::canonInvert(const" 26248]
[ebrowse-ms "canonInvertConst" () 0 () () 0 0  () "ArithTheoremProducerOld::canonInvertConst(const" 24449]
[ebrowse-ms "canonInvertLeaf" () 0 () () 0 0  () "ArithTheoremProducerOld::canonInvertLeaf(const" 24824]
[ebrowse-ms "canonInvertMult" () 0 () () 0 0  () "ArithTheoremProducerOld::canonInvertMult(const" 25577]
[ebrowse-ms "canonInvertPow" () 0 () () 0 0  () "ArithTheoremProducerOld::canonInvertPow(const" 25059]
[ebrowse-ms "canonMult" () 0 () () 0 0  () "ArithTheoremProducerOld::canonMult(const" 22293]
[ebrowse-ms "canonMultConstConst" () 0 () () 0 0  () "ithTheoremProducerOld::canonMultConstConst(const" 30177]
[ebrowse-ms "canonMultConstMult" () 0 () () 0 0  () "rithTheoremProducerOld::canonMultConstMult(const" 7018]
[ebrowse-ms "canonMultConstPlus" () 0 () () 0 0  () "rithTheoremProducerOld::canonMultConstPlus(const" 7823]
[ebrowse-ms "canonMultConstSum" () 0 () () 0 0  () "ArithTheoremProducerOld::canonMultConstSum(const" 31585]
[ebrowse-ms "canonMultConstTerm" () 0 () () 0 0  () "rithTheoremProducerOld::canonMultConstTerm(const" 30842]
[ebrowse-ms "canonMultLeafLeaf" () 0 () () 0 0  () "ArithTheoremProducerOld::canonMultLeafLeaf(const" 10312]
[ebrowse-ms "canonMultLeafOrPowMult" () 0 () () 0 0  () "TheoremProducerOld::canonMultLeafOrPowMult(const" 10960]
[ebrowse-ms "canonMultLeafOrPowOrMultPlus" () 0 () () 0 0  () "mProducerOld::canonMultLeafOrPowOrMultPlus(const" 15298]
[ebrowse-ms "canonMultMtermMterm" () 0 () () 0 0  () "ithTheoremProducerOld::canonMultMtermMterm(const" 16654]
[ebrowse-ms "canonMultOne" () 0 () () 0 0  () "orem ArithTheoremProducerOld::canonMultOne(const" 29905]
[ebrowse-ms "canonMultPlusPlus" () 0 () () 0 0  () "ArithTheoremProducerOld::canonMultPlusPlus(const" 15928]
[ebrowse-ms "canonMultPowLeaf" () 0 () () 0 0  () " ArithTheoremProducerOld::canonMultPowLeaf(const" 9441]
[ebrowse-ms "canonMultPowPow" () 0 () () 0 0  () "r ArithTheoremProducerOld::canonMultPowPow(const" 8451]
[ebrowse-ms "canonMultTerm1Term2" () 0 () () 0 0  () "ithTheoremProducerOld::canonMultTerm1Term2(const" 29203]
[ebrowse-ms "canonMultTermConst" () 0 () () 0 0  () "rithTheoremProducerOld::canonMultTermConst(const" 28712]
[ebrowse-ms "canonMultZero" () 0 () () 0 0  () "rem ArithTheoremProducerOld::canonMultZero(const" 29650]
[ebrowse-ms "canonPlus" () 0 () () 0 0  () "ArithTheoremProducerOld::canonPlus(const" 21552]
[ebrowse-ms "canonPowConst" () 0 () () 0 0  () "ArithTheoremProducerOld::canonPowConst(const" 32358]
[ebrowse-ms "canonUMinusToDivide" () 0 () () 0 0  () "ithTheoremProducerOld::canonUMinusToDivide(const" 2485]
[ebrowse-ms "clashingBounds" () 0 () () 0 0  () "em ArithTheoremProducerOld::clashingBounds(const" 91282]
[ebrowse-ms "compactNonLinearTerm" () 0 () () 0 0  () "thTheoremProducerOld::compactNonLinearTerm(const" 112356]
[ebrowse-ms "constPredicate" () 0 () () 0 0  () "em ArithTheoremProducerOld::constPredicate(const" 41296]
[ebrowse-ms "constRHSGrayShadow" () 0 () () 0 0  () "rithTheoremProducerOld::constRHSGrayShadow(const" 69787]
[ebrowse-ms "create_t" () 0 () () 0 0  () "ArithTheoremProducerOld::create_t(const" 74232]
[ebrowse-ms "create_t2" () 0 () () 0 0  () "ArithTheoremProducerOld::create_t2(const" 74779]
[ebrowse-ms "create_t3" () 0 () () 0 0  () "ArithTheoremProducerOld::create_t3(const" 75347]
[ebrowse-ms "cycleConflict" () 0 () () 0 0  () "rem ArithTheoremProducerOld::cycleConflict(const" 106465]
[ebrowse-ms "darkGrayShadow2ab" () 0 () () 0 0  () "ArithTheoremProducerOld::darkGrayShadow2ab(const" 56991]
[ebrowse-ms "darkGrayShadow2ba" () 0 () () 0 0  () "ArithTheoremProducerOld::darkGrayShadow2ba(const" 60111]
[ebrowse-ms "diseqToIneq" () 0 () () 0 0  () "ArithTheoremProducerOld::diseqToIneq(const" 90076]
[ebrowse-ms "divideEqnNonConst" () 0 () () 0 0  () "ArithTheoremProducerOld::divideEqnNonConst(const" 44633]
[ebrowse-ms "dummyTheorem" () 0 () () 0 0  () "orem ArithTheoremProducerOld::dummyTheorem(const" 90552]
[ebrowse-ms "elimPower" () 0 () () 0 0  () "Theorem ArithTheoremProducerOld::elimPower(const" 37788]
[ebrowse-ms "elimPowerConst" () 0 () () 0 0  () "em ArithTheoremProducerOld::elimPowerConst(const" 38428]
[ebrowse-ms "eqElimIntRule" () 0 () () 0 0  () "ArithTheoremProducerOld::eqElimIntRule(const" 83423]
[ebrowse-ms "eqToIneq" () 0 () () 0 0  () "Theorem ArithTheoremProducerOld::eqToIneq(const" 50093]
[ebrowse-ms "equalLeaves1" () 0 () () 0 0  () "ArithTheoremProducerOld::equalLeaves1(const" 87130]
[ebrowse-ms "equalLeaves2" () 0 () () 0 0  () "ArithTheoremProducerOld::equalLeaves2(const" 87867]
[ebrowse-ms "equalLeaves3" () 0 () () 0 0  () "ArithTheoremProducerOld::equalLeaves3(const" 88604]
[ebrowse-ms "equalLeaves4" () 0 () () 0 0  () "ArithTheoremProducerOld::equalLeaves4(const" 89341]
[ebrowse-ms "evenPowerEqNegConst" () 0 () () 0 0  () "ithTheoremProducerOld::evenPowerEqNegConst(const" 39289]
[ebrowse-ms "expandDarkShadow" () 0 () () 0 0  () " ArithTheoremProducerOld::expandDarkShadow(const" 63163]
[ebrowse-ms "expandGrayShadow" () 0 () () 0 0  () " ArithTheoremProducerOld::expandGrayShadow(const" 65549]
[ebrowse-ms "expandGrayShadow0" () 0 () () 0 0  () "ArithTheoremProducerOld::expandGrayShadow0(const" 63710]
[ebrowse-ms "expandGrayShadowConst" () 0 () () 0 0  () "hTheoremProducerOld::expandGrayShadowConst(const" 66456]
[ebrowse-ms "expandGrayShadowRewrite" () 0 () () 0 0  () "heoremProducerOld::expandGrayShadowRewrite(const" 111551]
[ebrowse-ms "f" () 0 () () 0 0  () "ArithTheoremProducerOld::f(const" 76254]
[ebrowse-ms "finiteInterval" () 0 () () 0 0  () "ArithTheoremProducerOld::finiteInterval(const" 54624]
[ebrowse-ms "flipInequality" () 0 () () 0 0  () "em ArithTheoremProducerOld::flipInequality(const" 50715]
[ebrowse-ms "getLeaves" () 0 () () 0 0  () "void ArithTheoremProducerOld::getLeaves(const" 120548]
[ebrowse-ms "grayShadowConst" () 0 () () 0 0  () "ArithTheoremProducerOld::grayShadowConst(const" 68543]
[ebrowse-ms "greaterthan" () 0 () () 0 0  () "bool ArithTheoremProducerOld::greaterthan(const" 79895]
[ebrowse-ms "implyDiffLogicBothBounds" () 0 () () 0 0  () "eoremProducerOld::implyDiffLogicBothBounds(const" 117839]
[ebrowse-ms "implyEqualities" () 0 () () 0 0  () "m ArithTheoremProducerOld::implyEqualities(const" 106988]
[ebrowse-ms "implyNegatedInequality" () 0 () () 0 0  () "TheoremProducerOld::implyNegatedInequality(const" 96991]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 0 () () 0 0  () "oducerOld::implyNegatedInequalityDiffLogic(const" 110930]
[ebrowse-ms "implyWeakerInequality" () 0 () () 0 0  () "hTheoremProducerOld::implyWeakerInequality(const" 94586]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 0 () () 0 0  () "roducerOld::implyWeakerInequalityDiffLogic(const" 110323]
[ebrowse-ms "intEqIrrational" () 0 () () 0 0  () "m ArithTheoremProducerOld::intEqIrrational(const" 40133]
[ebrowse-ms "intEqualityRationalConstant" () 0 () () 0 0  () "emProducerOld::intEqualityRationalConstant(const" 104406]
[ebrowse-ms "intVarEqnConst" () 0 () () 0 0  () "ArithTheoremProducerOld::intVarEqnConst(const" 72004]
[ebrowse-ms "integerSplit" () 0 () () 0 0  () "orem ArithTheoremProducerOld::integerSplit(const" 100873]
[ebrowse-ms "isIntConst" () 0 () () 0 0  () "ArithTheoremProducerOld::isIntConst(const" 86704]
[ebrowse-ms "leftMinusRight" () 0 () () 0 0  () "em ArithTheoremProducerOld::leftMinusRight(const" 42925]
[ebrowse-ms "lessThanToLE" () 0 () () 0 0  () "orem ArithTheoremProducerOld::lessThanToLE(const" 70316]
[ebrowse-ms "lessThanToLERewrite" () 0 () () 0 0  () "ithTheoremProducerOld::lessThanToLERewrite(const" 107882]
[ebrowse-ms "minusToPlus" () 0 () () 0 0  () "eorem ArithTheoremProducerOld::minusToPlus(const" 2133]
[ebrowse-ms "modEq" () 0 () () 0 0  () "ArithTheoremProducerOld::modEq(const" 75939]
[ebrowse-ms "monomialModM" () 0 () () 0 0  () "ArithTheoremProducerOld::monomialModM(const" 77144]
[ebrowse-ms "monomialMulF" () 0 () () 0 0  () "ArithTheoremProducerOld::monomialMulF(const" 78685]
[ebrowse-ms "moveSumConstantRight" () 0 () () 0 0  () "thTheoremProducerOld::moveSumConstantRight(const" 26684]
[ebrowse-ms "multEqZero" () 0 () () 0 0  () "heorem ArithTheoremProducerOld::multEqZero(const" 35525]
[ebrowse-ms "multEqn" () 0 () () 0 0  () "Theorem ArithTheoremProducerOld::multEqn(const" 44119]
[ebrowse-ms "multIneqn" () 0 () () 0 0  () "Theorem ArithTheoremProducerOld::multIneqn(const" 45193]
[ebrowse-ms "negatedInequality" () 0 () () 0 0  () "ArithTheoremProducerOld::negatedInequality(const" 51310]
[ebrowse-ms "nonLinearIneqSignSplit" () 0 () () 0 0  () "TheoremProducerOld::nonLinearIneqSignSplit(const" 116529]
[ebrowse-ms "oneElimination" () 0 () () 0 0  () "em ArithTheoremProducerOld::oneElimination(const" 90706]
[ebrowse-ms "plusPredicate" () 0 () () 0 0  () "rem ArithTheoremProducerOld::plusPredicate(const" 43458]
[ebrowse-ms "powEqZero" () 0 () () 0 0  () "Theorem ArithTheoremProducerOld::powEqZero(const" 37047]
[ebrowse-ms "powerOfOne" () 0 () () 0 0  () "heorem ArithTheoremProducerOld::powerOfOne(const" 120101]
[ebrowse-ms "rafineStrictInteger" () 0 () () 0 0  () "ithTheoremProducerOld::rafineStrictInteger(const" 101614]
[ebrowse-ms "realShadow" () 0 () () 0 0  () "heorem ArithTheoremProducerOld::realShadow(const" 52214]
[ebrowse-ms "realShadowEq" () 0 () () 0 0  () "orem ArithTheoremProducerOld::realShadowEq(const" 53441]
[ebrowse-ms "rewriteLeavesConst" () 0 () () 0 0  () "rithTheoremProducerOld::rewriteLeavesConst(const" 121080]
[ebrowse-ms "rightMinusLeft" () 0 () () 0 0  () "em ArithTheoremProducerOld::rightMinusLeft(const" 42383]
[ebrowse-ms "simpleIneqInt" () 0 () () 0 0  () "rem ArithTheoremProducerOld::simpleIneqInt(const" 46188]
[ebrowse-ms "simplifiedMultExpr" () 0 () () 0 0  () " ArithTheoremProducerOld::simplifiedMultExpr(std" 6691]
[ebrowse-ms "splitGrayShadow" () 0 () () 0 0  () "m ArithTheoremProducerOld::splitGrayShadow(const" 64550]
[ebrowse-ms "splitGrayShadowSmall" () 0 () () 0 0  () "thTheoremProducerOld::splitGrayShadowSmall(const" 109267]
[ebrowse-ms "substitute" () 0 () () 0 0  () "ArithTheoremProducerOld::substitute(const" 79302]
[ebrowse-ms "sumModM" () 0 () () 0 0  () "ArithTheoremProducerOld::sumModM(vector" 76470]
[ebrowse-ms "sumMulF" () 0 () () 0 0  () "ArithTheoremProducerOld::sumMulF(vector" 78015]
[ebrowse-ms "trustedRewrite" () 0 () () 0 0  () "em ArithTheoremProducerOld::trustedRewrite(const" 100512]
[ebrowse-ms "uMinusToMult" () 0 () () 0 0  () "orem ArithTheoremProducerOld::uMinusToMult(const" 1900]
[ebrowse-ms "varToMult" () 0 () () 0 0  () "Theorem ArithTheoremProducerOld::varToMult(const" 1661]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryDatatypeLazy" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/theory_datatype_lazy.cpp" ]
()()
([ebrowse-ms "TheoryDatatypeLazy" () 0 () () 0 0  () "peLazy::TheoryDatatypeLazy(TheoryCore* core)
  :" 1138]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "void TheoryDatatypeLazy::checkSat(bool" 5983]
[ebrowse-ms "initializeLabels" () 0 () () 0 0  () "void TheoryDatatypeLazy::initializeLabels(const" 3012]
[ebrowse-ms "instantiate" () 0 () () 0 0  () "void TheoryDatatypeLazy::instantiate(const" 1457]
[ebrowse-ms "mergeLabels" () 0 () () 0 0  () "void TheoryDatatypeLazy::mergeLabels(const" 5140]
[ebrowse-ms "mergeLabels" () 0 () () 0 0  () "void TheoryDatatypeLazy::mergeLabels(const" 4223]
[ebrowse-ms "setup" () 0 () () 0 0  () "void TheoryDatatypeLazy::setup(const" 8134]
[ebrowse-ms "update" () 0 () () 0 0  () "void TheoryDatatypeLazy::update(const" 8696]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchEngineFast" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" ]
()()
([ebrowse-ms "SearchEngineFast" () 0 () () 0 0  () "gineFast::SearchEngineFast(TheoryCore* core)
  :" 2072]
[ebrowse-ms "addLiteralFact" () 0 () () 0 0  () "SearchEngineFast::addLiteralFact(const" 54156]
[ebrowse-ms "addNewClause" () 0 () () 0 0  () "void SearchEngineFast::addNewClause(Clause" 37119]
[ebrowse-ms "addNonLiteralFact" () 0 () () 0 0  () "SearchEngineFast::addNonLiteralFact(const" 50959]
[ebrowse-ms "addSplitter" () 0 () () 0 0  () "SearchEngineFast::addSplitter(const" 56709]
[ebrowse-ms "analyzeUIPs" () 0 () () 0 0  () "void SearchEngineFast::analyzeUIPs(const" 44870]
[ebrowse-ms "bcp" () 0 () () 0 0  () "bool SearchEngineFast::bcp()" 21928]
[ebrowse-ms "checkSAT" () 0 () () 0 0  () "QueryResult SearchEngineFast::checkSAT()" 6055]
[ebrowse-ms "checkValidInternal" () 0 () () 0 0  () "esult SearchEngineFast::checkValidInternal(const" 59975]
[ebrowse-ms "checkValidMain" () 0 () () 0 0  () "eryResult SearchEngineFast::checkValidMain(const" 57510]
[ebrowse-ms "clearFacts" () 0 () () 0 0  () "void SearchEngineFast::clearFacts()" 37002]
[ebrowse-ms "clearLiterals" () 0 () () 0 0  () "void SearchEngineFast::clearLiterals()" 21820]
[ebrowse-ms "commitFacts" () 0 () () 0 0  () "void SearchEngineFast::commitFacts()" 36678]
[ebrowse-ms "enqueueFact" () 0 () () 0 0  () "void SearchEngineFast::enqueueFact(const" 36110]
[ebrowse-ms "findSplitter" () 0 () () 0 0  () "Expr SearchEngineFast::findSplitter()" 15160]
[ebrowse-ms "fixConflict" () 0 () () 0 0  () "bool SearchEngineFast::fixConflict()" 33188]
[ebrowse-ms "fullCheck" () 0 () () 0 0  () "void SearchEngineFast::fullCheck()" 19943]
[ebrowse-ms "getCounterExample" () 0 () () 0 0  () "void SearchEngineFast::getCounterExample(std" 50252]
[ebrowse-ms "isAssumption" () 0 () () 0 0  () "SearchEngineFast::isAssumption(const" 56569]
[ebrowse-ms "newIntAssumption" () 0 () () 0 0  () "SearchEngineFast::newIntAssumption(const" 55971]
[ebrowse-ms "propagate" () 0 () () 0 0  () "bool SearchEngineFast::propagate(const" 28876]
[ebrowse-ms "recordFact" () 0 () () 0 0  () "void SearchEngineFast::recordFact(const" 18971]
[ebrowse-ms "restartInternal" () 0 () () 0 0  () "ryResult SearchEngineFast::restartInternal(const" 61823]
[ebrowse-ms "setInconsistent" () 0 () () 0 0  () "void SearchEngineFast::setInconsistent(const" 36438]
[ebrowse-ms "split" () 0 () () 0 0  () "bool SearchEngineFast::split()" 8907]
[ebrowse-ms "traceConflict" () 0 () () 0 0  () "void SearchEngineFast::traceConflict(const" 65263]
[ebrowse-ms "unitPropagation" () 0 () () 0 0  () "void SearchEngineFast::unitPropagation(const" 32428]
[ebrowse-ms "updateLitCounts" () 0 () () 0 0  () "void SearchEngineFast::updateLitCounts(const" 14176]
[ebrowse-ms "wp" () 0 () () 0 0  () "SearchEngineFast::wp(const" 4729]
[ebrowse-ms "~SearchEngineFast" () 0 () () 0 0  () "SearchEngineFast::~SearchEngineFast()" 4061]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CommonProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/common_proof_rules.h" "  class CommonProofRules {" 1335"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/common_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "CommonTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/common_theorem_producer.h" "  class CommonTheoremProducer:" 1097"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/common_theorem_producer.h" ]
()([ebrowse-ms "d_skolemVars" () 0 () "    CDMap<Expr, Theorem> d_skolemVars;" 1560 2  () () 0]
[ebrowse-ms "d_skolem_axioms" () 0 () "    std::vector<Theorem> d_skolem_axioms;" 1304 2  () () 0]
[ebrowse-ms "d_skolemized_thms" () 0 () "    CDMap<Expr, Theorem> d_skolemized_thms;" 1461 2  () () 0]
)
([ebrowse-ms "CommonTheoremProducer" () 0 () "    CommonTheoremProducer(TheoremManager* tm);" 1734 0  () () 0]
[ebrowse-ms "ackermann" () 1 () "    Theorem ackermann(const" 4768 0  () () 0]
[ebrowse-ms "andElim" () 1 () "    Theorem andElim(const" 3549 0  () () 0]
[ebrowse-ms "andIntro" () 1 () "    Theorem andIntro(const" 3656 0  () () 0]
[ebrowse-ms "andIntro" () 1 () "    Theorem andIntro(const" 3596 0  () () 0]
[ebrowse-ms "assumpRule" () 1 () "    Theorem assumpRule(const" 1995 0  () () 0]
[ebrowse-ms "clearSkolemAxioms" () 1 () "    void clearSkolemAxioms()" 4936 0  () "    void clearSkolemAxioms()" 4936]
[ebrowse-ms "contradictionRule" () 1 () "    Theorem contradictionRule(const" 3053 0  () () 0]
[ebrowse-ms "excludedMiddle" () 1 () "    Theorem excludedMiddle(const" 3121 0  () () 0]
[ebrowse-ms "findITE" () 0 () "    void findITE(const" 1623 2  () () 0]
[ebrowse-ms "getSkolemAxioms" () 1 () "    std::vector<Theorem>& getSkolemAxioms()" 4879 0  () "    std::vector<Theorem>& getSkolemAxioms()" 4879]
[ebrowse-ms "iffContrapositive" () 1 () "    Theorem iffContrapositive(const" 3336 0  () () 0]
[ebrowse-ms "iffFalseElim" () 1 () "    Theorem iffFalseElim(const" 3287 0  () () 0]
[ebrowse-ms "iffMP" () 1 () "    Theorem iffMP(const" 3417 0  () () 0]
[ebrowse-ms "iffNotFalse" () 1 () "    Theorem iffNotFalse(const" 3200 0  () () 0]
[ebrowse-ms "iffTrue" () 1 () "    Theorem iffTrue(const" 3157 0  () () 0]
[ebrowse-ms "iffTrueElim" () 1 () "    Theorem iffTrueElim(const" 3243 0  () () 0]
[ebrowse-ms "implContrapositive" () 1 () "    Theorem implContrapositive(const" 3796 0  () () 0]
[ebrowse-ms "implIntro" () 1 () "    Theorem implIntro(const" 3711 0  () () 0]
[ebrowse-ms "implIntro3" () 1 () "    Theorem3 implIntro3(const" 1877 0  () () 0]
[ebrowse-ms "implMP" () 1 () "    Theorem implMP(const" 3482 0  () () 0]
[ebrowse-ms "liftOneITE" () 1 () "    Theorem liftOneITE(const" 4824 0  () () 0]
[ebrowse-ms "notNotElim" () 1 () "    Theorem notNotElim(const" 3380 0  () () 0]
[ebrowse-ms "notToIff" () 1 () "    Theorem notToIff(const" 3968 0  () () 0]
[ebrowse-ms "queryTCC" () 1 () "    Theorem3 queryTCC(const" 1810 0  () () 0]
[ebrowse-ms "reflexivityRule" () 1 () "    Theorem reflexivityRule(const" 2055 0  () () 0]
[ebrowse-ms "rewriteAnd" () 1 () "    Theorem rewriteAnd(const" 4686 0  () () 0]
[ebrowse-ms "rewriteIff" () 1 () "    Theorem rewriteIff(const" 4051 0  () () 0]
[ebrowse-ms "rewriteIteFalse" () 1 () "    Theorem rewriteIteFalse(const" 3888 0  () () 0]
[ebrowse-ms "rewriteIteSame" () 1 () "    Theorem rewriteIteSame(const" 3931 0  () () 0]
[ebrowse-ms "rewriteIteTrue" () 1 () "    Theorem rewriteIteTrue(const" 3844 0  () () 0]
[ebrowse-ms "rewriteNotExists" () 1 () "    Theorem rewriteNotExists(const" 4356 0  () () 0]
[ebrowse-ms "rewriteNotFalse" () 1 () "    Theorem rewriteNotFalse(const" 4215 0  () () 0]
[ebrowse-ms "rewriteNotForall" () 1 () "    Theorem rewriteNotForall(const" 4302 0  () () 0]
[ebrowse-ms "rewriteNotNot" () 1 () "    Theorem rewriteNotNot(const" 4257 0  () () 0]
[ebrowse-ms "rewriteNotTrue" () 1 () "    Theorem rewriteNotTrue(const" 4171 0  () () 0]
[ebrowse-ms "rewriteOr" () 1 () "    Theorem rewriteOr(const" 4727 0  () () 0]
[ebrowse-ms "rewriteReflexivity" () 1 () "    Theorem rewriteReflexivity(const" 2102 0  () () 0]
[ebrowse-ms "rewriteUsingSymmetry" () 1 () "    Theorem rewriteUsingSymmetry(const" 2202 0  () () 0]
[ebrowse-ms "skolemize" () 1 () "    Theorem skolemize(const" 4572 0  () () 0]
[ebrowse-ms "skolemizeRewrite" () 1 () "    Theorem skolemizeRewrite(const" 4445 0  () () 0]
[ebrowse-ms "skolemizeRewriteVar" () 1 () "    Theorem skolemizeRewriteVar(const" 4493 0  () () 0]
[ebrowse-ms "substitutivityRule" () 1 () "    Theorem substitutivityRule(const" 2906 0  () () 0]
[ebrowse-ms "substitutivityRule" () 1 () "    Theorem substitutivityRule(const" 2725 0  () () 0]
[ebrowse-ms "substitutivityRule" () 1 () "    Theorem substitutivityRule(const" 2463 0  () () 0]
[ebrowse-ms "substitutivityRule" () 1 () "    Theorem substitutivityRule(const" 2614 0  () () 0]
[ebrowse-ms "symmetryRule" () 1 () "    Theorem symmetryRule(const" 2143 0  () () 0]
[ebrowse-ms "transitivityRule" () 1 () "    Theorem transitivityRule(const" 2254 0  () () 0]
[ebrowse-ms "trueTheorem" () 1 () "    Theorem trueTheorem()" 4656 0  () () 0]
[ebrowse-ms "varIntroRule" () 1 () "    Theorem varIntroRule(const" 4534 0  () () 0]
[ebrowse-ms "varIntroSkolem" () 1 () "    Theorem varIntroSkolem(const" 4620 0  () () 0]
[ebrowse-ms "xorToIff" () 1 () "    Theorem xorToIff(const" 4012 0  () () 0]
[ebrowse-ms "~CommonTheoremProducer" () 1 () "    virtual ~CommonTheoremProducer()" 1777 0  () "    virtual ~CommonTheoremProducer()" 1777]
)
()
()
()
()
()()
])()
([ebrowse-ms "ackermann" () 9 () "    virtual Theorem ackermann(const" 12218 0  () () 0]
[ebrowse-ms "andElim" () 9 () "    virtual Theorem andElim(const" 7580 0  () () 0]
[ebrowse-ms "andIntro" () 9 () "    virtual Theorem andIntro(const" 8102 0  () () 0]
[ebrowse-ms "andIntro" () 9 () "    virtual Theorem andIntro(const" 7818 0  () () 0]
[ebrowse-ms "assumpRule" () 9 () "    virtual Theorem assumpRule(const" 3120 0  () () 0]
[ebrowse-ms "clearSkolemAxioms" () 9 () "    virtual void clearSkolemAxioms()" 12176 0  () () 0]
[ebrowse-ms "contradictionRule" () 9 () "    virtual Theorem contradictionRule(const" 5698 0  () () 0]
[ebrowse-ms "excludedMiddle" () 9 () "    virtual Theorem excludedMiddle(const" 5807 0  () () 0]
[ebrowse-ms "getSkolemAxioms" () 9 () " virtual std::vector<Theorem>& getSkolemAxioms()" 12104 0  () () 0]
[ebrowse-ms "iffContrapositive" () 9 () "    virtual Theorem iffContrapositive(const" 6751 0  () () 0]
[ebrowse-ms "iffFalseElim" () 9 () "    virtual Theorem iffFalseElim(const" 6455 0  () () 0]
[ebrowse-ms "iffMP" () 9 () "    virtual Theorem iffMP(const" 7134 0  () () 0]
[ebrowse-ms "iffNotFalse" () 9 () "    virtual Theorem iffNotFalse(const" 6127 0  () () 0]
[ebrowse-ms "iffTrue" () 9 () "    virtual Theorem iffTrue(const" 5960 0  () () 0]
[ebrowse-ms "iffTrueElim" () 9 () "    virtual Theorem iffTrueElim(const" 6287 0  () () 0]
[ebrowse-ms "implContrapositive" () 9 () "    virtual Theorem implContrapositive(const" 8945 0  () () 0]
[ebrowse-ms "implIntro" () 9 () "    virtual Theorem implIntro(const" 8614 0  () () 0]
[ebrowse-ms "implIntro3" () 9 () "    virtual Theorem3 implIntro3(const" 2759 0  () () 0]
[ebrowse-ms "implMP" () 9 () "    virtual Theorem implMP(const" 7403 0  () () 0]
[ebrowse-ms "liftOneITE" () 9 () "    virtual Theorem liftOneITE(const" 12466 0  () () 0]
[ebrowse-ms "notNotElim" () 9 () "    virtual Theorem notNotElim(const" 6885 0  () () 0]
[ebrowse-ms "notToIff" () 9 () "    virtual Theorem notToIff(const" 9372 0  () () 0]
[ebrowse-ms "queryTCC" () 9 () "    virtual Theorem3 queryTCC(const" 1957 0  () () 0]
[ebrowse-ms "reflexivityRule" () 9 () "    virtual Theorem reflexivityRule(const" 3302 0  () () 0]
[ebrowse-ms "rewriteAnd" () 9 () "    virtual Theorem rewriteAnd(const" 11899 0  () () 0]
[ebrowse-ms "rewriteIff" () 9 () "    virtual Theorem rewriteIff(const" 9711 0  () () 0]
[ebrowse-ms "rewriteIteFalse" () 9 () "    virtual Theorem rewriteIteFalse(const" 9135 0  () () 0]
[ebrowse-ms "rewriteIteSame" () 9 () "    virtual Theorem rewriteIteSame(const" 9220 0  () () 0]
[ebrowse-ms "rewriteIteTrue" () 9 () "    virtual Theorem rewriteIteTrue(const" 9042 0  () () 0]
[ebrowse-ms "rewriteNotExists" () 9 () "    virtual Theorem rewriteNotExists(const" 10576 0  () () 0]
[ebrowse-ms "rewriteNotFalse" () 9 () "    virtual Theorem rewriteNotFalse(const" 10241 0  () () 0]
[ebrowse-ms "rewriteNotForall" () 9 () "    virtual Theorem rewriteNotForall(const" 10451 0  () () 0]
[ebrowse-ms "rewriteNotNot" () 9 () "    virtual Theorem rewriteNotNot(const" 10335 0  () () 0]
[ebrowse-ms "rewriteNotTrue" () 9 () "    virtual Theorem rewriteNotTrue(const" 10153 0  () () 0]
[ebrowse-ms "rewriteOr" () 9 () "    virtual Theorem rewriteOr(const" 11997 0  () () 0]
[ebrowse-ms "rewriteReflexivity" () 9 () "    virtual Theorem rewriteReflexivity(const" 3392 0  () () 0]
[ebrowse-ms "rewriteUsingSymmetry" () 9 () "    virtual Theorem rewriteUsingSymmetry(const" 3716 0  () () 0]
[ebrowse-ms "skolemize" () 9 () "    virtual Theorem skolemize(const" 11493 0  () () 0]
[ebrowse-ms "skolemizeRewrite" () 9 () "    virtual Theorem skolemizeRewrite(const" 11026 0  () () 0]
[ebrowse-ms "skolemizeRewriteVar" () 9 () "    virtual Theorem skolemizeRewriteVar(const" 11153 0  () () 0]
[ebrowse-ms "substitutivityRule" () 9 () "    virtual Theorem substitutivityRule(const" 5417 0  () () 0]
[ebrowse-ms "substitutivityRule" () 9 () "    virtual Theorem substitutivityRule(const" 5208 0  () () 0]
[ebrowse-ms "substitutivityRule" () 9 () "    virtual Theorem substitutivityRule(const" 4217 0  () () 0]
[ebrowse-ms "substitutivityRule" () 9 () "    virtual Theorem substitutivityRule(const" 4580 0  () () 0]
[ebrowse-ms "symmetryRule" () 9 () "    virtual Theorem symmetryRule(const" 3549 0  () () 0]
[ebrowse-ms "transitivityRule" () 9 () "    virtual Theorem transitivityRule(const" 3908 0  () () 0]
[ebrowse-ms "trueTheorem" () 9 () "    virtual Theorem trueTheorem()" 11815 0  () () 0]
[ebrowse-ms "varIntroRule" () 9 () "    virtual Theorem varIntroRule(const" 11234 0  () () 0]
[ebrowse-ms "varIntroSkolem" () 9 () "    virtual Theorem varIntroSkolem(const" 11727 0  () () 0]
[ebrowse-ms "xorToIff" () 9 () "    virtual Theorem xorToIff(const" 9543 0  () () 0]
[ebrowse-ms "~CommonProofRules" () 1 () "    virtual ~CommonProofRules()" 1396 0  () "    virtual ~CommonProofRules()" 1396]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchEngine" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_theorem_producer.cpp" ]
()()
([ebrowse-ms "SearchEngine" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search.cpp" "SearchEngine::SearchEngine(TheoryCore* core)
  :" 802]
[ebrowse-ms "createRules" () 0 () () 0 0  () "SearchEngine::createRules()" 1090]
[ebrowse-ms "getConcreteModel" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search.cpp" "void SearchEngine::getConcreteModel(ExprMap" 1018]
[ebrowse-ms "~SearchEngine" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search.cpp" "SearchEngine::~SearchEngine()" 950]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchEngine" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search.h" "class SearchEngine {" 1327"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search.h" ]
([ebrowse-ts [ebrowse-cs "SearchImplBase" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_impl_base.h" "class SearchImplBase :" 1008"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_impl_base.h" ]
([ebrowse-ts [ebrowse-cs "SearchEngineFast" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_fast.h" "  class SearchEngineFast :" 2929"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_fast.h" ]
()([ebrowse-ms "d_berkminFlag" () 0 () "    const bool d_berkminFlag;" 10376 2  () () 0]
[ebrowse-ms "d_circuitPropCount" () 0 () "    StatCounter d_circuitPropCount;" 3277 2  () () 0]
[ebrowse-ms "d_circuits" () 0 () "    std::vector<Circuit*> d_circuits;" 8102 2  () () 0]
[ebrowse-ms "d_circuitsByExpr" () 0 () "ashMap<std::vector<Circuit*> > d_circuitsByExpr;" 8160 2  () () 0]
[ebrowse-ms "d_clauses" () 0 () "    CDList<ClauseOwner> d_clauses;" 3638 2  () () 0]
[ebrowse-ms "d_clausesQueryEnd" () 0 () "    CDO<unsigned> d_clausesQueryEnd;" 4800 2  () () 0]
[ebrowse-ms "d_clausesQueryStart" () 0 () "    CDO<unsigned> d_clausesQueryStart;" 4725 2  () () 0]
[ebrowse-ms "d_conflictClauseCount" () 0 () "    StatCounter d_conflictClauseCount;" 3458 2  () () 0]
[ebrowse-ms "d_conflictClauseManager" () 0 () "  ConflictClauseManager d_conflictClauseManager;" 5749 2  () () 0]
[ebrowse-ms "d_conflictClauseStack" () 0 () "td::deque<ClauseOwner>* > d_conflictClauseStack;" 4939 2  () () 0]
[ebrowse-ms "d_conflictClauses" () 0 () "    std::deque<ClauseOwner>* d_conflictClauses;" 5038 2  () () 0]
[ebrowse-ms "d_conflictCount" () 0 () "    StatCounter d_conflictCount;" 3344 2  () () 0]
[ebrowse-ms "d_conflictTheorem" () 0 () "    Theorem d_conflictTheorem;" 8754 2  () () 0]
[ebrowse-ms "d_decisionEngine" () 0 () "    DecisionEngine *d_decisionEngine;" 3121 2  () () 0]
[ebrowse-ms "d_factQueue" () 0 () "    std::vector<Theorem> d_factQueue;" 7167 2  () () 0]
[ebrowse-ms "d_inCheckSAT" () 0 () "    bool d_inCheckSAT;" 7500 2  () () 0]
[ebrowse-ms "d_lastConflictClause" () 0 () "    Clause d_lastConflictClause;" 8673 2  () () 0]
[ebrowse-ms "d_lastConflictScope" () 0 () "    int d_lastConflictScope;" 8345 2  () () 0]
[ebrowse-ms "d_litSortCount" () 0 () "    int d_litSortCount;" 10293 2  () () 0]
[ebrowse-ms "d_literalSet" () 0 () "    CDMap<Expr,Literal> d_literalSet;" 7036 2  () () 0]
[ebrowse-ms "d_literals" () 0 () "    std::vector<Literal> d_literals;" 6601 2  () () 0]
[ebrowse-ms "d_litsAlive" () 0 () "    CDList<Literal> d_litsAlive;" 7769 2  () () 0]
[ebrowse-ms "d_litsByScores" () 0 () "    std::vector<Literal> d_litsByScores;" 9809 2  () () 0]
[ebrowse-ms "d_litsMaxScorePos" () 0 () "    unsigned d_litsMaxScorePos;" 9725 2  () () 0]
[ebrowse-ms "d_name" () 0 () "    std::string d_name;" 3059 2  () () 0]
[ebrowse-ms "d_nonLiterals" () 0 () "    CDList<SmartCDO<Theorem> > d_nonLiterals;" 4173 2  () () 0]
[ebrowse-ms "d_nonLiteralsSaved" () 0 () "    CDMap<Expr,Theorem> d_nonLiteralsSaved;" 4217 2  () () 0]
[ebrowse-ms "d_nonlitQueryEnd" () 0 () "    CDO<unsigned> d_nonlitQueryEnd;" 4635 2  () () 0]
[ebrowse-ms "d_nonlitQueryStart" () 0 () "    CDO<unsigned> d_nonlitQueryStart;" 4515 2  () () 0]
[ebrowse-ms "d_simplifiedThm" () 0 () "    CDO<Theorem> d_simplifiedThm;" 4421 2  () () 0]
[ebrowse-ms "d_splitterCount" () 0 () "    int d_splitterCount;" 10189 2  () () 0]
[ebrowse-ms "d_unitConflictClauses" () 0 () "    std::vector<Clause> d_unitConflictClauses;" 6309 2  () () 0]
[ebrowse-ms "d_unitPropCount" () 0 () "    StatCounter d_unitPropCount;" 3196 2  () () 0]
[ebrowse-ms "d_unreportedLits" () 0 () "    CDMap<Expr,Theorem> d_unreportedLits;" 3826 2  () () 0]
[ebrowse-ms "d_unreportedLitsHandled" () 0 () "    CDMap<Expr,bool> d_unreportedLitsHandled;" 3872 2  () () 0]
[ebrowse-ms "d_useEnqueueFact" () 0 () "    bool d_useEnqueueFact;" 7303 2  () () 0]
)
([ebrowse-ms "IF_DEBUG" () 0 () "    IF_DEBUG(void" 14772 2  () () 0]
[ebrowse-ms "SearchEngineFast" () 0 () "    SearchEngineFast(TheoryCore* core);" 15268 0  () () 0]
[ebrowse-ms "addLiteralFact" () 1 () "    void addLiteralFact(const" 15739 0  () () 0]
[ebrowse-ms "addNonLiteralFact" () 1 () "    void addNonLiteralFact(const" 15850 0  () () 0]
[ebrowse-ms "addSplitter" () 1 () "    void addSplitter(const" 16102 0  () () 0]
[ebrowse-ms "analyzeUIPs" () 0 () "    void analyzeUIPs(const" 14531 2  () () 0]
[ebrowse-ms "assertAssumptions" () 0 () "    void assertAssumptions()" 13625 2  () () 0]
[ebrowse-ms "bcp" () 0 () "    bool bcp()" 12524 2  () () 0]
[ebrowse-ms "checkSAT" () 0 () "    QueryResult checkSAT()" 9097 2  () () 0]
[ebrowse-ms "checkValidInternal" () 1 () "    virtual QueryResult checkValidInternal(const" 15469 0  () () 0]
[ebrowse-ms "checkValidMain" () 0 () "    QueryResult checkValidMain(const" 15185 2  () () 0]
[ebrowse-ms "clearFacts" () 0 () "    void clearFacts()" 13956 2  () () 0]
[ebrowse-ms "clearLiterals" () 0 () "    void clearLiterals()" 10459 2  () () 0]
[ebrowse-ms "commitFacts" () 0 () "    void commitFacts()" 13898 2  () () 0]
[ebrowse-ms "enqueueFact" () 0 () "    void enqueueFact(const" 13704 2  () () 0]
[ebrowse-ms "findSplitter" () 0 () "    Expr findSplitter()" 9629 2  () () 0]
[ebrowse-ms "fixConflict" () 0 () "    bool fixConflict()" 13566 2  () () 0]
[ebrowse-ms "getCounterExample" () 1 () "    virtual void getCounterExample(std" 15622 0  () () 0]
[ebrowse-ms "getName" () 0 () "    const std::string& getName()" 15362 0  () "    const std::string& getName()" 15362]
[ebrowse-ms "isAssumption" () 1 () "    virtual bool isAssumption(const" 16065 0  () () 0]
[ebrowse-ms "newIntAssumption" () 1 () "    virtual Theorem newIntAssumption(const" 16019 0  () () 0]
[ebrowse-ms "processConflict" () 0 () "    Theorem processConflict(const" 14214 2  () () 0]
[ebrowse-ms "propagate" () 0 () "    bool propagate(const" 14312 2  () () 0]
[ebrowse-ms "recordFact" () 0 () "    void recordFact(const" 14955 2  () () 0]
[ebrowse-ms "restartInternal" () 1 () "    virtual QueryResult restartInternal(const" 15525 0  () () 0]
[ebrowse-ms "setInconsistent" () 0 () "    void setInconsistent(const" 13811 2  () () 0]
[ebrowse-ms "split" () 0 () "    bool split()" 9537 2  () () 0]
[ebrowse-ms "traceConflict" () 0 () "    void traceConflict(const" 15066 2  () () 0]
[ebrowse-ms "unitPropagation" () 0 () "    void unitPropagation(const" 14428 2  () () 0]
[ebrowse-ms "updateLitCounts" () 0 () "    void updateLitCounts(const" 10593 2  () () 0]
[ebrowse-ms "updateLitScores" () 0 () "    void updateLitScores(bool" 10491 2  () () 0]
[ebrowse-ms "wp" () 0 () "  std::vector<std::pair<Clause, int> >& wp(const" 8916 2  () () 0]
[ebrowse-ms "~SearchEngineFast" () 1 () "    virtual ~SearchEngineFast()" 15327 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchSimple" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_simple.h" "class SearchSimple:" 1019"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_simple.h" ]
()([ebrowse-ms "d_decisionEngine" () 0 () "  DecisionEngine* d_decisionEngine;" 1179 2  () () 0]
[ebrowse-ms "d_goal" () 0 () "  CDO<Theorem> d_goal;" 1231 2  () () 0]
[ebrowse-ms "d_name" () 0 () "  std::string d_name;" 1120 2  () () 0]
[ebrowse-ms "d_nonLiterals" () 0 () "  CDO<Theorem> d_nonLiterals;" 1298 2  () () 0]
[ebrowse-ms "d_simplifiedThm" () 0 () "  CDO<Theorem> d_simplifiedThm;" 1391 2  () () 0]
)
([ebrowse-ms "SearchSimple" () 0 () "  SearchSimple(TheoryCore* core);" 1641 0  () () 0]
[ebrowse-ms "addLiteralFact" () 1 () "  void addLiteralFact(const" 1913 0  () "  void addLiteralFact(const" 1913]
[ebrowse-ms "addNonLiteralFact" () 1 () "  void addNonLiteralFact(const" 1961 0  () () 0]
[ebrowse-ms "checkValidInternal" () 1 () "  QueryResult checkValidInternal(const" 1829 0  () () 0]
[ebrowse-ms "checkValidMain" () 0 () "  QueryResult checkValidMain(const" 1577 2  () () 0]
[ebrowse-ms "checkValidRec" () 0 () "  QueryResult checkValidRec(Theorem" 1478 2  () () 0]
[ebrowse-ms "getName" () 0 () "  const std::string& getName()" 1771 0  () "  const std::string& getName()" 1771]
[ebrowse-ms "restartInternal" () 1 () "  QueryResult restartInternal(const" 1875 0  () () 0]
[ebrowse-ms "~SearchSimple" () 0 () "  ~SearchSimple()" 1684 0  () () 0]
)
()
()
()
()
()()
])([ebrowse-ms "d_applyCNFRulesCache" () 0 () "  CDMap<Expr,bool> d_applyCNFRulesCache;" 3725 1  () () 0]
[ebrowse-ms "d_assumptions" () 0 () "  CDMap<Expr,Theorem> d_assumptions;" 2551 1  () () 0]
[ebrowse-ms "d_bottomScope" () 0 () "  CDO<int> d_bottomScope;" 1334 1  () () 0]
[ebrowse-ms "d_cnfCache" () 0 () "  CDMap<Expr, Theorem> d_cnfCache;" 2634 1  () () 0]
[ebrowse-ms "d_cnfOption" () 0 () "  const bool* d_cnfOption;" 2883 1  () () 0]
[ebrowse-ms "d_cnfVars" () 0 () "  CDMap<Expr, bool> d_cnfVars;" 2806 1  () () 0]
[ebrowse-ms "d_coreSatAPI_implBase" () 0 () "  TheoryCore::CoreSatAPI* d_coreSatAPI_implBase;" 1384 1  () () 0]
[ebrowse-ms "d_dpSplitters" () 0 () "  CDList<Splitter> d_dpSplitters;" 2110 1  () () 0]
[ebrowse-ms "d_enqueueCNFCache" () 0 () "  CDMap<Expr,bool> d_enqueueCNFCache;" 3652 1  () () 0]
[ebrowse-ms "d_ifLiftOption" () 0 () "  const bool* d_ifLiftOption;" 2963 1  () () 0]
[ebrowse-ms "d_ignoreCnfVarsOption" () 0 () "  const bool* d_ignoreCnfVarsOption;" 3073 1  () () 0]
[ebrowse-ms "d_lastCounterExample" () 0 () "  ExprHashMap<bool> d_lastCounterExample;" 2403 1  () () 0]
[ebrowse-ms "d_lastValid" () 0 () "  Theorem d_lastValid;" 2248 1  () () 0]
[ebrowse-ms "d_origFormulaOption" () 0 () "  const bool* d_origFormulaOption;" 3186 1  () () 0]
[ebrowse-ms "d_replaceITECache" () 0 () "  CDMap<Expr,Theorem> d_replaceITECache;" 3795 1  () () 0]
[ebrowse-ms "d_vm" () 0 () "  VariableManager* d_vm;" 1188 1  () () 0]
)
([ebrowse-ms "SearchImplBase" () 0 () "  SearchImplBase(TheoryCore* core);" 6742 0  () () 0]
[ebrowse-ms "addCNFFact" () 0 () "  void addCNFFact(const" 5238 1  () () 0]
[ebrowse-ms "addFact" () 0 () "  void addFact(const" 9476 0  () () 0]
[ebrowse-ms "addLiteralFact" () 9 () "  virtual void addLiteralFact(const" 4519 1  () () 0]
[ebrowse-ms "addNonLiteralFact" () 9 () "  virtual void addNonLiteralFact(const" 4880 1  () () 0]
[ebrowse-ms "addSplitter" () 1 () "  virtual void addSplitter(const" 10049 0  () () 0]
[ebrowse-ms "addToCNFCache" () 0 () "  void addToCNFCache(const" 6302 2  () () 0]
[ebrowse-ms "applyCNFRules" () 0 () "  void applyCNFRules(const" 6197 2  () () 0]
[ebrowse-ms "checkValid" () 1 () "  virtual QueryResult checkValid(const" 7771 0  () () 0]
[ebrowse-ms "checkValidInternal" () 9 () "  virtual QueryResult checkValidInternal(const" 7647 0  () () 0]
[ebrowse-ms "enqueueCNF" () 0 () "  void enqueueCNF(const" 6040 2  () () 0]
[ebrowse-ms "enqueueCNFrec" () 0 () "  void enqueueCNFrec(const" 6124 2  () () 0]
[ebrowse-ms "findInCNFCache" () 0 () "  Theorem findInCNFCache(const" 6454 2  () () 0]
[ebrowse-ms "getAssumptions" () 1 () "  virtual void getAssumptions(std" 9219 0  () () 0]
[ebrowse-ms "getAssumptionsUsed" () 1 () " virtual const Assumptions& getAssumptionsUsed()" 10779 0  () () 0]
[ebrowse-ms "getBottomScope" () 0 () "  int getBottomScope()" 5308 0  () "  int getBottomScope()" 5308]
[ebrowse-ms "getCounterExample" () 1 () "  virtual void getCounterExample(std" 10113 0  () () 0]
[ebrowse-ms "getImpliedLiteral" () 1 () "  virtual Theorem getImpliedLiteral()" 6935 0  () "  virtual Theorem getImpliedLiteral()" 6935]
[ebrowse-ms "getInternalAssumptions" () 1 () "  void getInternalAssumptions(std" 9156 0  () () 0]
[ebrowse-ms "getProof" () 1 () "  virtual Proof getProof()" 10501 0  () () 0]
[ebrowse-ms "getUserAssumptions" () 1 () "  void getUserAssumptions(std" 9093 0  () () 0]
[ebrowse-ms "getValue" () 3 () "  inline virtual FormulaValue getValue(const" 10930 0  () "  inline virtual FormulaValue getValue(const" 10930]
[ebrowse-ms "isAssumption" () 1 () "  virtual bool isAssumption(const" 9326 0  () () 0]
[ebrowse-ms "isCNFVar" () 0 () "  bool isCNFVar(const" 5736 0  () "  bool isCNFVar(const" 5736]
[ebrowse-ms "isClause" () 0 () "  bool isClause(const" 5428 0  () () 0]
[ebrowse-ms "isGoodSplitter" () 0 () "  bool isGoodSplitter(const" 5937 0  () () 0]
[ebrowse-ms "isPropClause" () 0 () "  bool isPropClause(const" 5534 0  () () 0]
[ebrowse-ms "lastThm" () 1 () "  virtual Theorem lastThm()" 8146 0  () "  virtual Theorem lastThm()" 8146]
[ebrowse-ms "newIntAssumption" () 0 () "  void newIntAssumption(const" 8880 0  () () 0]
[ebrowse-ms "newLiteral" () 0 () "  Literal newLiteral(const" 3920 1  () "  Literal newLiteral(const" 3920]
[ebrowse-ms "newUserAssumption" () 1 () "  Theorem newUserAssumption(const" 8723 0  () () 0]
[ebrowse-ms "pop" () 1 () "  virtual void pop()" 7047 0  () "  virtual void pop()" 7047]
[ebrowse-ms "processResult" () 0 () "  void processResult(const" 10843 0  () () 0]
[ebrowse-ms "push" () 1 () "  virtual void push()" 6997 0  () "  virtual void push()" 6997]
[ebrowse-ms "registerAtom" () 1 () "  virtual void registerAtom(const" 6831 0  () "  virtual void registerAtom(const" 6831]
[ebrowse-ms "replaceITE" () 0 () "  Theorem replaceITE(const" 6546 2  () () 0]
[ebrowse-ms "restart" () 1 () "  virtual QueryResult restart(const" 8010 0  () () 0]
[ebrowse-ms "restartInternal" () 9 () "  virtual QueryResult restartInternal(const" 7901 0  () () 0]
[ebrowse-ms "returnFromCheck" () 1 () "  void returnFromCheck()" 8062 0  () "  void returnFromCheck()" 8062]
[ebrowse-ms "scopeLevel" () 0 () "  int scopeLevel()" 6645 1  () "  int scopeLevel()" 6645]
[ebrowse-ms "simplify" () 0 () "  Theorem simplify(const" 4107 1  () "  Theorem simplify(const" 4107]
[ebrowse-ms "~SearchImplBase" () 1 () "  virtual ~SearchImplBase()" 6795 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchSat" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "class SearchSat :" 1003"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" ]
()([ebrowse-ms "d_bottomScope" () 0 () "  CDO<int> d_bottomScope;" 1139 2  () () 0]
[ebrowse-ms "d_cnfCallback" () 0 () "  SAT::CNF_Manager::CNFCallback *d_cnfCallback;" 2125 2  () () 0]
[ebrowse-ms "d_cnfManager" () 0 () "  SAT::CNF_Manager *d_cnfManager;" 2045 2  () () 0]
[ebrowse-ms "d_coreSatAPI" () 0 () "  TheoryCore::CoreSatAPI* d_coreSatAPI;" 1620 2  () () 0]
[ebrowse-ms "d_decider" () 0 () "  SAT::DPLLT::Decider* d_decider;" 1842 2  () () 0]
[ebrowse-ms "d_dpllt" () 0 () "  SAT::DPLLT* d_dpllt;" 1682 2  () () 0]
[ebrowse-ms "d_dplltReady" () 0 () "  CDO<bool> d_dplltReady;" 4443 2  () () 0]
[ebrowse-ms "d_idxUserAssump" () 0 () "  CDO<unsigned> d_idxUserAssump;" 1579 2  () () 0]
[ebrowse-ms "d_inCheckSat" () 0 () "  bool d_inCheckSat;" 2278 2  () () 0]
[ebrowse-ms "d_intAssumptions" () 0 () "  CDList<Theorem> d_intAssumptions;" 1494 2  () () 0]
[ebrowse-ms "d_lastCheck" () 0 () "  CDO<Expr> d_lastCheck;" 1202 2  () () 0]
[ebrowse-ms "d_lastRegisteredVar" () 0 () "  CDO<unsigned> d_lastRegisteredVar;" 4350 2  () () 0]
[ebrowse-ms "d_lastValid" () 0 () "  CDO<Theorem> d_lastValid;" 1345 2  () () 0]
[ebrowse-ms "d_lemmas" () 0 () "  SAT::CD_CNF_Formula d_lemmas;" 2352 2  () () 0]
[ebrowse-ms "d_lemmasNext" () 0 () "  CDO<unsigned> d_lemmasNext;" 2847 2  () () 0]
[ebrowse-ms "d_name" () 0 () "  std::string d_name;" 1075 2  () () 0]
[ebrowse-ms "d_nextImpliedLiteral" () 0 () "  CDO<unsigned> d_nextImpliedLiteral;" 4482 2  () () 0]
[ebrowse-ms "d_pendingLemmas" () 0 () "ector<std::pair<Theorem, int> > d_pendingLemmas;" 2483 2  () () 0]
[ebrowse-ms "d_pendingLemmasNext" () 0 () "  CDO<unsigned> d_pendingLemmasNext;" 2781 2  () () 0]
[ebrowse-ms "d_pendingLemmasSize" () 0 () "  CDO<unsigned> d_pendingLemmasSize;" 2695 2  () () 0]
[ebrowse-ms "d_pendingScopes" () 0 () "  std::vector<bool> d_pendingScopes;" 2614 2  () () 0]
[ebrowse-ms "d_prioritySet" () 0 () "  std::set<LitPriorityPair> d_prioritySet;" 3561 2  () () 0]
[ebrowse-ms "d_prioritySetBottomEntries" () 0 () "rityPair>::iterator> d_prioritySetBottomEntries;" 4269 2  () () 0]
[ebrowse-ms "d_prioritySetBottomEntriesSize" () 0 () "  unsigned d_prioritySetBottomEntriesSize;" 4113 2  () () 0]
[ebrowse-ms "d_prioritySetBottomEntriesSizeStack" () 0 () "r<unsigned> d_prioritySetBottomEntriesSizeStack;" 4033 2  () () 0]
[ebrowse-ms "d_prioritySetEntries" () 0 () "itPriorityPair>::iterator> d_prioritySetEntries;" 3908 2  () () 0]
[ebrowse-ms "d_prioritySetEntriesSize" () 0 () "  CDO<unsigned> d_prioritySetEntriesSize;" 3758 2  () () 0]
[ebrowse-ms "d_prioritySetStart" () 0 () "iorityPair>::const_iterator> d_prioritySetStart;" 3668 2  () () 0]
[ebrowse-ms "d_restorer" () 0 () "  Restorer d_restorer;" 5061 2  () () 0]
[ebrowse-ms "d_theorems" () 0 () "  CDMap<Expr, Theorem> d_theorems;" 1932 2  () () 0]
[ebrowse-ms "d_theoryAPI" () 0 () "  SAT::DPLLT::TheoryAPI* d_theoryAPI;" 1765 2  () () 0]
[ebrowse-ms "d_userAssumptions" () 0 () "  CDList<Theorem> d_userAssumptions;" 1418 2  () () 0]
[ebrowse-ms "d_vars" () 0 () "  std::vector<SAT::Var::Val> d_vars;" 2196 2  () () 0]
[ebrowse-ms "d_varsUndoList" () 0 () "  std::vector<unsigned> d_varsUndoList;" 2927 2  () () 0]
[ebrowse-ms "d_varsUndoListSize" () 0 () "  CDO<unsigned> d_varsUndoListSize;" 3006 2  () () 0]
)
([ebrowse-ms "SearchSat" () 0 () "hSat(TheoryCore* core, const std::string& name);" 8966 0  () () 0]
[ebrowse-ms "addLemma" () 0 () "  void addLemma(const" 5532 2  () () 0]
[ebrowse-ms "addSplitter" () 0 () "  void addSplitter(const" 5796 2  () () 0]
[ebrowse-ms "assertLit" () 0 () "  void assertLit(SAT" 5948 2  () () 0]
[ebrowse-ms "check" () 0 () "  QueryResult check(const" 8451 2  () () 0]
[ebrowse-ms "checkConsistent" () 0 () "SAT::DPLLT::ConsistentResult checkConsistent(SAT" 6074 2  () () 0]
[ebrowse-ms "checkJustified" () 0 () "  bool checkJustified(SAT" 8150 2  () "  bool checkJustified(SAT" 8150]
[ebrowse-ms "checkValid" () 1 () "  virtual QueryResult checkValid(const" 9358 0  () "  virtual QueryResult checkValid(const" 9358]
[ebrowse-ms "findSplitterRec" () 0 () "  bool findSplitterRec(SAT" 6866 2  () () 0]
[ebrowse-ms "getAssumptions" () 1 () "  virtual void getAssumptions(std" 9828 0  () () 0]
[ebrowse-ms "getBottomScope" () 0 () "  int getBottomScope()" 5692 2  () "  int getBottomScope()" 5692]
[ebrowse-ms "getCounterExample" () 1 () "  virtual void getCounterExample(std" 9938 0  () () 0]
[ebrowse-ms "getExplanation" () 0 () "  void getExplanation(SAT" 6269 2  () () 0]
[ebrowse-ms "getImplication" () 0 () "  SAT::Lit getImplication()" 6188 2  () () 0]
[ebrowse-ms "getImpliedLiteral" () 1 () "  virtual Theorem getImpliedLiteral()" 9234 0  () () 0]
[ebrowse-ms "getInternalAssumptions" () 1 () "  virtual void getInternalAssumptions(std" 9765 0  () () 0]
[ebrowse-ms "getName" () 1 () "  virtual const std::string& getName()" 9133 0  () "  virtual const std::string& getName()" 9133]
[ebrowse-ms "getNewClauses" () 0 () "  bool getNewClauses(SAT" 6383 2  () () 0]
[ebrowse-ms "getProof" () 1 () "  virtual Proof getProof()" 10047 0  () () 0]
[ebrowse-ms "getUserAssumptions" () 1 () "  virtual void getUserAssumptions(std" 9694 0  () () 0]
[ebrowse-ms "getValue" () 1 () "  virtual FormulaValue getValue(const" 10098 0  () "  virtual FormulaValue getValue(const" 10098]
[ebrowse-ms "getValue" () 0 () "  SAT::Var::Val getValue(SAT" 7383 2  () "  SAT::Var::Val getValue(SAT" 7383]
[ebrowse-ms "getValue" () 0 () "  SAT::Var::Val getValue(SAT" 7011 2  () "  SAT::Var::Val getValue(SAT" 7011]
[ebrowse-ms "isAssumption" () 1 () "  virtual bool isAssumption(const" 9891 0  () () 0]
[ebrowse-ms "lastThm" () 1 () "  virtual Theorem lastThm()" 9580 0  () "  virtual Theorem lastThm()" 9580]
[ebrowse-ms "makeDecision" () 0 () "  SAT::Lit makeDecision()" 6525 2  () () 0]
[ebrowse-ms "newUserAssumption" () 1 () "  virtual Theorem newUserAssumption(const" 9646 0  () () 0]
[ebrowse-ms "newUserAssumptionInt" () 0 () "  Theorem newUserAssumptionInt(const" 8750 2  () () 0]
[ebrowse-ms "newUserAssumptionIntHelper" () 0 () "  void newUserAssumptionIntHelper(const" 8581 2  () () 0]
[ebrowse-ms "pop" () 1 () "  virtual void pop()" 9299 0  () "  virtual void pop()" 9299]
[ebrowse-ms "push" () 1 () "  virtual void push()" 9257 0  () "  virtual void push()" 9257]
[ebrowse-ms "recordNewRootLit" () 0 () "  bool recordNewRootLit(SAT" 5308 2  () () 0]
[ebrowse-ms "registerAtom" () 1 () "  virtual void registerAtom(const" 9186 0  () () 0]
[ebrowse-ms "restart" () 1 () "  virtual QueryResult restart(const" 9453 0  () "  virtual QueryResult restart(const" 9453]
[ebrowse-ms "restore" () 0 () "  void restore()" 5243 2  () () 0]
[ebrowse-ms "restorePre" () 0 () "  void restorePre()" 5145 2  () () 0]
[ebrowse-ms "returnFromCheck" () 1 () "  virtual void returnFromCheck()" 9551 0  () () 0]
[ebrowse-ms "setJustified" () 0 () "  void setJustified(SAT" 8290 2  () "  void setJustified(SAT" 8290]
[ebrowse-ms "setValue" () 0 () "  void setValue(SAT" 7566 2  () "  void setValue(SAT" 7566]
[ebrowse-ms "~SearchSat" () 1 () "  virtual ~SearchSat()" 9040 0  () () 0]
)
()
()
()
()
()()
])([ebrowse-ms "d_commonRules" () 0 () "  CommonProofRules* d_commonRules;" 1492 1  () () 0]
[ebrowse-ms "d_core" () 0 () "  TheoryCore* d_core;" 1431 1  () () 0]
[ebrowse-ms "d_rules" () 0 () "  SearchEngineRules* d_rules;" 1563 1  () () 0]
)
([ebrowse-ms "SearchEngine" () 0 () "  SearchEngine(TheoryCore* core);" 1755 0  () () 0]
[ebrowse-ms "checkValid" () 9 () "  virtual QueryResult checkValid(const" 3373 0  () () 0]
[ebrowse-ms "createRules" () 0 () "  SearchEngineRules* createRules()" 1699 1  () () 0]
[ebrowse-ms "getAssumptions" () 9 () "  virtual void getAssumptions(std" 5219 0  () () 0]
[ebrowse-ms "getCommonRules" () 0 () "  CommonProofRules* getCommonRules()" 1956 0  () "  CommonProofRules* getCommonRules()" 1956]
[ebrowse-ms "getConcreteModel" () 0 () "  void getConcreteModel(ExprMap" 6338 0  () () 0]
[ebrowse-ms "getCounterExample" () 9 () "  virtual void getCounterExample(std" 5888 0  () () 0]
[ebrowse-ms "getImpliedLiteral" () 9 () "  virtual Theorem getImpliedLiteral()" 2591 0  () () 0]
[ebrowse-ms "getInternalAssumptions" () 9 () "  virtual void getInternalAssumptions(std" 4983 0  () () 0]
[ebrowse-ms "getName" () 9 () "  virtual const std::string& getName()" 1881 0  () () 0]
[ebrowse-ms "getProof" () 9 () "  virtual Proof getProof()" 6167 0  () () 0]
[ebrowse-ms "getUserAssumptions" () 9 () "  virtual void getUserAssumptions(std" 4712 0  () () 0]
[ebrowse-ms "getValue" () 9 () "  virtual FormulaValue getValue(const" 6604 0  () () 0]
[ebrowse-ms "isAssumption" () 9 () "  virtual bool isAssumption(const" 5350 0  () () 0]
[ebrowse-ms "lastThm" () 9 () "  virtual Theorem lastThm()" 4072 0  () () 0]
[ebrowse-ms "newUserAssumption" () 9 () "  virtual Theorem newUserAssumption(const" 4360 0  () () 0]
[ebrowse-ms "pop" () 9 () "  virtual void pop()" 2700 0  () () 0]
[ebrowse-ms "push" () 9 () "  virtual void push()" 2643 0  () () 0]
[ebrowse-ms "registerAtom" () 9 () "  virtual void registerAtom(const" 2379 0  () () 0]
[ebrowse-ms "restart" () 9 () "  virtual QueryResult restart(const" 3683 0  () () 0]
[ebrowse-ms "returnFromCheck" () 9 () "  virtual void returnFromCheck()" 3923 0  () () 0]
[ebrowse-ms "theoryCore" () 0 () "  TheoryCore* theoryCore()" 2040 0  () "  TheoryCore* theoryCore()" 2040]
[ebrowse-ms "~SearchEngine" () 1 () "  virtual ~SearchEngine()" 1807 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ArrayProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/array_proof_rules.h" "  class ArrayProofRules {" 809"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/array_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "ArrayTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/array_theorem_producer.h" "  class ArrayTheoremProducer:" 1007() ]
()([ebrowse-ms "d_theoryArray" () 0 () "    TheoryArray* d_theoryArray;" 1099 2  () () 0]
)
([ebrowse-ms "ArrayTheoremProducer" () 0 () " ArrayTheoremProducer(TheoryArray* theoryArray);" 1166 0  () () 0]
[ebrowse-ms "arrayNotEq" () 1 () "    Theorem arrayNotEq(const" 3289 0  () () 0]
[ebrowse-ms "interchangeIndices" () 1 () "    Theorem interchangeIndices(const" 3050 0  () () 0]
[ebrowse-ms "liftReadIte" () 1 () "    Theorem liftReadIte(const" 3209 0  () () 0]
[ebrowse-ms "readArrayLiteral" () 1 () "    Theorem readArrayLiteral(const" 3168 0  () () 0]
[ebrowse-ms "rewriteReadWrite" () 1 () "    Theorem rewriteReadWrite(const" 2270 0  () () 0]
[ebrowse-ms "rewriteReadWrite2" () 1 () "    Theorem rewriteReadWrite2(const" 2549 0  () () 0]
[ebrowse-ms "rewriteRedundantWrite1" () 1 () "    Theorem rewriteRedundantWrite1(const" 2683 0  () () 0]
[ebrowse-ms "rewriteRedundantWrite2" () 1 () "    Theorem rewriteRedundantWrite2(const" 2857 0  () () 0]
[ebrowse-ms "rewriteSameStore" () 1 () "    Theorem rewriteSameStore(const" 1889 0  () () 0]
[ebrowse-ms "rewriteWriteWrite" () 1 () "    Theorem rewriteWriteWrite(const" 2111 0  () () 0]
)
()
()
()
()
()()
])()
([ebrowse-ms "arrayNotEq" () 9 () "    virtual Theorem arrayNotEq(const" 3126 0  () () 0]
[ebrowse-ms "interchangeIndices" () 9 () "    virtual Theorem interchangeIndices(const" 2822 0  () () 0]
[ebrowse-ms "liftReadIte" () 9 () "    virtual Theorem liftReadIte(const" 3033 0  () () 0]
[ebrowse-ms "readArrayLiteral" () 9 () "    virtual Theorem readArrayLiteral(const" 2953 0  () () 0]
[ebrowse-ms "rewriteReadWrite" () 9 () "    virtual Theorem rewriteReadWrite(const" 1993 0  () () 0]
[ebrowse-ms "rewriteReadWrite2" () 9 () "    virtual Theorem rewriteReadWrite2(const" 2284 0  () () 0]
[ebrowse-ms "rewriteRedundantWrite1" () 9 () "    virtual Theorem rewriteRedundantWrite1(const" 2430 0  () () 0]
[ebrowse-ms "rewriteRedundantWrite2" () 9 () "    virtual Theorem rewriteRedundantWrite2(const" 2617 0  () () 0]
[ebrowse-ms "rewriteSameStore" () 9 () "    virtual Theorem rewriteSameStore(const" 1588 0  () () 0]
[ebrowse-ms "rewriteWriteWrite" () 9 () "    virtual Theorem rewriteWriteWrite(const" 1822 0  () () 0]
[ebrowse-ms "~ArrayProofRules" () 1 () "    virtual ~ArrayProofRules()" 868 0  () "    virtual ~ArrayProofRules()" 868]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryQuant" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" ]
()()
([ebrowse-ms "TheoryQuant" () 0 () () 0 0  () "eoryQuant(TheoryCore* core) //!< Constructor
  :" 2700]
[ebrowse-ms "addNotify" () 0 () () 0 0  () "void TheoryQuant::addNotify(const" 30848]
[ebrowse-ms "add_parent" () 2 () () 0 0  () "inline void TheoryQuant::add_parent(const" 98490]
[ebrowse-ms "arrayHeuristic" () 0 () () 0 0  () "void TheoryQuant::arrayHeuristic(const" 198084]
[ebrowse-ms "arrayIndexName" () 0 () () 0 0  () "void TheoryQuant::arrayIndexName(const" 68312]
[ebrowse-ms "assertFact" () 0 () () 0 0  () "void TheoryQuant::assertFact(const" 92677]
[ebrowse-ms "backList" () 2 () () 0 0  () "nline CDList<Expr> & TheoryQuant::backList(const" 191128]
[ebrowse-ms "canMatch" () 0 () () 0 0  () "bool TheoryQuant::canMatch(const" 73190]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "void TheoryQuant::checkSat(bool" 210659]
[ebrowse-ms "collectChangedTerms" () 0 () () 0 0  () "void TheoryQuant::collectChangedTerms(CDList" 98956]
[ebrowse-ms "combineOldNewTrigs" () 0 () () 0 0  () "void TheoryQuant::combineOldNewTrigs(ExprMap" 111246]
[ebrowse-ms "computeTCC" () 0 () () 0 0  () "Expr TheoryQuant::computeTCC(const" 242760]
[ebrowse-ms "computeType" () 0 () () 0 0  () "void TheoryQuant::computeType(const" 241950]
[ebrowse-ms "createProofRules" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_theorem_producer.cpp" "QuantProofRules* TheoryQuant::createProofRules()" 896]
[ebrowse-ms "debug" () 0 () () 0 0  () "void TheoryQuant::debug(int" 10662]
[ebrowse-ms "delNewTrigs" () 0 () () 0 0  () "void TheoryQuant::delNewTrigs(ExprMap" 110584]
[ebrowse-ms "enqueueInst" () 0 () () 0 0  () "void TheoryQuant::enqueueInst(const" 29546]
[ebrowse-ms "enqueueInst" () 0 () () 0 0  () "void TheoryQuant::enqueueInst(size_t" 21829]
[ebrowse-ms "enqueueInst" () 0 () () 0 0  () "void TheoryQuant::enqueueInst(const" 18899]
[ebrowse-ms "exprMap2string" () 0 () () 0 0  () "std::string TheoryQuant::exprMap2string(const" 15246]
[ebrowse-ms "exprMap2stringSig" () 0 () () 0 0  () "std::string TheoryQuant::exprMap2stringSig(const" 16054]
[ebrowse-ms "exprMap2stringSimplify" () 0 () () 0 0  () "string TheoryQuant::exprMap2stringSimplify(const" 15648]
[ebrowse-ms "findInstAssumptions" () 0 () () 0 0  () "void TheoryQuant::findInstAssumptions(const" 241082]
[ebrowse-ms "forwList" () 2 () () 0 0  () "nline CDList<Expr> & TheoryQuant::forwList(const" 191294]
[ebrowse-ms "getExprScore" () 2 () () 0 0  () "int inline TheoryQuant::getExprScore(const" 9188]
[ebrowse-ms "getHead" () 0 () () 0 0  () "Expr  TheoryQuant::getHead(const" 32126]
[ebrowse-ms "getHeadExpr" () 0 () () 0 0  () "Expr TheoryQuant::getHeadExpr(const" 31266]
[ebrowse-ms "getSubTerms" () 0 () () 0 0  () "td::vector<Expr>& TheoryQuant::getSubTerms(const" 18407]
[ebrowse-ms "help" () 0 () () 0 0  () "int TheoryQuant::help(int" 10598]
[ebrowse-ms "instantiate" () 0 () () 0 0  () "void TheoryQuant::instantiate(Theorem" 234785]
[ebrowse-ms "isTrans2Like" () 0 () () 0 0  () "bool TheoryQuant::isTrans2Like (const" 74998]
[ebrowse-ms "isTransLike" () 0 () () 0 0  () "bool TheoryQuant::isTransLike (const" 73778]
[ebrowse-ms "iterBKList" () 2 () () 0 0  () "void inline TheoryQuant::iterBKList(const" 198853]
[ebrowse-ms "iterFWList" () 2 () () 0 0  () "void inline TheoryQuant::iterFWList(const" 198495]
[ebrowse-ms "loc_gterm" () 0 () () 0 0  () "int TheoryQuant::loc_gterm(const" 183479]
[ebrowse-ms "mapTermsByType" () 0 () () 0 0  () "void TheoryQuant::mapTermsByType(const" 237507]
[ebrowse-ms "matchListNew" () 0 () () 0 0  () "void TheoryQuant::matchListNew(ExprMap" 113777]
[ebrowse-ms "matchListOld" () 0 () () 0 0  () "void TheoryQuant::matchListOld(const" 106308]
[ebrowse-ms "multMatchChild" () 2 () () 0 0  () "inline bool TheoryQuant::multMatchChild(const" 102217]
[ebrowse-ms "multMatchTop" () 2 () () 0 0  () "inline bool TheoryQuant::multMatchTop(const" 105309]
[ebrowse-ms "naiveCheckSat" () 0 () () 0 0  () "void TheoryQuant::naiveCheckSat(bool" 232338]
[ebrowse-ms "newTopMatch" () 0 () () 0 0  () "void TheoryQuant::newTopMatch(const" 122389]
[ebrowse-ms "newTopMatchNoSig" () 0 () () 0 0  () "void TheoryQuant::newTopMatchNoSig(const" 117332]
[ebrowse-ms "newTopMatchSig" () 0 () () 0 0  () "void TheoryQuant::newTopMatchSig(const" 125099]
[ebrowse-ms "notifyInconsistent" () 0 () () 0 0  () "void TheoryQuant::notifyInconsistent(const" 239972]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  () "TheoryQuant::parseExprOp(const" 249306]
[ebrowse-ms "print" () 0 () () 0 0  () "TheoryQuant::print(ExprStream" 243277]
[ebrowse-ms "pushBackList" () 2 () () 0 0  () "inline void  TheoryQuant::pushBackList(const" 191455]
[ebrowse-ms "pushForwList" () 2 () () 0 0  () "inline void  TheoryQuant::pushForwList(const" 191747]
[ebrowse-ms "recGoodSemMatch" () 0 () () 0 0  () "void TheoryQuant::recGoodSemMatch(const" 96133]
[ebrowse-ms "recInstantiate" () 0 () () 0 0  () "void TheoryQuant::recInstantiate(Theorem" 235271]
[ebrowse-ms "recMultMatch" () 0 () () 0 0  () "bool TheoryQuant::recMultMatch(const" 150296]
[ebrowse-ms "recMultMatchDebug" () 0 () () 0 0  () "bool TheoryQuant::recMultMatchDebug(const" 140404]
[ebrowse-ms "recMultMatchOldWay" () 0 () () 0 0  () "bool TheoryQuant::recMultMatchOldWay(const" 146507]
[ebrowse-ms "recursiveMap" () 0 () () 0 0  () "bool TheoryQuant::recursiveMap(const" 238451]
[ebrowse-ms "registerTrig" () 0 () () 0 0  () "void TheoryQuant::registerTrig(ExprMap" 68834]
[ebrowse-ms "rewrite" () 0 () () 0 0  () "Theorem TheoryQuant::rewrite(const" 8701]
[ebrowse-ms "saveContext" () 0 () () 0 0  () "void TheoryQuant::saveContext()" 224456]
[ebrowse-ms "semCheckSat" () 0 () () 0 0  () "void TheoryQuant::semCheckSat(bool" 232223]
[ebrowse-ms "sendInstNew" () 0 () () 0 0  () "int TheoryQuant::sendInstNew()" 29705]
[ebrowse-ms "setTrans2Found" () 2 () () 0 0  () "inline void TheoryQuant::setTrans2Found(const" 191030]
[ebrowse-ms "setTransFound" () 2 () () 0 0  () "inline void TheoryQuant::setTransFound(const" 190836]
[ebrowse-ms "setup" () 0 () () 0 0  () "void TheoryQuant::setup(const" 10559]
[ebrowse-ms "setupTriggers" () 0 () () 0 0  () "void TheoryQuant::setupTriggers(ExprMap" 76358]
[ebrowse-ms "simpRAWList" () 0 () () 0 0  () "Expr TheoryQuant::simpRAWList(const" 199207]
[ebrowse-ms "simplifyExprMap" () 0 () () 0 0  () "void TheoryQuant::simplifyExprMap(ExprMap" 16662]
[ebrowse-ms "simplifyVectorExprMap" () 0 () () 0 0  () "void TheoryQuant::simplifyVectorExprMap(vector" 16944]
[ebrowse-ms "synCheckSat" () 0 () () 0 0  () "void TheoryQuant::synCheckSat(ExprMap" 224838]
[ebrowse-ms "synNewInst" () 0 () () 0 0  () "void TheoryQuant::synNewInst(size_t" 199443]
[ebrowse-ms "theoryPreprocess" () 0 () () 0 0  () "Theorem TheoryQuant::theoryPreprocess(const" 62197]
[ebrowse-ms "trans2Found" () 2 () () 0 0  () "inline bool TheoryQuant::trans2Found(const" 190925]
[ebrowse-ms "transFound" () 2 () () 0 0  () "inline bool TheoryQuant::transFound(const" 190733]
[ebrowse-ms "update" () 0 () () 0 0  () "void TheoryQuant::update(const" 12835]
[ebrowse-ms "~TheoryQuant" () 0 () () 0 0  () "TheoryQuant::~TheoryQuant()" 8236]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ScopeWatcher" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "class ScopeWatcher {" 2984"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" ]
()([ebrowse-ms "d_flag" () 0 () "  bool *d_flag;" 3010 2  () () 0]
)
([ebrowse-ms "ScopeWatcher" () 0 () "  ScopeWatcher(bool *flag):" 3038 0  () "  ScopeWatcher(bool *flag):" 3038]
[ebrowse-ms "~ScopeWatcher" () 0 () "  ~ScopeWatcher()" 3097 0  () "  ~ScopeWatcher()" 3097]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "iterator" "Hash::hash_table<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "    class iterator {" 16772"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" ]
()([ebrowse-ms "d_hash_table" () 0 () "      hash_table* d_hash_table;" 16954 1  () () 0]
[ebrowse-ms "d_node" () 0 () "      BucketNode* d_node;" 17039 1  () () 0]
)
([ebrowse-ms "iterator" () 0 () "      iterator(const iterator& other)
	:" 17443 0  () "      iterator(const iterator& other)
	:" 17443]
[ebrowse-ms "iterator" () 0 () "      iterator()
	:" 17349 0  () "      iterator()
	:" 17349]
[ebrowse-ms "iterator" () 0 () "tor(hash_table* hash_table, BucketNode* node)
	:" 17150 1  () "tor(hash_table* hash_table, BucketNode* node)
	:" 17150]
[ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 19206 0  () "      bool operator!=(const" 19206]
[ebrowse-ms "operator *" () 4 () "      value_type& operator*()" 18725 0  () "      value_type& operator*()" 18725]
[ebrowse-ms "operator ++" () 0 () "      iterator operator++(int" 18635 0  () "      iterator operator++(int" 18635]
[ebrowse-ms "operator ++" () 0 () "      iterator& operator++()" 17785 0  () "      iterator& operator++()" 17785]
[ebrowse-ms "operator ->" () 4 () "      value_type* operator->()" 18798 0  () "      value_type* operator->()" 18798]
[ebrowse-ms "operator =" () 0 () "      iterator& operator=(const" 17581 0  () "      iterator& operator=(const" 17581]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 18904 0  () "      bool operator==(const" 18904]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "iterator" "CVC3::std" 32() () 0() ]
([ebrowse-ts [ebrowse-cs "const_iterator" "CVC3::ExprHashMap<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" "    class const_iterator:" 7417"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" ]
()()
([ebrowse-ms "const_iterator" () 0 () "      const_iterator() {" 7782 0  () "      const_iterator() {" 7782]
[ebrowse-ms "const_iterator" () 0 () "typename ExprHashMapType::const_iterator& it)
	:" 7656 2  () "typename ExprHashMapType::const_iterator& it)
	:" 7656]
[ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 7917 0  () "      bool operator!=(const" 7917]
[ebrowse-ms "operator *" () 4 () "   const std::pair<const Expr,Data>& operator*()" 8053 0  () "   const std::pair<const Expr,Data>& operator*()" 8053]
[ebrowse-ms "operator ++" () 0 () "      Proxy operator++(int" 8860 0  () "      Proxy operator++(int" 8860]
[ebrowse-ms "operator ++" () 0 () "      const_iterator& operator++()" 8234 0  () "      const_iterator& operator++()" 8234]
[ebrowse-ms "operator ->" () 4 () "  const std::pair<const Expr,Data>* operator->()" 8130 0  () "  const std::pair<const Expr,Data>* operator->()" 8130]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 7837 0  () "      bool operator==(const" 7837]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "const_iterator" "CVC3::ExprMap<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" "    class const_iterator:" 2427"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" ]
()()
([ebrowse-ms "const_iterator" () 0 () "      const_iterator() {" 2780 0  () "      const_iterator() {" 2780]
[ebrowse-ms "const_iterator" () 0 () "nst typename ExprMapType::const_iterator& it)
	:" 2658 2  () "nst typename ExprMapType::const_iterator& it)
	:" 2658]
[ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 2915 0  () "      bool operator!=(const" 2915]
[ebrowse-ms "operator *" () 4 () "   const std::pair<const Expr,Data>& operator*()" 3051 0  () "   const std::pair<const Expr,Data>& operator*()" 3051]
[ebrowse-ms "operator ++" () 0 () "      Proxy operator++(int" 3858 0  () "      Proxy operator++(int" 3858]
[ebrowse-ms "operator ++" () 0 () "      const_iterator& operator++()" 3232 0  () "      const_iterator& operator++()" 3232]
[ebrowse-ms "operator --" () 0 () "      const_iterator& operator--()" 3977 0  () "      const_iterator& operator--()" 3977]
[ebrowse-ms "operator ->" () 4 () "  const std::pair<const Expr,Data>* operator->()" 3128 0  () "  const std::pair<const Expr,Data>* operator->()" 3128]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 2835 0  () "      bool operator==(const" 2835]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "iterator" "CVC3::CDMapOrdered<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "  class iterator :" 6863"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" ]
()()
([ebrowse-ms "iterator" () 0 () "      iterator() {" 7347 0  () "      iterator() {" 7347]
[ebrowse-ms "iterator" () 0 () "      iterator(const iterator& i):" 7270 0  () "      iterator(const iterator& i):" 7270]
[ebrowse-ms "iterator" () 0 () "      :" 7135 0  () "      :" 7135]
[ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 7483 0  () "      bool operator!=(const" 7483]
[ebrowse-ms "operator *" () 4 () "      std::pair<const Key, Data> operator*()" 7613 0  () "      std::pair<const Key, Data> operator*()" 7613]
[ebrowse-ms "operator ++" () 0 () "      Proxy operator++(int" 8636 0  () "      Proxy operator++(int" 8636]
[ebrowse-ms "operator ++" () 0 () "      iterator& operator++()" 8030 0  () "      iterator& operator++()" 8030]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 7402 0  () "      bool operator==(const" 7402]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "iterator" "CVC3::Assumptions" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/assumptions.h" "    class iterator :" 3697"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/assumptions.h" ]
()([ebrowse-ms "d_it" () 0 () "      std::vector<Theorem>::const_iterator d_it;" 3883 2  () () 0]
)
([ebrowse-ms "iterator" () 0 () "      iterator() {" 4018 0  () "      iterator() {" 4018]
[ebrowse-ms "iterator" () 0 () "(const std::vector<Theorem>::const_iterator& i):" 3905 2  () "(const std::vector<Theorem>::const_iterator& i):" 3905]
[ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 4210 0  () "      bool operator!=(const" 4210]
[ebrowse-ms "operator *" () 4 () "      const Theorem& operator*()" 4322 0  () "      const Theorem& operator*()" 4322]
[ebrowse-ms "operator ++" () 0 () "      Proxy operator++(int" 4780 0  () "      Proxy operator++(int" 4780]
[ebrowse-ms "operator ++" () 0 () "      iterator& operator++()" 4507 0  () "      iterator& operator++()" 4507]
[ebrowse-ms "operator ->" () 4 () "      const Theorem* operator->()" 4418 0  () "      const Theorem* operator->()" 4418]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 4112 0  () "      bool operator==(const" 4112]
[ebrowse-ms "~iterator" () 0 () "      ~iterator()" 4061 0  () "      ~iterator()" 4061]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "iterator" "CVC3::ExprHashMap<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" "    class iterator:" 8977"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" ]
()()
([ebrowse-ms "iterator" () 0 () "      iterator() {" 9318 0  () "      iterator() {" 9318]
[ebrowse-ms "iterator" () 0 () "const typename ExprHashMapType::iterator& it)
	:" 9204 2  () "const typename ExprHashMapType::iterator& it)
	:" 9204]
[ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 9447 0  () "      bool operator!=(const" 9447]
[ebrowse-ms "operator *" () 4 () "      std::pair<const Expr,Data>& operator*()" 9571 0  () "      std::pair<const Expr,Data>& operator*()" 9571]
[ebrowse-ms "operator ++" () 0 () "      Proxy operator++(int" 10360 0  () "      Proxy operator++(int" 10360]
[ebrowse-ms "operator ++" () 0 () "      iterator& operator++()" 9740 0  () "      iterator& operator++()" 9740]
[ebrowse-ms "operator ->" () 4 () "      std::pair<const Expr,Data>* operator->()" 9642 0  () "      std::pair<const Expr,Data>* operator->()" 9642]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 9373 0  () "      bool operator==(const" 9373]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "iterator" "CVC3::ExprMap<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" "    class iterator:" 4062"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" ]
()()
([ebrowse-ms "iterator" () 0 () "      iterator() {" 4391 0  () "      iterator() {" 4391]
[ebrowse-ms "iterator" () 0 () "tor(const typename ExprMapType::iterator& it)
	:" 4281 2  () "tor(const typename ExprMapType::iterator& it)
	:" 4281]
[ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 4520 0  () "      bool operator!=(const" 4520]
[ebrowse-ms "operator *" () 4 () "      std::pair<const Expr,Data>& operator*()" 4644 0  () "      std::pair<const Expr,Data>& operator*()" 4644]
[ebrowse-ms "operator ++" () 0 () "      Proxy operator++(int" 5433 0  () "      Proxy operator++(int" 5433]
[ebrowse-ms "operator ++" () 0 () "      iterator& operator++()" 4813 0  () "      iterator& operator++()" 4813]
[ebrowse-ms "operator --" () 0 () "      iterator& operator--()" 5546 0  () "      iterator& operator--()" 5546]
[ebrowse-ms "operator ->" () 4 () "      std::pair<const Expr,Data>* operator->()" 4715 0  () "      std::pair<const Expr,Data>* operator->()" 4715]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 4446 0  () "      bool operator==(const" 4446]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "iterator" "CVC3::CDMap<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" "  class iterator :" 7143"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" ]
()()
([ebrowse-ms "iterator" () 0 () "      iterator() {" 7664 0  () "      iterator() {" 7664]
[ebrowse-ms "iterator" () 0 () "      iterator(const iterator& i):" 7587 0  () "      iterator(const iterator& i):" 7587]
[ebrowse-ms "iterator" () 0 () "      :" 7436 0  () "      :" 7436]
[ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 7800 0  () "      bool operator!=(const" 7800]
[ebrowse-ms "operator *" () 4 () "      std::pair<const Key, Data> operator*()" 7930 0  () "      std::pair<const Key, Data> operator*()" 7930]
[ebrowse-ms "operator ++" () 0 () "      Proxy operator++(int" 8950 0  () "      Proxy operator++(int" 8950]
[ebrowse-ms "operator ++" () 0 () "      iterator& operator++()" 8344 0  () "      iterator& operator++()" 8344]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 7719 0  () "      bool operator==(const" 7719]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "iterator" "CVC3::Expr" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "    :" 7498"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" ]
()([ebrowse-ms "d_it" () 0 () "    std::vector<Expr>::const_iterator d_it;" 7641 2  () () 0]
)
([ebrowse-ms "iterator" () 0 () "    iterator() {" 7895 0  () "    iterator() {" 7895]
[ebrowse-ms "iterator" () 0 () " iterator(std::vector<Expr>::const_iterator it):" 7772 2  () " iterator(std::vector<Expr>::const_iterator it):" 7772]
[ebrowse-ms "operator !=" () 4 () "    bool operator!=(const" 8122 0  () "    bool operator!=(const" 8122]
[ebrowse-ms "operator *" () 4 () "    const Expr& operator*()" 8224 0  () "    const Expr& operator*()" 8224]
[ebrowse-ms "operator ++" () 0 () "    Proxy operator++(int" 8967 0  () "    Proxy operator++(int" 8967]
[ebrowse-ms "operator ++" () 0 () "    iterator& operator++()" 8400 0  () "    iterator& operator++()" 8400]
[ebrowse-ms "operator ->" () 4 () "    const Expr* operator->()" 8315 0  () "    const Expr* operator->()" 8315]
[ebrowse-ms "operator ==" () 4 () "    bool operator==(const" 8020 0  () "    bool operator==(const" 8020]
)
()
()
()
()
()()
])()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Circuit" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/circuit.h" "class Circuit
{" 692"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/circuit.cpp" ]
()([ebrowse-ms "d_lits" () 0 () "  Literal d_lits[4];" 740 2  () () 0]
[ebrowse-ms "d_thm" () 0 () "  Theorem d_thm;" 719 2  () () 0]
)
([ebrowse-ms "Circuit" () 0 () "rcuit(SearchEngineFast* se, const Theorem& thm);" 777 0  () "it(SearchEngineFast* se, const Theorem& thm)
  :" 646]
[ebrowse-ms "propagate" () 0 () "  bool propagate(SearchEngineFast" 837 0  () "bool Circuit::propagate(SearchEngineFast" 1181]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNF_Manager" "CVC3" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNF_Manager" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf_manager.h" "class CNF_Manager {" 924"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf_manager.h" ]
()([ebrowse-ms "d_bottomScope" () 0 () "  int d_bottomScope;" 2262 2  () () 0]
[ebrowse-ms "d_clauseIdNext" () 0 () "  int d_clauseIdNext;" 2093 2  () () 0]
[ebrowse-ms "d_cnfCallback" () 0 () "  CNFCallback* d_cnfCallback;" 3108 2  () () 0]
[ebrowse-ms "d_cnfVars" () 0 () "  CVC3::ExprHashMap<Var> d_cnfVars;" 1544 2  () () 0]
[ebrowse-ms "d_commonRules" () 0 () "  CVC3::CommonProofRules* d_commonRules;" 1133 2  () () 0]
[ebrowse-ms "d_flags" () 0 () "  const CVC3::CLFlags& d_flags;" 2686 2  () () 0]
[ebrowse-ms "d_iteMap" () 0 () "  CVC3::ExprHashMap<CVC3::Theorem> d_iteMap;" 1650 2  () () 0]
[ebrowse-ms "d_minimizeClauses" () 0 () "  bool d_minimizeClauses;" 1066 2  () () 0]
[ebrowse-ms "d_nullExpr" () 0 () "  const CVC3::Expr& d_nullExpr;" 2748 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  CVC3::CNF_Rules* d_rules;" 1195 2  () () 0]
[ebrowse-ms "d_statistics" () 0 () "  CVC3::Statistics& d_statistics;" 2615 2  () () 0]
[ebrowse-ms "d_translateQueueFlags" () 0 () "  std::deque<bool> d_translateQueueFlags;" 2543 2  () () 0]
[ebrowse-ms "d_translateQueueThms" () 0 () " std::deque<CVC3::Theorem> d_translateQueueThms;" 2350 2  () () 0]
[ebrowse-ms "d_translateQueueVars" () 0 () "  std::deque<Var> d_translateQueueVars;" 2449 2  () () 0]
[ebrowse-ms "d_varInfo" () 0 () "  std::vector<Varinfo> d_varInfo;" 1453 2  () () 0]
[ebrowse-ms "d_vc" () 0 () "  CVC3::ValidityChecker* d_vc;" 986 2  () () 0]
)
([ebrowse-ms "CNF_Manager" () 0 () "              const CVC3::CLFlags& flags);" 4856 0  () () 0]
[ebrowse-ms "addAssumption" () 0 () "  Lit addAssumption(const" 8118 0  () () 0]
[ebrowse-ms "addLemma" () 0 () "  Lit addLemma(CVC3" 8449 0  () () 0]
[ebrowse-ms "concreteExpr" () 0 () "  CVC3::Expr concreteExpr(const" 3416 2  () () 0]
[ebrowse-ms "concreteLit" () 0 () "  CVC3::Expr concreteLit(Lit" 6830 0  () "  CVC3::Expr concreteLit(Lit" 6830]
[ebrowse-ms "concreteVar" () 0 () "  const CVC3::Expr& concreteVar(Var" 6490 0  () "  const CVC3::Expr& concreteVar(Var" 6490]
[ebrowse-ms "cons" () 0 () "  void cons(unsigned" 7654 0  () () 0]
[ebrowse-ms "convertLemma" () 0 () "  void convertLemma(const" 7894 0  () () 0]
[ebrowse-ms "createProofRules" () 0 () "  CVC3::CNF_Rules* createProofRules(CVC3" 3150 2  () () 0]
[ebrowse-ms "getCNFLit" () 0 () "  Lit getCNFLit(const" 7325 0  () "  Lit getCNFLit(const" 7325]
[ebrowse-ms "getFanin" () 0 () "  Lit getFanin(Var" 5754 0  () "  Lit getFanin(Var" 5754]
[ebrowse-ms "getFanout" () 0 () "  Lit getFanout(Var" 6201 0  () "  Lit getFanout(Var" 6201]
[ebrowse-ms "numFanins" () 0 () "  unsigned numFanins(Var" 5571 0  () "  unsigned numFanins(Var" 5571]
[ebrowse-ms "numFanouts" () 0 () "  unsigned numFanouts(Var" 6015 0  () "  unsigned numFanouts(Var" 6015]
[ebrowse-ms "numVars" () 0 () "  unsigned numVars()" 5253 0  () "  unsigned numVars()" 5253]
[ebrowse-ms "registerAtom" () 0 () "  void registerAtom(const" 3257 2  () () 0]
[ebrowse-ms "registerCNFCallback" () 0 () "  void registerCNFCallback(CNFCallback" 5036 0  () "  void registerCNFCallback(CNFCallback" 5036]
[ebrowse-ms "replaceITErec" () 0 () "  CVC3::Theorem replaceITErec(const" 4121 2  () () 0]
[ebrowse-ms "setBottomScope" () 0 () "  void setBottomScope(int" 5146 0  () "  void setBottomScope(int" 5146]
[ebrowse-ms "translateExpr" () 0 () "  Lit translateExpr(const" 4350 2  () () 0]
[ebrowse-ms "translateExprRec" () 0 () "  Lit translateExprRec(const" 3761 2  () () 0]
[ebrowse-ms "~CNF_Manager" () 0 () "  ~CNF_Manager()" 4967 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNF_Manager" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_theorem_producer.cpp" ]
()()
([ebrowse-ms "CNF_Manager" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "                       const CLFlags& flags)
  :" 845]
[ebrowse-ms "addAssumption" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "Lit CNF_Manager::addAssumption(const" 17116]
[ebrowse-ms "addLemma" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "Lit CNF_Manager::addLemma(Theorem" 17740]
[ebrowse-ms "concreteExpr" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "Expr CNF_Manager::concreteExpr(const" 3655]
[ebrowse-ms "cons" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "void CNF_Manager::cons(unsigned" 15174]
[ebrowse-ms "convertLemma" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "void CNF_Manager::convertLemma(const" 16150]
[ebrowse-ms "createProofRules" () 0 () () 0 0  () "es* CNF_Manager::createProofRules(TheoremManager" 1002]
[ebrowse-ms "registerAtom" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "void CNF_Manager::registerAtom(const" 1713]
[ebrowse-ms "replaceITErec" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "Theorem CNF_Manager::replaceITErec(const" 1965]
[ebrowse-ms "translateExpr" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "Lit CNF_Manager::translateExpr(const" 13961]
[ebrowse-ms "translateExprRec" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "Lit CNF_Manager::translateExprRec(const" 3885]
[ebrowse-ms "~CNF_Manager" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_manager.cpp" "CNF_Manager::~CNF_Manager()" 1627]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "QuantProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_proof_rules.h" "  class QuantProofRules {" 717"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "QuantTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_theorem_producer.h" "  class QuantTheoremProducer:" 775"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_theorem_producer.h" ]
()([ebrowse-ms "d_theoryQuant" () 0 () "    TheoryQuant* d_theoryQuant;" 856 2  () () 0]
[ebrowse-ms "d_typeFound" () 0 () "    std::map<Expr,int> d_typeFound;" 892 2  () () 0]
)
([ebrowse-ms "QuantTheoremProducer" () 0 () "r(TheoremManager* tm, TheoryQuant* theoryQuant):" 1146 0  () "r(TheoremManager* tm, TheoryQuant* theoryQuant):" 1146]
[ebrowse-ms "addNewConst" () 1 () "    virtual Theorem addNewConst(const" 1296 0  () () 0]
[ebrowse-ms "adjustVarUniv" () 1 () "    virtual Theorem adjustVarUniv(const" 2976 0  () () 0]
[ebrowse-ms "boundVarElim" () 1 () "    virtual Theorem boundVarElim(const" 2921 0  () () 0]
[ebrowse-ms "newRWThm" () 1 () "    virtual Theorem newRWThm(const" 1342 0  () () 0]
[ebrowse-ms "normalizeQuant" () 1 () "    virtual Theorem normalizeQuant(const" 1412 0  () () 0]
[ebrowse-ms "packVar" () 1 () "    virtual Theorem packVar(const" 3065 0  () () 0]
[ebrowse-ms "partialUniversalInst" () 1 () "    virtual Theorem partialUniversalInst(const" 2570 0  () () 0]
[ebrowse-ms "pullVarOut" () 1 () "    virtual Theorem pullVarOut(const" 3117 0  () () 0]
[ebrowse-ms "recFindBoundVars" () 0 () "    void recFindBoundVars(const" 1009 2  () () 0]
[ebrowse-ms "rewriteNotExists" () 1 () "    virtual Theorem rewriteNotExists(const" 1525 0  () () 0]
[ebrowse-ms "rewriteNotForall" () 1 () "    virtual Theorem rewriteNotForall(const" 1637 0  () () 0]
[ebrowse-ms "universalInst" () 1 () "    virtual Theorem universalInst(const" 2469 0  () () 0]
[ebrowse-ms "universalInst" () 1 () "    virtual Theorem universalInst(const" 2360 0  () () 0]
[ebrowse-ms "universalInst" () 1 () "    virtual Theorem universalInst(const" 2231 0  () () 0]
)
()
()
()
()
()()
])()
([ebrowse-ms "addNewConst" () 9 () "    virtual Theorem addNewConst(const" 824 0  () () 0]
[ebrowse-ms "adjustVarUniv" () 9 () "    virtual Theorem adjustVarUniv(const" 2645 0  () () 0]
[ebrowse-ms "boundVarElim" () 9 () "    virtual Theorem boundVarElim(const" 2477 0  () () 0]
[ebrowse-ms "newRWThm" () 9 () "    virtual Theorem newRWThm(const" 873 0  () () 0]
[ebrowse-ms "normalizeQuant" () 9 () "    virtual Theorem normalizeQuant(const" 948 0  () () 0]
[ebrowse-ms "packVar" () 9 () "    virtual Theorem packVar(const" 2530 0  () () 0]
[ebrowse-ms "partialUniversalInst" () 9 () "    virtual Theorem partialUniversalInst(const" 2128 0  () () 0]
[ebrowse-ms "pullVarOut" () 9 () "    virtual Theorem pullVarOut(const" 2586 0  () () 0]
[ebrowse-ms "rewriteNotExists" () 9 () "    virtual Theorem rewriteNotExists(const" 1067 0  () () 0]
[ebrowse-ms "rewriteNotForall" () 9 () "    virtual Theorem rewriteNotForall(const" 1188 0  () () 0]
[ebrowse-ms "universalInst" () 9 () "    virtual Theorem universalInst(const" 2023 0  () () 0]
[ebrowse-ms "universalInst" () 9 () "    virtual Theorem universalInst(const" 1910 0  () () 0]
[ebrowse-ms "universalInst" () 9 () "    virtual Theorem universalInst(const" 1788 0  () () 0]
[ebrowse-ms "~QuantProofRules" () 1 () "    virtual ~QuantProofRules()" 777 0  () "    virtual ~QuantProofRules()" 777]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "std" "std" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "std" "Hash" 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" ]
()([ebrowse-ms "size_t" () 0 () () 0 0  () "  using std::size_t;" 1933]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "std" "SAT" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "std" "MiniSat" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "std" "CVC3" 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/exception.h" ]
()()
([ebrowse-ms "operator <<" () 2 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "  std::ostream& operator<<(std" 7249]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "std" () 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Clause" "SatSolver" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  union Clause {" 2412"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" ]
()([ebrowse-ms "id" () 0 () "    long id;" 2425 0  () () 0]
[ebrowse-ms "vptr" () 0 () "    void *vptr;" 2441 0  () () 0]
)
([ebrowse-ms "Clause" () 0 () "    Clause() :" 2454 0  () "    Clause() :" 2454]
[ebrowse-ms "IsNull" () 0 () "    bool IsNull()" 2484 0  () "    bool IsNull()" 2484]
[ebrowse-ms "Reset" () 0 () "    void Reset()" 2522 0  () "    void Reset()" 2522]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Clause" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/clause.h" "  class Clause {" 2723"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/clause.h" ]
()([ebrowse-ms "d_clause" () 0 () "    ClauseValue* d_clause;" 2821 2  () () 0]
)
([ebrowse-ms "Clause" () 0 () "    Clause(const Clause& c):" 3384 0  () "    Clause(const Clause& c):" 3384]
[ebrowse-ms "Clause" () 0 () "      :" 3065 0  () "      :" 3065]
[ebrowse-ms "Clause" () 0 () "    Clause():" 3003 0  () "    Clause():" 3003]
[ebrowse-ms "IF_DEBUG" () 0 () "    IF_DEBUG(int" 8093 0  () () 0]
[ebrowse-ms "IF_DEBUG" () 0 () "    IF_DEBUG(bool" 7980 0  () "    IF_DEBUG(bool" 7980]
[ebrowse-ms "countOwner" () 0 () "    int& countOwner()" 2891 2  () "    int& countOwner()" 2891]
[ebrowse-ms "deleted" () 4 () "    bool deleted()" 7359 0  () "    bool deleted()" 7359]
[ebrowse-ms "dir" () 4 () "    int dir(int" 6107 0  () "    int dir(int" 6107]
[ebrowse-ms "dir" () 4 () "    int dir(int" 5817 0  () "    int dir(int" 5817]
[ebrowse-ms "getLiteral" () 4 () "    const Literal& getLiteral(size_t" 4185 0  () "    const Literal& getLiteral(size_t" 4185]
[ebrowse-ms "getLiterals" () 4 () "    const std::vector<Literal>& getLiterals()" 4663 0  () "    const std::vector<Literal>& getLiterals()" 4663]
[ebrowse-ms "getScope" () 4 () "    int getScope()" 4019 0  () "    int getScope()" 4019]
[ebrowse-ms "getTheorem" () 4 () "    const Theorem& getTheorem()" 3842 0  () "    const Theorem& getTheorem()" 3842]
[ebrowse-ms "id" () 4 () "    size_t id()" 7557 0  () "    size_t id()" 7557]
[ebrowse-ms "isNull" () 4 () "    bool isNull()" 3595 0  () "    bool isNull()" 3595]
[ebrowse-ms "markDeleted" () 4 () "    void markDeleted()" 7481 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "Clause::markDeleted()" 3089]
[ebrowse-ms "markSat" () 4 () "    void markSat()" 7203 0  () "    void markSat()" 7203]
[ebrowse-ms "operator =" () 0 () "    Clause& operator=(const" 3564 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "Clause& Clause::operator=(const" 3712]
[ebrowse-ms "operator ==" () 4 () "    bool operator==(const" 7658 0  () "    bool operator==(const" 7658]
[ebrowse-ms "operator []" () 4 () "    const Literal& operator[](size_t" 4513 0  () "    const Literal& operator[](size_t" 4513]
[ebrowse-ms "owners" () 4 () "    int owners()" 7789 0  () "    int owners()" 7789]
[ebrowse-ms "sat" () 4 () "    bool sat(bool" 6728 0  () "    bool sat(bool" 6728]
[ebrowse-ms "sat" () 4 () "    bool sat()" 6541 0  () "    bool sat()" 6541]
[ebrowse-ms "size" () 4 () "    size_t size()" 3676 0  () "    size_t size()" 3676]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 7881 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "string Clause::toString()" 4116]
[ebrowse-ms "watched" () 4 () "    const Literal& watched(int" 5121 0  () "    const Literal& watched(int" 5121]
[ebrowse-ms "wp" () 4 () "    size_t wp(int" 5233 0  () "    size_t wp(int" 5233]
[ebrowse-ms "wp" () 4 () "    size_t wp(int" 4838 0  () "    size_t wp(int" 4838]
[ebrowse-ms "wpCheck" () 4 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "bool CVC3::Clause::wpCheck()" 5822]
[ebrowse-ms "~Clause" () 0 () "    ~Clause()" 3508 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "Clause::~Clause()" 2854]
)
()
()
([ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 7929 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
)
()
()()
][ebrowse-ts [ebrowse-cs "Clause" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "class Clause {" 2271"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf.cpp" ]
()([ebrowse-ms "d_lits" () 0 () "  std::vector<Lit> d_lits;" 2335 2  () () 0]
[ebrowse-ms "d_reason" () 0 () "  CVC3::Theorem d_reason;" 2362 2  () () 0]
[ebrowse-ms "d_satisfied" () 0 () "  int d_satisfied:1;" 2292 2  () () 0]
[ebrowse-ms "d_unit" () 0 () "  int d_unit:1;" 2308 2  () () 0]
)
([ebrowse-ms "Clause" () 0 () "    :" 2492 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "    :" 2492]
[ebrowse-ms "Clause" () 0 () "  Clause():" 2440 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  Clause():" 2440]
[ebrowse-ms "addLiteral" () 0 () "  void addLiteral(Lit" 2936 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  void addLiteral(Lit" 2936]
[ebrowse-ms "begin" () 4 () "  const_iterator begin()" 2715 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  const_iterator begin()" 2715]
[ebrowse-ms "clear" () 0 () "  void clear()" 2818 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  void clear()" 2818]
[ebrowse-ms "end" () 4 () "  const_iterator end()" 2771 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  const_iterator end()" 2771]
[ebrowse-ms "getClauseTheorem" () 4 () "  CVC3::Theorem getClauseTheorem()" 3362 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  CVC3::Theorem getClauseTheorem()" 3362]
[ebrowse-ms "getMaxVar" () 4 () "  unsigned getMaxVar()" 3005 0  () "unsigned SAT::Clause::getMaxVar()" 717]
[ebrowse-ms "isNull" () 4 () "  bool isNull()" 3130 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  bool isNull()" 3130]
[ebrowse-ms "isSatisfied" () 4 () "  bool isSatisfied()" 3033 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  bool isSatisfied()" 3033]
[ebrowse-ms "isUnit" () 4 () "  bool isUnit()" 3084 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  bool isUnit()" 3084]
[ebrowse-ms "print" () 4 () "  void print()" 3258 0  () "void SAT::Clause::print()" 1006]
[ebrowse-ms "setClauseTheorem" () 0 () "  void setClauseTheorem(CVC3" 3294 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  void setClauseTheorem(CVC3" 3294]
[ebrowse-ms "setSatisfied" () 0 () "  void setSatisfied()" 3189 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  void setSatisfied()" 3189]
[ebrowse-ms "setUnit" () 0 () "  void setUnit()" 3227 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  void setUnit()" 3227]
[ebrowse-ms "size" () 4 () "  unsigned size()" 2882 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "  unsigned size()" 2882]
)
()
()
()
([ebrowse-ms "const_iterator" () 0 () "std::vector<Lit>::const_iterator const_iterator;" 2690 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "Clause" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" "  class Clause {" 3754"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" ]
()([ebrowse-ms "d_activity" () 0 () "    float          d_activity;" 3873 2  () () 0]
[ebrowse-ms "d_data" () 0 () "    Lit            d_data[1];" 3974 2  () () 0]
[ebrowse-ms "d_id" () 0 () "    int            d_id;" 3813 2  () () 0]
[ebrowse-ms "d_pushID" () 0 () "    int            d_pushID;" 3842 2  () () 0]
[ebrowse-ms "d_size_learnt" () 0 () "    unsigned int   d_size_learnt;" 3788 2  () () 0]
[ebrowse-ms "d_theorem" () 0 () "    CVC3::Theorem  d_theorem;" 3944 2  () () 0]
)
([ebrowse-ms "Clause" () 0 () "	   int id, int pushID) {" 4390 0  () "	   int id, int pushID) {" 4390]
[ebrowse-ms "activity" () 4 () "    float    activity    ()" 5547 0  () "    float    activity    ()" 5547]
[ebrowse-ms "contains" () 0 () "    bool contains(Lit" 6566 0  () "    bool contains(Lit" 6566]
[ebrowse-ms "getTheorem" () 4 () "    CVC3::Theorem getTheorem()" 5904 0  () "    CVC3::Theorem getTheorem()" 5904]
[ebrowse-ms "id" () 4 () "    int       id          ()" 5277 0  () "    int       id          ()" 5277]
[ebrowse-ms "learnt" () 4 () "    bool      learnt      ()" 5018 0  () "    bool      learnt      ()" 5018]
[ebrowse-ms "operator []" () 0 () "    Lit&      operator [] (int" 5152 0  () "    Lit&      operator [] (int" 5152]
[ebrowse-ms "operator []" () 4 () "    Lit       operator [] (int" 5090 0  () "    Lit       operator [] (int" 5090]
[ebrowse-ms "pushID" () 4 () "    int      pushID      ()" 5486 0  () "    int      pushID      ()" 5486]
[ebrowse-ms "setActivity" () 0 () "    void     setActivity (float" 5692 0  () "    void     setActivity (float" 5692]
[ebrowse-ms "size" () 4 () "    int       size        ()" 4947 0  () "    int       size        ()" 4947]
[ebrowse-ms "toLit" () 4 () "    void      toLit       (std" 5842 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  void Clause::toLit(vector" 1810]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 6307 0  () "    std::string toString()" 6307]
)
([ebrowse-ms "s_decision" () 0 () "    static Clause* s_decision;" 4006 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  Clause* Clause::s_decision = NULL;" 712]
[ebrowse-ms "s_theoryImplication" () 0 () "    static Clause* s_theoryImplication;" 4046 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  Clause* Clause::s_theoryImplication = NULL;" 758]
)
([ebrowse-ms "ClauseIDNull" () 0 () "    static int ClauseIDNull()" 5964 0  () "    static int ClauseIDNull()" 5964]
[ebrowse-ms "Decision" () 0 () "    static Clause* Decision()" 6089 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  Clause* Clause::Decision()" 1409]
[ebrowse-ms "TheoryImplication" () 0 () "    static Clause* TheoryImplication()" 6278 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  Clause* Clause::TheoryImplication()" 1602]
)
([ebrowse-ms "Clause_new" () 0 () "    friend Clause* Clause_new(const" 4785 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  Clause* Clause_new(const" 1060]
[ebrowse-ms "Lemma_new" () 0 () "    friend Clause* Lemma_new(const" 4874 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  Clause* Lemma_new(const" 1233]
)
()
()()
][ebrowse-ts [ebrowse-cs "VariableValue" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "  class VariableValue {" 7458"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" ]
()([ebrowse-ms "d_added" () 0 () "    bool d_added;" 8003 2  () () 0]
[ebrowse-ms "d_ante" () 0 () "    CDO<Clause>* d_ante;" 8455 2  () () 0]
[ebrowse-ms "d_anteIdx" () 0 () "    CDO<int>* d_anteIdx;" 8527 2  () () 0]
[ebrowse-ms "d_assump" () 0 () "    CDO<Theorem>* d_assump;" 8555 2  () () 0]
[ebrowse-ms "d_count" () 0 () "    unsigned d_count;" 7763 2  () () 0]
[ebrowse-ms "d_countPrev" () 0 () "    unsigned d_countPrev;" 7789 2  () () 0]
[ebrowse-ms "d_expr" () 0 () "    Expr d_expr;" 7595 2  () () 0]
[ebrowse-ms "d_neg" () 0 () "    Expr d_neg;" 7657 2  () () 0]
[ebrowse-ms "d_negAdded" () 0 () "    bool d_negAdded;" 8024 2  () () 0]
[ebrowse-ms "d_negCount" () 0 () "    unsigned d_negCount;" 7861 2  () () 0]
[ebrowse-ms "d_negCountPrev" () 0 () "    unsigned d_negCountPrev;" 7890 2  () () 0]
[ebrowse-ms "d_negScore" () 0 () "    int d_negScore;" 7910 2  () () 0]
[ebrowse-ms "d_negwp" () 0 () "   std::vector<std::pair<Clause, int> > d_negwp;" 8148 2  () () 0]
[ebrowse-ms "d_refcount" () 0 () "    int d_refcount;" 7577 2  () () 0]
[ebrowse-ms "d_scope" () 0 () "    CDO<int>* d_scope;" 8292 2  () () 0]
[ebrowse-ms "d_score" () 0 () "    int d_score;" 7806 2  () () 0]
[ebrowse-ms "d_thm" () 0 () "    CDO<Theorem>* d_thm;" 8430 2  () () 0]
[ebrowse-ms "d_val" () 0 () "    CDO<int>* d_val;" 8269 2  () () 0]
[ebrowse-ms "d_vm" () 0 () "    VariableManager* d_vm;" 7557 2  () () 0]
[ebrowse-ms "d_wp" () 0 () "    std::vector<std::pair<Clause, int> > d_wp;" 8098 2  () () 0]
)
([ebrowse-ms "VariableValue" () 0 () "      :" 8698 2  () "      :" 8698]
[ebrowse-ms "added" () 0 () "    bool& added(bool" 10763 0  () "    bool& added(bool" 10763]
[ebrowse-ms "count" () 0 () "    unsigned& count(bool" 10466 0  () "    unsigned& count(bool" 10466]
[ebrowse-ms "countPrev" () 0 () "    unsigned& countPrev(bool" 10568 0  () "    unsigned& countPrev(bool" 10568]
[ebrowse-ms "getAntecedent" () 4 () "    const Clause& getAntecedent()" 9656 0  () "    const Clause& getAntecedent()" 9656]
[ebrowse-ms "getAntecedentIdx" () 4 () "    int getAntecedentIdx()" 9793 0  () "    int getAntecedentIdx()" 9793]
[ebrowse-ms "getAssumpThm" () 4 () "    const Theorem& getAssumpThm()" 9918 0  () "    const Theorem& getAssumpThm()" 9918]
[ebrowse-ms "getExpr" () 4 () "    const Expr& getExpr()" 9089 0  () "    const Expr& getExpr()" 9089]
[ebrowse-ms "getNegExpr" () 4 () "    const Expr& getNegExpr()" 9144 0  () "    const Expr& getNegExpr()" 9144]
[ebrowse-ms "getScope" () 4 () "    int getScope()" 9398 0  () "    int getScope()" 9398]
[ebrowse-ms "getTheorem" () 4 () "    const Theorem& getTheorem()" 9513 0  () "    const Theorem& getTheorem()" 9513]
[ebrowse-ms "getValue" () 4 () "    int getValue()" 9296 0  () "    int getValue()" 9296]
[ebrowse-ms "score" () 0 () "    int& score(bool" 10669 0  () "    int& score(bool" 10669]
[ebrowse-ms "setAssumpThm" () 0 () "    void setAssumpThm(const" 10362 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "VariableValue::setAssumpThm(const" 9490]
[ebrowse-ms "setValue" () 0 () "    void setValue(const" 10307 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "VariableValue::setValue(const" 8412]
[ebrowse-ms "setValue" () 0 () "    void setValue(int" 10162 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "VariableValue::setValue(int" 6481]
[ebrowse-ms "~VariableValue" () 0 () "    ~VariableValue()" 9038 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "VariableValue::~VariableValue()" 5922]
)
()
([ebrowse-ms "delete" () 0 () "    void operator delete(void" 11079 0  () "    void operator delete(void" 11079]
[ebrowse-ms "delete" () 0 () "    void operator delete(void" 10987 0  () "    void operator delete(void" 10987]
[ebrowse-ms "new" () 0 () "    void* operator new(size_t" 10892 0  () "    void* operator new(size_t" 10892]
)
([ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 11148 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 0 () "    friend bool operator==(const" 11220 0  () "    friend bool operator==(const" 11220]
)
()
()()
][ebrowse-ts [ebrowse-cs "union" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "    union {" 3120() ]
()([ebrowse-ms "b" () 0 () "    bool b;" 1292 0  () () 0]
[ebrowse-ms "d_expr" () 0 () "      ExprValue* d_expr;" 3167 0  () () 0]
[ebrowse-ms "d_thm" () 0 () "      intptr_t d_thm;" 3142 0  () () 0]
[ebrowse-ms "i" () 0 () "    int i;" 1303 0  () () 0]
[ebrowse-ms "s" () 0 () "    std::string* s;" 1323 0  () () 0]
[ebrowse-ms "sv" () 0 () "  std::vector<std::pair<std::string,bool> >* sv;" 1374 0  () () 0]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNF_TheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_theorem_producer.cpp" ]
()()
([ebrowse-ms "CNFAddUnit" () 0 () () 0 0  () "Theorem CNF_TheoremProducer::CNFAddUnit(const" 8832]
[ebrowse-ms "CNFConvert" () 0 () () 0 0  () "Theorem CNF_TheoremProducer::CNFConvert(const" 9119]
[ebrowse-ms "CNFITEtranslate" () 0 () () 0 0  () "eorem CNF_TheoremProducer::CNFITEtranslate(const" 7383]
[ebrowse-ms "CNFtranslate" () 0 () () 0 0  () "Theorem CNF_TheoremProducer::CNFtranslate(const" 6860]
[ebrowse-ms "getSmartClauses" () 0 () () 0 0  () "void CNF_TheoremProducer::getSmartClauses(const" 1302]
[ebrowse-ms "ifLiftRule" () 0 () () 0 0  () "Theorem CNF_TheoremProducer::ifLiftRule(const" 5754]
[ebrowse-ms "learnedClauses" () 0 () () 0 0  () "void CNF_TheoremProducer::learnedClauses(const" 2743]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DifferenceLogicGraph" "TheoryArithOld" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	class DifferenceLogicGraph {" 16419"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith_old.cpp" ]
()([ebrowse-ms "arith" () 0 () "			TheoryArithOld* arith;" 25754 1  () () 0]
[ebrowse-ms "biggestEpsilon" () 0 () "			CDO<Rational> biggestEpsilon;" 26045 1  () () 0]
[ebrowse-ms "core" () 0 () "			TheoryCore* core;" 25802 1  () () 0]
[ebrowse-ms "d_pathLenghtThres" () 0 () "			const int* d_pathLenghtThres;" 25678 1  () () 0]
[ebrowse-ms "incomingEdges" () 0 () "			EdgesList incomingEdges;" 26453 1  () () 0]
[ebrowse-ms "leGraph" () 0 () "			Graph leGraph;" 26320 1  () () 0]
[ebrowse-ms "outgoingEdges" () 0 () "			EdgesList outgoingEdges;" 26537 1  () () 0]
[ebrowse-ms "rules" () 0 () "			ArithProofRules* rules;" 25874 1  () () 0]
[ebrowse-ms "smallestPathDifference" () 0 () "			CDO<Rational> smallestPathDifference;" 26157 1  () () 0]
[ebrowse-ms "sourceVertex" () 0 () "			Expr sourceVertex;" 28641 1  () () 0]
[ebrowse-ms "unsat_theorem" () 0 () "			CDO<Theorem> unsat_theorem;" 25947 1  () () 0]
[ebrowse-ms "varInCycle" () 0 () "			CDMap<Expr, bool> varInCycle;" 28618 1  () () 0]
)
([ebrowse-ms "DifferenceLogicGraph" () 0 () "core, ArithProofRules* rules, Context* context);" 27333 0  () "re, ArithProofRules* rules, Context* context)
	:" 158508]
[ebrowse-ms "addEdge" () 0 () "			void addEdge(const" 28104 0  () "oryArithOld::DifferenceLogicGraph::addEdge(const" 160799]
[ebrowse-ms "analyseConflict" () 0 () "			void analyseConflict(const" 28865 1  () "Old::DifferenceLogicGraph::analyseConflict(const" 165423]
[ebrowse-ms "computeModel" () 0 () "			void computeModel()" 27764 0  () "ryArithOld::DifferenceLogicGraph::computeModel()" 172806]
[ebrowse-ms "existsEdge" () 0 () "			bool existsEdge(const" 28257 0  () "ArithOld::DifferenceLogicGraph::existsEdge(const" 159100]
[ebrowse-ms "expandSharedTerm" () 0 () "			void expandSharedTerm(const" 28515 0  () "ld::DifferenceLogicGraph::expandSharedTerm(const" 169294]
[ebrowse-ms "getEdge" () 0 () "			Graph::ElementReference getEdge(const" 26756 1  () "oryArithOld::DifferenceLogicGraph::getEdge(const" 159570]
[ebrowse-ms "getEdgeTheorems" () 0 () "			void getEdgeTheorems(const" 25130 0  () "Old::DifferenceLogicGraph::getEdgeTheorems(const" 164399]
[ebrowse-ms "getEdgeWeight" () 0 () "			EpsRational getEdgeWeight(const" 25315 0  () "thOld::DifferenceLogicGraph::getEdgeWeight(const" 160572]
[ebrowse-ms "getUnsatTheorem" () 0 () "			Theorem getUnsatTheorem()" 27643 0  () "rithOld::DifferenceLogicGraph::getUnsatTheorem()" 158917]
[ebrowse-ms "getValuation" () 0 () "			Rational getValuation(const" 27797 0  () "ithOld::DifferenceLogicGraph::getValuation(const" 174183]
[ebrowse-ms "getVariables" () 0 () "			void getVariables(std" 27080 0  () "thOld::DifferenceLogicGraph::getVariables(vector" 198675]
[ebrowse-ms "hasIncoming" () 0 () "			bool hasIncoming(const" 25432 0  () "rithOld::DifferenceLogicGraph::hasIncoming(const" 197780]
[ebrowse-ms "hasOutgoing" () 0 () "			bool hasOutgoing(const" 25534 0  () "rithOld::DifferenceLogicGraph::hasOutgoing(const" 198262]
[ebrowse-ms "inCycle" () 0 () "			bool inCycle(const" 28350 0  () "oryArithOld::DifferenceLogicGraph::inCycle(const" 159392]
[ebrowse-ms "isUnsat" () 0 () "			bool isUnsat()" 27739 0  () " TheoryArithOld::DifferenceLogicGraph::isUnsat()" 158998]
[ebrowse-ms "setArith" () 0 () "			void setArith(TheoryArithOld" 27214 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "			void setArith(TheoryArithOld" 27214]
[ebrowse-ms "setRules" () 0 () "			void setRules(ArithProofRules" 27141 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "			void setRules(ArithProofRules" 27141]
[ebrowse-ms "tryUpdate" () 0 () "			bool tryUpdate(const" 26879 1  () "yArithOld::DifferenceLogicGraph::tryUpdate(const" 166036]
[ebrowse-ms "writeGraph" () 0 () "			void writeGraph(std" 26954 0  () "ithOld::DifferenceLogicGraph::writeGraph(ostream" 199510]
[ebrowse-ms "~DifferenceLogicGraph" () 0 () "			~DifferenceLogicGraph()" 27461 0  () "d::DifferenceLogicGraph::~DifferenceLogicGraph()" 169371]
)
()
()
()
([ebrowse-ms "EdgesList" () 0 () "			typedef ExprMap<CDList<Expr>*> EdgesList;" 26366 1  () () 0]
[ebrowse-ms "Graph" () 0 () "			typedef CDMap<Expr, EdgeInfo> Graph;" 26273 1  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "TheoryArithOld" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith_old.cpp" ]
()()
([ebrowse-ms "TheoryArithOld" () 0 () () 0 0  () "ryArithOld::TheoryArithOld(TheoryCore* core)
  :" 75461]
[ebrowse-ms "addMultiplicativeSignSplit" () 0 () () 0 0  () "TheoryArithOld::addMultiplicativeSignSplit(const" 176105]
[ebrowse-ms "addPairToArithOrder" () 0 () () 0 0  () "bool TheoryArithOld::addPairToArithOrder(const" 176235]
[ebrowse-ms "addSharedTerm" () 0 () () 0 0  () "void TheoryArithOld::addSharedTerm(const" 84910]
[ebrowse-ms "addToBuffer" () 0 () () 0 0  () "bool TheoryArithOld::addToBuffer(const" 41619]
[ebrowse-ms "assertFact" () 0 () () 0 0  () "void TheoryArithOld::assertFact(const" 85417]
[ebrowse-ms "assignVariables" () 0 () () 0 0  () "void TheoryArithOld::assignVariables(std" 104213]
[ebrowse-ms "canPickEqMonomial" () 0 () () 0 0  () "bool TheoryArithOld::canPickEqMonomial(const" 180576]
[ebrowse-ms "canon" () 0 () () 0 0  () "Theorem TheoryArithOld::canon(const" 7609]
[ebrowse-ms "canonConjunctionEquiv" () 0 () () 0 0  () "TheoryArithOld::canonConjunctionEquiv(const" 14451]
[ebrowse-ms "canonPred" () 0 () () 0 0  () "TheoryArithOld::canonPred(const" 13379]
[ebrowse-ms "canonPredEquiv" () 0 () () 0 0  () "TheoryArithOld::canonPredEquiv(const" 13889]
[ebrowse-ms "canonSimplify" () 0 () () 0 0  () "TheoryArithOld::canonSimplify(const" 12252]
[ebrowse-ms "checkAssertEqInvariant" () 0 () () 0 0  () "oid TheoryArithOld::checkAssertEqInvariant(const" 131079]
[ebrowse-ms "checkIntegerEquality" () 0 () () 0 0  () "eorem TheoryArithOld::checkIntegerEquality(const" 106453]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "void TheoryArithOld::checkSat(bool" 92708]
[ebrowse-ms "checkType" () 0 () () 0 0  () "void TheoryArithOld::checkType(const" 132948]
[ebrowse-ms "collectVars" () 0 () () 0 0  () "void TheoryArithOld::collectVars(const" 80824]
[ebrowse-ms "computeBaseType" () 0 () () 0 0  () "Type TheoryArithOld::computeBaseType(const" 136926]
[ebrowse-ms "computeModel" () 0 () () 0 0  () "void TheoryArithOld::computeModel(const" 106137]
[ebrowse-ms "computeModelBasic" () 0 () () 0 0  () "void TheoryArithOld::computeModelBasic(const" 105420]
[ebrowse-ms "computeModelTerm" () 0 () () 0 0  () "void TheoryArithOld::computeModelTerm(const" 129816]
[ebrowse-ms "computeNormalFactor" () 0 () () 0 0  () "TheoryArithOld::computeNormalFactor(const" 54121]
[ebrowse-ms "computeTCC" () 0 () () 0 0  () "TheoryArithOld::computeTCC(const" 137164]
[ebrowse-ms "computeTermBounds" () 0 () () 0 0  () "int TheoryArithOld::computeTermBounds()" 186941]
[ebrowse-ms "computeType" () 0 () () 0 0  () "void TheoryArithOld::computeType(const" 134252]
[ebrowse-ms "computeTypePred" () 0 () () 0 0  () "Expr TheoryArithOld::computeTypePred(const" 130650]
[ebrowse-ms "createProofRulesOld" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer_old.cpp" "roofRules* TheoryArithOld::createProofRulesOld()" 1297]
[ebrowse-ms "currentMaxCoefficient" () 0 () () 0 0  () "ional TheoryArithOld::currentMaxCoefficient(Expr" 66910]
[ebrowse-ms "doSolve" () 0 () () 0 0  () "Theorem TheoryArithOld::doSolve(const" 14974]
[ebrowse-ms "extractTermsFromInequality" () 0 () () 0 0  () "TheoryArithOld::extractTermsFromInequality(const" 40271]
[ebrowse-ms "findBounds" () 0 () () 0 0  () "TheoryArithOld::findBounds(const" 102495]
[ebrowse-ms "findRationalBound" () 0 () () 0 0  () "TheoryArithOld::findRationalBound(const" 101940]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  () "Cardinality TheoryArithOld::finiteTypeInfo(Expr" 133588]
[ebrowse-ms "fixCurrentMaxCoefficient" () 0 () () 0 0  () "id TheoryArithOld::fixCurrentMaxCoefficient(Expr" 68083]
[ebrowse-ms "freeConstIneq" () 0 () () 0 0  () "st Rational& TheoryArithOld::freeConstIneq(const" 2927]
[ebrowse-ms "getFactors" () 0 () () 0 0  () "void TheoryArithOld::getFactors(const" 23210]
[ebrowse-ms "getLowerBound" () 0 () () 0 0  () ":EpsRational TheoryArithOld::getLowerBound(const" 184327]
[ebrowse-ms "getUpperBound" () 0 () () 0 0  () ":EpsRational TheoryArithOld::getUpperBound(const" 181636]
[ebrowse-ms "inequalityToFind" () 0 () () 0 0  () "Theorem TheoryArithOld::inequalityToFind(const" 154758]
[ebrowse-ms "isBounded" () 0 () () 0 0  () "bool TheoryArithOld::isBounded(const" 181384]
[ebrowse-ms "isConstrained" () 0 () () 0 0  () "bool TheoryArithOld::isConstrained(const" 197265]
[ebrowse-ms "isConstrainedAbove" () 0 () () 0 0  () "bool TheoryArithOld::isConstrainedAbove(const" 194057]
[ebrowse-ms "isConstrainedBelow" () 0 () () 0 0  () "bool TheoryArithOld::isConstrainedBelow(const" 195685]
[ebrowse-ms "isIntegerDerive" () 0 () () 0 0  () "Theorem TheoryArithOld::isIntegerDerive(const" 2480]
[ebrowse-ms "isIntegerThm" () 0 () () 0 0  () "Theorem TheoryArithOld::isIntegerThm(const" 2229]
[ebrowse-ms "isNonlinearEq" () 0 () () 0 0  () "bool TheoryArithOld::isNonlinearEq(const" 177163]
[ebrowse-ms "isNonlinearSumTerm" () 0 () () 0 0  () "bool TheoryArithOld::isNonlinearSumTerm(const" 176858]
[ebrowse-ms "isPowerEquality" () 0 () () 0 0  () "bool TheoryArithOld::isPowerEquality(const" 179336]
[ebrowse-ms "isPowersEquality" () 0 () () 0 0  () "bool TheoryArithOld::isPowersEquality(const" 177689]
[ebrowse-ms "isStale" () 0 () () 0 0  () "bool TheoryArithOld::isStale(const" 56525]
[ebrowse-ms "isolateVariable" () 0 () () 0 0  () "Theorem TheoryArithOld::isolateVariable(const" 51118]
[ebrowse-ms "kidsCanonical" () 0 () () 0 0  () "bool TheoryArithOld::kidsCanonical(const" 5748]
[ebrowse-ms "lessThanVar" () 0 () () 0 0  () "bool TheoryArithOld::lessThanVar(const" 55523]
[ebrowse-ms "normalize" () 0 () () 0 0  () "Theorem TheoryArithOld::normalize(const" 111543]
[ebrowse-ms "normalizeProjectIneqs" () 0 () () 0 0  () "orem TheoryArithOld::normalizeProjectIneqs(const" 62215]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  () "TheoryArithOld::parseExprOp(const" 137628]
[ebrowse-ms "pickIntEqMonomial" () 0 () () 0 0  () "bool TheoryArithOld::pickIntEqMonomial(const" 19167]
[ebrowse-ms "pickMonomial" () 0 () () 0 0  () "Expr TheoryArithOld::pickMonomial(const" 69231]
[ebrowse-ms "print" () 0 () () 0 0  () "TheoryArithOld::print(ExprStream" 141348]
[ebrowse-ms "processBuffer" () 0 () () 0 0  () "void TheoryArithOld::processBuffer()" 34895]
[ebrowse-ms "processFiniteInterval" () 0 () () 0 0  () "(const" 81214]
[ebrowse-ms "processFiniteIntervals" () 0 () () 0 0  () "TheoryArithOld::processFiniteIntervals(const" 83524]
[ebrowse-ms "processIntEq" () 0 () () 0 0  () "TheoryArithOld::processIntEq(const" 29596]
[ebrowse-ms "processRealEq" () 0 () () 0 0  () "TheoryArithOld::processRealEq(const" 20679]
[ebrowse-ms "processSimpleIntEq" () 0 () () 0 0  () "TheoryArithOld::processSimpleIntEq(const" 24099]
[ebrowse-ms "projectInequalities" () 0 () () 0 0  () "void TheoryArithOld::projectInequalities(const" 58264]
[ebrowse-ms "rafineIneqaulityToInteger" () 0 () () 0 0  () " TheoryArithOld::rafineIneqaulityToInteger(const" 107875]
[ebrowse-ms "refineCounterExample" () 0 () () 0 0  () "void TheoryArithOld::refineCounterExample()" 100766]
[ebrowse-ms "registerAtom" () 0 () () 0 0  () "void TheoryArithOld::registerAtom(const" 156526]
[ebrowse-ms "rewrite" () 0 () () 0 0  () "Theorem TheoryArithOld::rewrite(const" 111753]
[ebrowse-ms "selectSmallestByCoefficient" () 0 () () 0 0  () "heoryArithOld::selectSmallestByCoefficient(const" 68195]
[ebrowse-ms "separateMonomial" () 0 () () 0 0  () "void TheoryArithOld::separateMonomial(const" 57421]
[ebrowse-ms "setup" () 0 () () 0 0  () "void TheoryArithOld::setup(const" 121822]
[ebrowse-ms "setupRec" () 0 () () 0 0  () "TheoryArithOld::setupRec(const" 84581]
[ebrowse-ms "solve" () 0 () () 0 0  () "Theorem TheoryArithOld::solve(const" 129010]
[ebrowse-ms "solvedForm" () 0 () () 0 0  () "TheoryArithOld::solvedForm(const" 30964]
[ebrowse-ms "substAndCanonize" () 0 () () 0 0  () "TheoryArithOld::substAndCanonize(const" 34172]
[ebrowse-ms "termDegree" () 0 () () 0 0  () "int TheoryArithOld::termDegree(const" 180287]
[ebrowse-ms "tryPropagate" () 0 () () 0 0  () "void TheoryArithOld::tryPropagate(const" 169784]
[ebrowse-ms "update" () 0 () () 0 0  () "void TheoryArithOld::update(const" 122862]
[ebrowse-ms "updateStats" () 0 () () 0 0  () "void TheoryArithOld::updateStats(const" 40113]
[ebrowse-ms "updateStats" () 0 () () 0 0  () "void TheoryArithOld::updateStats(const" 38767]
[ebrowse-ms "updateSubsumptionDB" () 0 () () 0 0  () "TheoryArithOld::updateSubsumptionDB(const" 3377]
[ebrowse-ms "~TheoryArithOld" () 0 () () 0 0  () "TheoryArithOld::~TheoryArithOld()" 80320]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryArithNew" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith_new.cpp" ]
()()
([ebrowse-ms "TheoryArithNew" () 0 () () 0 0  () "ryArithNew::TheoryArithNew(TheoryCore* core)
  :" 34123]
[ebrowse-ms "addSharedTerm" () 0 () () 0 0  () "void TheoryArithNew::addSharedTerm(const" 42164]
[ebrowse-ms "addToBuffer" () 0 () () 0 0  () "void TheoryArithNew::addToBuffer(const" 27068]
[ebrowse-ms "assertEqual" () 0 () () 0 0  () "QueryResult TheoryArithNew::assertEqual(const" 89925]
[ebrowse-ms "assertFact" () 0 () () 0 0  () "void TheoryArithNew::assertFact(const" 100759]
[ebrowse-ms "assertLower" () 0 () () 0 0  () "QueryResult TheoryArithNew::assertLower(const" 88529]
[ebrowse-ms "assertUpper" () 0 () () 0 0  () "QueryResult TheoryArithNew::assertUpper(const" 87134]
[ebrowse-ms "assignVariables" () 0 () () 0 0  () "void TheoryArithNew::assignVariables(std" 46112]
[ebrowse-ms "boundsAsString" () 0 () () 0 0  () "string TheoryArithNew::boundsAsString()" 109465]
[ebrowse-ms "canon" () 0 () () 0 0  () "Theorem TheoryArithNew::canon(const" 3625]
[ebrowse-ms "canonConjunctionEquiv" () 0 () () 0 0  () "TheoryArithNew::canonConjunctionEquiv(const" 9735]
[ebrowse-ms "canonPred" () 0 () () 0 0  () "TheoryArithNew::canonPred(const" 8341]
[ebrowse-ms "canonPredEquiv" () 0 () () 0 0  () "Theorem TheoryArithNew::canonPredEquiv(const" 8933]
[ebrowse-ms "canonSimplify" () 0 () () 0 0  () "Theorem TheoryArithNew::canonSimplify(const" 7132]
[ebrowse-ms "checkAssertEqInvariant" () 0 () () 0 0  () "oid TheoryArithNew::checkAssertEqInvariant(const" 61082]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "void TheoryArithNew::checkSat(bool" 90354]
[ebrowse-ms "checkSatInteger" () 0 () () 0 0  () "QueryResult TheoryArithNew::checkSatInteger()" 91923]
[ebrowse-ms "checkSatSimplex" () 0 () () 0 0  () "QueryResult TheoryArithNew::checkSatSimplex()" 93309]
[ebrowse-ms "checkType" () 0 () () 0 0  () "void TheoryArithNew::checkType(const" 61147]
[ebrowse-ms "collectVars" () 0 () () 0 0  () "void TheoryArithNew::collectVars(const" 37558]
[ebrowse-ms "computeBaseType" () 0 () () 0 0  () "Type TheoryArithNew::computeBaseType(const" 65133]
[ebrowse-ms "computeModel" () 0 () () 0 0  () "void TheoryArithNew::computeModel(const" 47781]
[ebrowse-ms "computeModelBasic" () 0 () () 0 0  () "void TheoryArithNew::computeModelBasic(const" 47064]
[ebrowse-ms "computeModelTerm" () 0 () () 0 0  () "void TheoryArithNew::computeModelTerm(const" 59818]
[ebrowse-ms "computeNormalFactor" () 0 () () 0 0  () "Expr TheoryArithNew::computeNormalFactor(const" 27819]
[ebrowse-ms "computeTCC" () 0 () () 0 0  () "Expr TheoryArithNew::computeTCC(const" 65370]
[ebrowse-ms "computeType" () 0 () () 0 0  () "void TheoryArithNew::computeType(const" 62451]
[ebrowse-ms "computeTypePred" () 0 () () 0 0  () "Expr TheoryArithNew::computeTypePred(const" 60651]
[ebrowse-ms "createProofRules" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.cpp" "thProofRules* TheoryArithNew::createProofRules()" 1266]
[ebrowse-ms "deriveGomoryCut" () 0 () () 0 0  () "Theorem TheoryArithNew::deriveGomoryCut(const" 134754]
[ebrowse-ms "doSolve" () 0 () () 0 0  () "Theorem TheoryArithNew::doSolve(const" 10261]
[ebrowse-ms "findBounds" () 0 () () 0 0  () "TheoryArithNew::findBounds(const" 44387]
[ebrowse-ms "findCoefficient" () 0 () () 0 0  () " Rational& TheoryArithNew::findCoefficient(const" 97633]
[ebrowse-ms "findRationalBound" () 0 () () 0 0  () "TheoryArithNew::findRationalBound(const" 43824]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  () "Cardinality TheoryArithNew::finiteTypeInfo(Expr" 61787]
[ebrowse-ms "getBeta" () 0 () () 0 0  () "thNew::EpsRational TheoryArithNew::getBeta(const" 100174]
[ebrowse-ms "getLowerBound" () 4 () () 0 0  () ":EpsRational TheoryArithNew::getLowerBound(const" 98684]
[ebrowse-ms "getLowerBoundExplanation" () 0 () () 0 0  () "m TheoryArithNew::getLowerBoundExplanation(const" 119503]
[ebrowse-ms "getLowerBoundThm" () 4 () () 0 0  () "Theorem TheoryArithNew::getLowerBoundThm(const" 99412]
[ebrowse-ms "getTableauxEntry" () 0 () () 0 0  () "Rational TheoryArithNew::getTableauxEntry(const" 97487]
[ebrowse-ms "getUpperBound" () 4 () () 0 0  () ":EpsRational TheoryArithNew::getUpperBound(const" 99057]
[ebrowse-ms "getUpperBoundExplanation" () 0 () () 0 0  () "m TheoryArithNew::getUpperBoundExplanation(const" 122867]
[ebrowse-ms "getUpperBoundThm" () 4 () () 0 0  () "Theorem TheoryArithNew::getUpperBoundThm(const" 99785]
[ebrowse-ms "getVariableIntroThm" () 0 () () 0 0  () "heorem TheoryArithNew::getVariableIntroThm(const" 106356]
[ebrowse-ms "isBasic" () 4 () () 0 0  () "bool TheoryArithNew::isBasic(const" 81620]
[ebrowse-ms "isIntegerDerive" () 0 () () 0 0  () "Theorem TheoryArithNew::isIntegerDerive(const" 2344]
[ebrowse-ms "isIntegerThm" () 0 () () 0 0  () "Theorem TheoryArithNew::isIntegerThm(const" 2146]
[ebrowse-ms "kidsCanonical" () 0 () () 0 0  () "bool TheoryArithNew::kidsCanonical(const" 2781]
[ebrowse-ms "lessThanVar" () 0 () () 0 0  () "bool TheoryArithNew::lessThanVar(const" 30629]
[ebrowse-ms "normalize" () 0 () () 0 0  () "Theorem TheoryArithNew::normalize(const" 50410]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  () "Expr TheoryArithNew::parseExprOp(const" 65834]
[ebrowse-ms "pickIntEqMonomial" () 0 () () 0 0  () "TheoryArithNew::pickIntEqMonomial(const" 12161]
[ebrowse-ms "pivot" () 0 () () 0 0  () "void TheoryArithNew::pivot(const" 81803]
[ebrowse-ms "pivotAndUpdate" () 0 () () 0 0  () "void TheoryArithNew::pivotAndUpdate(const" 84704]
[ebrowse-ms "pivotRule" () 0 () () 0 0  () "Theorem TheoryArithNew::pivotRule(const" 116656]
[ebrowse-ms "print" () 0 () () 0 0  () "ExprStream& TheoryArithNew::print(ExprStream" 69320]
[ebrowse-ms "processFiniteInterval" () 0 () () 0 0  () "TheoryArithNew::processFiniteInterval(const" 37947]
[ebrowse-ms "processFiniteIntervals" () 0 () () 0 0  () "TheoryArithNew::processFiniteIntervals(const" 40186]
[ebrowse-ms "processIntEq" () 0 () () 0 0  () "TheoryArithNew::processIntEq(const" 21325]
[ebrowse-ms "processRealEq" () 0 () () 0 0  () "TheoryArithNew::processRealEq(const" 13283]
[ebrowse-ms "processSimpleIntEq" () 0 () () 0 0  () "TheoryArithNew::processSimpleIntEq(const" 15862]
[ebrowse-ms "propagateTheory" () 0 () () 0 0  () "void TheoryArithNew::propagateTheory(const" 131232]
[ebrowse-ms "rafineIntegerConstraints" () 0 () () 0 0  () "m TheoryArithNew::rafineIntegerConstraints(const" 50583]
[ebrowse-ms "refineCounterExample" () 0 () () 0 0  () "void TheoryArithNew::refineCounterExample()" 42662]
[ebrowse-ms "registerAtom" () 0 () () 0 0  () "void TheoryArithNew::registerAtom(const" 130040]
[ebrowse-ms "rewrite" () 0 () () 0 0  () "Theorem TheoryArithNew::rewrite(const" 51540]
[ebrowse-ms "separateMonomial" () 0 () () 0 0  () "void TheoryArithNew::separateMonomial(const" 31041]
[ebrowse-ms "setup" () 0 () () 0 0  () "void TheoryArithNew::setup(const" 56688]
[ebrowse-ms "setupRec" () 0 () () 0 0  () "TheoryArithNew::setupRec(const" 41243]
[ebrowse-ms "solve" () 0 () () 0 0  () "Theorem TheoryArithNew::solve(const" 58988]
[ebrowse-ms "solvedForm" () 0 () () 0 0  () "TheoryArithNew::solvedForm(const" 22621]
[ebrowse-ms "substAndCanonize" () 0 () () 0 0  () "TheoryArithNew::substAndCanonize(const" 25832]
[ebrowse-ms "substAndCanonizeModTableaux" () 0 () () 0 0  () "heoryArithNew::substAndCanonizeModTableaux(const" 112222]
[ebrowse-ms "substAndCanonizeTableaux" () 0 () () 0 0  () "d TheoryArithNew::substAndCanonizeTableaux(const" 114170]
[ebrowse-ms "tableauxAsString" () 4 () () 0 0  () "string TheoryArithNew::tableauxAsString()" 108520]
[ebrowse-ms "unsatAsString" () 4 () () 0 0  () "string TheoryArithNew::unsatAsString()" 108999]
[ebrowse-ms "update" () 0 () () 0 0  () "void TheoryArithNew::update(const" 83009]
[ebrowse-ms "updateDependencies" () 0 () () 0 0  () "void TheoryArithNew::updateDependencies(const" 128280]
[ebrowse-ms "updateDependenciesAdd" () 0 () () 0 0  () "void TheoryArithNew::updateDependenciesAdd(const" 127428]
[ebrowse-ms "updateDependenciesRemove" () 0 () () 0 0  () "d TheoryArithNew::updateDependenciesRemove(const" 127854]
[ebrowse-ms "updateFreshVariables" () 0 () () 0 0  () "void TheoryArithNew::updateFreshVariables()" 127107]
[ebrowse-ms "updateStats" () 0 () () 0 0  () "void TheoryArithNew::updateStats(const" 26923]
[ebrowse-ms "updateStats" () 0 () () 0 0  () "void TheoryArithNew::updateStats(const" 26558]
[ebrowse-ms "updateValue" () 0 () () 0 0  () "void TheoryArithNew::updateValue(const" 107951]
[ebrowse-ms "~TheoryArithNew" () 0 () () 0 0  () "TheoryArithNew::~TheoryArithNew()" 37095]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "MonomialLess" () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.cpp" "class MonomialLess {" 13533"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer_old.cpp" ]
()()
([ebrowse-ms "operator ()" () 4 () "  bool operator()(const" 13565 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.cpp" "  bool operator()(const" 13565]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprManagerNotifyObj" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_manager.cpp" ]
()()
([ebrowse-ms "notify" () 0 () () 0 0  () "void ExprManagerNotifyObj::notify()" 20220]
[ebrowse-ms "notifyPre" () 0 () () 0 0  () "void ExprManagerNotifyObj::notifyPre()" 20156]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "BitvectorTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.cpp" ]
()()
([ebrowse-ms "BVMult_order_subterms" () 0 () () 0 0  () "torTheoremProducer::BVMult_order_subterms( const" 158085]
[ebrowse-ms "BitvectorTheoremProducer" () 0 () () 0 0  () "orTheoremProducer(TheoryBitvector* theoryBV)
  :" 1395]
[ebrowse-ms "MarkNonSolvableEq" () 0 () () 0 0  () "tvectorTheoremProducer::MarkNonSolvableEq( const" 148613]
[ebrowse-ms "bitBlastDisEqnRule" () 0 () () 0 0  () "tvectorTheoremProducer::bitBlastDisEqnRule(const" 8079]
[ebrowse-ms "bitBlastEqnRule" () 0 () () 0 0  () " BitvectorTheoremProducer::bitBlastEqnRule(const" 4763]
[ebrowse-ms "bitExtractAllToConstEq" () 0 () () 0 0  () "orTheoremProducer::bitExtractAllToConstEq(vector" 31246]
[ebrowse-ms "bitExtractBVASHR" () 0 () () 0 0  () "BitvectorTheoremProducer::bitExtractBVASHR(const" 66714]
[ebrowse-ms "bitExtractBVLSHR" () 0 () () 0 0  () "BitvectorTheoremProducer::bitExtractBVLSHR(const" 64962]
[ebrowse-ms "bitExtractBVMult" () 0 () () 0 0  () "BitvectorTheoremProducer::bitExtractBVMult(const" 39933]
[ebrowse-ms "bitExtractBVPlus" () 0 () () 0 0  () "  bitExtractBVPlus(const" 44626]
[ebrowse-ms "bitExtractBVPlusPreComputed" () 0 () () 0 0  () "bitExtractBVPlusPreComputed(const" 48455]
[ebrowse-ms "bitExtractBVSHL" () 0 () () 0 0  () " BitvectorTheoremProducer::bitExtractBVSHL(const" 63224]
[ebrowse-ms "bitExtractBitwise" () 0 () () 0 0  () "itvectorTheoremProducer::bitExtractBitwise(const" 57369]
[ebrowse-ms "bitExtractConcatenation" () 0 () () 0 0  () "orTheoremProducer::bitExtractConcatenation(const" 35497]
[ebrowse-ms "bitExtractConstBVMult" () 0 () () 0 0  () "ctorTheoremProducer::bitExtractConstBVMult(const" 37549]
[ebrowse-ms "bitExtractConstant" () 0 () () 0 0  () "tvectorTheoremProducer::bitExtractConstant(const" 33954]
[ebrowse-ms "bitExtractExtraction" () 0 () () 0 0  () "ectorTheoremProducer::bitExtractExtraction(const" 42489]
[ebrowse-ms "bitExtractFixedLeftShift" () 0 () () 0 0  () "rTheoremProducer::bitExtractFixedLeftShift(const" 59136]
[ebrowse-ms "bitExtractFixedRightShift" () 0 () () 0 0  () "TheoremProducer::bitExtractFixedRightShift(const" 61104]
[ebrowse-ms "bitExtractNot" () 0 () () 0 0  () "em BitvectorTheoremProducer::bitExtractNot(const" 55915]
[ebrowse-ms "bitExtractRewrite" () 0 () () 0 0  () "itvectorTheoremProducer::bitExtractRewrite(const" 33100]
[ebrowse-ms "bitExtractSXRule" () 0 () () 0 0  () "BitvectorTheoremProducer::bitExtractSXRule(const" 13756]
[ebrowse-ms "bitExtractToExtract" () 0 () () 0 0  () "vectorTheoremProducer::bitExtractToExtract(const" 32331]
[ebrowse-ms "bitblastBVMult" () 0 () () 0 0  () "m BitvectorTheoremProducer::bitblastBVMult(const" 213110]
[ebrowse-ms "bitblastBVPlus" () 0 () () 0 0  () "m BitvectorTheoremProducer::bitblastBVPlus(const" 216485]
[ebrowse-ms "bitvectorFalseRule" () 0 () () 0 0  () "tvectorTheoremProducer::bitvectorFalseRule(const" 2016]
[ebrowse-ms "bitvectorTrueRule" () 0 () () 0 0  () "itvectorTheoremProducer::bitvectorTrueRule(const" 3363]
[ebrowse-ms "bitwiseConcat" () 0 () () 0 0  () "em BitvectorTheoremProducer::bitwiseConcat(const" 102511]
[ebrowse-ms "bitwiseConst" () 0 () () 0 0  () "rem BitvectorTheoremProducer::bitwiseConst(const" 99469]
[ebrowse-ms "bitwiseConstElim" () 0 () () 0 0  () "BitvectorTheoremProducer::bitwiseConstElim(const" 106646]
[ebrowse-ms "bitwiseFlatten" () 0 () () 0 0  () "m BitvectorTheoremProducer::bitwiseFlatten(const" 103800]
[ebrowse-ms "buildPlusTerm" () 0 () () 0 0  () "Expr BitvectorTheoremProducer::buildPlusTerm(int" 179647]
[ebrowse-ms "bvConstIneqn" () 0 () () 0 0  () "rem BitvectorTheoremProducer::bvConstIneqn(const" 24779]
[ebrowse-ms "bvConstMultAssocRule" () 0 () () 0 0  () "ectorTheoremProducer::bvConstMultAssocRule(const" 120716]
[ebrowse-ms "bvMultAssocRule" () 0 () () 0 0  () "BitvectorTheoremProducer::bvMultAssocRule(const" 122165]
[ebrowse-ms "bvMultDistRule" () 0 () () 0 0  () "BitvectorTheoremProducer::bvMultDistRule(const" 124464]
[ebrowse-ms "bvPlusAssociativityRule" () 0 () () 0 0  () "bvPlusAssociativityRule(const" 54334]
[ebrowse-ms "bvSDivRewrite" () 0 () () 0 0  () "em BitvectorTheoremProducer::bvSDivRewrite(const" 218510]
[ebrowse-ms "bvSModRewrite" () 0 () () 0 0  () "em BitvectorTheoremProducer::bvSModRewrite(const" 222606]
[ebrowse-ms "bvSRemRewrite" () 0 () () 0 0  () "em BitvectorTheoremProducer::bvSRemRewrite(const" 220585]
[ebrowse-ms "bvUDivConst" () 0 () () 0 0  () "orem BitvectorTheoremProducer::bvUDivConst(const" 210435]
[ebrowse-ms "bvUDivTheorem" () 0 () () 0 0  () "em BitvectorTheoremProducer::bvUDivTheorem(const" 211267]
[ebrowse-ms "bvURemConst" () 0 () () 0 0  () "orem BitvectorTheoremProducer::bvURemConst(const" 209173]
[ebrowse-ms "bvURemRewrite" () 0 () () 0 0  () "em BitvectorTheoremProducer::bvURemRewrite(const" 209984]
[ebrowse-ms "bvashrToConcat" () 0 () () 0 0  () "m BitvectorTheoremProducer::bvashrToConcat(const" 77035]
[ebrowse-ms "bvlshrToConcat" () 0 () () 0 0  () "m BitvectorTheoremProducer::bvlshrToConcat(const" 76039]
[ebrowse-ms "bvmultBVUminus" () 0 () () 0 0  () "BitvectorTheoremProducer::bvmultBVUminus(const" 141405]
[ebrowse-ms "bvmultConst" () 0 () () 0 0  () "orem BitvectorTheoremProducer::bvmultConst(const" 115230]
[ebrowse-ms "bvplusConst" () 0 () () 0 0  () "orem BitvectorTheoremProducer::bvplusConst(const" 113779]
[ebrowse-ms "bvplusZeroConcatRule" () 0 () () 0 0  () "ectorTheoremProducer::bvplusZeroConcatRule(const" 82210]
[ebrowse-ms "bvshlSplit" () 0 () () 0 0  () "eorem BitvectorTheoremProducer::bvshlSplit(const" 74778]
[ebrowse-ms "bvshlToConcat" () 0 () () 0 0  () "em BitvectorTheoremProducer::bvshlToConcat(const" 73593]
[ebrowse-ms "bvuminusBVConst" () 0 () () 0 0  () "BitvectorTheoremProducer::bvuminusBVConst(const" 137590]
[ebrowse-ms "bvuminusBVMult" () 0 () () 0 0  () "BitvectorTheoremProducer::bvuminusBVMult(const" 138408]
[ebrowse-ms "bvuminusBVPlus" () 0 () () 0 0  () "BitvectorTheoremProducer::bvuminusBVPlus(const" 143046]
[ebrowse-ms "bvuminusBVUminus" () 0 () () 0 0  () "BitvectorTheoremProducer::bvuminusBVUminus(const" 140102]
[ebrowse-ms "bvuminusToBVPlus" () 0 () () 0 0  () "BitvectorTheoremProducer::bvuminusToBVPlus(const" 136881]
[ebrowse-ms "bvuminusVar" () 0 () () 0 0  () "BitvectorTheoremProducer::bvuminusVar(const" 140741]
[ebrowse-ms "canonBVEQ" () 0 () () 0 0  () "eorem BitvectorTheoremProducer::canonBVEQ( const" 192224]
[ebrowse-ms "canonBVMult" () 0 () () 0 0  () "rem BitvectorTheoremProducer::canonBVMult( const" 162795]
[ebrowse-ms "canonBVPlus" () 0 () () 0 0  () "rem BitvectorTheoremProducer::canonBVPlus( const" 187736]
[ebrowse-ms "canonBVUMinus" () 0 () () 0 0  () "m BitvectorTheoremProducer::canonBVUMinus( const" 188699]
[ebrowse-ms "chopConcat" () 0 () () 0 0  () "Expr BitvectorTheoremProducer::chopConcat(int" 175639]
[ebrowse-ms "collectLikeTermsOfPlus" () 0 () () 0 0  () "torTheoremProducer::collectLikeTermsOfPlus(const" 127973]
[ebrowse-ms "collectOneTermOfPlus" () 0 () () 0 0  () "ectorTheoremProducer::collectOneTermOfPlus(const" 127005]
[ebrowse-ms "combineLikeTermsRule" () 0 () () 0 0  () "ectorTheoremProducer::combineLikeTermsRule(const" 132557]
[ebrowse-ms "computeCarry" () 0 () () 0 0  () "BitvectorTheoremProducer::computeCarry(const" 47375]
[ebrowse-ms "computeCarryPreComputed" () 0 () () 0 0  () "computeCarryPreComputed(const" 51268]
[ebrowse-ms "concatConst" () 0 () () 0 0  () "orem BitvectorTheoremProducer::concatConst(const" 110341]
[ebrowse-ms "concatFlatten" () 0 () () 0 0  () "BitvectorTheoremProducer::concatFlatten(const" 111132]
[ebrowse-ms "concatMergeExtract" () 0 () () 0 0  () "tvectorTheoremProducer::concatMergeExtract(const" 111881]
[ebrowse-ms "constEq" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::constEq(const" 226482]
[ebrowse-ms "constMultToPlus" () 0 () () 0 0  () " BitvectorTheoremProducer::constMultToPlus(const" 80656]
[ebrowse-ms "constWidthLeftShiftToConcat" () 0 () () 0 0  () "eoremProducer::constWidthLeftShiftToConcat(const" 71291]
[ebrowse-ms "createNewPlusCollection" () 0 () () 0 0  () "createNewPlusCollection(const" 129734]
[ebrowse-ms "distributive_rule" () 0 () () 0 0  () "tvectorTheoremProducer::distributive_rule( const" 166530]
[ebrowse-ms "eqConst" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::eqConst(const" 68733]
[ebrowse-ms "eqToBits" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::eqToBits(const" 69369]
[ebrowse-ms "expandTypePred" () 0 () () 0 0  () "BitvectorTheoremProducer::expandTypePred(const" 146962]
[ebrowse-ms "extractAnd" () 0 () () 0 0  () "BitvectorTheoremProducer::extractAnd(const" 91036]
[ebrowse-ms "extractBVMult" () 0 () () 0 0  () "BitvectorTheoremProducer::extractBVMult(const" 144137]
[ebrowse-ms "extractBVPlus" () 0 () () 0 0  () "BitvectorTheoremProducer::extractBVPlus(const" 145200]
[ebrowse-ms "extractBitwise" () 0 () () 0 0  () "BitvectorTheoremProducer::extractBitwise(const" 89766]
[ebrowse-ms "extractConcat" () 0 () () 0 0  () "BitvectorTheoremProducer::extractConcat(const" 87111]
[ebrowse-ms "extractConst" () 0 () () 0 0  () "rem BitvectorTheoremProducer::extractConst(const" 83877]
[ebrowse-ms "extractExtract" () 0 () () 0 0  () "BitvectorTheoremProducer::extractExtract(const" 85687]
[ebrowse-ms "extractNeg" () 0 () () 0 0  () "BitvectorTheoremProducer::extractNeg(const" 91391]
[ebrowse-ms "extractOr" () 0 () () 0 0  () "BitvectorTheoremProducer::extractOr(const" 91221]
[ebrowse-ms "extractWhole" () 0 () () 0 0  () "BitvectorTheoremProducer::extractWhole(const" 84936]
[ebrowse-ms "flattenBVPlus" () 0 () () 0 0  () "BitvectorTheoremProducer::flattenBVPlus(const" 125828]
[ebrowse-ms "flipBVMult" () 0 () () 0 0  () "BitvectorTheoremProducer::flipBVMult(const" 117627]
[ebrowse-ms "generalIneqn" () 0 () () 0 0  () "rem BitvectorTheoremProducer::generalIneqn(const" 26672]
[ebrowse-ms "getPlusTerms" () 0 () () 0 0  () "oid BitvectorTheoremProducer::getPlusTerms(const" 170738]
[ebrowse-ms "isolate_var" () 0 () () 0 0  () "orem BitvectorTheoremProducer::isolate_var(const" 149402]
[ebrowse-ms "iteBVnegRule" () 0 () () 0 0  () "BitvectorTheoremProducer::iteBVnegRule(const" 92756]
[ebrowse-ms "iteExtractRule" () 0 () () 0 0  () "BitvectorTheoremProducer::iteExtractRule(const" 91559]
[ebrowse-ms "leftShiftToConcat" () 0 () () 0 0  () "itvectorTheoremProducer::leftShiftToConcat(const" 70429]
[ebrowse-ms "lhsEqRhsIneqn" () 0 () () 0 0  () "em BitvectorTheoremProducer::lhsEqRhsIneqn(const" 23241]
[ebrowse-ms "lhsMinusRhsRule" () 0 () () 0 0  () "BitvectorTheoremProducer::lhsMinusRhsRule(const" 134345]
[ebrowse-ms "liftConcatBVMult" () 0 () () 0 0  () "BitvectorTheoremProducer::liftConcatBVMult(const" 160284]
[ebrowse-ms "liftConcatBVPlus" () 0 () () 0 0  () "BitvectorTheoremProducer::liftConcatBVPlus(const" 167887]
[ebrowse-ms "negBVand" () 0 () () 0 0  () "BitvectorTheoremProducer::negBVand(const" 96458]
[ebrowse-ms "negBVor" () 0 () () 0 0  () "BitvectorTheoremProducer::negBVor(const" 97167]
[ebrowse-ms "negBVxnor" () 0 () () 0 0  () "BitvectorTheoremProducer::negBVxnor(const" 98619]
[ebrowse-ms "negBVxor" () 0 () () 0 0  () "BitvectorTheoremProducer::negBVxor(const" 97858]
[ebrowse-ms "negConcat" () 0 () () 0 0  () "BitvectorTheoremProducer::negConcat(const" 94427]
[ebrowse-ms "negConst" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::negConst(const" 93661]
[ebrowse-ms "negElim" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::negElim(const" 95676]
[ebrowse-ms "negNeg" () 0 () () 0 0  () "BitvectorTheoremProducer::negNeg(const" 95179]
[ebrowse-ms "notBVEQ1Rule" () 0 () () 0 0  () "rem BitvectorTheoremProducer::notBVEQ1Rule(const" 21579]
[ebrowse-ms "notBVLTRule" () 0 () () 0 0  () "orem BitvectorTheoremProducer::notBVLTRule(const" 22412]
[ebrowse-ms "okToSplit" () 0 () () 0 0  () "bool BitvectorTheoremProducer::okToSplit(const" 191346]
[ebrowse-ms "oneBVAND" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::oneBVAND(const" 225545]
[ebrowse-ms "oneCoeffBVMult" () 0 () () 0 0  () "BitvectorTheoremProducer::oneCoeffBVMult(const" 116874]
[ebrowse-ms "pad" () 0 () () 0 0  () "BitvectorTheoremProducer::pad(int" 118260]
[ebrowse-ms "padBVLTRule" () 0 () () 0 0  () "BitvectorTheoremProducer::padBVLTRule(const" 11406]
[ebrowse-ms "padBVMult" () 0 () () 0 0  () "BitvectorTheoremProducer::padBVMult(const" 119920]
[ebrowse-ms "padBVPlus" () 0 () () 0 0  () "BitvectorTheoremProducer::padBVPlus(const" 119027]
[ebrowse-ms "padBVSLTRule" () 0 () () 0 0  () "BitvectorTheoremProducer::padBVSLTRule(const" 14321]
[ebrowse-ms "processExtract" () 0 () () 0 0  () "m BitvectorTheoremProducer::processExtract(const" 189576]
[ebrowse-ms "repeatRule" () 0 () () 0 0  () "eorem BitvectorTheoremProducer::repeatRule(const" 206469]
[ebrowse-ms "rewriteBVCOMP" () 0 () () 0 0  () "em BitvectorTheoremProducer::rewriteBVCOMP(const" 79253]
[ebrowse-ms "rewriteBVSub" () 0 () () 0 0  () "rem BitvectorTheoremProducer::rewriteBVSub(const" 79733]
[ebrowse-ms "rewriteNAND" () 0 () () 0 0  () "orem BitvectorTheoremProducer::rewriteNAND(const" 78372]
[ebrowse-ms "rewriteNOR" () 0 () () 0 0  () "eorem BitvectorTheoremProducer::rewriteNOR(const" 78814]
[ebrowse-ms "rewriteXNOR" () 0 () () 0 0  () "orem BitvectorTheoremProducer::rewriteXNOR(const" 77946]
[ebrowse-ms "rightShiftToConcat" () 0 () () 0 0  () "tvectorTheoremProducer::rightShiftToConcat(const" 72448]
[ebrowse-ms "rotlRule" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::rotlRule(const" 207347]
[ebrowse-ms "rotrRule" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::rotrRule(const" 208324]
[ebrowse-ms "sameKidCheck" () 0 () () 0 0  () "int BitvectorTheoremProducer::sameKidCheck(const" 109511]
[ebrowse-ms "signBVLTRule" () 0 () () 0 0  () "BitvectorTheoremProducer::signBVLTRule(const" 15740]
[ebrowse-ms "signExtendRule" () 0 () () 0 0  () "BitvectorTheoremProducer::signExtendRule(const" 12504]
[ebrowse-ms "sumNormalizedElements" () 0 () () 0 0  () "vectorTheoremProducer::sumNormalizedElements(int" 131973]
[ebrowse-ms "typePredBit" () 0 () () 0 0  () "BitvectorTheoremProducer::typePredBit(const" 146371]
[ebrowse-ms "zeroBVOR" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::zeroBVOR(const" 224660]
[ebrowse-ms "zeroCoeffBVMult" () 0 () () 0 0  () "BitvectorTheoremProducer::zeroCoeffBVMult(const" 116108]
[ebrowse-ms "zeroExtendRule" () 0 () () 0 0  () "m BitvectorTheoremProducer::zeroExtendRule(const" 205744]
[ebrowse-ms "zeroLeq" () 0 () () 0 0  () "Theorem BitvectorTheoremProducer::zeroLeq(const" 24137]
[ebrowse-ms "zeroPaddingRule" () 0 () () 0 0  () "zeroPaddingRule(const" 53446]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "vec" "MiniSat" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "class vec {" 4045"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" ]
()([ebrowse-ms "cap" () 0 () "    int cap;" 4084 2  () () 0]
[ebrowse-ms "data" () 0 () "    T*  data;" 4059 2  () () 0]
[ebrowse-ms "sz" () 0 () "    int sz;" 4071 2  () () 0]
)
([ebrowse-ms "T" () 4 () "    operator const T* (void" 4977 0  () "    operator const T* (void" 4977]
[ebrowse-ms "T" () 0 () "    operator T*       (void" 4890 0  () "    operator T*       (void" 4890]
[ebrowse-ms "capacity" () 0 () "    void     capacity (int" 5486 0  () "    void     capacity (int" 5486]
[ebrowse-ms "clear" () 32 () "    void     clear  (bool" 5441 0  () "void vec<T>::clear(bool" 7119]
[ebrowse-ms "copyTo" () 4 () "    void copyTo(vec" 6245 0  () "    void copyTo(vec" 6245]
[ebrowse-ms "grow" () 32 () "    void     grow(int" 4150 2  () "void vec<T>::grow(int" 6526]
[ebrowse-ms "growTo" () 32 () "    void     growTo (int" 5394 0  () "void vec<T>::growTo(int" 6766]
[ebrowse-ms "growTo" () 32 () "    void     growTo (int" 5362 0  () "void vec<T>::growTo(int" 6951]
[ebrowse-ms "init" () 0 () "    void     init(int" 4107 2  () () 0]
[ebrowse-ms "last" () 0 () "    T&       last  (void" 5822 0  () "    T&       last  (void" 5822]
[ebrowse-ms "last" () 4 () "    const T& last  (void" 5760 0  () "    const T& last  (void" 5760]
[ebrowse-ms "moveTo" () 0 () "    void moveTo(vec" 6372 0  () "    void moveTo(vec" 6372]
[ebrowse-ms "operator =" () 0 () "    vec<T>&  operator = (vec" 6093 0  () "    vec<T>&  operator = (vec" 6093]
[ebrowse-ms "operator []" () 0 () "    T&       operator [] (int" 5983 0  () "    T&       operator [] (int" 5983]
[ebrowse-ms "operator []" () 4 () "    const T& operator [] (int" 5915 0  () "    const T& operator [] (int" 5915]
[ebrowse-ms "pop" () 0 () "    void     pop    (void" 5299 0  () "    void     pop    (void" 5299]
[ebrowse-ms "push" () 0 () "    void     push  (const" 5660 0  () "    void     push  (const" 5660]
[ebrowse-ms "push" () 0 () "    void     push  (void" 5558 0  () "    void     push  (void" 5558]
[ebrowse-ms "release" () 0 () "    T*       release  (void" 4790 0  () "    T*       release  (void" 4790]
[ebrowse-ms "shrink" () 0 () "    void     shrink (int" 5109 0  () "    void     shrink (int" 5109]
[ebrowse-ms "size" () 4 () "    int      size   (void" 5056 0  () "    int      size   (void" 5056]
[ebrowse-ms "vec" () 0 () "             vec        (vec<T>& other) {" 6152 0  () "             vec        (vec<T>& other) {" 6152]
[ebrowse-ms "vec" () 0 () "    vec(T* array, int size)     :" 4505 0  () "    vec(T* array, int size)     :" 4505]
[ebrowse-ms "vec" () 0 () "    vec(int size, const T& pad) :" 4417 0  () "    vec(int size, const T& pad) :" 4417]
[ebrowse-ms "vec" () 0 () "    vec(int size)               :" 4332 0  () "    vec(int size)               :" 4332]
[ebrowse-ms "vec" () 0 () "    vec(void)                   :" 4262 0  () "    vec(void)                   :" 4262]
[ebrowse-ms "~vec" () 0 () "   ~vec(void" 4652 0  () "   ~vec(void" 4652]
)
()
()
()
([ebrowse-ms "Datum" () 0 () "    typedef T   Datum;" 4227 0  () () 0]
[ebrowse-ms "Key" () 0 () "    typedef int Key;" 4204 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "short" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" "  template<> struct hash<unsigned short> {" 2853"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "    size_t operator()(unsigned" 2884 0  () "    size_t operator()(unsigned" 2884]
[ebrowse-ms "operator ()" () 4 () "    size_t operator()(short" 2777 0  () "    size_t operator()(short" 2777]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Varinfo" "SAT::CNF_Manager" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf_manager.h" "  struct Varinfo {" 1260() ]
()([ebrowse-ms "expr" () 0 () "    CVC3::Expr expr;" 1281 0  () () 0]
[ebrowse-ms "fanins" () 0 () "    std::vector<Lit> fanins;" 1310 0  () () 0]
[ebrowse-ms "fanouts" () 0 () "    std::vector<Var> fanouts;" 1340 0  () () 0]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoremLess" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  class TheoremLess {" 13928"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "    bool operator()(const" 13964 0  () "    bool operator()(const" 13964]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CoreTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_theorem_producer.cpp" ]
()()
([ebrowse-ms "AndToIte" () 0 () () 0 0  () "CoreTheoremProducer::AndToIte(const" 11600]
[ebrowse-ms "IffToIte" () 0 () () 0 0  () "CoreTheoremProducer::IffToIte(const" 12713]
[ebrowse-ms "ImpToIte" () 0 () () 0 0  () "CoreTheoremProducer::ImpToIte(const" 13260]
[ebrowse-ms "NotToIte" () 0 () () 0 0  () "CoreTheoremProducer::NotToIte(const" 9909]
[ebrowse-ms "OrToIte" () 0 () () 0 0  () "CoreTheoremProducer::OrToIte(const" 10504]
[ebrowse-ms "andDistributivityRule" () 0 () () 0 0  () "CoreTheoremProducer::andDistributivityRule(const" 7562]
[ebrowse-ms "dummyTheorem" () 0 () () 0 0  () "Theorem CoreTheoremProducer::dummyTheorem(const" 20042]
[ebrowse-ms "ifLiftUnaryRule" () 0 () () 0 0  () "CoreTheoremProducer::ifLiftUnaryRule(const" 17742]
[ebrowse-ms "iffAndDistrib" () 0 () () 0 0  () "CoreTheoremProducer::iffAndDistrib(const" 17002]
[ebrowse-ms "iffOrDistrib" () 0 () () 0 0  () "CoreTheoremProducer::iffOrDistrib(const" 16323]
[ebrowse-ms "orDistributivityRule" () 0 () () 0 0  () "CoreTheoremProducer::orDistributivityRule(const" 6302]
[ebrowse-ms "rewriteAndSubterms" () 0 () () 0 0  () "CoreTheoremProducer::rewriteAndSubterms(const" 18565]
[ebrowse-ms "rewriteDistinct" () 0 () () 0 0  () "CoreTheoremProducer::rewriteDistinct(const" 9142]
[ebrowse-ms "rewriteImplies" () 0 () () 0 0  () "CoreTheoremProducer::rewriteImplies(const" 8767]
[ebrowse-ms "rewriteIteBool" () 0 () () 0 0  () "CoreTheoremProducer::rewriteIteBool(const" 5736]
[ebrowse-ms "rewriteIteCond" () 0 () () 0 0  () "heorem CoreTheoremProducer::rewriteIteCond(const" 15619]
[ebrowse-ms "rewriteIteElse" () 0 () () 0 0  () "CoreTheoremProducer::rewriteIteElse(const" 4833]
[ebrowse-ms "rewriteIteThen" () 0 () () 0 0  () "CoreTheoremProducer::rewriteIteThen(const" 3934]
[ebrowse-ms "rewriteIteToAnd" () 0 () () 0 0  () "CoreTheoremProducer::rewriteIteToAnd(const" 14480]
[ebrowse-ms "rewriteIteToIff" () 0 () () 0 0  () "CoreTheoremProducer::rewriteIteToIff(const" 14824]
[ebrowse-ms "rewriteIteToImp" () 0 () () 0 0  () "CoreTheoremProducer::rewriteIteToImp(const" 15187]
[ebrowse-ms "rewriteIteToNot" () 0 () () 0 0  () "CoreTheoremProducer::rewriteIteToNot(const" 13774]
[ebrowse-ms "rewriteIteToOr" () 0 () () 0 0  () "CoreTheoremProducer::rewriteIteToOr(const" 14136]
[ebrowse-ms "rewriteLetDecl" () 0 () () 0 0  () "CoreTheoremProducer::rewriteLetDecl(const" 1651]
[ebrowse-ms "rewriteNotAnd" () 0 () () 0 0  () "Theorem CoreTheoremProducer::rewriteNotAnd(const" 2062]
[ebrowse-ms "rewriteNotIff" () 0 () () 0 0  () "CoreTheoremProducer::rewriteNotIff(const" 3180]
[ebrowse-ms "rewriteNotIte" () 0 () () 0 0  () "CoreTheoremProducer::rewriteNotIte(const" 3550]
[ebrowse-ms "rewriteNotOr" () 0 () () 0 0  () "CoreTheoremProducer::rewriteNotOr(const" 2633]
[ebrowse-ms "rewriteOrSubterms" () 0 () () 0 0  () "CoreTheoremProducer::rewriteOrSubterms(const" 19354]
[ebrowse-ms "typePred" () 0 () () 0 0  () "CoreTheoremProducer::typePred(const" 1380]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "yyalloc" () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "union yyalloc
{" 9676() ]
()([ebrowse-ms "yyss" () 0 () "  yytype_int16 yyss;" 9697 0  () () 0]
[ebrowse-ms "yyvs" () 0 () "  YYSTYPE yyvs;" 9713 0  () () 0]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "VCL" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/vcl/vcl.cpp" ]
()()
([ebrowse-ms "addPairToArithOrder" () 0 () () 0 0  () "bool VCL::addPairToArithOrder(const" 37468]
[ebrowse-ms "andExpr" () 0 () () 0 0  () "Expr VCL::andExpr(const" 33925]
[ebrowse-ms "andExpr" () 0 () () 0 0  () "Expr VCL::andExpr(const" 33840]
[ebrowse-ms "arrayType" () 0 () () 0 0  () "Type VCL::arrayType(const" 28777]
[ebrowse-ms "assertFormula" () 0 () () 0 0  () "void VCL::assertFormula(const" 49355]
[ebrowse-ms "bitvecType" () 0 () () 0 0  () "Type VCL::bitvecType(int" 28890]
[ebrowse-ms "boolType" () 0 () () 0 0  () "Type VCL::boolType()" 25110]
[ebrowse-ms "boundVarExpr" () 0 () () 0 0  () "Expr VCL::boundVarExpr(const" 46529]
[ebrowse-ms "checkContinue" () 0 () () 0 0  () "QueryResult VCL::checkContinue()" 53343]
[ebrowse-ms "checkTCC" () 0 () () 0 0  () "Theorem VCL::checkTCC(const" 47941]
[ebrowse-ms "checkUnsat" () 0 () () 0 0  () "QueryResult VCL::checkUnsat(const" 53267]
[ebrowse-ms "computeBVConst" () 0 () () 0 0  () "Rational VCL::computeBVConst(const" 45604]
[ebrowse-ms "core" () 0 () () 0 0  () "TheoryCore* VCL::core()" 25062]
[ebrowse-ms "createOp" () 0 () () 0 0  () "Op VCL::createOp(const" 35207]
[ebrowse-ms "createOp" () 0 () () 0 0  () "Op VCL::createOp(const" 34855]
[ebrowse-ms "createType" () 0 () () 0 0  () "Type VCL::createType(const" 29446]
[ebrowse-ms "createType" () 0 () () 0 0  () "Type VCL::createType(const" 29266]
[ebrowse-ms "dataType" () 0 () () 0 0  () "void VCL::dataType(const" 28263]
[ebrowse-ms "dataType" () 0 () () 0 0  () "Type VCL::dataType(const" 27897]
[ebrowse-ms "datatypeConsExpr" () 0 () () 0 0  () "Expr VCL::datatypeConsExpr(const" 46111]
[ebrowse-ms "datatypeSelExpr" () 0 () () 0 0  () "Expr VCL::datatypeSelExpr(const" 46260]
[ebrowse-ms "datatypeTestExpr" () 0 () () 0 0  () "Expr VCL::datatypeTestExpr(const" 46393]
[ebrowse-ms "deriveClosure" () 0 () () 0 0  () "Theorem3 VCL::deriveClosure(const" 13275]
[ebrowse-ms "destroy" () 0 () () 0 0  () "void VCL::destroy()" 21330]
[ebrowse-ms "distinctExpr" () 0 () () 0 0  () "Expr VCL::distinctExpr(const" 34631]
[ebrowse-ms "divideExpr" () 0 () () 0 0  () "Expr VCL::divideExpr(const" 39126]
[ebrowse-ms "eqExpr" () 0 () () 0 0  () "Expr VCL::eqExpr(const" 34531]
[ebrowse-ms "existsExpr" () 0 () () 0 0  () "Expr VCL::existsExpr(const" 47171]
[ebrowse-ms "falseExpr" () 0 () () 0 0  () "Expr VCL::falseExpr()" 33722]
[ebrowse-ms "forallExpr" () 0 () () 0 0  () "Expr VCL::forallExpr(const" 46845]
[ebrowse-ms "forallExpr" () 0 () () 0 0  () "Expr VCL::forallExpr(const" 46671]
[ebrowse-ms "funExpr" () 0 () () 0 0  () "Expr VCL::funExpr(const" 37219]
[ebrowse-ms "funExpr" () 0 () () 0 0  () "Expr VCL::funExpr(const" 37112]
[ebrowse-ms "funExpr" () 0 () () 0 0  () "Expr VCL::funExpr(const" 37360]
[ebrowse-ms "funType" () 0 () () 0 0  () "Type VCL::funType(const" 29073]
[ebrowse-ms "geExpr" () 0 () () 0 0  () "Expr VCL::geExpr(const" 39495]
[ebrowse-ms "getAssumptions" () 0 () () 0 0  () "void VCL::getAssumptions(vector" 54287]
[ebrowse-ms "getAssumptions" () 0 () () 0 0  () "void VCL::getAssumptions(const" 15568]
[ebrowse-ms "getAssumptionsRec" () 0 () () 0 0  () "void VCL::getAssumptionsRec(const" 14709]
[ebrowse-ms "getAssumptionsTCC" () 0 () () 0 0  () "void VCL::getAssumptionsTCC(vector" 56851]
[ebrowse-ms "getAssumptionsUsed" () 0 () () 0 0  () "void VCL::getAssumptionsUsed(vector" 54760]
[ebrowse-ms "getBaseType" () 0 () () 0 0  () "Type VCL::getBaseType(const" 31837]
[ebrowse-ms "getClosure" () 0 () () 0 0  () "Expr VCL::getClosure()" 57452]
[ebrowse-ms "getConcreteModel" () 0 () () 0 0  () "void VCL::getConcreteModel(ExprMap" 55257]
[ebrowse-ms "getCounterExample" () 0 () () 0 0  () "void VCL::getCounterExample(vector" 55007]
[ebrowse-ms "getCurrentContext" () 0 () () 0 0  () "Context* VCL::getCurrentContext()" 60108]
[ebrowse-ms "getImpliedLiteral" () 0 () () 0 0  () "Expr VCL::getImpliedLiteral()" 50708]
[ebrowse-ms "getInternalAssumptions" () 0 () () 0 0  () "void VCL::getInternalAssumptions(vector" 54144]
[ebrowse-ms "getMemory" () 0 () () 0 0  () "unsigned long VCL::getMemory(int" 60831]
[ebrowse-ms "getProof" () 0 () () 0 0  () "Proof VCL::getProof()" 56341]
[ebrowse-ms "getProofClosure" () 0 () () 0 0  () "Proof VCL::getProofClosure()" 57846]
[ebrowse-ms "getProofQuery" () 0 () () 0 0  () "Expr VCL::getProofQuery()" 54489]
[ebrowse-ms "getProofTCC" () 0 () () 0 0  () "Proof VCL::getProofTCC()" 57234]
[ebrowse-ms "getTCC" () 0 () () 0 0  () "Expr VCL::getTCC()" 56630]
[ebrowse-ms "getType" () 0 () () 0 0  () "Type VCL::getType(const" 31690]
[ebrowse-ms "getTypePred" () 0 () () 0 0  () "Expr VCL::getTypePred(const" 31919]
[ebrowse-ms "getUserAssumptions" () 0 () () 0 0  () "void VCL::getUserAssumptions(vector" 53997]
[ebrowse-ms "gtExpr" () 0 () () 0 0  () "Expr VCL::gtExpr(const" 39403]
[ebrowse-ms "idExpr" () 0 () () 0 0  () "Expr VCL::idExpr(const" 32097]
[ebrowse-ms "iffExpr" () 0 () () 0 0  () "Expr VCL::iffExpr(const" 34441]
[ebrowse-ms "impliesExpr" () 0 () () 0 0  () "Expr VCL::impliesExpr(const" 34354]
[ebrowse-ms "importExpr" () 0 () () 0 0  () "Expr VCL::importExpr(const" 33519]
[ebrowse-ms "importType" () 0 () () 0 0  () "Type VCL::importType(const" 33588]
[ebrowse-ms "incomplete" () 0 () () 0 0  () "bool VCL::incomplete(vector" 56142]
[ebrowse-ms "incomplete" () 0 () () 0 0  () "bool VCL::incomplete()" 55962]
[ebrowse-ms "inconsistent" () 0 () () 0 0  () "bool VCL::inconsistent()" 55894]
[ebrowse-ms "inconsistent" () 0 () () 0 0  () "bool VCL::inconsistent(vector" 55592]
[ebrowse-ms "init" () 0 () () 0 0  () "void VCL::init()" 17193]
[ebrowse-ms "intType" () 0 () () 0 0  () "Type VCL::intType()" 25233]
[ebrowse-ms "iteExpr" () 0 () () 0 0  () "Expr VCL::iteExpr(const" 34723]
[ebrowse-ms "lambdaExpr" () 0 () () 0 0  () "Op VCL::lambdaExpr(const" 47291]
[ebrowse-ms "leExpr" () 0 () () 0 0  () "Expr VCL::leExpr(const" 39311]
[ebrowse-ms "listExpr" () 0 () () 0 0  () "Expr VCL::listExpr(const" 32978]
[ebrowse-ms "listExpr" () 0 () () 0 0  () "Expr VCL::listExpr(const" 32853]
[ebrowse-ms "listExpr" () 0 () () 0 0  () "Expr VCL::listExpr(const" 32753]
[ebrowse-ms "listExpr" () 0 () () 0 0  () "Expr VCL::listExpr(const" 32270]
[ebrowse-ms "loadFile" () 0 () () 0 0  () "void VCL::loadFile(istream" 60484]
[ebrowse-ms "loadFile" () 0 () () 0 0  () "void VCL::loadFile(const" 60221]
[ebrowse-ms "lookupType" () 0 () () 0 0  () "Type VCL::lookupType(const" 29660]
[ebrowse-ms "lookupVar" () 0 () () 0 0  () "Expr VCL::lookupVar(const" 31588]
[ebrowse-ms "ltExpr" () 0 () () 0 0  () "Expr VCL::ltExpr(const" 39219]
[ebrowse-ms "minusExpr" () 0 () () 0 0  () "Expr VCL::minusExpr(const" 38874]
[ebrowse-ms "multExpr" () 0 () () 0 0  () "Expr VCL::multExpr(const" 38959]
[ebrowse-ms "newBVAndExpr" () 0 () () 0 0  () "Expr VCL::newBVAndExpr(const" 42376]
[ebrowse-ms "newBVAndExpr" () 0 () () 0 0  () "Expr VCL::newBVAndExpr(const" 42265]
[ebrowse-ms "newBVCompExpr" () 0 () () 0 0  () "Expr VCL::newBVCompExpr(const" 43366]
[ebrowse-ms "newBVConstExpr" () 0 () () 0 0  () "Expr VCL::newBVConstExpr(const" 41607]
[ebrowse-ms "newBVConstExpr" () 0 () () 0 0  () "Expr VCL::newBVConstExpr(const" 41719]
[ebrowse-ms "newBVExtractExpr" () 0 () () 0 0  () "Expr VCL::newBVExtractExpr(const" 42055]
[ebrowse-ms "newBVLEExpr" () 0 () () 0 0  () "Expr VCL::newBVLEExpr(const" 43586]
[ebrowse-ms "newBVLTExpr" () 0 () () 0 0  () "Expr VCL::newBVLTExpr(const" 43477]
[ebrowse-ms "newBVMultExpr" () 0 () () 0 0  () "Expr VCL::newBVMultExpr(int" 44520]
[ebrowse-ms "newBVNandExpr" () 0 () () 0 0  () "Expr VCL::newBVNandExpr(const" 43142]
[ebrowse-ms "newBVNegExpr" () 0 () () 0 0  () "Expr VCL::newBVNegExpr(const" 42174]
[ebrowse-ms "newBVNorExpr" () 0 () () 0 0  () "Expr VCL::newBVNorExpr(const" 43254]
[ebrowse-ms "newBVOrExpr" () 0 () () 0 0  () "Expr VCL::newBVOrExpr(const" 42592]
[ebrowse-ms "newBVOrExpr" () 0 () () 0 0  () "Expr VCL::newBVOrExpr(const" 42483]
[ebrowse-ms "newBVPlusExpr" () 0 () () 0 0  () "Expr VCL::newBVPlusExpr(int" 44352]
[ebrowse-ms "newBVPlusExpr" () 0 () () 0 0  () "Expr VCL::newBVPlusExpr(int" 44224]
[ebrowse-ms "newBVSDivExpr" () 0 () () 0 0  () "Expr VCL::newBVSDivExpr(const" 44883]
[ebrowse-ms "newBVSLEExpr" () 0 () () 0 0  () "Expr VCL::newBVSLEExpr(const" 43807]
[ebrowse-ms "newBVSLTExpr" () 0 () () 0 0  () "Expr VCL::newBVSLTExpr(const" 43696]
[ebrowse-ms "newBVSModExpr" () 0 () () 0 0  () "Expr VCL::newBVSModExpr(const" 45107]
[ebrowse-ms "newBVSRemExpr" () 0 () () 0 0  () "Expr VCL::newBVSRemExpr(const" 44995]
[ebrowse-ms "newBVSubExpr" () 0 () () 0 0  () "Expr VCL::newBVSubExpr(const" 44114]
[ebrowse-ms "newBVUDivExpr" () 0 () () 0 0  () "Expr VCL::newBVUDivExpr(const" 44659]
[ebrowse-ms "newBVURemExpr" () 0 () () 0 0  () "Expr VCL::newBVURemExpr(const" 44771]
[ebrowse-ms "newBVUminusExpr" () 0 () () 0 0  () "Expr VCL::newBVUminusExpr(const" 44020]
[ebrowse-ms "newBVXnorExpr" () 0 () () 0 0  () "Expr VCL::newBVXnorExpr(const" 43032]
[ebrowse-ms "newBVXnorExpr" () 0 () () 0 0  () "Expr VCL::newBVXnorExpr(const" 42919]
[ebrowse-ms "newBVXorExpr" () 0 () () 0 0  () "Expr VCL::newBVXorExpr(const" 42810]
[ebrowse-ms "newBVXorExpr" () 0 () () 0 0  () "Expr VCL::newBVXorExpr(const" 42699]
[ebrowse-ms "newConcatExpr" () 0 () () 0 0  () "Expr VCL::newConcatExpr(const" 41942]
[ebrowse-ms "newConcatExpr" () 0 () () 0 0  () "Expr VCL::newConcatExpr(const" 41829]
[ebrowse-ms "newFixedConstWidthLeftShiftExpr" () 0 () () 0 0  () "Expr VCL::newFixedConstWidthLeftShiftExpr(const" 45357]
[ebrowse-ms "newFixedLeftShiftExpr" () 0 () () 0 0  () "Expr VCL::newFixedLeftShiftExpr(const" 45228]
[ebrowse-ms "newFixedRightShiftExpr" () 0 () () 0 0  () "Expr VCL::newFixedRightShiftExpr(const" 45487]
[ebrowse-ms "newSXExpr" () 0 () () 0 0  () "Expr VCL::newSXExpr(const" 43915]
[ebrowse-ms "notExpr" () 0 () () 0 0  () "Expr VCL::notExpr(const" 33780]
[ebrowse-ms "orExpr" () 0 () () 0 0  () "Expr VCL::orExpr(const" 34180]
[ebrowse-ms "orExpr" () 0 () () 0 0  () "Expr VCL::orExpr(const" 34096]
[ebrowse-ms "parseExpr" () 0 () () 0 0  () "Expr VCL::parseExpr(const" 33353]
[ebrowse-ms "parseType" () 0 () () 0 0  () "Type VCL::parseType(const" 33434]
[ebrowse-ms "plusExpr" () 0 () () 0 0  () "Expr VCL::plusExpr(const" 38783]
[ebrowse-ms "plusExpr" () 0 () () 0 0  () "Expr VCL::plusExpr(const" 38699]
[ebrowse-ms "pop" () 0 () () 0 0  () "void VCL::pop()" 58443]
[ebrowse-ms "popScope" () 0 () () 0 0  () "void VCL::popScope()" 59346]
[ebrowse-ms "popto" () 0 () () 0 0  () "void VCL::popto(int" 58726]
[ebrowse-ms "poptoScope" () 0 () () 0 0  () "void VCL::poptoScope(int" 59719]
[ebrowse-ms "powExpr" () 0 () () 0 0  () "Expr VCL::powExpr(const" 39043]
[ebrowse-ms "printExpr" () 0 () () 0 0  () "void VCL::printExpr(const" 33280]
[ebrowse-ms "printExpr" () 0 () () 0 0  () "void VCL::printExpr(const" 33217]
[ebrowse-ms "push" () 0 () () 0 0  () "void VCL::push()" 58294]
[ebrowse-ms "pushScope" () 0 () () 0 0  () "void VCL::pushScope()" 59064]
[ebrowse-ms "query" () 0 () () 0 0  () "QueryResult VCL::query(const" 51246]
[ebrowse-ms "ratExpr" () 0 () () 0 0  () "Expr VCL::ratExpr(const" 37946]
[ebrowse-ms "ratExpr" () 0 () () 0 0  () "Expr VCL::ratExpr(const" 37813]
[ebrowse-ms "ratExpr" () 0 () () 0 0  () "Expr VCL::ratExpr(int" 37682]
[ebrowse-ms "readExpr" () 0 () () 0 0  () "Expr VCL::readExpr(const" 41255]
[ebrowse-ms "realType" () 0 () () 0 0  () "Type VCL::realType()" 25171]
[ebrowse-ms "recSelectExpr" () 0 () () 0 0  () "Expr VCL::recSelectExpr(const" 40973]
[ebrowse-ms "recUpdateExpr" () 0 () () 0 0  () "Expr VCL::recUpdateExpr(const" 41099]
[ebrowse-ms "recordExpr" () 0 () () 0 0  () "Expr VCL::recordExpr(const" 40149]
[ebrowse-ms "recordExpr" () 0 () () 0 0  () "Expr VCL::recordExpr(const" 39806]
[ebrowse-ms "recordExpr" () 0 () () 0 0  () "Expr VCL::recordExpr(const" 40593]
[ebrowse-ms "recordType" () 0 () () 0 0  () "Type VCL::recordType(const" 26601]
[ebrowse-ms "recordType" () 0 () () 0 0  () "Type VCL::recordType(const" 26252]
[ebrowse-ms "recordType" () 0 () () 0 0  () "Type VCL::recordType(const" 27051]
[ebrowse-ms "registerAtom" () 0 () () 0 0  () "void VCL::registerAtom(const" 50599]
[ebrowse-ms "reprocessFlags" () 0 () () 0 0  () "void VCL::reprocessFlags()" 23530]
[ebrowse-ms "reset" () 0 () () 0 0  () "void VCL::reset()" 60168]
[ebrowse-ms "restart" () 0 () () 0 0  () "QueryResult VCL::restart(const" 53731]
[ebrowse-ms "returnFromCheck" () 0 () () 0 0  () "void VCL::returnFromCheck()" 53889]
[ebrowse-ms "scopeLevel" () 0 () () 0 0  () "int VCL::scopeLevel()" 59007]
[ebrowse-ms "setResourceLimit" () 0 () () 0 0  () "void VCL::setResourceLimit(unsigned" 47859]
[ebrowse-ms "setTimeLimit" () 0 () () 0 0  () "void VCL::setTimeLimit(unsigned" 62178]
[ebrowse-ms "setTriggers" () 0 () () 0 0  () "void VCL::setTriggers(const" 47067]
[ebrowse-ms "simplify" () 0 () () 0 0  () "Expr VCL::simplify(const" 50880]
[ebrowse-ms "simplifyThm" () 0 () () 0 0  () "Theorem VCL::simplifyThm(const" 50999]
[ebrowse-ms "simulateExpr" () 0 () () 0 0  () "Expr VCL::simulateExpr(const" 47567]
[ebrowse-ms "stackLevel" () 0 () () 0 0  () "int VCL::stackLevel()" 58241]
[ebrowse-ms "stringExpr" () 0 () () 0 0  () "Expr VCL::stringExpr(const" 32017]
[ebrowse-ms "subrangeType" () 0 () () 0 0  () "Type VCL::subrangeType(const" 25303]
[ebrowse-ms "subtypeType" () 0 () () 0 0  () "Type VCL::subtypeType(const" 25405]
[ebrowse-ms "transClosure" () 0 () () 0 0  () "Op VCL::transClosure(const" 47419]
[ebrowse-ms "trueExpr" () 0 () () 0 0  () "Expr VCL::trueExpr()" 33667]
[ebrowse-ms "tupleExpr" () 0 () () 0 0  () "Expr VCL::tupleExpr(const" 45692]
[ebrowse-ms "tupleSelectExpr" () 0 () () 0 0  () "Expr VCL::tupleSelectExpr(const" 45848]
[ebrowse-ms "tupleType" () 0 () () 0 0  () "Type VCL::tupleType(const" 25933]
[ebrowse-ms "tupleType" () 0 () () 0 0  () "Type VCL::tupleType(const" 25706]
[ebrowse-ms "tupleType" () 0 () () 0 0  () "Type VCL::tupleType(const" 25524]
[ebrowse-ms "tupleUpdateExpr" () 0 () () 0 0  () "Expr VCL::tupleUpdateExpr(const" 45963]
[ebrowse-ms "uminusExpr" () 0 () () 0 0  () "Expr VCL::uminusExpr(const" 38638]
[ebrowse-ms "value" () 0 () () 0 0  () "FormulaValue VCL::value(const" 55458]
[ebrowse-ms "varExpr" () 0 () () 0 0  () "Expr VCL::varExpr(const" 30021]
[ebrowse-ms "varExpr" () 0 () () 0 0  () "Expr VCL::varExpr(const" 29757]
[ebrowse-ms "writeExpr" () 0 () () 0 0  () "Expr VCL::writeExpr(const" 41354]
[ebrowse-ms "~VCL" () 0 () () 0 0  () "VCL::~VCL()" 23138]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Translator" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/translator.h" "class Translator {" 1274"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/translator.h" ]
()([ebrowse-ms "d_UFIDL_ok" () 0 () "  bool d_UFIDL_ok;" 1916 2  () () 0]
[ebrowse-ms "d_arithUsed" () 0 () "  bool d_arithUsed;" 1936 2  () () 0]
[ebrowse-ms "d_arrayConvertMap" () 0 () " std::map<std::string, Type>* d_arrayConvertMap;" 2349 2  () () 0]
[ebrowse-ms "d_arrayType" () 0 () "  Type* d_arrayType;" 2414 2  () () 0]
[ebrowse-ms "d_category" () 0 () "  const std::string& d_category;" 1506 2  () () 0]
[ebrowse-ms "d_combineAssump" () 0 () "  bool d_combineAssump;" 1553 2  () () 0]
[ebrowse-ms "d_convertArith" () 0 () "  const bool& d_convertArith;" 1378 2  () () 0]
[ebrowse-ms "d_convertArray" () 0 () "  bool d_convertArray;" 1529 2  () () 0]
[ebrowse-ms "d_convertToBV" () 0 () "  int d_convertToBV;" 1977 2  () () 0]
[ebrowse-ms "d_convertToDiff" () 0 () "  const std::string& d_convertToDiff;" 1416 2  () () 0]
[ebrowse-ms "d_dumpExprs" () 0 () "  std::vector<Expr> d_dumpExprs;" 2298 2  () () 0]
[ebrowse-ms "d_dumpFileOpen" () 0 () "  bool d_dump, d_dumpFileOpen;" 1738 2  () () 0]
[ebrowse-ms "d_elementType" () 0 () "  Type* d_elementType;" 2393 2  () () 0]
[ebrowse-ms "d_em" () 0 () "  ExprManager* d_em;" 1295 2  () () 0]
[ebrowse-ms "d_equalities" () 0 () "  std::vector<Expr> d_equalities;" 2448 2  () () 0]
[ebrowse-ms "d_expResult" () 0 () "  const std::string& d_expResult;" 1473 2  () () 0]
[ebrowse-ms "d_indexType" () 0 () "  Type* d_indexType;" 2370 2  () () 0]
[ebrowse-ms "d_intConstUsed" () 0 () "  bool d_intConstUsed;" 1873 2  () () 0]
[ebrowse-ms "d_intUsed" () 0 () "  bool d_intUsed;" 1850 2  () () 0]
[ebrowse-ms "d_iteLiftArith" () 0 () "  bool d_iteLiftArith;" 1439 2  () () 0]
[ebrowse-ms "d_langUsed" () 0 () "  ArithLang d_langUsed;" 1897 2  () () 0]
[ebrowse-ms "d_osdump" () 0 () "  std::ostream* d_osdump;" 1650 2  () () 0]
[ebrowse-ms "d_osdumpFile" () 0 () "  std::ofstream d_osdumpFile;" 1680 2  () () 0]
[ebrowse-ms "d_real2int" () 0 () "  const bool& d_real2int;" 1348 2  () () 0]
[ebrowse-ms "d_realUsed" () 0 () "  bool d_realUsed;" 1832 2  () () 0]
[ebrowse-ms "d_theoryArith" () 0 () "  TheoryArith* d_theoryArith;" 2060 2  () () 0]
[ebrowse-ms "d_theoryArray" () 0 () "  TheoryArray* d_theoryArray;" 2090 2  () () 0]
[ebrowse-ms "d_theoryBitvector" () 0 () "  TheoryBitvector* d_theoryBitvector;" 2228 2  () () 0]
[ebrowse-ms "d_theoryCore" () 0 () "  TheoryCore* d_theoryCore;" 2006 2  () () 0]
[ebrowse-ms "d_theoryDatatype" () 0 () "  TheoryDatatype* d_theoryDatatype;" 2264 2  () () 0]
[ebrowse-ms "d_theoryQuant" () 0 () "  TheoryQuant* d_theoryQuant;" 2120 2  () () 0]
[ebrowse-ms "d_theoryRecords" () 0 () "  TheoryRecords* d_theoryRecords;" 2154 2  () () 0]
[ebrowse-ms "d_theorySimulate" () 0 () "  TheorySimulate* d_theorySimulate;" 2190 2  () () 0]
[ebrowse-ms "d_theoryUF" () 0 () "  TheoryUF* d_theoryUF;" 2030 2  () () 0]
[ebrowse-ms "d_tmpFile" () 0 () "  std::ifstream d_tmpFile;" 1707 2  () () 0]
[ebrowse-ms "d_translate" () 0 () "  const bool& d_translate;" 1322 2  () () 0]
[ebrowse-ms "d_unknown" () 0 () "ntRealArray, d_intIntRealArray, d_ax, d_unknown;" 1813 2  () () 0]
[ebrowse-ms "d_zeroVar" () 0 () "  Expr* d_zeroVar;" 1956 2  () () 0]
)
([ebrowse-ms "Translator" () 0 () "             int convertToBV);" 2890 0  () () 0]
[ebrowse-ms "containsArray" () 0 () "  bool containsArray(const" 2793 2  () () 0]
[ebrowse-ms "dump" () 0 () "  void dump(const" 3658 0  () () 0]
[ebrowse-ms "dumpAssertion" () 0 () "  bool dumpAssertion(const" 3718 0  () () 0]
[ebrowse-ms "dumpQuery" () 0 () "  bool dumpQuery(const" 3751 0  () () 0]
[ebrowse-ms "dumpQueryResult" () 0 () "  void dumpQueryResult(QueryResult" 3796 0  () () 0]
[ebrowse-ms "fileToSMTLIBIdentifier" () 0 () "  std::string fileToSMTLIBIdentifier(const" 2492 2  () () 0]
[ebrowse-ms "finish" () 0 () "  void finish()" 3819 0  () () 0]
[ebrowse-ms "fixConstName" () 0 () "  const std::string fixConstName(const" 4630 0  () () 0]
[ebrowse-ms "preprocess" () 0 () "  Expr preprocess(const" 2599 2  () () 0]
[ebrowse-ms "preprocess2" () 0 () "  Expr preprocess2(const" 2734 2  () () 0]
[ebrowse-ms "preprocess2Rec" () 0 () "  Expr preprocess2Rec(const" 2659 2  () () 0]
[ebrowse-ms "preprocessRec" () 0 () "  Expr preprocessRec(const" 2543 2  () () 0]
[ebrowse-ms "printArrayExpr" () 0 () "  bool printArrayExpr(ExprStream" 4807 0  () () 0]
[ebrowse-ms "processType" () 0 () "  Expr processType(const" 2828 2  () () 0]
[ebrowse-ms "setTheoryArith" () 0 () "  void setTheoryArith(TheoryArith" 3997 0  () "  void setTheoryArith(TheoryArith" 3997]
[ebrowse-ms "setTheoryArray" () 0 () "  void setTheoryArray(TheoryArray" 4078 0  () "  void setTheoryArray(TheoryArray" 4078]
[ebrowse-ms "setTheoryBitvector" () 0 () "  void setTheoryBitvector(TheoryBitvector" 4435 0  () "  void setTheoryBitvector(TheoryBitvector" 4435]
[ebrowse-ms "setTheoryCore" () 0 () "  void setTheoryCore(TheoryCore" 3853 0  () "  void setTheoryCore(TheoryCore" 3853]
[ebrowse-ms "setTheoryDatatype" () 0 () "  void setTheoryDatatype(TheoryDatatype" 4534 0  () "  void setTheoryDatatype(TheoryDatatype" 4534]
[ebrowse-ms "setTheoryQuant" () 0 () "  void setTheoryQuant(TheoryQuant" 4159 0  () "  void setTheoryQuant(TheoryQuant" 4159]
[ebrowse-ms "setTheoryRecords" () 0 () "  void setTheoryRecords(TheoryRecords" 4244 0  () "  void setTheoryRecords(TheoryRecords" 4244]
[ebrowse-ms "setTheorySimulate" () 0 () "  void setTheorySimulate(TheorySimulate" 4337 0  () "  void setTheorySimulate(TheorySimulate" 4337]
[ebrowse-ms "setTheoryUF" () 0 () "  void setTheoryUF(TheoryUF" 3925 0  () "  void setTheoryUF(TheoryUF" 3925]
[ebrowse-ms "start" () 0 () "  bool start(const" 3302 0  () () 0]
[ebrowse-ms "zeroVar" () 0 () "  Expr zeroVar()" 4846 0  () () 0]
[ebrowse-ms "~Translator" () 0 () "  ~Translator()" 3281 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Translator" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/translator/translator.cpp" ]
()()
([ebrowse-ms "Translator" () 0 () () 0 0  () "                       int convertToBV)
  :" 18641]
[ebrowse-ms "containsArray" () 0 () () 0 0  () "bool Translator::containsArray(const" 18430]
[ebrowse-ms "dump" () 0 () () 0 0  () "void Translator::dump(const" 21533]
[ebrowse-ms "dumpAssertion" () 0 () () 0 0  () "bool Translator::dumpAssertion(const" 22763]
[ebrowse-ms "dumpQuery" () 0 () () 0 0  () "bool Translator::dumpQuery(const" 23015]
[ebrowse-ms "dumpQueryResult" () 0 () () 0 0  () "void Translator::dumpQueryResult(QueryResult" 23278]
[ebrowse-ms "fileToSMTLIBIdentifier" () 0 () () 0 0  () "string Translator::fileToSMTLIBIdentifier(const" 1080]
[ebrowse-ms "finish" () 0 () () 0 0  () "void Translator::finish()" 25741]
[ebrowse-ms "fixConstName" () 0 () () 0 0  () "const string Translator::fixConstName(const" 37797]
[ebrowse-ms "preprocess" () 0 () () 0 0  () "Expr Translator::preprocess(const" 14538]
[ebrowse-ms "preprocess2" () 0 () () 0 0  () "Expr Translator::preprocess2(const" 18129]
[ebrowse-ms "preprocess2Rec" () 0 () () 0 0  () "Expr Translator::preprocess2Rec(const" 14829]
[ebrowse-ms "preprocessRec" () 0 () () 0 0  () "Expr Translator::preprocessRec(const" 1664]
[ebrowse-ms "printArrayExpr" () 0 () () 0 0  () "bool Translator::printArrayExpr(ExprStream" 37970]
[ebrowse-ms "processType" () 0 () () 0 0  () "Expr Translator::processType(const" 23670]
[ebrowse-ms "start" () 0 () () 0 0  () "bool Translator::start(const" 19860]
[ebrowse-ms "zeroVar" () 0 () () 0 0  () "Expr Translator::zeroVar()" 40440]
[ebrowse-ms "~Translator" () 0 () () 0 0  () "Translator::~Translator()" 19797]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Lit" "SatSolver" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  union Lit {" 2269"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" ]
()([ebrowse-ms "id" () 0 () "    long id;" 2282 0  () () 0]
[ebrowse-ms "vptr" () 0 () "    void *vptr;" 2298 0  () () 0]
)
([ebrowse-ms "IsNull" () 0 () "    bool IsNull()" 2338 0  () "    bool IsNull()" 2338]
[ebrowse-ms "Lit" () 0 () "    Lit() :" 2308 0  () "    Lit() :" 2308]
[ebrowse-ms "Reset" () 0 () "    void Reset()" 2376 0  () "    void Reset()" 2376]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Lit" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "class Lit {" 1378"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" ]
()([ebrowse-ms "d_index" () 0 () "  int d_index;" 1393 2  () () 0]
)
([ebrowse-ms "Lit" () 64 () "  explicit Lit(Var v, bool positive=true) {" 1514 0  () "  explicit Lit(Var v, bool positive=true) {" 1514]
[ebrowse-ms "Lit" () 0 () "  Lit() :" 1479 0  () "  Lit() :" 1479]
[ebrowse-ms "getID" () 4 () "  int getID()" 2017 0  () "  int getID()" 2017]
[ebrowse-ms "getVar" () 4 () "  Var getVar()" 2058 0  () "  Var getVar()" 2058]
[ebrowse-ms "isFalse" () 4 () "  bool isFalse()" 1874 0  () "  bool isFalse()" 1874]
[ebrowse-ms "isInverted" () 4 () "  bool isInverted()" 1826 0  () "  bool isInverted()" 1826]
[ebrowse-ms "isNull" () 4 () "  bool isNull()" 1725 0  () "  bool isNull()" 1725]
[ebrowse-ms "isPositive" () 4 () "  bool isPositive()" 1776 0  () "  bool isPositive()" 1776]
[ebrowse-ms "isTrue" () 4 () "  bool isTrue()" 1922 0  () "  bool isTrue()" 1922]
[ebrowse-ms "isVar" () 4 () "  bool isVar()" 1968 0  () "  bool isVar()" 1968]
[ebrowse-ms "reset" () 0 () "  void reset()" 2164 0  () "  void reset()" 2164]
)
()
([ebrowse-ms "getFalse" () 0 () "  static Lit getFalse()" 1686 0  () "  static Lit getFalse()" 1686]
[ebrowse-ms "getTrue" () 0 () "  static Lit getTrue()" 1641 0  () "  static Lit getTrue()" 1641]
[ebrowse-ms "mkLit" () 0 () "  static Lit mkLit(int" 1416 2  () "  static Lit mkLit(int" 1416]
)
([ebrowse-ms "operator !" () 2 () "  friend Lit operator!(const" 2210 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "  inline Literal operator!(const" 7151]
)
()
()()
][ebrowse-ts [ebrowse-cs "Lit" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" "  class Lit {" 2406"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" ]
()([ebrowse-ms "x" () 0 () "    int     x;" 2421 2  () () 0]
)
([ebrowse-ms "Lit" () 64 () "    explicit Lit(Var var, bool sgn) :" 2559 0  () "    explicit Lit(Var var, bool sgn) :" 2559]
[ebrowse-ms "Lit" () 0 () "    Lit() :" 2501 0  () "    Lit() :" 2501]
[ebrowse-ms "Lit" () 64 () "    explicit Lit(int index) :" 2443 2  () "    explicit Lit(int index) :" 2443]
[ebrowse-ms "hash" () 4 () "    unsigned int hash()" 3260 0  () "    unsigned int hash()" 3260]
[ebrowse-ms "index" () 4 () "    int  index ()" 2760 0  () "    int  index ()" 2760]
[ebrowse-ms "operator !=" () 4 () "    bool operator != (const" 3055 0  () "    bool operator != (const" 3055]
[ebrowse-ms "operator <" () 4 () "    bool operator <  (const" 3190 0  () "    bool operator <  (const" 3190]
[ebrowse-ms "operator ==" () 4 () "    bool operator == (const" 2980 0  () "    bool operator == (const" 2980]
[ebrowse-ms "operator ~" () 4 () "    Lit operator~ ()" 2624 0  () "    Lit operator~ ()" 2624]
[ebrowse-ms "sign" () 4 () "    bool sign  ()" 2673 0  () "    bool sign  ()" 2673]
[ebrowse-ms "toDimacs" () 4 () "    int toDimacs()" 3500 0  () "    int toDimacs()" 3500]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 3322 0  () "    std::string toString()" 3322]
[ebrowse-ms "unsign" () 4 () "    Lit  unsign()" 2849 0  () "    Lit  unsign()" 2849]
[ebrowse-ms "var" () 4 () "    int  var   ()" 2716 0  () "    int  var   ()" 2716]
)
()
([ebrowse-ms "id" () 0 () "    static Lit  id  (Lit" 2905 0  () "    static Lit  id  (Lit" 2905]
[ebrowse-ms "toLit" () 0 () "    static Lit  toLit (int" 2808 0  () "    static Lit  toLit (int" 2808]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "DebugCounter" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  class DebugCounter {" 5052"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" ]
()([ebrowse-ms "d_counter" () 0 () "    int* d_counter;" 5083 2  () () 0]
)
([ebrowse-ms "DebugCounter" () 0 () "    DebugCounter(int& c) :" 5261 0  () "    DebugCounter(int& c) :" 5261]
[ebrowse-ms "operator ++" () 0 () "    int operator++(int" 5822 0  () "    int operator++(int" 5822]
[ebrowse-ms "operator ++" () 0 () "    int operator++()" 5659 0  () "    int operator++()" 5659]
[ebrowse-ms "operator +=" () 0 () "    DebugCounter& operator+=(const" 6503 0  () "    DebugCounter& operator+=(const" 6503]
[ebrowse-ms "operator +=" () 0 () "    DebugCounter& operator+=(int" 5976 0  () "    DebugCounter& operator+=(int" 5976]
[ebrowse-ms "operator --" () 0 () "    int operator--(int" 5740 0  () "    int operator--(int" 5740]
[ebrowse-ms "operator --" () 0 () "    int operator--()" 5581 0  () "    int operator--()" 5581]
[ebrowse-ms "operator -=" () 0 () "    DebugCounter& operator-=(const" 6353 0  () "    DebugCounter& operator-=(const" 6353]
[ebrowse-ms "operator -=" () 0 () "    DebugCounter& operator-=(int" 6045 0  () "    DebugCounter& operator-=(int" 6045]
[ebrowse-ms "operator =" () 0 () "    DebugCounter& operator=(const" 6204 0  () "    DebugCounter& operator=(const" 6204]
[ebrowse-ms "operator =" () 0 () "    DebugCounter& operator=(int" 5908 0  () "    DebugCounter& operator=(int" 5908]
[ebrowse-ms "~DebugCounter" () 0 () "    ~DebugCounter()" 5324 0  () "    ~DebugCounter()" 5324]
)
()
()
([ebrowse-ms "operator !=" () 2 () "    friend bool operator!=(const" 6990 0  () "  inline bool operator!=(const" 7730]
[ebrowse-ms "operator !=" () 2 () "    friend bool operator!=(int" 6868 0  () "  inline bool operator!=(int" 7534]
[ebrowse-ms "operator !=" () 2 () "    friend bool operator!=(const" 6734 0  () "  inline bool operator!=(const" 7313]
[ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 7083 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(const" 6930 0  () "  inline bool operator==(const" 7633]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(int" 6808 0  () "  inline bool operator==(int" 7437]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(const" 6658 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
)
()
()()
][ebrowse-ts [ebrowse-cs "ExprTransform" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/expr_transform.cpp" ]
()()
([ebrowse-ms "B_Term_Map_Deleter" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "oid ExprTransform::B_Term_Map_Deleter(B_Term_map" 20097]
[ebrowse-ms "BryantNames" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "e_map ExprTransform::BryantNames(T_generator_map" 765]
[ebrowse-ms "BuildBryantMaps" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::BuildBryantMaps(const" 11582]
[ebrowse-ms "ConstrainedConstraints" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "Expr ExprTransform::ConstrainedConstraints(set" 15528]
[ebrowse-ms "CountSubTerms" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "int ExprTransform::CountSubTerms(const" 239]
[ebrowse-ms "ExprTransform" () 0 () () 0 0  () "prTransform::ExprTransform(TheoryCore* core)
  :" 790]
[ebrowse-ms "GetFormulaMap" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::GetFormulaMap(const" 8669]
[ebrowse-ms "GetGTerms2" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::GetGTerms2(set" 9006]
[ebrowse-ms "GetOrderedTerms" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "oid ExprTransform::GetOrderedTerms(B_formula_map" 9530]
[ebrowse-ms "GetOrdering" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::GetOrdering(B_Term_map" 17222]
[ebrowse-ms "GetPEqs" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::GetPEqs(const" 13937]
[ebrowse-ms "GetSortedOpVec" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::GetSortedOpVec(B_Term_map" 6798]
[ebrowse-ms "GetSub_vec" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::GetSub_vec(T_ITE_vec" 9266]
[ebrowse-ms "Get_ITEs" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::Get_ITEs(B_formula_map" 4907]
[ebrowse-ms "ITE_generator" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "Expr ExprTransform::ITE_generator(Expr" 3667]
[ebrowse-ms "NewBryantVar" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "std::string ExprTransform::NewBryantVar(const" 512]
[ebrowse-ms "PredConstrainTester" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::PredConstrainTester(set" 3084]
[ebrowse-ms "PredConstrainer" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::PredConstrainer(set" 1434]
[ebrowse-ms "RemoveFunctionApps" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "void ExprTransform::RemoveFunctionApps(const" 6268]
[ebrowse-ms "T_generator_Map_Deleter" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "ansform::T_generator_Map_Deleter(T_generator_map" 20258]
[ebrowse-ms "dobryant" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "Theorem ExprTransform::dobryant(const" 20399]
[ebrowse-ms "newPP" () 0 () () 0 0  () "Theorem ExprTransform::newPP(const" 9001]
[ebrowse-ms "newPPrec" () 0 () () 0 0  () "Theorem ExprTransform::newPPrec(const" 10291]
[ebrowse-ms "preprocess" () 0 () () 0 0  () "Theorem ExprTransform::preprocess(const" 3636]
[ebrowse-ms "pushNegation" () 0 () () 0 0  () "Theorem ExprTransform::pushNegation(const" 3808]
[ebrowse-ms "pushNegation1" () 0 () () 0 0  () "Theorem ExprTransform::pushNegation1(const" 7600]
[ebrowse-ms "pushNegationRec" () 0 () () 0 0  () "Theorem ExprTransform::pushNegationRec(const" 7197]
[ebrowse-ms "simplifyWithCare" () 0 () () 0 0  () "Theorem ExprTransform::simplifyWithCare(const" 14075]
[ebrowse-ms "smartSimplify" () 0 () () 0 0  () "Theorem ExprTransform::smartSimplify(const" 945]
[ebrowse-ms "specialSimplify" () 0 () () 0 0  () "Theorem ExprTransform::specialSimplify(const" 9397]
[ebrowse-ms "substitute" () 0 () () 0 0  () "Theorem ExprTransform::substitute(const" 12969]
[ebrowse-ms "updateQueue" () 0 () () 0 0  () "void ExprTransform::updateQueue(ExprMap" 12396]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprTransform" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_transform.h" "class ExprTransform {" 847"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_transform.h" ]
()([ebrowse-ms "d_budgetLimit" () 0 () "  int d_budgetLimit;" 1134 2  () () 0]
[ebrowse-ms "d_commonRules" () 0 () "  CommonProofRules* d_commonRules;" 935 2  () () 0]
[ebrowse-ms "d_core" () 0 () "  TheoryCore* d_core;" 870 2  () () 0]
[ebrowse-ms "d_newPPCache" () 0 () "  ExprMap<Theorem> d_newPPCache;" 1084 2  () () 0]
[ebrowse-ms "d_pushNegCache" () 0 () "  ExprMap<Theorem> d_pushNegCache;" 1029 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  CoreProofRules* d_rules;" 962 2  () () 0]
[ebrowse-ms "d_theoryArith" () 0 () "  TheoryArith* d_theoryArith;" 900 2  () () 0]
)
([ebrowse-ms "ANNames" () 0 () "  T_name_map ANNames(T_ack_map" 5841 0  () () 0]
[ebrowse-ms "AckConstraints" () 0 () "  Expr AckConstraints(T_ack_map" 5906 0  () () 0]
[ebrowse-ms "B_Term_Map_Deleter" () 0 () "  void B_Term_Map_Deleter(B_Term_map" 5706 0  () () 0]
[ebrowse-ms "BryantNames" () 0 () "  B_name_map BryantNames(T_generator_map" 2177 0  () () 0]
[ebrowse-ms "BuildBryantMaps" () 0 () "  void BuildBryantMaps(const" 5242 0  () () 0]
[ebrowse-ms "BuildMap" () 0 () "  void BuildMap(const" 6122 0  () () 0]
[ebrowse-ms "ConstrainedConstraints" () 0 () "  Expr ConstrainedConstraints(T_generator_map" 5039 0  () () 0]
[ebrowse-ms "ConstrainedConstraints" () 0 () "  Expr ConstrainedConstraints(std" 3076 0  () () 0]
[ebrowse-ms "CountSubTerms" () 0 () "  int CountSubTerms(const" 5545 0  () () 0]
[ebrowse-ms "ExprTransform" () 0 () "  ExprTransform(TheoryCore* core);" 1170 0  () () 0]
[ebrowse-ms "GetAckSwap" () 0 () "  void GetAckSwap(const" 5963 0  () () 0]
[ebrowse-ms "GetFormulaMap" () 0 () "  void GetFormulaMap(const" 3728 0  () () 0]
[ebrowse-ms "GetGTerms2" () 0 () "  void GetGTerms2(std" 3840 0  () () 0]
[ebrowse-ms "GetOrderedTerms" () 0 () "    void GetOrderedTerms(B_formula_map" 4367 0  () () 0]
[ebrowse-ms "GetOrdering" () 0 () "  void GetOrdering(B_Term_map" 5599 0  () () 0]
[ebrowse-ms "GetPEqs" () 0 () "    void GetPEqs(const" 4826 0  () () 0]
[ebrowse-ms "GetSortedOpVec" () 0 () "  void GetSortedOpVec(B_Term_map" 3501 0  () () 0]
[ebrowse-ms "GetSub_vec" () 0 () "  void GetSub_vec(T_ITE_vec" 3919 0  () () 0]
[ebrowse-ms "Get_ITEs" () 0 () "  void Get_ITEs(B_formula_map" 2375 0  () () 0]
[ebrowse-ms "ITE_generator" () 0 () "  Expr ITE_generator(Expr" 2242 0  () () 0]
[ebrowse-ms "NewBryantVar" () 0 () "  std::string NewBryantVar(const" 2067 0  () () 0]
[ebrowse-ms "NewVar" () 0 () "  std::string NewVar(const" 2115 0  () () 0]
[ebrowse-ms "PredConstrainTester" () 0 () "  void PredConstrainTester(std" 2583 0  () () 0]
[ebrowse-ms "PredConstrainer" () 0 () "  void PredConstrainer(std" 2810 0  () () 0]
[ebrowse-ms "RemoveFunctionApps" () 0 () "  void RemoveFunctionApps(const" 3325 0  () () 0]
[ebrowse-ms "T_generator_Map_Deleter" () 0 () "  void T_generator_Map_Deleter(T_generator_map" 5760 0  () () 0]
[ebrowse-ms "doackermann" () 0 () "  Theorem doackermann(const" 6232 0  () () 0]
[ebrowse-ms "dobryant" () 0 () "  Theorem dobryant(const" 5794 0  () () 0]
[ebrowse-ms "newPP" () 0 () "  Theorem newPP(const" 7170 0  () () 0]
[ebrowse-ms "newPPrec" () 0 () "  Theorem newPPrec(const" 7252 0  () () 0]
[ebrowse-ms "preprocess" () 0 () "  Theorem preprocess(const" 6623 0  () () 0]
[ebrowse-ms "pushNegation" () 0 () "  Theorem pushNegation(const" 6711 0  () () 0]
[ebrowse-ms "pushNegation1" () 0 () "  Theorem pushNegation1(const" 7015 0  () () 0]
[ebrowse-ms "pushNegationRec" () 0 () "  Theorem pushNegationRec(const" 6895 0  () () 0]
[ebrowse-ms "setTheoryArith" () 0 () "  void setTheoryArith(TheoryArith" 1235 0  () "  void setTheoryArith(TheoryArith" 1235]
[ebrowse-ms "simplifyWithCare" () 0 () "  Theorem simplifyWithCare(const" 7716 0  () () 0]
[ebrowse-ms "smartSimplify" () 0 () "  Theorem smartSimplify(const" 6527 0  () () 0]
[ebrowse-ms "specialSimplify" () 0 () "  Theorem specialSimplify(const" 7080 0  () () 0]
[ebrowse-ms "substitute" () 0 () "  Theorem substitute(const" 7518 2  () () 0]
[ebrowse-ms "updateQueue" () 0 () "  void updateQueue(ExprMap" 7346 2  () () 0]
[ebrowse-ms "~ExprTransform" () 0 () "  ~ExprTransform()" 1197 0  () "  ~ExprTransform()" 1197]
)
()
()
()
([ebrowse-ms "B_Term_map" () 0 () "f std::map<Expr, std::vector<Expr>*> B_Term_map;" 1848 0  () () 0]
[ebrowse-ms "B_formula_map" () 0 () "  typedef std::map< Expr, int> B_formula_map;" 1937 0  () () 0]
[ebrowse-ms "B_name_map" () 0 () ":map< std::pair< Expr, Expr>, Expr > B_name_map;" 1688 0  () () 0]
[ebrowse-ms "B_type_map" () 0 () "  typedef std::map<Expr, Type> B_type_map;" 1731 0  () () 0]
[ebrowse-ms "NEW_formula_map" () 0 () " std::map<Expr, std::set<int>*> NEW_formula_map;" 1995 0  () () 0]
[ebrowse-ms "T_ITE_map" () 0 () "  typedef std::map< Expr, Expr> T_ITE_map;" 1891 0  () () 0]
[ebrowse-ms "T_ITE_vec" () 0 () "  typedef std::vector<Expr> T_ITE_vec;" 2034 0  () () 0]
[ebrowse-ms "T_ack_map" () 0 () "::set< ExprTransform::CParameter >* > T_ack_map;" 1581 0  () () 0]
[ebrowse-ms "T_generator_map" () 0 () "td::map< Expr, std::set<Expr>*> T_generator_map;" 1791 0  () () 0]
[ebrowse-ms "T_name_map" () 0 () " ExprTransform::CParameter >, Expr > T_name_map;" 1503 0  () () 0]
[ebrowse-ms "T_type_map" () 0 () "  typedef std::map< Expr, Type> T_type_map;" 1625 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "SAT" "CVC3" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SAT" "MiniSat" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SAT" () 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SAT" "SAT" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchSat" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" ]
()()
([ebrowse-ms "SearchSat" () 0 () () 0 0  () "rchSat(TheoryCore* core, const string& name)
  :" 28198]
[ebrowse-ms "addLemma" () 0 () () 0 0  () "void SearchSat::addLemma(const" 4883]
[ebrowse-ms "addSplitter" () 0 () () 0 0  () "void SearchSat::addSplitter(const" 5607]
[ebrowse-ms "assertLit" () 0 () () 0 0  () "void SearchSat::assertLit(Lit" 5797]
[ebrowse-ms "check" () 0 () () 0 0  () "QueryResult SearchSat::check(const" 19376]
[ebrowse-ms "checkConsistent" () 0 () () 0 0  () ":ConsistentResult SearchSat::checkConsistent(SAT" 7870]
[ebrowse-ms "findSplitterRec" () 0 () () 0 0  () "bool SearchSat::findSplitterRec(Lit" 11106]
[ebrowse-ms "getAssumptions" () 0 () () 0 0  () "void SearchSat::getAssumptions(vector" 34029]
[ebrowse-ms "getCounterExample" () 0 () () 0 0  () "void SearchSat::getCounterExample(vector" 34994]
[ebrowse-ms "getExplanation" () 0 () () 0 0  () "void SearchSat::getExplanation(Lit" 9357]
[ebrowse-ms "getImplication" () 0 () () 0 0  () "Lit SearchSat::getImplication()" 8772]
[ebrowse-ms "getImpliedLiteral" () 0 () () 0 0  () "Theorem SearchSat::getImpliedLiteral(void" 30971]
[ebrowse-ms "getInternalAssumptions" () 0 () () 0 0  () "void SearchSat::getInternalAssumptions(vector" 33804]
[ebrowse-ms "getNewClauses" () 0 () () 0 0  () "bool SearchSat::getNewClauses(CNF_Formula" 9894]
[ebrowse-ms "getProof" () 0 () () 0 0  () "Proof SearchSat::getProof()" 35200]
[ebrowse-ms "getUserAssumptions" () 0 () () 0 0  () "void SearchSat::getUserAssumptions(vector" 33570]
[ebrowse-ms "isAssumption" () 0 () () 0 0  () "bool SearchSat::isAssumption(const" 34884]
[ebrowse-ms "makeDecision" () 0 () () 0 0  () "Lit SearchSat::makeDecision()" 10684]
[ebrowse-ms "newUserAssumption" () 0 () () 0 0  () "Theorem SearchSat::newUserAssumption(const" 33392]
[ebrowse-ms "newUserAssumptionInt" () 0 () () 0 0  () "Theorem SearchSat::newUserAssumptionInt(const" 32149]
[ebrowse-ms "newUserAssumptionIntHelper" () 0 () () 0 0  () "void SearchSat::newUserAssumptionIntHelper(const" 31728]
[ebrowse-ms "recordNewRootLit" () 0 () () 0 0  () "bool SearchSat::recordNewRootLit(Lit" 4005]
[ebrowse-ms "registerAtom" () 0 () () 0 0  () "void SearchSat::registerAtom(const" 30816]
[ebrowse-ms "restore" () 0 () () 0 0  () "void SearchSat::restore()" 3530]
[ebrowse-ms "restorePre" () 0 () () 0 0  () "void SearchSat::restorePre()" 3018]
[ebrowse-ms "returnFromCheck" () 0 () () 0 0  () "void SearchSat::returnFromCheck()" 31303]
[ebrowse-ms "~SearchSat" () 0 () () 0 0  () "SearchSat::~SearchSat()" 30645]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Splitter" "CVC3::SearchImplBase" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_impl_base.h" "  class Splitter {" 1452"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_impl_base.h" ]
()([ebrowse-ms "d_lit" () 0 () "    Literal d_lit;" 1471 2  () () 0]
)
([ebrowse-ms "Literal" () 0 () "    operator Literal()" 1736 0  () "    operator Literal()" 1736]
[ebrowse-ms "Splitter" () 0 () "    Splitter(const Splitter& s);" 1600 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_impl_base.cpp" ":Splitter(const SearchImplBase::Splitter& s)
  :" 2003]
[ebrowse-ms "operator =" () 0 () "    Splitter& operator=(const" 1663 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_impl_base.cpp" "SearchImplBase::Splitter::operator=(const" 2209]
[ebrowse-ms "~Splitter" () 0 () "    ~Splitter()" 1712 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_impl_base.cpp" "SearchImplBase::Splitter::~Splitter()" 2472]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "yy_trans_info" () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "struct yy_trans_info
	{" 11655() ]
()([ebrowse-ms "yy_nxt" () 0 () "	flex_int32_t yy_nxt;" 11702 0  () () 0]
[ebrowse-ms "yy_verify" () 0 () "	flex_int32_t yy_verify;" 11680 0  () () 0]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "QuantTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_theorem_producer.cpp" ]
()()
([ebrowse-ms "addNewConst" () 0 () () 0 0  () "QuantTheoremProducer::addNewConst(const" 1593]
[ebrowse-ms "adjustVarUniv" () 0 () () 0 0  () "heorem QuantTheoremProducer::adjustVarUniv(const" 14420]
[ebrowse-ms "boundVarElim" () 0 () () 0 0  () "Theorem QuantTheoremProducer::boundVarElim(const" 21036]
[ebrowse-ms "newRWThm" () 0 () () 0 0  () "QuantTheoremProducer::newRWThm(const" 1822]
[ebrowse-ms "normalizeQuant" () 0 () () 0 0  () "QuantTheoremProducer::normalizeQuant(const" 2032]
[ebrowse-ms "packVar" () 0 () () 0 0  () "Theorem QuantTheoremProducer::packVar(const" 15901]
[ebrowse-ms "partialUniversalInst" () 0 () () 0 0  () "QuantTheoremProducer::partialUniversalInst(const" 11417]
[ebrowse-ms "pullVarOut" () 0 () () 0 0  () "Theorem QuantTheoremProducer::pullVarOut(const" 17095]
[ebrowse-ms "recFindBoundVars" () 0 () () 0 0  () "oid QuantTheoremProducer::recFindBoundVars(const" 13903]
[ebrowse-ms "rewriteNotExists" () 0 () () 0 0  () "QuantTheoremProducer::rewriteNotExists(const" 3588]
[ebrowse-ms "rewriteNotForall" () 0 () () 0 0  () "QuantTheoremProducer::rewriteNotForall(const" 1123]
[ebrowse-ms "universalInst" () 0 () () 0 0  () "heorem QuantTheoremProducer::universalInst(const" 9210]
[ebrowse-ms "universalInst" () 0 () () 0 0  () "heorem QuantTheoremProducer::universalInst(const" 7017]
[ebrowse-ms "universalInst" () 0 () () 0 0  () "heorem QuantTheoremProducer::universalInst(const" 4061]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CoreProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_proof_rules.h" "  class CoreProofRules {" 783"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "CoreTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_theorem_producer.h" "  class CoreTheoremProducer:" 1066"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_theorem_producer.h" ]
()([ebrowse-ms "d_core" () 0 () "    TheoryCore* d_core;" 1180 2  () () 0]
)
([ebrowse-ms "AndToIte" () 1 () "    Theorem AndToIte(const" 2091 0  () () 0]
[ebrowse-ms "CoreTheoremProducer" () 0 () "      :" 1230 0  () "      :" 1230]
[ebrowse-ms "IffToIte" () 1 () "    Theorem IffToIte(const" 2128 0  () () 0]
[ebrowse-ms "ImpToIte" () 1 () "    Theorem ImpToIte(const" 2165 0  () () 0]
[ebrowse-ms "NotToIte" () 1 () "    Theorem NotToIte(const" 2014 0  () () 0]
[ebrowse-ms "OrToIte" () 1 () "    Theorem OrToIte(const" 2054 0  () () 0]
[ebrowse-ms "andDistributivityRule" () 1 () "    Theorem andDistributivityRule(const" 1890 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "    Theorem dummyTheorem(const" 2710 0  () () 0]
[ebrowse-ms "ifLiftUnaryRule" () 1 () "    Theorem ifLiftUnaryRule(const" 2471 0  () () 0]
[ebrowse-ms "iffAndDistrib" () 1 () "    Theorem iffAndDistrib(const" 2556 0  () () 0]
[ebrowse-ms "iffOrDistrib" () 1 () "    Theorem iffOrDistrib(const" 2512 0  () () 0]
[ebrowse-ms "orDistributivityRule" () 1 () "    Theorem orDistributivityRule(const" 1840 0  () () 0]
[ebrowse-ms "rewriteAndSubterms" () 1 () "    Theorem rewriteAndSubterms(const" 2605 0  () () 0]
[ebrowse-ms "rewriteDistinct" () 1 () "    Theorem rewriteDistinct(const" 1977 0  () () 0]
[ebrowse-ms "rewriteImplies" () 1 () "    Theorem rewriteImplies(const" 1933 0  () () 0]
[ebrowse-ms "rewriteIteBool" () 1 () "    Theorem rewriteIteBool(const" 1753 0  () () 0]
[ebrowse-ms "rewriteIteCond" () 1 () "    Theorem rewriteIteCond(const" 2427 0  () () 0]
[ebrowse-ms "rewriteIteElse" () 1 () "    Theorem rewriteIteElse(const" 1686 0  () () 0]
[ebrowse-ms "rewriteIteThen" () 1 () "    Theorem rewriteIteThen(const" 1619 0  () () 0]
[ebrowse-ms "rewriteIteToAnd" () 1 () "    Theorem rewriteIteToAnd(const" 2296 0  () () 0]
[ebrowse-ms "rewriteIteToIff" () 1 () "    Theorem rewriteIteToIff(const" 2340 0  () () 0]
[ebrowse-ms "rewriteIteToImp" () 1 () "    Theorem rewriteIteToImp(const" 2384 0  () () 0]
[ebrowse-ms "rewriteIteToNot" () 1 () "    Theorem rewriteIteToNot(const" 2209 0  () () 0]
[ebrowse-ms "rewriteIteToOr" () 1 () "    Theorem rewriteIteToOr(const" 2252 0  () () 0]
[ebrowse-ms "rewriteLetDecl" () 1 () "    Theorem rewriteLetDecl(const" 1409 0  () () 0]
[ebrowse-ms "rewriteNotAnd" () 1 () "    Theorem rewriteNotAnd(const" 1451 0  () () 0]
[ebrowse-ms "rewriteNotIff" () 1 () "    Theorem rewriteNotIff(const" 1534 0  () () 0]
[ebrowse-ms "rewriteNotIte" () 1 () "    Theorem rewriteNotIte(const" 1576 0  () () 0]
[ebrowse-ms "rewriteNotOr" () 1 () "    Theorem rewriteNotOr(const" 1492 0  () () 0]
[ebrowse-ms "rewriteOrSubterms" () 1 () "    Theorem rewriteOrSubterms(const" 2660 0  () () 0]
[ebrowse-ms "typePred" () 1 () "    Theorem typePred(const" 1366 0  () () 0]
[ebrowse-ms "~CoreTheoremProducer" () 1 () "    virtual ~CoreTheoremProducer()" 1334 0  () "    virtual ~CoreTheoremProducer()" 1334]
)
()
()
()
()
()()
])()
([ebrowse-ms "AndToIte" () 9 () "    virtual Theorem AndToIte(const" 2919 0  () () 0]
[ebrowse-ms "IffToIte" () 9 () "    virtual Theorem IffToIte(const" 3006 0  () () 0]
[ebrowse-ms "ImpToIte" () 9 () "    virtual Theorem ImpToIte(const" 3099 0  () () 0]
[ebrowse-ms "NotToIte" () 9 () "    virtual Theorem NotToIte(const" 2730 0  () () 0]
[ebrowse-ms "OrToIte" () 9 () "    virtual Theorem OrToIte(const" 2825 0  () () 0]
[ebrowse-ms "andDistributivityRule" () 9 () "    virtual Theorem andDistributivityRule(const" 2410 0  () () 0]
[ebrowse-ms "dummyTheorem" () 9 () "    virtual Theorem dummyTheorem(const" 4562 0  () () 0]
[ebrowse-ms "ifLiftUnaryRule" () 9 () "    virtual Theorem ifLiftUnaryRule(const" 3822 0  () () 0]
[ebrowse-ms "iffAndDistrib" () 9 () "    virtual Theorem iffAndDistrib(const" 4072 0  () () 0]
[ebrowse-ms "iffOrDistrib" () 9 () "    virtual Theorem iffOrDistrib(const" 3945 0  () () 0]
[ebrowse-ms "orDistributivityRule" () 9 () "    virtual Theorem orDistributivityRule(const" 2272 0  () () 0]
[ebrowse-ms "rewriteAndSubterms" () 9 () "    virtual Theorem rewriteAndSubterms(const" 4280 0  () () 0]
[ebrowse-ms "rewriteDistinct" () 9 () "    virtual Theorem rewriteDistinct(const" 2638 0  () () 0]
[ebrowse-ms "rewriteImplies" () 9 () "    virtual Theorem rewriteImplies(const" 2510 0  () () 0]
[ebrowse-ms "rewriteIteBool" () 9 () "    virtual Theorem rewriteIteBool(const" 2095 0  () () 0]
[ebrowse-ms "rewriteIteCond" () 9 () "    virtual Theorem rewriteIteCond(const" 3708 0  () () 0]
[ebrowse-ms "rewriteIteElse" () 9 () "    virtual Theorem rewriteIteElse(const" 1960 0  () () 0]
[ebrowse-ms "rewriteIteThen" () 9 () "    virtual Theorem rewriteIteThen(const" 1827 0  () () 0]
[ebrowse-ms "rewriteIteToAnd" () 9 () "    virtual Theorem rewriteIteToAnd(const" 3394 0  () () 0]
[ebrowse-ms "rewriteIteToIff" () 9 () "    virtual Theorem rewriteIteToIff(const" 3490 0  () () 0]
[ebrowse-ms "rewriteIteToImp" () 9 () "    virtual Theorem rewriteIteToImp(const" 3592 0  () () 0]
[ebrowse-ms "rewriteIteToNot" () 9 () "    virtual Theorem rewriteIteToNot(const" 3199 0  () () 0]
[ebrowse-ms "rewriteIteToOr" () 9 () "    virtual Theorem rewriteIteToOr(const" 3295 0  () () 0]
[ebrowse-ms "rewriteLetDecl" () 9 () "    virtual Theorem rewriteLetDecl(const" 1269 0  () () 0]
[ebrowse-ms "rewriteNotAnd" () 9 () "    virtual Theorem rewriteNotAnd(const" 1393 0  () () 0]
[ebrowse-ms "rewriteNotIff" () 9 () "    virtual Theorem rewriteNotIff(const" 1615 0  () () 0]
[ebrowse-ms "rewriteNotIte" () 9 () "    virtual Theorem rewriteNotIte(const" 1719 0  () () 0]
[ebrowse-ms "rewriteNotOr" () 9 () "    virtual Theorem rewriteNotOr(const" 1515 0  () () 0]
[ebrowse-ms "rewriteOrSubterms" () 9 () "    virtual Theorem rewriteOrSubterms(const" 4453 0  () () 0]
[ebrowse-ms "typePred" () 9 () "    virtual Theorem typePred(const" 952 0  () () 0]
[ebrowse-ms "~CoreProofRules" () 1 () "    virtual ~CoreProofRules()" 842 0  () "    virtual ~CoreProofRules()" 842]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ArithTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.cpp" ]
()()
([ebrowse-ms "IsIntegerElim" () 0 () () 0 0  () "heorem ArithTheoremProducer::IsIntegerElim(const" 78779]
[ebrowse-ms "addInequalities" () 0 () () 0 0  () "orem ArithTheoremProducer::addInequalities(const" 102852]
[ebrowse-ms "addInequalities" () 0 () () 0 0  () "orem ArithTheoremProducer::addInequalities(const" 91076]
[ebrowse-ms "canonCombineLikeTerms" () 0 () () 0 0  () "rithTheoremProducer::canonCombineLikeTerms(const" 13766]
[ebrowse-ms "canonComboLikeTerms" () 0 () () 0 0  () "ArithTheoremProducer::canonComboLikeTerms(const" 34508]
[ebrowse-ms "canonDivide" () 0 () () 0 0  () "Theorem ArithTheoremProducer::canonDivide(const" 28443]
[ebrowse-ms "canonDivideConst" () 0 () () 0 0  () "rem ArithTheoremProducer::canonDivideConst(const" 2989]
[ebrowse-ms "canonDivideMult" () 0 () () 0 0  () "orem ArithTheoremProducer::canonDivideMult(const" 3715]
[ebrowse-ms "canonDividePlus" () 0 () () 0 0  () "orem ArithTheoremProducer::canonDividePlus(const" 4800]
[ebrowse-ms "canonDivideVar" () 0 () () 0 0  () "eorem ArithTheoremProducer::canonDivideVar(const" 5708]
[ebrowse-ms "canonFlattenSum" () 0 () () 0 0  () "ArithTheoremProducer::canonFlattenSum(const" 33753]
[ebrowse-ms "canonInvert" () 0 () () 0 0  () "ArithTheoremProducer::canonInvert(const" 28019]
[ebrowse-ms "canonInvertConst" () 0 () () 0 0  () "ArithTheoremProducer::canonInvertConst(const" 26235]
[ebrowse-ms "canonInvertLeaf" () 0 () () 0 0  () "ArithTheoremProducer::canonInvertLeaf(const" 26607]
[ebrowse-ms "canonInvertMult" () 0 () () 0 0  () "ArithTheoremProducer::canonInvertMult(const" 27351]
[ebrowse-ms "canonInvertPow" () 0 () () 0 0  () "ArithTheoremProducer::canonInvertPow(const" 26839]
[ebrowse-ms "canonMult" () 0 () () 0 0  () "Theorem ArithTheoremProducer::canonMult(const" 25461]
[ebrowse-ms "canonMultConstConst" () 0 () () 0 0  () "ArithTheoremProducer::canonMultConstConst(const" 30838]
[ebrowse-ms "canonMultConstMult" () 0 () () 0 0  () "r ArithTheoremProducer::canonMultConstMult(const" 7337]
[ebrowse-ms "canonMultConstPlus" () 0 () () 0 0  () "r ArithTheoremProducer::canonMultConstPlus(const" 8427]
[ebrowse-ms "canonMultConstSum" () 0 () () 0 0  () "ArithTheoremProducer::canonMultConstSum(const" 32240]
[ebrowse-ms "canonMultConstTerm" () 0 () () 0 0  () "ArithTheoremProducer::canonMultConstTerm(const" 31500]
[ebrowse-ms "canonMultLeafLeaf" () 0 () () 0 0  () "pr ArithTheoremProducer::canonMultLeafLeaf(const" 10970]
[ebrowse-ms "canonMultLeafOrPowMult" () 0 () () 0 0  () "ithTheoremProducer::canonMultLeafOrPowMult(const" 11615]
[ebrowse-ms "canonMultLeafOrPowOrMultPlus" () 0 () () 0 0  () "oremProducer::canonMultLeafOrPowOrMultPlus(const" 17966]
[ebrowse-ms "canonMultMtermMterm" () 0 () () 0 0  () " ArithTheoremProducer::canonMultMtermMterm(const" 19316]
[ebrowse-ms "canonMultOne" () 0 () () 0 0  () "Theorem ArithTheoremProducer::canonMultOne(const" 30365]
[ebrowse-ms "canonMultPlusPlus" () 0 () () 0 0  () "pr ArithTheoremProducer::canonMultPlusPlus(const" 18593]
[ebrowse-ms "canonMultPowLeaf" () 0 () () 0 0  () "xpr ArithTheoremProducer::canonMultPowLeaf(const" 10102]
[ebrowse-ms "canonMultPowPow" () 0 () () 0 0  () "Expr ArithTheoremProducer::canonMultPowPow(const" 9115]
[ebrowse-ms "canonMultTerm1Term2" () 0 () () 0 0  () "ArithTheoremProducer::canonMultTerm1Term2(const" 29616]
[ebrowse-ms "canonMultTermConst" () 0 () () 0 0  () "ArithTheoremProducer::canonMultTermConst(const" 29128]
[ebrowse-ms "canonMultZero" () 0 () () 0 0  () "heorem ArithTheoremProducer::canonMultZero(const" 30060]
[ebrowse-ms "canonPlus" () 0 () () 0 0  () "Theorem ArithTheoremProducer::canonPlus(const" 24374]
[ebrowse-ms "canonPowConst" () 0 () () 0 0  () "heorem ArithTheoremProducer::canonPowConst(const" 33010]
[ebrowse-ms "canonUMinusToDivide" () 0 () () 0 0  () " ArithTheoremProducer::canonUMinusToDivide(const" 2685]
[ebrowse-ms "clashingBounds" () 0 () () 0 0  () "eorem ArithTheoremProducer::clashingBounds(const" 89324]
[ebrowse-ms "compactNonLinearTerm" () 0 () () 0 0  () "ArithTheoremProducer::compactNonLinearTerm(const" 102330]
[ebrowse-ms "constPredicate" () 0 () () 0 0  () "eorem ArithTheoremProducer::constPredicate(const" 40894]
[ebrowse-ms "constRHSGrayShadow" () 0 () () 0 0  () "l ArithTheoremProducer::constRHSGrayShadow(const" 66275]
[ebrowse-ms "create_t" () 0 () () 0 0  () "ArithTheoremProducer::create_t(const" 70257]
[ebrowse-ms "create_t2" () 0 () () 0 0  () "ArithTheoremProducer::create_t2(const" 70798]
[ebrowse-ms "create_t3" () 0 () () 0 0  () "ArithTheoremProducer::create_t3(const" 71360]
[ebrowse-ms "cycleConflict" () 0 () () 0 0  () "heorem ArithTheoremProducer::cycleConflict(const" 99918]
[ebrowse-ms "darkGrayShadow2ab" () 0 () () 0 0  () "em ArithTheoremProducer::darkGrayShadow2ab(const" 53554]
[ebrowse-ms "darkGrayShadow2ba" () 0 () () 0 0  () "em ArithTheoremProducer::darkGrayShadow2ba(const" 56668]
[ebrowse-ms "diseqToIneq" () 0 () () 0 0  () "ArithTheoremProducer::diseqToIneq(const" 85991]
[ebrowse-ms "divideEqnNonConst" () 0 () () 0 0  () "em ArithTheoremProducer::divideEqnNonConst(const" 44202]
[ebrowse-ms "dummyTheorem" () 0 () () 0 0  () "Theorem ArithTheoremProducer::dummyTheorem(const" 88600]
[ebrowse-ms "elimPower" () 0 () () 0 0  () "Theorem ArithTheoremProducer::elimPower(const" 37574]
[ebrowse-ms "elimPowerConst" () 0 () () 0 0  () "eorem ArithTheoremProducer::elimPowerConst(const" 38374]
[ebrowse-ms "eqElimIntRule" () 0 () () 0 0  () "ArithTheoremProducer::eqElimIntRule(const" 79382]
[ebrowse-ms "eqToIneq" () 0 () () 0 0  () "Theorem ArithTheoremProducer::eqToIneq(const" 88021]
[ebrowse-ms "equalLeaves1" () 0 () () 0 0  () "ArithTheoremProducer::equalLeaves1(const" 83057]
[ebrowse-ms "equalLeaves2" () 0 () () 0 0  () "ArithTheoremProducer::equalLeaves2(const" 83791]
[ebrowse-ms "equalLeaves3" () 0 () () 0 0  () "ArithTheoremProducer::equalLeaves3(const" 84525]
[ebrowse-ms "equalLeaves4" () 0 () () 0 0  () "ArithTheoremProducer::equalLeaves4(const" 85259]
[ebrowse-ms "evenPowerEqNegConst" () 0 () () 0 0  () " ArithTheoremProducer::evenPowerEqNegConst(const" 39196]
[ebrowse-ms "expandDarkShadow" () 0 () () 0 0  () "rem ArithTheoremProducer::expandDarkShadow(const" 59717]
[ebrowse-ms "expandGrayShadow" () 0 () () 0 0  () "rem ArithTheoremProducer::expandGrayShadow(const" 62079]
[ebrowse-ms "expandGrayShadow0" () 0 () () 0 0  () "em ArithTheoremProducer::expandGrayShadow0(const" 60258]
[ebrowse-ms "expandGrayShadowConst" () 0 () () 0 0  () "rithTheoremProducer::expandGrayShadowConst(const" 62977]
[ebrowse-ms "expandGrayShadowRewrite" () 0 () () 0 0  () "thTheoremProducer::expandGrayShadowRewrite(const" 102189]
[ebrowse-ms "f" () 0 () () 0 0  () "ArithTheoremProducer::f(const" 72255]
[ebrowse-ms "finiteInterval" () 0 () () 0 0  () "ArithTheoremProducer::finiteInterval(const" 51205]
[ebrowse-ms "flipInequality" () 0 () () 0 0  () "eorem ArithTheoremProducer::flipInequality(const" 47332]
[ebrowse-ms "grayShadowConst" () 0 () () 0 0  () "ArithTheoremProducer::grayShadowConst(const" 65046]
[ebrowse-ms "greaterthan" () 0 () () 0 0  () "bool ArithTheoremProducer::greaterthan(const" 75860]
[ebrowse-ms "implyDiffLogicBothBounds" () 0 () () 0 0  () "hTheoremProducer::implyDiffLogicBothBounds(const" 102619]
[ebrowse-ms "implyEqualities" () 0 () () 0 0  () "orem ArithTheoremProducer::implyEqualities(const" 100069]
[ebrowse-ms "implyNegatedInequality" () 0 () () 0 0  () "ithTheoremProducer::implyNegatedInequality(const" 94878]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 0 () () 0 0  () "mProducer::implyNegatedInequalityDiffLogic(const" 102003]
[ebrowse-ms "implyWeakerInequality" () 0 () () 0 0  () "rithTheoremProducer::implyWeakerInequality(const" 92571]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 0 () () 0 0  () "emProducer::implyWeakerInequalityDiffLogic(const" 101809]
[ebrowse-ms "intEqIrrational" () 0 () () 0 0  () "orem ArithTheoremProducer::intEqIrrational(const" 39833]
[ebrowse-ms "intEqualityRationalConstant" () 0 () () 0 0  () "eoremProducer::intEqualityRationalConstant(const" 99756]
[ebrowse-ms "intVarEqnConst" () 0 () () 0 0  () "ArithTheoremProducer::intVarEqnConst(const" 68476]
[ebrowse-ms "integerSplit" () 0 () () 0 0  () "Theorem ArithTheoremProducer::integerSplit(const" 97013]
[ebrowse-ms "isIntConst" () 0 () () 0 0  () "ArithTheoremProducer::isIntConst(const" 82637]
[ebrowse-ms "leftMinusRight" () 0 () () 0 0  () "eorem ArithTheoremProducer::leftMinusRight(const" 42511]
[ebrowse-ms "lessThanToLE" () 0 () () 0 0  () "Theorem ArithTheoremProducer::lessThanToLE(const" 66798]
[ebrowse-ms "lessThanToLERewrite" () 0 () () 0 0  () " ArithTheoremProducer::lessThanToLERewrite(const" 100386]
[ebrowse-ms "minusToPlus" () 0 () () 0 0  () "Theorem ArithTheoremProducer::minusToPlus(const" 2209]
[ebrowse-ms "modEq" () 0 () () 0 0  () "ArithTheoremProducer::modEq(const" 71946]
[ebrowse-ms "monomialModM" () 0 () () 0 0  () "ArithTheoremProducer::monomialModM(const" 73133]
[ebrowse-ms "monomialMulF" () 0 () () 0 0  () "ArithTheoremProducer::monomialMulF(const" 74659]
[ebrowse-ms "moveSumConstantRight" () 0 () () 0 0  () "ArithTheoremProducer::moveSumConstantRight(const" 86469]
[ebrowse-ms "multEqZero" () 0 () () 0 0  () "Theorem ArithTheoremProducer::multEqZero(const" 36162]
[ebrowse-ms "multEqn" () 0 () () 0 0  () "Theorem ArithTheoremProducer::multEqn(const" 43694]
[ebrowse-ms "multIneqn" () 0 () () 0 0  () "Theorem ArithTheoremProducer::multIneqn(const" 44753]
[ebrowse-ms "negatedInequality" () 0 () () 0 0  () "em ArithTheoremProducer::negatedInequality(const" 47921]
[ebrowse-ms "nonLinearIneqSignSplit" () 0 () () 0 0  () "ithTheoremProducer::nonLinearIneqSignSplit(const" 102473]
[ebrowse-ms "oneElimination" () 0 () () 0 0  () "eorem ArithTheoremProducer::oneElimination(const" 88751]
[ebrowse-ms "plusPredicate" () 0 () () 0 0  () "heorem ArithTheoremProducer::plusPredicate(const" 43039]
[ebrowse-ms "powEqZero" () 0 () () 0 0  () "Theorem ArithTheoremProducer::powEqZero(const" 36844]
[ebrowse-ms "powerOfOne" () 0 () () 0 0  () "Theorem ArithTheoremProducer::powerOfOne(const" 102989]
[ebrowse-ms "rafineStrictInteger" () 0 () () 0 0  () " ArithTheoremProducer::rafineStrictInteger(const" 97636]
[ebrowse-ms "realShadow" () 0 () () 0 0  () "Theorem ArithTheoremProducer::realShadow(const" 48816]
[ebrowse-ms "realShadowEq" () 0 () () 0 0  () "Theorem ArithTheoremProducer::realShadowEq(const" 50034]
[ebrowse-ms "rightMinusLeft" () 0 () () 0 0  () "eorem ArithTheoremProducer::rightMinusLeft(const" 41976]
[ebrowse-ms "simpleIneqInt" () 0 () () 0 0  () "heorem ArithTheoremProducer::simpleIneqInt(const" 99516]
[ebrowse-ms "simplifiedMultExpr" () 0 () () 0 0  () "xpr ArithTheoremProducer::simplifiedMultExpr(std" 6876]
[ebrowse-ms "splitGrayShadow" () 0 () () 0 0  () "orem ArithTheoremProducer::splitGrayShadow(const" 61089]
[ebrowse-ms "splitGrayShadowSmall" () 0 () () 0 0  () "ArithTheoremProducer::splitGrayShadowSmall(const" 101660]
[ebrowse-ms "substitute" () 0 () () 0 0  () "ArithTheoremProducer::substitute(const" 75270]
[ebrowse-ms "sumModM" () 0 () () 0 0  () "ArithTheoremProducer::sumModM(vector" 72465]
[ebrowse-ms "sumMulF" () 0 () () 0 0  () "ArithTheoremProducer::sumMulF(vector" 73995]
[ebrowse-ms "trustedRewrite" () 0 () () 0 0  () "eorem ArithTheoremProducer::trustedRewrite(const" 96655]
[ebrowse-ms "uMinusToMult" () 0 () () 0 0  () "Theorem ArithTheoremProducer::uMinusToMult(const" 1855]
[ebrowse-ms "varToMult" () 0 () () 0 0  () "Theorem ArithTheoremProducer::varToMult(const" 1620]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheorySimulate" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_theorem_producer.cpp" ]
()()
([ebrowse-ms "TheorySimulate" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/theory_simulate.cpp" "rySimulate::TheorySimulate(TheoryCore* core)
  :" 890]
[ebrowse-ms "computeTCC" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/theory_simulate.cpp" "TheorySimulate::computeTCC(const" 4827]
[ebrowse-ms "computeType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/theory_simulate.cpp" "TheorySimulate::computeType(const" 1451]
[ebrowse-ms "createProofRules" () 0 () () 0 0  () "teProofRules* TheorySimulate::createProofRules()" 1100]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/theory_simulate.cpp" "TheorySimulate::parseExprOp(const" 3731]
[ebrowse-ms "print" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/theory_simulate.cpp" "TheorySimulate::print(ExprStream" 6711]
[ebrowse-ms "rewrite" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/theory_simulate.cpp" "TheorySimulate::rewrite(const" 1259]
[ebrowse-ms "~TheorySimulate" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/theory_simulate.cpp" "TheorySimulate::~TheorySimulate()" 1197]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ParserData" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "  class ParserData {" 2487() ]
()([ebrowse-ms "buffer" () 0 () "    void* buffer;" 2707 0  () () 0]
[ebrowse-ms "lang" () 0 () "    InputLanguage lang;" 2550 0  () () 0]
[ebrowse-ms "temp" () 0 () "    ParserTemp temp;" 2647 0  () () 0]
[ebrowse-ms "useName" () 0 () "    bool useName;" 2626 0  () () 0]
)
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DatatypeTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_theorem_producer.cpp" ]
()()
([ebrowse-ms "decompose" () 0 () () 0 0  () "Theorem DatatypeTheoremProducer::decompose(const" 3243]
[ebrowse-ms "dummyTheorem" () 0 () () 0 0  () "orem DatatypeTheoremProducer::dummyTheorem(const" 1333]
[ebrowse-ms "noCycle" () 0 () () 0 0  () "Theorem DatatypeTheoremProducer::noCycle(const" 4121]
[ebrowse-ms "rewriteSelCons" () 0 () () 0 0  () "em DatatypeTheoremProducer::rewriteSelCons(const" 1652]
[ebrowse-ms "rewriteTestCons" () 0 () () 0 0  () "m DatatypeTheoremProducer::rewriteTestCons(const" 2707]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNFCallback" "SAT::CNF_Manager" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf_manager.h" "  class CNFCallback {" 2814"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf_manager.h" ]
([ebrowse-ts [ebrowse-cs "SearchSatCNFCallback" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" "class SearchSatCNFCallback :" 2722"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" ]
()([ebrowse-ms "d_ss" () 0 () "  SearchSat* d_ss;" 2774 2  () () 0]
)
([ebrowse-ms "SearchSatCNFCallback" () 0 () "  SearchSatCNFCallback(SearchSat* ss) :" 2815 0  () "  SearchSatCNFCallback(SearchSat* ss) :" 2815]
[ebrowse-ms "registerAtom" () 1 () "  void registerAtom(const" 2890 0  () "  void registerAtom(const" 2890]
[ebrowse-ms "~SearchSatCNFCallback" () 0 () "  ~SearchSatCNFCallback()" 2860 0  () "  ~SearchSatCNFCallback()" 2860]
)
()
()
()
()
()()
])()
([ebrowse-ms "CNFCallback" () 0 () "    CNFCallback() {" 2842 0  () "    CNFCallback() {" 2842]
[ebrowse-ms "registerAtom" () 9 () "    virtual void registerAtom(const" 2936 0  () () 0]
[ebrowse-ms "~CNFCallback" () 1 () "    virtual ~CNFCallback()" 2872 0  () "    virtual ~CNFCallback()" 2872]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Var" "SatSolver" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  union Var {" 2129"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" ]
()([ebrowse-ms "id" () 0 () "    long id;" 2142 0  () () 0]
[ebrowse-ms "vptr" () 0 () "    void *vptr;" 2158 0  () () 0]
)
([ebrowse-ms "IsNull" () 0 () "    bool IsNull()" 2198 0  () "    bool IsNull()" 2198]
[ebrowse-ms "Reset" () 0 () "    void Reset()" 2236 0  () "    void Reset()" 2236]
[ebrowse-ms "Var" () 0 () "    Var() :" 2168 0  () "    Var() :" 2168]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Var" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "class Var {" 809"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" ]
()([ebrowse-ms "d_index" () 0 () "  int d_index;" 824 2  () () 0]
)
([ebrowse-ms "Var" () 0 () "  Var(int index) :" 947 0  () "  Var(int index) :" 947]
[ebrowse-ms "Var" () 0 () "  Var() :" 920 0  () "  Var() :" 920]
[ebrowse-ms "getIndex" () 4 () "  int getIndex()" 1108 0  () "  int getIndex()" 1108]
[ebrowse-ms "isNull" () 4 () "  bool isNull()" 1026 0  () "  bool isNull()" 1026]
[ebrowse-ms "isVar" () 4 () "  bool isVar()" 1149 0  () "  bool isVar()" 1149]
[ebrowse-ms "operator ==" () 4 () "  bool operator==(const" 1203 0  () "  bool operator==(const" 1203]
[ebrowse-ms "reset" () 0 () "  void reset()" 1073 0  () "  void reset()" 1073]
)
()
([ebrowse-ms "invertValue" () 2 () "  static Val invertValue(Val" 910 0  () "inline Var::Val Var::invertValue(Var" 1296]
)
()
([ebrowse-ms "Val" () 0 () "  enum Val {" 845 0  () "  enum Val {" 845]
)
()()
][ebrowse-ts [ebrowse-cs "Var" () 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryArith" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith.cpp" ]
()()
([ebrowse-ms "canonRec" () 0 () () 0 0  () "Theorem TheoryArith::canonRec(const" 722]
[ebrowse-ms "canonSimp" () 0 () () 0 0  () "Theorem TheoryArith::canonSimp(const" 5507]
[ebrowse-ms "isAtomicArithFormula" () 0 () () 0 0  () "bool TheoryArith::isAtomicArithFormula(const" 2656]
[ebrowse-ms "isAtomicArithTerm" () 0 () () 0 0  () "bool TheoryArith::isAtomicArithTerm(const" 2184]
[ebrowse-ms "isSyntacticRational" () 0 () () 0 0  () "bool TheoryArith::isSyntacticRational(const" 2890]
[ebrowse-ms "leavesAreNumConst" () 0 () () 0 0  () "bool TheoryArith::leavesAreNumConst(const" 6483]
[ebrowse-ms "printRational" () 0 () () 0 0  () "void TheoryArith::printRational(ExprStream" 1277]
[ebrowse-ms "recursiveCanonSimpCheck" () 0 () () 0 0  () "bool TheoryArith::recursiveCanonSimpCheck(const" 6206]
[ebrowse-ms "rewriteToDiff" () 0 () () 0 0  () "Expr TheoryArith::rewriteToDiff(const" 3490]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchEngineTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_theorem_producer.cpp" ]
()()
([ebrowse-ms "SearchEngineTheoremProducer" () 0 () () 0 0  () "rchEngineTheoremProducer(TheoremManager* tm)
  :" 1227]
[ebrowse-ms "andCNFRule" () 0 () () 0 0  () "SearchEngineTheoremProducer::andCNFRule(const" 33034]
[ebrowse-ms "caseSplit" () 0 () () 0 0  () "SearchEngineTheoremProducer::caseSplit(const" 3451]
[ebrowse-ms "checkSoundNoSkolems" () 0 () () 0 0  () "EngineTheoremProducer::checkSoundNoSkolems(const" 12872]
[ebrowse-ms "confAndrAF" () 0 () () 0 0  () "SearchEngineTheoremProducer::confAndrAF(const" 21870]
[ebrowse-ms "confAndrAT" () 0 () () 0 0  () "SearchEngineTheoremProducer::confAndrAT(const" 20972]
[ebrowse-ms "confIffr" () 0 () () 0 0  () "SearchEngineTheoremProducer::confIffr(const" 24100]
[ebrowse-ms "confIterIfThen" () 0 () () 0 0  () "earchEngineTheoremProducer::confIterIfThen(const" 29863]
[ebrowse-ms "confIterThenElse" () 0 () () 0 0  () "rchEngineTheoremProducer::confIterThenElse(const" 28608]
[ebrowse-ms "conflictClause" () 0 () () 0 0  () "conflictClause(const" 6191]
[ebrowse-ms "conflictRule" () 0 () () 0 0  () "SearchEngineTheoremProducer::conflictRule(const" 31246]
[ebrowse-ms "convertToCNF" () 0 () () 0 0  () " SearchEngineTheoremProducer::convertToCNF(const" 38018]
[ebrowse-ms "cutRule" () 0 () () 0 0  () "cutRule(const" 11124]
[ebrowse-ms "eliminateSkolemAxioms" () 0 () () 0 0  () "gineTheoremProducer::eliminateSkolemAxioms(const" 13570]
[ebrowse-ms "findInLocalCache" () 0 () () 0 0  () "rchEngineTheoremProducer::findInLocalCache(const" 40270]
[ebrowse-ms "iffCNFRule" () 0 () () 0 0  () "SearchEngineTheoremProducer::iffCNFRule(const" 33396]
[ebrowse-ms "iffToClauses" () 0 () () 0 0  () "SearchEngineTheoremProducer::iffToClauses(const" 34223]
[ebrowse-ms "impCNFRule" () 0 () () 0 0  () "SearchEngineTheoremProducer::impCNFRule(const" 33269]
[ebrowse-ms "iteCNFRule" () 0 () () 0 0  () "SearchEngineTheoremProducer::iteCNFRule(const" 33515]
[ebrowse-ms "iteToClauses" () 0 () () 0 0  () "SearchEngineTheoremProducer::iteToClauses(const" 33637]
[ebrowse-ms "negIntro" () 0 () () 0 0  () "SearchEngineTheoremProducer::negIntro(const" 2538]
[ebrowse-ms "opCNFRule" () 0 () () 0 0  () "SearchEngineTheoremProducer::opCNFRule(const" 34974]
[ebrowse-ms "orCNFRule" () 0 () () 0 0  () "SearchEngineTheoremProducer::orCNFRule(const" 33152]
[ebrowse-ms "proofByContradiction" () 0 () () 0 0  () "ngineTheoremProducer::proofByContradiction(const" 1634]
[ebrowse-ms "propAndrAF" () 0 () () 0 0  () "SearchEngineTheoremProducer::propAndrAF(const" 17115]
[ebrowse-ms "propAndrAT" () 0 () () 0 0  () "SearchEngineTheoremProducer::propAndrAT(const" 17874]
[ebrowse-ms "propAndrLF" () 0 () () 0 0  () "SearchEngineTheoremProducer::propAndrLF(const" 19394]
[ebrowse-ms "propAndrLRT" () 0 () () 0 0  () "SearchEngineTheoremProducer::propAndrLRT(const" 18651]
[ebrowse-ms "propAndrRF" () 0 () () 0 0  () "SearchEngineTheoremProducer::propAndrRF(const" 20183]
[ebrowse-ms "propIffr" () 0 () () 0 0  () "SearchEngineTheoremProducer::propIffr(const" 22852]
[ebrowse-ms "propIterIfThen" () 0 () () 0 0  () "earchEngineTheoremProducer::propIterIfThen(const" 26323]
[ebrowse-ms "propIterIte" () 0 () () 0 0  () "SearchEngineTheoremProducer::propIterIte(const" 25283]
[ebrowse-ms "propIterThen" () 0 () () 0 0  () "SearchEngineTheoremProducer::propIterThen(const" 27562]
[ebrowse-ms "satProof" () 0 () () 0 0  () "orem SearchEngineTheoremProducer::satProof(const" 41158]
[ebrowse-ms "unitProp" () 0 () () 0 0  () "SearchEngineTheoremProducer::unitProp(const" 15392]
[ebrowse-ms "verifyConflict" () 0 () () 0 0  () "earchEngineTheoremProducer::verifyConflict(const" 5418]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "stringHash" "CVC3::Debug" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "    class stringHash {" 11123"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "      size_t operator()(const" 11165 0  () "      size_t operator()(const" 11165]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "BitvectorProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_proof_rules.h" "  class BitvectorProofRules {" 785"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "BitvectorTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.h" "  class BitvectorTheoremProducer:" 1142"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.h" ]
()([ebrowse-ms "d_bvOne" () 0 () "    Expr d_bvOne;" 1396 2  () () 0]
[ebrowse-ms "d_bvZero" () 0 () "    Expr d_bvZero;" 1338 2  () () 0]
[ebrowse-ms "d_theoryBitvector" () 0 () "    TheoryBitvector* d_theoryBitvector;" 1250 2  () () 0]
)
([ebrowse-ms "BVMult_order_subterms" () 1 () "    virtual Theorem BVMult_order_subterms( const" 22219 0  () () 0]
[ebrowse-ms "BitvectorTheoremProducer" () 0 () "eoremProducer(TheoryBitvector* theoryBitvector);" 3247 0  () () 0]
[ebrowse-ms "MarkNonSolvableEq" () 1 () "    virtual Theorem MarkNonSolvableEq( const" 22374 0  () () 0]
[ebrowse-ms "bitBlastDisEqnRule" () 1 () "    Theorem bitBlastDisEqnRule(const" 4905 0  () () 0]
[ebrowse-ms "bitBlastEqnRule" () 1 () "    Theorem bitBlastEqnRule(const" 4466 0  () () 0]
[ebrowse-ms "bitExtractAllToConstEq" () 1 () "    Theorem bitExtractAllToConstEq(std" 7030 0  () () 0]
[ebrowse-ms "bitExtractBVASHR" () 1 () "    Theorem bitExtractBVASHR(const" 11754 0  () () 0]
[ebrowse-ms "bitExtractBVLSHR" () 1 () "    Theorem bitExtractBVLSHR(const" 11474 0  () () 0]
[ebrowse-ms "bitExtractBVMult" () 1 () "    Theorem bitExtractBVMult(const" 8598 0  () () 0]
[ebrowse-ms "bitExtractBVPlus" () 1 () "    Theorem bitExtractBVPlus(const" 9580 0  () () 0]
[ebrowse-ms "bitExtractBVPlusPreComputed" () 1 () "    Theorem bitExtractBVPlusPreComputed(const" 9733 0  () () 0]
[ebrowse-ms "bitExtractBVSHL" () 1 () "    Theorem bitExtractBVSHL(const" 11195 0  () () 0]
[ebrowse-ms "bitExtractBitwise" () 1 () "    Theorem bitExtractBitwise(const" 10460 0  () () 0]
[ebrowse-ms "bitExtractConcatenation" () 1 () "    Theorem bitExtractConcatenation(const" 8130 0  () () 0]
[ebrowse-ms "bitExtractConstBVMult" () 1 () "    Theorem bitExtractConstBVMult(const" 8365 0  () () 0]
[ebrowse-ms "bitExtractConstant" () 1 () "    Theorem bitExtractConstant(const" 7662 0  () () 0]
[ebrowse-ms "bitExtractExtraction" () 1 () "    Theorem bitExtractExtraction(const" 8907 0  () () 0]
[ebrowse-ms "bitExtractFixedLeftShift" () 1 () "    Theorem bitExtractFixedLeftShift(const" 10863 0  () () 0]
[ebrowse-ms "bitExtractFixedRightShift" () 1 () "    Theorem bitExtractFixedRightShift(const" 10926 0  () () 0]
[ebrowse-ms "bitExtractNot" () 1 () "    Theorem bitExtractNot(const" 10360 0  () () 0]
[ebrowse-ms "bitExtractRewrite" () 1 () "    Theorem bitExtractRewrite(const" 7282 0  () () 0]
[ebrowse-ms "bitExtractSXRule" () 1 () "    Theorem bitExtractSXRule(const" 12174 0  () () 0]
[ebrowse-ms "bitExtractToExtract" () 1 () "    Theorem bitExtractToExtract(const" 7161 0  () () 0]
[ebrowse-ms "bitblastBVMult" () 1 () "    virtual Theorem bitblastBVMult(const" 23686 0  () () 0]
[ebrowse-ms "bitblastBVPlus" () 1 () "    virtual Theorem bitblastBVPlus(const" 24225 0  () () 0]
[ebrowse-ms "bitvectorFalseRule" () 1 () "    Theorem bitvectorFalseRule(const" 3905 0  () () 0]
[ebrowse-ms "bitvectorTrueRule" () 1 () "    Theorem bitvectorTrueRule(const" 4062 0  () () 0]
[ebrowse-ms "bitwiseConcat" () 1 () "    Theorem bitwiseConcat(const" 17203 0  () () 0]
[ebrowse-ms "bitwiseConst" () 1 () "    Theorem bitwiseConst(const" 17064 0  () () 0]
[ebrowse-ms "bitwiseConstElim" () 1 () "    Theorem bitwiseConstElim(const" 17548 0  () () 0]
[ebrowse-ms "bitwiseFlatten" () 1 () "    Theorem bitwiseFlatten(const" 17290 0  () () 0]
[ebrowse-ms "buildPlusTerm" () 0 () "    Expr buildPlusTerm(int" 2956 2  () () 0]
[ebrowse-ms "bvConstIneqn" () 1 () "    Theorem bvConstIneqn(const" 6468 0  () () 0]
[ebrowse-ms "bvConstMultAssocRule" () 1 () "    Theorem bvConstMultAssocRule(const" 14283 0  () () 0]
[ebrowse-ms "bvMultAssocRule" () 1 () "    Theorem bvMultAssocRule(const" 14327 0  () () 0]
[ebrowse-ms "bvMultDistRule" () 1 () "    Theorem bvMultDistRule(const" 14370 0  () () 0]
[ebrowse-ms "bvOne" () 4 () "    const Expr& bvOne()" 1546 2  () "    const Expr& bvOne()" 1546]
[ebrowse-ms "bvPlusAssociativityRule" () 1 () "    Theorem bvPlusAssociativityRule(const" 10114 0  () () 0]
[ebrowse-ms "bvSDivRewrite" () 1 () "    virtual Theorem bvSDivRewrite(const" 24556 0  () () 0]
[ebrowse-ms "bvSModRewrite" () 1 () "    virtual Theorem bvSModRewrite(const" 24830 0  () () 0]
[ebrowse-ms "bvSRemRewrite" () 1 () "    virtual Theorem bvSRemRewrite(const" 24696 0  () () 0]
[ebrowse-ms "bvUDivConst" () 1 () "    virtual Theorem bvUDivConst(const" 22923 0  () () 0]
[ebrowse-ms "bvUDivTheorem" () 1 () "    virtual Theorem bvUDivTheorem(const" 23098 0  () () 0]
[ebrowse-ms "bvURemConst" () 1 () "    virtual Theorem bvURemConst(const" 23198 0  () () 0]
[ebrowse-ms "bvURemRewrite" () 1 () "    virtual Theorem bvURemRewrite(const" 23320 0  () () 0]
[ebrowse-ms "bvZero" () 4 () "    const Expr& bvZero()" 1458 2  () "    const Expr& bvZero()" 1458]
[ebrowse-ms "bvashrToConcat" () 1 () "    Theorem bvashrToConcat(const" 13070 0  () () 0]
[ebrowse-ms "bvlshrToConcat" () 1 () "    Theorem bvlshrToConcat(const" 12987 0  () () 0]
[ebrowse-ms "bvmultBVUminus" () 1 () "    Theorem bvmultBVUminus(const" 14983 0  () () 0]
[ebrowse-ms "bvmultConst" () 1 () "    Theorem bvmultConst(const" 18811 0  () () 0]
[ebrowse-ms "bvplusConst" () 1 () "    Theorem bvplusConst(const" 18654 0  () () 0]
[ebrowse-ms "bvplusZeroConcatRule" () 1 () "    Theorem bvplusZeroConcatRule(const" 13764 0  () () 0]
[ebrowse-ms "bvshlSplit" () 1 () "    Theorem bvshlSplit(const" 12899 0  () () 0]
[ebrowse-ms "bvshlToConcat" () 1 () "    Theorem bvshlToConcat(const" 12801 0  () () 0]
[ebrowse-ms "bvuminusBVConst" () 1 () "    Theorem bvuminusBVConst(const" 14812 0  () () 0]
[ebrowse-ms "bvuminusBVMult" () 1 () "    Theorem bvuminusBVMult(const" 14855 0  () () 0]
[ebrowse-ms "bvuminusBVPlus" () 1 () "    Theorem bvuminusBVPlus(const" 15148 0  () () 0]
[ebrowse-ms "bvuminusBVUminus" () 1 () "    Theorem bvuminusBVUminus(const" 14900 0  () () 0]
[ebrowse-ms "bvuminusToBVPlus" () 1 () "    Theorem bvuminusToBVPlus(const" 15049 0  () () 0]
[ebrowse-ms "bvuminusVar" () 1 () "    Theorem bvuminusVar(const" 14940 0  () () 0]
[ebrowse-ms "canonBVEQ" () 1 () "    virtual Theorem canonBVEQ( const" 21891 0  () () 0]
[ebrowse-ms "canonBVMult" () 1 () "    virtual Theorem canonBVMult( const" 20964 0  () () 0]
[ebrowse-ms "canonBVPlus" () 1 () "    virtual Theorem canonBVPlus( const" 21295 0  () () 0]
[ebrowse-ms "canonBVUMinus" () 1 () "    virtual Theorem canonBVUMinus( const" 21478 0  () () 0]
[ebrowse-ms "chopConcat" () 0 () "    Expr chopConcat(int" 3043 2  () () 0]
[ebrowse-ms "collectLikeTermsOfPlus" () 0 () "    void collectLikeTermsOfPlus(const" 1833 2  () () 0]
[ebrowse-ms "collectOneTermOfPlus" () 0 () "    void collectOneTermOfPlus(const" 2130 2  () () 0]
[ebrowse-ms "combineLikeTermsRule" () 1 () "    Theorem combineLikeTermsRule(const" 14461 0  () () 0]
[ebrowse-ms "computeCarry" () 0 () "    Expr computeCarry(const" 20133 0  () () 0]
[ebrowse-ms "computeCarryPreComputed" () 0 () "    Expr computeCarryPreComputed(const" 20288 0  () () 0]
[ebrowse-ms "concatConst" () 1 () "    Theorem concatConst(const" 18104 0  () () 0]
[ebrowse-ms "concatFlatten" () 1 () "    Theorem concatFlatten(const" 18229 0  () () 0]
[ebrowse-ms "concatMergeExtract" () 1 () "    Theorem concatMergeExtract(const" 18355 0  () () 0]
[ebrowse-ms "constEq" () 1 () "    virtual Theorem constEq(const" 25337 0  () () 0]
[ebrowse-ms "constMultToPlus" () 1 () "    Theorem constMultToPlus(const" 13611 0  () () 0]
[ebrowse-ms "constWidthLeftShiftToConcat" () 1 () "    Theorem constWidthLeftShiftToConcat(const" 12604 0  () () 0]
[ebrowse-ms "createNewPlusCollection" () 0 () "    void createNewPlusCollection(const" 2432 2  () () 0]
[ebrowse-ms "distributive_rule" () 1 () "    virtual Theorem distributive_rule( const" 22030 0  () () 0]
[ebrowse-ms "eqConst" () 1 () "    Theorem eqConst(const" 12281 0  () () 0]
[ebrowse-ms "eqToBits" () 1 () "    Theorem eqToBits(const" 12398 0  () () 0]
[ebrowse-ms "expandTypePred" () 1 () "    Theorem expandTypePred(const" 19200 0  () () 0]
[ebrowse-ms "extractAnd" () 1 () "    Theorem extractAnd(const" 16021 0  () () 0]
[ebrowse-ms "extractBVMult" () 1 () "    Theorem extractBVMult(const" 14547 0  () () 0]
[ebrowse-ms "extractBVPlus" () 1 () "    Theorem extractBVPlus(const" 14589 0  () () 0]
[ebrowse-ms "extractBitwise" () 1 () "    Theorem extractBitwise(const" 15874 0  () () 0]
[ebrowse-ms "extractConcat" () 1 () "    Theorem extractConcat(const" 15765 0  () () 0]
[ebrowse-ms "extractConst" () 1 () "    Theorem extractConst(const" 15464 0  () () 0]
[ebrowse-ms "extractExtract" () 1 () "    Theorem extractExtract(const" 15646 0  () () 0]
[ebrowse-ms "extractNeg" () 1 () "    Theorem extractNeg(const" 16232 0  () () 0]
[ebrowse-ms "extractOr" () 1 () "    Theorem extractOr(const" 16133 0  () () 0]
[ebrowse-ms "extractWhole" () 1 () "    Theorem extractWhole(const" 15539 0  () () 0]
[ebrowse-ms "flattenBVPlus" () 1 () "    Theorem flattenBVPlus(const" 14412 0  () () 0]
[ebrowse-ms "flipBVMult" () 1 () "    Theorem flipBVMult(const" 14072 0  () () 0]
[ebrowse-ms "generalIneqn" () 1 () "    Theorem generalIneqn(const" 6520 0  () () 0]
[ebrowse-ms "getPlusTerms" () 0 () "    void getPlusTerms(const" 2866 2  () () 0]
[ebrowse-ms "isolate_var" () 1 () "    virtual Theorem isolate_var(const" 20629 0  () () 0]
[ebrowse-ms "iteBVnegRule" () 1 () "    Theorem iteBVnegRule(const" 14767 0  () () 0]
[ebrowse-ms "iteExtractRule" () 1 () "    Theorem iteExtractRule(const" 14685 0  () () 0]
[ebrowse-ms "leftShiftToConcat" () 1 () "    Theorem leftShiftToConcat(const" 12498 0  () () 0]
[ebrowse-ms "lhsEqRhsIneqn" () 1 () "    Theorem lhsEqRhsIneqn(const" 6380 0  () () 0]
[ebrowse-ms "lhsMinusRhsRule" () 1 () "    Theorem lhsMinusRhsRule(const" 14505 0  () () 0]
[ebrowse-ms "liftConcatBVMult" () 1 () "    virtual Theorem liftConcatBVMult(const" 20794 0  () () 0]
[ebrowse-ms "liftConcatBVPlus" () 1 () "    virtual Theorem liftConcatBVPlus(const" 21122 0  () () 0]
[ebrowse-ms "negBVand" () 1 () "    Theorem negBVand(const" 16719 0  () () 0]
[ebrowse-ms "negBVor" () 1 () "    Theorem negBVor(const" 16807 0  () () 0]
[ebrowse-ms "negBVxnor" () 1 () "    Theorem negBVxnor(const" 16950 0  () () 0]
[ebrowse-ms "negBVxor" () 1 () "    Theorem negBVxor(const" 16878 0  () () 0]
[ebrowse-ms "negConcat" () 1 () "    Theorem negConcat(const" 16467 0  () () 0]
[ebrowse-ms "negConst" () 1 () "    Theorem negConst(const" 16354 0  () () 0]
[ebrowse-ms "negElim" () 1 () "    Theorem negElim(const" 16630 0  () () 0]
[ebrowse-ms "negNeg" () 1 () "    Theorem negNeg(const" 16550 0  () () 0]
[ebrowse-ms "notBVEQ1Rule" () 1 () "    Theorem notBVEQ1Rule(const" 6093 0  () () 0]
[ebrowse-ms "notBVLTRule" () 1 () "    Theorem notBVLTRule(const" 6257 0  () () 0]
[ebrowse-ms "okToSplit" () 0 () "    bool okToSplit(const" 3121 2  () () 0]
[ebrowse-ms "oneBVAND" () 1 () "    virtual Theorem oneBVAND(const" 25218 0  () () 0]
[ebrowse-ms "oneCoeffBVMult" () 1 () "    Theorem oneCoeffBVMult(const" 14033 0  () () 0]
[ebrowse-ms "pad" () 0 () "    Expr pad(int" 14147 0  () () 0]
[ebrowse-ms "padBVLTRule" () 1 () "    Theorem padBVLTRule(const" 5320 0  () () 0]
[ebrowse-ms "padBVMult" () 1 () "    Theorem padBVMult(const" 14234 0  () () 0]
[ebrowse-ms "padBVPlus" () 1 () "    Theorem padBVPlus(const" 14196 0  () () 0]
[ebrowse-ms "padBVSLTRule" () 1 () "    Theorem padBVSLTRule(const" 5442 0  () () 0]
[ebrowse-ms "processExtract" () 1 () "    virtual Theorem processExtract(const" 21795 0  () () 0]
[ebrowse-ms "rat" () 0 () "    Expr rat(const" 19456 0  () "    Expr rat(const" 19456]
[ebrowse-ms "repeatRule" () 1 () "    virtual Theorem repeatRule(const" 22592 0  () () 0]
[ebrowse-ms "rewriteBVCOMP" () 1 () "    Theorem rewriteBVCOMP(const" 13376 0  () () 0]
[ebrowse-ms "rewriteBVSub" () 1 () "    Theorem rewriteBVSub(const" 13444 0  () () 0]
[ebrowse-ms "rewriteNAND" () 1 () "    Theorem rewriteNAND(const" 13221 0  () () 0]
[ebrowse-ms "rewriteNOR" () 1 () "    Theorem rewriteNOR(const" 13289 0  () () 0]
[ebrowse-ms "rewriteXNOR" () 1 () "    Theorem rewriteXNOR(const" 13151 0  () () 0]
[ebrowse-ms "rightShiftToConcat" () 1 () "    Theorem rightShiftToConcat(const" 12715 0  () () 0]
[ebrowse-ms "rotlRule" () 1 () "    virtual Theorem rotlRule(const" 22672 0  () () 0]
[ebrowse-ms "rotrRule" () 1 () "    virtual Theorem rotrRule(const" 22751 0  () () 0]
[ebrowse-ms "sameKidCheck" () 0 () "    int sameKidCheck(const" 17942 0  () () 0]
[ebrowse-ms "signBVLTRule" () 1 () "    Theorem signBVLTRule(const" 5932 0  () () 0]
[ebrowse-ms "signExtendRule" () 1 () "    Theorem signExtendRule(const" 5218 0  () () 0]
[ebrowse-ms "sumNormalizedElements" () 0 () "    Expr sumNormalizedElements(int" 2777 2  () () 0]
[ebrowse-ms "typePredBit" () 1 () "    Theorem typePredBit(const" 19078 0  () () 0]
[ebrowse-ms "zeroBVOR" () 1 () "    virtual Theorem zeroBVOR(const" 25017 0  () () 0]
[ebrowse-ms "zeroCoeffBVMult" () 1 () "    Theorem zeroCoeffBVMult(const" 13990 0  () () 0]
[ebrowse-ms "zeroExtendRule" () 1 () "    virtual Theorem zeroExtendRule(const" 22508 0  () () 0]
[ebrowse-ms "zeroLeq" () 1 () "    Theorem zeroLeq(const" 6427 0  () () 0]
[ebrowse-ms "zeroPaddingRule" () 1 () "    Theorem zeroPaddingRule(const" 12121 0  () () 0]
[ebrowse-ms "~BitvectorTheoremProducer" () 0 () "    ~BitvectorTheoremProducer()" 3298 0  () "    ~BitvectorTheoremProducer()" 3298]
)
()
()
()
()
()()
])()
([ebrowse-ms "BVMult_order_subterms" () 9 () "    virtual Theorem BVMult_order_subterms( const" 19243 0  () () 0]
[ebrowse-ms "MarkNonSolvableEq" () 9 () "    virtual Theorem MarkNonSolvableEq( const" 19402 0  () () 0]
[ebrowse-ms "bitBlastDisEqnRule" () 9 () "    virtual Theorem bitBlastDisEqnRule(const" 1922 0  () () 0]
[ebrowse-ms "bitBlastEqnRule" () 9 () "    virtual Theorem bitBlastEqnRule(const" 1634 0  () () 0]
[ebrowse-ms "bitExtractAllToConstEq" () 9 () "    virtual Theorem bitExtractAllToConstEq(std" 4176 0  () () 0]
[ebrowse-ms "bitExtractBVASHR" () 9 () "    virtual Theorem bitExtractBVASHR(const" 9133 0  () () 0]
[ebrowse-ms "bitExtractBVLSHR" () 9 () "    virtual Theorem bitExtractBVLSHR(const" 8841 0  () () 0]
[ebrowse-ms "bitExtractBVMult" () 9 () "    virtual Theorem bitExtractBVMult(const" 5878 0  () () 0]
[ebrowse-ms "bitExtractBVPlus" () 9 () "    virtual Theorem bitExtractBVPlus(const" 6829 0  () () 0]
[ebrowse-ms "bitExtractBVPlusPreComputed" () 9 () "irtual Theorem bitExtractBVPlusPreComputed(const" 6995 0  () () 0]
[ebrowse-ms "bitExtractBVSHL" () 9 () "    virtual Theorem bitExtractBVSHL(const" 8550 0  () () 0]
[ebrowse-ms "bitExtractBitwise" () 9 () "    virtual Theorem bitExtractBitwise(const" 7761 0  () () 0]
[ebrowse-ms "bitExtractConcatenation" () 9 () "   virtual Theorem bitExtractConcatenation(const" 5397 0  () () 0]
[ebrowse-ms "bitExtractConstBVMult" () 9 () "    virtual Theorem bitExtractConstBVMult(const" 5634 0  () () 0]
[ebrowse-ms "bitExtractConstant" () 9 () "    virtual Theorem bitExtractConstant(const" 4936 0  () () 0]
[ebrowse-ms "bitExtractExtraction" () 9 () "    virtual Theorem bitExtractExtraction(const" 6182 0  () () 0]
[ebrowse-ms "bitExtractFixedLeftShift" () 9 () "  virtual Theorem bitExtractFixedLeftShift(const" 8176 0  () () 0]
[ebrowse-ms "bitExtractFixedRightShift" () 9 () " virtual Theorem bitExtractFixedRightShift(const" 8260 0  () () 0]
[ebrowse-ms "bitExtractNot" () 9 () "    virtual Theorem bitExtractNot(const" 7650 0  () () 0]
[ebrowse-ms "bitExtractRewrite" () 9 () "    virtual Theorem bitExtractRewrite(const" 4562 0  () () 0]
[ebrowse-ms "bitExtractSXRule" () 9 () "    virtual Theorem bitExtractSXRule(const" 9577 0  () () 0]
[ebrowse-ms "bitExtractToExtract" () 9 () "    virtual Theorem bitExtractToExtract(const" 4428 0  () () 0]
[ebrowse-ms "bitblastBVMult" () 9 () "    virtual Theorem bitblastBVMult(const" 21173 0  () () 0]
[ebrowse-ms "bitblastBVPlus" () 9 () "    virtual Theorem bitblastBVPlus(const" 21717 0  () () 0]
[ebrowse-ms "bitvectorFalseRule" () 9 () "    virtual Theorem bitvectorFalseRule(const" 1189 0  () () 0]
[ebrowse-ms "bitvectorTrueRule" () 9 () "    virtual Theorem bitvectorTrueRule(const" 1358 0  () () 0]
[ebrowse-ms "bitwiseConcat" () 9 () "    virtual Theorem bitwiseConcat(const" 15785 0  () () 0]
[ebrowse-ms "bitwiseConst" () 9 () "    virtual Theorem bitwiseConst(const" 15572 0  () () 0]
[ebrowse-ms "bitwiseConstElim" () 9 () "    virtual Theorem bitwiseConstElim(const" 16154 0  () () 0]
[ebrowse-ms "bitwiseFlatten" () 9 () "    virtual Theorem bitwiseFlatten(const" 15884 0  () () 0]
[ebrowse-ms "bvConstIneqn" () 9 () "    virtual Theorem bvConstIneqn(const" 3596 0  () () 0]
[ebrowse-ms "bvConstMultAssocRule" () 9 () "    virtual Theorem bvConstMultAssocRule(const" 12296 0  () () 0]
[ebrowse-ms "bvMultAssocRule" () 9 () "    virtual Theorem bvMultAssocRule(const" 12352 0  () () 0]
[ebrowse-ms "bvMultDistRule" () 9 () "    virtual Theorem bvMultDistRule(const" 12407 0  () () 0]
[ebrowse-ms "bvPlusAssociativityRule" () 9 () "   virtual Theorem bvPlusAssociativityRule(const" 7393 0  () () 0]
[ebrowse-ms "bvSDivRewrite" () 9 () "    virtual Theorem bvSDivRewrite(const" 20520 0  () () 0]
[ebrowse-ms "bvSModRewrite" () 9 () "    virtual Theorem bvSModRewrite(const" 20802 0  () () 0]
[ebrowse-ms "bvSRemRewrite" () 9 () "    virtual Theorem bvSRemRewrite(const" 20664 0  () () 0]
[ebrowse-ms "bvUDivConst" () 9 () "    virtual Theorem bvUDivConst(const" 19936 0  () () 0]
[ebrowse-ms "bvUDivTheorem" () 9 () "    virtual Theorem bvUDivTheorem(const" 20105 0  () () 0]
[ebrowse-ms "bvURemConst" () 9 () "    virtual Theorem bvURemConst(const" 20254 0  () () 0]
[ebrowse-ms "bvURemRewrite" () 9 () "    virtual Theorem bvURemRewrite(const" 20380 0  () () 0]
[ebrowse-ms "bvashrToConcat" () 9 () "    virtual Theorem bvashrToConcat(const" 10764 0  () () 0]
[ebrowse-ms "bvlshrToConcat" () 9 () "    virtual Theorem bvlshrToConcat(const" 10669 0  () () 0]
[ebrowse-ms "bvmultBVUminus" () 9 () "    virtual Theorem bvmultBVUminus(const" 13278 0  () () 0]
[ebrowse-ms "bvmultConst" () 9 () "    virtual Theorem bvmultConst(const" 17077 0  () () 0]
[ebrowse-ms "bvplusConst" () 9 () "    virtual Theorem bvplusConst(const" 16908 0  () () 0]
[ebrowse-ms "bvplusZeroConcatRule" () 9 () "    virtual Theorem bvplusZeroConcatRule(const" 11671 0  () () 0]
[ebrowse-ms "bvshlSplit" () 9 () "    virtual Theorem bvshlSplit(const" 10569 0  () () 0]
[ebrowse-ms "bvshlToConcat" () 9 () "    virtual Theorem bvshlToConcat(const" 10459 0  () () 0]
[ebrowse-ms "bvuminusBVConst" () 9 () "    virtual Theorem bvuminusBVConst(const" 13059 0  () () 0]
[ebrowse-ms "bvuminusBVMult" () 9 () "    virtual Theorem bvuminusBVMult(const" 13114 0  () () 0]
[ebrowse-ms "bvuminusBVPlus" () 9 () "    virtual Theorem bvuminusBVPlus(const" 13467 0  () () 0]
[ebrowse-ms "bvuminusBVUminus" () 9 () "    virtual Theorem bvuminusBVUminus(const" 13171 0  () () 0]
[ebrowse-ms "bvuminusToBVPlus" () 9 () "    virtual Theorem bvuminusToBVPlus(const" 13356 0  () () 0]
[ebrowse-ms "bvuminusVar" () 9 () "    virtual Theorem bvuminusVar(const" 13223 0  () () 0]
[ebrowse-ms "canonBVEQ" () 9 () "    virtual Theorem canonBVEQ( const" 18909 0  () () 0]
[ebrowse-ms "canonBVMult" () 9 () "    virtual Theorem canonBVMult( const" 18105 0  () () 0]
[ebrowse-ms "canonBVPlus" () 9 () "    virtual Theorem canonBVPlus( const" 18440 0  () () 0]
[ebrowse-ms "canonBVUMinus" () 9 () "    virtual Theorem canonBVUMinus( const" 18494 0  () () 0]
[ebrowse-ms "combineLikeTermsRule" () 9 () "    virtual Theorem combineLikeTermsRule(const" 12522 0  () () 0]
[ebrowse-ms "concatConst" () 9 () "    virtual Theorem concatConst(const" 16322 0  () () 0]
[ebrowse-ms "concatFlatten" () 9 () "    virtual Theorem concatFlatten(const" 16459 0  () () 0]
[ebrowse-ms "concatMergeExtract" () 9 () "    virtual Theorem concatMergeExtract(const" 16597 0  () () 0]
[ebrowse-ms "constEq" () 9 () "    virtual Theorem constEq(const" 22430 0  () () 0]
[ebrowse-ms "constMultToPlus" () 9 () "    virtual Theorem constMultToPlus(const" 11377 0  () () 0]
[ebrowse-ms "constWidthLeftShiftToConcat" () 9 () "irtual Theorem constWidthLeftShiftToConcat(const" 10238 0  () () 0]
[ebrowse-ms "distributive_rule" () 9 () "    virtual Theorem distributive_rule( const" 19050 0  () () 0]
[ebrowse-ms "eqConst" () 9 () "    virtual Theorem eqConst(const" 9879 0  () () 0]
[ebrowse-ms "eqToBits" () 9 () "    virtual Theorem eqToBits(const" 10008 0  () () 0]
[ebrowse-ms "expandTypePred" () 9 () "    virtual Theorem expandTypePred(const" 17489 0  () () 0]
[ebrowse-ms "extractAnd" () 9 () "    virtual Theorem extractAnd(const" 14257 0  () () 0]
[ebrowse-ms "extractBVMult" () 9 () "    virtual Theorem extractBVMult(const" 12689 0  () () 0]
[ebrowse-ms "extractBVPlus" () 9 () "    virtual Theorem extractBVPlus(const" 12800 0  () () 0]
[ebrowse-ms "extractBitwise" () 9 () "    virtual Theorem extractBitwise(const" 14612 0  () () 0]
[ebrowse-ms "extractConcat" () 9 () "    virtual Theorem extractConcat(const" 14133 0  () () 0]
[ebrowse-ms "extractConst" () 9 () "    virtual Theorem extractConst(const" 13796 0  () () 0]
[ebrowse-ms "extractExtract" () 9 () "    virtual Theorem extractExtract(const" 14002 0  () () 0]
[ebrowse-ms "extractNeg" () 9 () "    virtual Theorem extractNeg(const" 14492 0  () () 0]
[ebrowse-ms "extractOr" () 9 () "    virtual Theorem extractOr(const" 14381 0  () () 0]
[ebrowse-ms "extractWhole" () 9 () "    virtual Theorem extractWhole(const" 13883 0  () () 0]
[ebrowse-ms "flattenBVPlus" () 9 () "    virtual Theorem flattenBVPlus(const" 12461 0  () () 0]
[ebrowse-ms "flipBVMult" () 9 () "    virtual Theorem flipBVMult(const" 12011 0  () () 0]
[ebrowse-ms "generalIneqn" () 9 () "    virtual Theorem generalIneqn(const" 3660 0  () () 0]
[ebrowse-ms "isolate_var" () 9 () "    virtual Theorem isolate_var(const" 17766 0  () () 0]
[ebrowse-ms "iteBVnegRule" () 9 () "    virtual Theorem iteBVnegRule(const" 13002 0  () () 0]
[ebrowse-ms "iteExtractRule" () 9 () "    virtual Theorem iteExtractRule(const" 12908 0  () () 0]
[ebrowse-ms "leftShiftToConcat" () 9 () "    virtual Theorem leftShiftToConcat(const" 10120 0  () () 0]
[ebrowse-ms "lhsEqRhsIneqn" () 9 () "    virtual Theorem lhsEqRhsIneqn(const" 3483 0  () () 0]
[ebrowse-ms "lhsMinusRhsRule" () 9 () "    virtual Theorem lhsMinusRhsRule(const" 12578 0  () () 0]
[ebrowse-ms "liftConcatBVMult" () 9 () "    virtual Theorem liftConcatBVMult(const" 17933 0  () () 0]
[ebrowse-ms "liftConcatBVPlus" () 9 () "    virtual Theorem liftConcatBVPlus(const" 18265 0  () () 0]
[ebrowse-ms "negBVand" () 9 () "    virtual Theorem negBVand(const" 15201 0  () () 0]
[ebrowse-ms "negBVor" () 9 () "    virtual Theorem negBVor(const" 15301 0  () () 0]
[ebrowse-ms "negBVxnor" () 9 () "    virtual Theorem negBVxnor(const" 15468 0  () () 0]
[ebrowse-ms "negBVxor" () 9 () "    virtual Theorem negBVxor(const" 15384 0  () () 0]
[ebrowse-ms "negConcat" () 9 () "    virtual Theorem negConcat(const" 14913 0  () () 0]
[ebrowse-ms "negConst" () 9 () "    virtual Theorem negConst(const" 14788 0  () () 0]
[ebrowse-ms "negElim" () 9 () "    virtual Theorem negElim(const" 15100 0  () () 0]
[ebrowse-ms "negNeg" () 9 () "    virtual Theorem negNeg(const" 15008 0  () () 0]
[ebrowse-ms "notBVEQ1Rule" () 9 () "    virtual Theorem notBVEQ1Rule(const" 3172 0  () () 0]
[ebrowse-ms "notBVLTRule" () 9 () "    virtual Theorem notBVLTRule(const" 3348 0  () () 0]
[ebrowse-ms "oneBVAND" () 9 () "    virtual Theorem oneBVAND(const" 22307 0  () () 0]
[ebrowse-ms "oneCoeffBVMult" () 9 () "    virtual Theorem oneCoeffBVMult(const" 11962 0  () () 0]
[ebrowse-ms "padBVLTRule" () 9 () "    virtual Theorem padBVLTRule(const" 2361 0  () () 0]
[ebrowse-ms "padBVMult" () 9 () "    virtual Theorem padBVMult(const" 12235 0  () () 0]
[ebrowse-ms "padBVPlus" () 9 () "    virtual Theorem padBVPlus(const" 12123 0  () () 0]
[ebrowse-ms "padBVSLTRule" () 9 () "    virtual Theorem padBVSLTRule(const" 2495 0  () () 0]
[ebrowse-ms "processExtract" () 9 () "    virtual Theorem processExtract(const" 18812 0  () () 0]
[ebrowse-ms "repeatRule" () 9 () "    virtual Theorem repeatRule(const" 19627 0  () () 0]
[ebrowse-ms "rewriteBVCOMP" () 9 () "    virtual Theorem rewriteBVCOMP(const" 11118 0  () () 0]
[ebrowse-ms "rewriteBVSub" () 9 () "    virtual Theorem rewriteBVSub(const" 11198 0  () () 0]
[ebrowse-ms "rewriteNAND" () 9 () "    virtual Theorem rewriteNAND(const" 10939 0  () () 0]
[ebrowse-ms "rewriteNOR" () 9 () "    virtual Theorem rewriteNOR(const" 11019 0  () () 0]
[ebrowse-ms "rewriteXNOR" () 9 () "    virtual Theorem rewriteXNOR(const" 10857 0  () () 0]
[ebrowse-ms "rightShiftToConcat" () 9 () "    virtual Theorem rightShiftToConcat(const" 10361 0  () () 0]
[ebrowse-ms "rotlRule" () 9 () "    virtual Theorem rotlRule(const" 19710 0  () () 0]
[ebrowse-ms "rotrRule" () 9 () "    virtual Theorem rotrRule(const" 19793 0  () () 0]
[ebrowse-ms "signBVLTRule" () 9 () "    virtual Theorem signBVLTRule(const" 2997 0  () () 0]
[ebrowse-ms "signExtendRule" () 9 () "    virtual Theorem signExtendRule(const" 2247 0  () () 0]
[ebrowse-ms "typePredBit" () 9 () "    virtual Theorem typePredBit(const" 17356 0  () () 0]
[ebrowse-ms "zeroBVOR" () 9 () "    virtual Theorem zeroBVOR(const" 22102 0  () () 0]
[ebrowse-ms "zeroCoeffBVMult" () 9 () "    virtual Theorem zeroCoeffBVMult(const" 11909 0  () () 0]
[ebrowse-ms "zeroExtendRule" () 9 () "    virtual Theorem zeroExtendRule(const" 19540 0  () () 0]
[ebrowse-ms "zeroLeq" () 9 () "    virtual Theorem zeroLeq(const" 3543 0  () () 0]
[ebrowse-ms "zeroPaddingRule" () 9 () "    virtual Theorem zeroPaddingRule(const" 9512 0  () () 0]
[ebrowse-ms "~BitvectorProofRules" () 1 () "    virtual ~BitvectorProofRules()" 848 0  () "    virtual ~BitvectorProofRules()" 848]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "RecordsTheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_theorem_producer.cpp" ]
()()
([ebrowse-ms "expandEq" () 0 () () 0 0  () "Theorem RecordsTheoremProducer::expandEq(const" 6126]
[ebrowse-ms "expandNeq" () 0 () () 0 0  () "Theorem RecordsTheoremProducer::expandNeq(const" 4549]
[ebrowse-ms "expandRecord" () 0 () () 0 0  () "eorem RecordsTheoremProducer::expandRecord(const" 7751]
[ebrowse-ms "expandTuple" () 0 () () 0 0  () "heorem RecordsTheoremProducer::expandTuple(const" 8345]
[ebrowse-ms "rewriteLitSelect" () 0 () () 0 0  () "m RecordsTheoremProducer::rewriteLitSelect(const" 1004]
[ebrowse-ms "rewriteLitUpdate" () 0 () () 0 0  () "m RecordsTheoremProducer::rewriteLitUpdate(const" 3438]
[ebrowse-ms "rewriteUpdateSelect" () 0 () () 0 0  () "ecordsTheoremProducer::rewriteUpdateSelect(const" 2078]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ContextManager" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/context/context.cpp" ]
()()
([ebrowse-ms "ContextManager" () 0 () () 0 0  () "ContextManager::ContextManager()
{" 9498]
[ebrowse-ms "createContext" () 0 () () 0 0  () "Context* ContextManager::createContext(const" 9723]
[ebrowse-ms "getMemory" () 0 () () 0 0  () "unsigned long ContextManager::getMemory(int" 10208]
[ebrowse-ms "switchContext" () 0 () () 0 0  () "Context* ContextManager::switchContext(Context" 9886]
[ebrowse-ms "~ContextManager" () 0 () () 0 0  () "ContextManager::~ContextManager()" 9581]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ContextManager" "CVC3::ContextObjChain" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" "class ContextManager {" 12260"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" ]
()([ebrowse-ms "d_contexts" () 0 () "  std::vector<Context*> d_contexts;" 12321 2  () () 0]
[ebrowse-ms "d_curContext" () 0 () "  Context* d_curContext;" 12285 2  () () 0]
)
([ebrowse-ms "ContextManager" () 0 () "  ContextManager();" 12349 0  () () 0]
[ebrowse-ms "createContext" () 0 () "  Context* createContext(const" 12594 0  () () 0]
[ebrowse-ms "getCurrentContext" () 0 () "  Context* getCurrentContext()" 12648 0  () "  Context* getCurrentContext()" 12648]
[ebrowse-ms "getMemory" () 0 () "  unsigned long getMemory(int" 12747 0  () () 0]
[ebrowse-ms "pop" () 0 () "  void pop()" 12425 0  () "  void pop()" 12425]
[ebrowse-ms "popto" () 0 () "  void popto(int" 12467 0  () "  void popto(int" 12467]
[ebrowse-ms "push" () 0 () "  void push()" 12386 0  () "  void push()" 12386]
[ebrowse-ms "scopeLevel" () 0 () "  int scopeLevel()" 12529 0  () "  int scopeLevel()" 12529]
[ebrowse-ms "switchContext" () 0 () "  Context* switchContext(Context" 12706 0  () () 0]
[ebrowse-ms "~ContextManager" () 0 () "  ~ContextManager()" 12370 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Context" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/context/context.cpp" ]
()()
([ebrowse-ms "Context" () 0 () () 0 0  () "textManager* cm, const string& name, int id)
  :" 5906]
[ebrowse-ms "deleteNotifyObj" () 0 () () 0 0  () "void Context::deleteNotifyObj(ContextNotifyObj" 8521]
[ebrowse-ms "getMemory" () 0 () () 0 0  () "unsigned long Context::getMemory(int" 8802]
[ebrowse-ms "pop" () 0 () () 0 0  () "void Context::pop()" 7478]
[ebrowse-ms "popto" () 0 () () 0 0  () "void Context::popto(int" 8412]
[ebrowse-ms "push" () 0 () () 0 0  () "void Context::push()" 6912]
[ebrowse-ms "~Context" () 0 () () 0 0  () "Context::~Context()" 6349]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Context" "CVC3::ContextObjChain" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" "class CVC_DLL Context {" 9479"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" ]
()([ebrowse-ms "d_bottomScope" () 0 () "  Scope* d_bottomScope;" 9696 2  () () 0]
[ebrowse-ms "d_cm" () 0 () "  ContextManager* d_cm;" 9525 2  () () 0]
[ebrowse-ms "d_cmmStack" () 0 () "  std::vector<ContextMemoryManager*> d_cmmStack;" 9887 2  () () 0]
[ebrowse-ms "d_id" () 0 () "  int d_id;" 9600 2  () () 0]
[ebrowse-ms "d_name" () 0 () "  std::string d_name;" 9570 2  () () 0]
[ebrowse-ms "d_notifyObjList" () 0 () " std::vector<ContextNotifyObj*> d_notifyObjList;" 9794 2  () () 0]
[ebrowse-ms "d_topScope" () 0 () "  Scope* d_topScope;" 9672 2  () () 0]
)
([ebrowse-ms "Context" () 0 () "xtManager* cm, const std::string& name, int id);" 9921 0  () () 0]
[ebrowse-ms "addNotifyObj" () 0 () "  void addNotifyObj(ContextNotifyObj" 10382 0  () "  void addNotifyObj(ContextNotifyObj" 10382]
[ebrowse-ms "bottomScope" () 4 () "  Scope* bottomScope()" 10204 0  () "  Scope* bottomScope()" 10204]
[ebrowse-ms "deleteNotifyObj" () 0 () "  void deleteNotifyObj(ContextNotifyObj" 10464 0  () () 0]
[ebrowse-ms "getCM" () 4 () "  ContextManager* getCM()" 10022 0  () "  ContextManager* getCM()" 10022]
[ebrowse-ms "getMemory" () 0 () "  unsigned long getMemory(int" 10501 0  () () 0]
[ebrowse-ms "id" () 4 () "  int id()" 10109 0  () "  int id()" 10109]
[ebrowse-ms "level" () 4 () "  int level()" 10250 0  () "  int level()" 10250]
[ebrowse-ms "name" () 4 () "  const std::string& name()" 10073 0  () "  const std::string& name()" 10073]
[ebrowse-ms "pop" () 0 () "  void pop()" 10317 0  () () 0]
[ebrowse-ms "popto" () 0 () "  void popto(int" 10335 0  () () 0]
[ebrowse-ms "push" () 0 () "  void push()" 10303 0  () () 0]
[ebrowse-ms "topScope" () 4 () "  Scope* topScope()" 10152 0  () "  Scope* topScope()" 10152]
[ebrowse-ms "~Context" () 0 () "  ~Context()" 9973 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CInterface" () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "class CInterface {" 1999"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" ]
()()
()
()
([ebrowse-ms "deleteExpr" () 0 () "  static void deleteExpr(Expr" 2380 0  () "void CInterface::deleteExpr(Expr" 3359]
[ebrowse-ms "deleteVector" () 0 () "  static void deleteVector(Expr" 2416 0  () "void CInterface::deleteVector(Expr" 3449]
[ebrowse-ms "fromExpr" () 0 () "  static CVC3::Expr fromExpr(Expr" 2122 0  () "CVC3::Expr CInterface::fromExpr(Expr" 2626]
[ebrowse-ms "fromOp" () 0 () "  static CVC3::Op fromOp(Op" 2197 0  () "CVC3::Op CInterface::fromOp(Op" 2841]
[ebrowse-ms "fromType" () 0 () "  static CVC3::Type fromType(Type" 2041 0  () "CVC3::Type CInterface::fromType(Type" 2465]
[ebrowse-ms "toExpr" () 0 () "  static Expr toExpr(const" 2153 0  () "Expr CInterface::toExpr(const" 2707]
[ebrowse-ms "toOp" () 0 () "  static Op toOp(VC" 2222 0  () "Op CInterface::toOp(VC" 2974]
[ebrowse-ms "toType" () 0 () "  static Type toType(const" 2072 0  () "Type CInterface::toType(const" 2538]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprStream" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "  class CVC_DLL ExprStream {" 4281"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" ]
()([ebrowse-ms "d_beginningOfLine" () 0 () "    bool d_beginningOfLine;" 5263 2  () () 0]
[ebrowse-ms "d_col" () 0 () "    int d_col;" 4636 2  () () 0]
[ebrowse-ms "d_currDepth" () 0 () "    int d_currDepth;" 4488 2  () () 0]
[ebrowse-ms "d_dag" () 0 () "    bool d_dag;" 5279 2  () () 0]
[ebrowse-ms "d_dagBuilt" () 0 () "    bool d_dagBuilt;" 5854 2  () () 0]
[ebrowse-ms "d_dagMap" () 0 () "    ExprMap<std::string> d_dagMap;" 5396 2  () () 0]
[ebrowse-ms "d_dagPtr" () 0 () "    std::vector<size_t> d_dagPtr;" 5698 2  () () 0]
[ebrowse-ms "d_dagStack" () 0 () "    std::vector<Expr> d_dagStack;" 5588 2  () () 0]
[ebrowse-ms "d_depth" () 0 () "    int d_depth;" 4415 2  () () 0]
[ebrowse-ms "d_em" () 0 () "    ExprManager* d_em;" 4315 2  () () 0]
[ebrowse-ms "d_idCounter" () 0 () "    int d_idCounter;" 5927 2  () () 0]
[ebrowse-ms "d_indent" () 0 () "    bool d_indent;" 4581 2  () () 0]
[ebrowse-ms "d_indentLast" () 0 () "    size_t d_indentLast;" 5082 2  () () 0]
[ebrowse-ms "d_indentReg" () 0 () "    int d_indentReg;" 5164 2  () () 0]
[ebrowse-ms "d_indentStack" () 0 () "    std::vector<int> d_indentStack;" 4992 2  () () 0]
[ebrowse-ms "d_lang" () 0 () "    InputLanguage d_lang;" 4541 2  () () 0]
[ebrowse-ms "d_lastDagSize" () 0 () "    size_t d_lastDagSize;" 5784 2  () () 0]
[ebrowse-ms "d_lineWidth" () 0 () "    int d_lineWidth;" 4687 2  () () 0]
[ebrowse-ms "d_newDagMap" () 0 () "    ExprMap<std::string> d_newDagMap;" 5493 2  () () 0]
[ebrowse-ms "d_nodag" () 0 () "    bool d_nodag;" 5990 2  () () 0]
[ebrowse-ms "d_os" () 0 () "    std::ostream* d_os;" 4367 2  () () 0]
)
([ebrowse-ms "ExprStream" () 0 () "    ExprStream(ExprManager *em);" 6362 0  () "    :" 704]
[ebrowse-ms "addLetHeader" () 0 () "    Expr addLetHeader(const" 6287 2  () "  Expr ExprStream::addLetHeader(const" 2537]
[ebrowse-ms "collectShared" () 0 () "    void collectShared(const" 6159 2  () "  void ExprStream::collectShared(const" 1562]
[ebrowse-ms "column" () 4 () "    int column()" 7865 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    int column()" 7865]
[ebrowse-ms "dagFlag" () 0 () "    bool dagFlag(bool" 7152 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    bool dagFlag(bool" 7152]
[ebrowse-ms "depth" () 0 () "    void depth(int" 6987 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    void depth(int" 6987]
[ebrowse-ms "depth" () 4 () "    int depth()" 6911 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    int depth()" 6911]
[ebrowse-ms "lang" () 0 () "    void lang(InputLanguage" 6845 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    void lang(InputLanguage" 6845]
[ebrowse-ms "lang" () 4 () "    InputLanguage lang()" 6760 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    InputLanguage lang()" 6760]
[ebrowse-ms "lineWidth" () 0 () "    void lineWidth(int" 7057 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    void lineWidth(int" 7057]
[ebrowse-ms "newName" () 0 () "    std::string newName()" 6060 2  () "  string ExprStream::newName()" 1270]
[ebrowse-ms "os" () 0 () "    void os(std" 6665 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    void os(std" 6665]
[ebrowse-ms "popDag" () 0 () "    void popDag()" 8051 0  () "  void ExprStream::popDag()" 3746]
[ebrowse-ms "popIndent" () 0 () "    void popIndent()" 7725 0  () "  void ExprStream::popIndent()" 3102]
[ebrowse-ms "pushDag" () 0 () "    void pushDag()" 7965 0  () "  void ExprStream::pushDag()" 3644]
[ebrowse-ms "pushIndent" () 0 () "    void pushIndent(int" 7598 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    void pushIndent(int" 7598]
[ebrowse-ms "pushIndent" () 0 () "    void pushIndent()" 7382 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    void pushIndent()" 7382]
[ebrowse-ms "resetDag" () 0 () "    void resetDag()" 8123 0  () "  void ExprStream::resetDag()" 4208]
[ebrowse-ms "resetIndent" () 0 () "    void resetIndent()" 7804 0  () "  void ExprStream::resetIndent()" 3528]
[ebrowse-ms "~ExprStream" () 0 () "    ~ExprStream()" 6405 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "    ~ExprStream()" 6405]
)
()
()
([ebrowse-ms "endl" () 0 () "    friend ExprStream& std::endl(ExprStream" 11259 0  () () 0]
[ebrowse-ms "nodag" () 0 () "    friend ExprStream& nodag(ExprStream" 10046 0  () () 0]
[ebrowse-ms "operator <<" () 0 () "    friend ExprStream& operator<<(ExprStream" 8820 0  () () 0]
[ebrowse-ms "operator <<" () 0 () "    friend ExprStream& operator<<(ExprStream" 8643 0  () () 0]
[ebrowse-ms "operator <<" () 0 () "    friend ExprStream& operator<<(ExprStream" 8732 0  () () 0]
[ebrowse-ms "operator <<" () 0 () "    friend ExprStream& operator<<(ExprStream" 8260 0  () () 0]
[ebrowse-ms "pop" () 0 () "    friend ExprStream& pop(ExprStream" 9026 0  () () 0]
[ebrowse-ms "popSave" () 0 () "    friend ExprStream& popSave(ExprStream" 9148 0  () () 0]
[ebrowse-ms "popdag" () 0 () "    friend ExprStream& popdag(ExprStream" 10946 0  () () 0]
[ebrowse-ms "push" () 0 () "    friend ExprStream& push(ExprStream" 8925 0  () () 0]
[ebrowse-ms "pushRestore" () 0 () "    friend ExprStream& pushRestore(ExprStream" 9263 0  () () 0]
[ebrowse-ms "pushdag" () 0 () "    friend ExprStream& pushdag(ExprStream" 10520 0  () () 0]
[ebrowse-ms "reset" () 0 () "    friend ExprStream& reset(ExprStream" 9368 0  () () 0]
[ebrowse-ms "space" () 0 () "    friend ExprStream& space(ExprStream" 9705 0  () () 0]
)
()
()()
][ebrowse-ts [ebrowse-cs "Theorem3" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  class Theorem3 {" 10642"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" ]
()([ebrowse-ms "d_thm" () 0 () "    Theorem d_thm;" 10796 2  () () 0]
)
([ebrowse-ms "Theorem3" () 0 () "    Theorem3() {" 12125 0  () "    Theorem3() {" 12125]
[ebrowse-ms "Theorem3" () 0 () "      :" 11481 2  () "      :" 11481]
[ebrowse-ms "Theorem3" () 0 () "      :" 11094 2  () "      :" 11094]
[ebrowse-ms "getAssumptionsRef" () 4 () "    const Assumptions& getAssumptionsRef()" 12839 0  () "    const Assumptions& getAssumptionsRef()" 12839]
[ebrowse-ms "getExpr" () 4 () "    Expr getExpr()" 12467 0  () "    Expr getExpr()" 12467]
[ebrowse-ms "getLHS" () 4 () "    const Expr& getLHS()" 12526 0  () "    const Expr& getLHS()" 12526]
[ebrowse-ms "getProof" () 4 () "    Proof getProof()" 13012 0  () "    Proof getProof()" 13012]
[ebrowse-ms "getRHS" () 4 () "    const Expr& getRHS()" 12584 0  () "    const Expr& getRHS()" 12584]
[ebrowse-ms "getScope" () 4 () "    int getScope()" 13187 0  () "    int getScope()" 13187]
[ebrowse-ms "isAbsLiteral" () 4 () "    bool isAbsLiteral()" 13653 0  () "    bool isAbsLiteral()" 13653]
[ebrowse-ms "isAssump" () 4 () "    bool isAssump()" 12365 0  () "    bool isAssump()" 12365]
[ebrowse-ms "isNull" () 4 () "    bool isNull()" 12195 0  () "    bool isNull()" 12195]
[ebrowse-ms "isRewrite" () 4 () "    bool isRewrite()" 12309 0  () "    bool isRewrite()" 12309]
[ebrowse-ms "print" () 4 () "    void print()" 13561 0  () "    void print()" 13561]
[ebrowse-ms "printDebug" () 4 () "    void printDebug()" 11904 0  () "    void printDebug()" 11904]
[ebrowse-ms "printx" () 4 () "    void printx()" 13518 0  () "    void printx()" 13518]
[ebrowse-ms "toString" () 6 () "    std::string toString()" 13471 0  () "  inline std::string Theorem3::toString()" 14278]
[ebrowse-ms "withAssumptions" () 4 () "    bool withAssumptions()" 13385 0  () "    bool withAssumptions()" 13385]
[ebrowse-ms "withProof" () 4 () "    bool withProof()" 13322 0  () "    bool withProof()" 13322]
[ebrowse-ms "~Theorem3" () 1 () "    virtual ~Theorem3()" 12172 0  () "    virtual ~Theorem3()" 12172]
)
()
()
([ebrowse-ms "operator !=" () 0 () "    friend bool operator!=(const" 10940 2  () "    friend bool operator!=(const" 10940]
[ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 13733 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 0 () "    friend bool operator==(const" 10830 2  () "    friend bool operator==(const" 10830]
)
()
()()
][ebrowse-ts [ebrowse-cs "Assumptions" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/assumptions.h" "  class Assumptions {" 1241"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/assumptions.h" ]
()([ebrowse-ms "d_vector" () 0 () "    std::vector<Theorem> d_vector;" 1287 2  () () 0]
)
([ebrowse-ms "Assumptions" () 0 () "sumptions(const Theorem& t1, const Theorem& t2);" 2144 0  () () 0]
[ebrowse-ms "Assumptions" () 0 () "    Assumptions(const Assumptions &assump) :" 2265 0  () "    Assumptions(const Assumptions &assump) :" 2265]
[ebrowse-ms "Assumptions" () 0 () "    Assumptions() {" 1862 0  () "    Assumptions() {" 1862]
[ebrowse-ms "add" () 0 () "    void add(const" 2688 0  () "    void add(const" 2688]
[ebrowse-ms "add1" () 0 () "    void add1(const" 2526 0  () "    void add1(const" 2526]
[ebrowse-ms "begin" () 4 () "    iterator begin()" 4839 0  () "    iterator begin()" 4839]
[ebrowse-ms "clear" () 0 () "    void clear()" 2778 0  () "    void clear()" 2778]
[ebrowse-ms "empty" () 4 () "    bool empty()" 2891 0  () "    bool empty()" 2891]
[ebrowse-ms "end" () 4 () "    iterator end()" 4903 0  () "    iterator end()" 4903]
[ebrowse-ms "find" () 4 () "    const Theorem& find(const" 3521 0  () () 0]
[ebrowse-ms "findTheorem" () 4 () "    const Theorem& findTheorem(const" 1508 2  () () 0]
[ebrowse-ms "getFirst" () 0 () "    Theorem& getFirst()" 2981 0  () "    Theorem& getFirst()" 2981]
[ebrowse-ms "operator =" () 0 () "    Assumptions &operator=(const" 2369 0  () "    Assumptions &operator=(const" 2369]
[ebrowse-ms "operator []" () 4 () "    const Theorem& operator[](const" 3395 0  () () 0]
[ebrowse-ms "print" () 4 () "    void print()" 3146 0  () () 0]
[ebrowse-ms "size" () 4 () "    unsigned size()" 2840 0  () "    unsigned size()" 2840]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 3122 0  () () 0]
[ebrowse-ms "~Assumptions" () 0 () "    ~Assumptions()" 2215 0  () "    ~Assumptions()" 2215]
)
([ebrowse-ms "s_empty" () 0 () "    static Assumptions s_empty;" 1319 2  () () 0]
)
([ebrowse-ms "emptyAssump" () 0 () "    static const Assumptions& emptyAssump()" 2485 0  () "    static const Assumptions& emptyAssump()" 2485]
[ebrowse-ms "findExpr" () 0 () "    static bool findExpr(const" 1556 2  () () 0]
[ebrowse-ms "findExprs" () 0 () "    static bool findExprs(const" 1654 2  () () 0]
)
([ebrowse-ms "operator !=" () 0 () "    friend bool operator!=(const" 5635 0  () "    friend bool operator!=(const" 5635]
[ebrowse-ms "operator -" () 0 () "    friend Assumptions operator-(const" 5287 0  () () 0]
[ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 5407 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 0 () "    friend bool operator==(const" 5519 0  () "    friend bool operator==(const" 5519]
)
()
()()
][ebrowse-ts [ebrowse-cs "Assumptions" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/assumptions.cpp" ]
()([ebrowse-ms "s_empty" () 0 () () 0 0  () "Assumptions Assumptions::s_empty;" 717]
)
([ebrowse-ms "Assumptions" () 0 () () 0 0  () "umptions(const Theorem& t1, const Theorem& t2)
{" 3880]
[ebrowse-ms "Assumptions" () 0 () () 0 0  () "mptions::Assumptions(const vector<Theorem>& v) {" 3321]
[ebrowse-ms "add" () 0 () () 0 0  () "void Assumptions::add(const" 5062]
[ebrowse-ms "find" () 4 () () 0 0  () "const Theorem& Assumptions::find(const" 6604]
[ebrowse-ms "findExpr" () 0 () () 0 0  () "bool Assumptions::findExpr(const" 1454]
[ebrowse-ms "findExprs" () 0 () () 0 0  () "bool Assumptions::findExprs(const" 2281]
[ebrowse-ms "findTheorem" () 4 () () 0 0  () "const Theorem& Assumptions::findTheorem(const" 765]
[ebrowse-ms "operator []" () 4 () () 0 0  () "const Theorem& Assumptions::operator[](const" 6450]
[ebrowse-ms "print" () 4 () () 0 0  () "void Assumptions::print()" 6357]
[ebrowse-ms "toString" () 4 () () 0 0  () "string Assumptions::toString()" 6263]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "char" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" "  template<> struct hash<signed char> {" 2644"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "    size_t operator()(unsigned" 2675 0  () "    size_t operator()(unsigned" 2675]
[ebrowse-ms "operator ()" () 4 () "    size_t operator()(char" 2458 0  () "    size_t operator()(char" 2458]
[ebrowse-ms "operator ()" () 4 () "    size_t operator()(const" 2338 0  () "    size_t operator()(const" 2338]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryUF" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/theory_uf.cpp" ]
()()
([ebrowse-ms "TheoryUF" () 0 () () 0 0  () "ryUF(TheoryCore* core)//, bool useAckermann)
  :" 1181]
[ebrowse-ms "assertFact" () 0 () () 0 0  () "void TheoryUF::assertFact(const" 2108]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "void TheoryUF::checkSat(bool" 4582]
[ebrowse-ms "checkType" () 0 () () 0 0  () "void TheoryUF::checkType(const" 8435]
[ebrowse-ms "computeBaseType" () 0 () () 0 0  () "Type TheoryUF::computeBaseType(const" 12119]
[ebrowse-ms "computeModel" () 0 () () 0 0  () "void TheoryUF::computeModel(const" 13284]
[ebrowse-ms "computeModelTerm" () 0 () () 0 0  () "void TheoryUF::computeModelTerm(const" 12626]
[ebrowse-ms "computeTCC" () 0 () () 0 0  () "Expr TheoryUF::computeTCC(const" 16076]
[ebrowse-ms "computeType" () 0 () () 0 0  () "void TheoryUF::computeType(const" 10443]
[ebrowse-ms "createProofRules" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_theorem_producer.cpp" "UFProofRules* TheoryUF::createProofRules()" 1046]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  () "Cardinality TheoryUF::finiteTypeInfo(Expr" 9296]
[ebrowse-ms "lambdaExpr" () 0 () () 0 0  () "Expr TheoryUF::lambdaExpr(const" 31328]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  () "TheoryUF::parseExprOp(const" 27047]
[ebrowse-ms "print" () 0 () () 0 0  () "ExprStream& TheoryUF::print(ExprStream" 18643]
[ebrowse-ms "rewrite" () 0 () () 0 0  () "Theorem TheoryUF::rewrite(const" 5007]
[ebrowse-ms "setup" () 0 () () 0 0  () "void TheoryUF::setup(const" 5630]
[ebrowse-ms "transClosureExpr" () 0 () () 0 0  () "Expr TheoryUF::transClosureExpr(const" 31464]
[ebrowse-ms "update" () 0 () () 0 0  () "void TheoryUF::update(const" 6071]
[ebrowse-ms "~TheoryUF" () 0 () () 0 0  () "TheoryUF::~TheoryUF()" 1978]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ClauseValue" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/clause.h" "  class ClauseValue {" 1187"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/clause.h" ]
()([ebrowse-ms "d_deleted" () 0 () "    bool d_deleted;" 2246 2  () () 0]
[ebrowse-ms "d_dir" () 0 () "    int d_dir[2];" 2108 2  () () 0]
[ebrowse-ms "d_literals" () 0 () "    std::vector<Literal> d_literals;" 1628 2  () () 0]
[ebrowse-ms "d_refcount" () 0 () "    int d_refcount;" 1264 2  () () 0]
[ebrowse-ms "d_refcountOwner" () 0 () "    int d_refcountOwner;" 1344 2  () () 0]
[ebrowse-ms "d_sat" () 0 () "    CDO<bool> d_sat;" 2191 2  () () 0]
[ebrowse-ms "d_scope" () 0 () "    int d_scope;" 1472 2  () () 0]
[ebrowse-ms "d_thm" () 0 () "    Theorem d_thm;" 1416 2  () () 0]
[ebrowse-ms "d_wp" () 0 () "    size_t d_wp[2];" 1946 2  () () 0]
)
([ebrowse-ms "ClauseValue" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "			 const Theorem& clause, int scope)
  :" 997]
[ebrowse-ms "ClauseValue" () 0 () "    ClauseValue(const ClauseValue& c);" 1713 2  () () 0]
[ebrowse-ms "IF_DEBUG" () 0 () "    IF_DEBUG(std" 2316 2  () () 0]
[ebrowse-ms "operator =" () 0 () "    ClauseValue& operator=(const" 1802 2  () "    ClauseValue& operator=(const" 1802]
[ebrowse-ms "~ClauseValue" () 0 () "    ~ClauseValue()" 2606 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ClauseValue::~ClauseValue()" 2137]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SatProof" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/sat_proof.h" "  class SatProof {" 2701"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/sat_proof.h" ]
()([ebrowse-ms "d_nodes" () 0 () "    std::list<SatProofNode*> d_nodes;" 2776 2  () () 0]
[ebrowse-ms "d_root" () 0 () "    SatProofNode* d_root;" 2738 2  () () 0]
)
([ebrowse-ms "SatProof" () 0 () "    SatProof() :" 2801 0  () "    SatProof() :" 2801]
[ebrowse-ms "getRoot" () 0 () "    SatProofNode* getRoot()" 3639 0  () "    SatProofNode* getRoot()" 3639]
[ebrowse-ms "registerLeaf" () 0 () "    SatProofNode* registerLeaf(CVC3" 3080 0  () "    SatProofNode* registerLeaf(CVC3" 3080]
[ebrowse-ms "registerNode" () 0 () "    SatProofNode* registerNode(SatProofNode" 3310 0  () "    SatProofNode* registerNode(SatProofNode" 3310]
[ebrowse-ms "setRoot" () 0 () "    void setRoot(SatProofNode" 3500 0  () "    void setRoot(SatProofNode" 3500]
[ebrowse-ms "~SatProof" () 0 () "    ~SatProof()" 2838 0  () "    ~SatProof()" 2838]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "StatFlag" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "  class StatFlag {" 1023"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" ]
()([ebrowse-ms "d_flag" () 0 () "    bool* d_flag;" 1052 2  () () 0]
)
([ebrowse-ms "StatFlag" () 0 () "    StatFlag(bool& flag) :" 1216 0  () "    StatFlag(bool& flag) :" 1216]
[ebrowse-ms "operator ++" () 0 () "    bool operator++(int" 1647 0  () "    bool operator++(int" 1647]
[ebrowse-ms "operator ++" () 0 () "    bool operator++()" 1495 0  () "    bool operator++()" 1495]
[ebrowse-ms "operator --" () 0 () "    bool operator--(int" 1577 0  () "    bool operator--(int" 1577]
[ebrowse-ms "operator --" () 0 () "    bool operator--()" 1438 0  () "    bool operator--()" 1438]
[ebrowse-ms "operator =" () 0 () "    StatFlag& operator=(bool" 1765 0  () "    StatFlag& operator=(bool" 1765]
[ebrowse-ms "~StatFlag" () 0 () "    ~StatFlag()" 1277 0  () "    ~StatFlag()" 1277]
)
()
()
([ebrowse-ms "operator !=" () 2 () "    friend bool operator!=(const" 1926 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(const" 7313]
[ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 2017 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(const" 1858 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
)
()
()()
][ebrowse-ts [ebrowse-cs "istream" "std::std" 0() () 0() ]
([ebrowse-ts [ebrowse-cs "fdistream" "std" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/fdstream.h" "class fdistream :" 4587"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/fdstream.h" ]
()([ebrowse-ms "buf" () 0 () "    fdinbuf buf;" 4639 1  () () 0]
)
([ebrowse-ms "fdistream" () 0 () "    fdistream (int fd) :" 4668 0  () "    fdistream (int fd) :" 4668]
)
()
()
()
()
()()
])()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "HashLV" "CVC3::VariableManager" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "    class HashLV {" 12886"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "      size_t operator()(VariableValue" 12936 0  () "      size_t operator()(VariableValue" 12936]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "LitPriorityPair" "CVC3::SearchSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "  class LitPriorityPair {" 3084"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" ]
()([ebrowse-ms "d_lit" () 0 () "    SAT::Lit d_lit;" 3104 2  () () 0]
[ebrowse-ms "d_priority" () 0 () "    int d_priority;" 3124 2  () () 0]
)
([ebrowse-ms "LitPriorityPair" () 0 () "      :" 3183 0  () "      :" 3183]
[ebrowse-ms "LitPriorityPair" () 0 () "    LitPriorityPair() {" 3146 2  () "    LitPriorityPair() {" 3146]
[ebrowse-ms "getLit" () 4 () "    SAT::Lit getLit()" 3273 0  () "    SAT::Lit getLit()" 3273]
[ebrowse-ms "getPriority" () 4 () "    int getPriority()" 3319 0  () "    int getPriority()" 3319]
)
()
()
([ebrowse-ms "operator <" () 2 () "    friend bool operator<(const" 3380 0  () "inline bool operator<(const" 10630]
)
()
()()
][ebrowse-ts [ebrowse-cs "TheoremProducer" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem_producer.cpp" ]
()()
([ebrowse-ms "TheoremProducer" () 0 () () 0 0  () "roducer::TheoremProducer(TheoremManager *tm)
  :" 1153]
[ebrowse-ms "newLabel" () 0 () () 0 0  () "Proof TheoremProducer::newLabel(const" 1403]
[ebrowse-ms "newPf" () 0 () () 0 0  () "Proof TheoremProducer::newPf(const" 3605]
[ebrowse-ms "newPf" () 0 () () 0 0  () "Proof TheoremProducer::newPf(const" 3319]
[ebrowse-ms "newPf" () 0 () () 0 0  () "Proof TheoremProducer::newPf(const" 3061]
[ebrowse-ms "newPf" () 0 () () 0 0  () "Proof TheoremProducer::newPf(const" 4893]
[ebrowse-ms "newPf" () 0 () () 0 0  () "Proof TheoremProducer::newPf(const" 7021]
[ebrowse-ms "newPf" () 0 () () 0 0  () "Proof TheoremProducer::newPf(const" 7701]
[ebrowse-ms "newPf" () 0 () () 0 0  () "Proof TheoremProducer::newPf(const" 1807]
[ebrowse-ms "soundError" () 0 () () 0 0  () "void TheoremProducer::soundError(const" 814]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem_producer.h" "  class TheoremProducer {" 3446"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem_producer.h" ]
([ebrowse-ts [ebrowse-cs "ArithTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.h" "  class ArithTheoremProducer:" 879"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.h" ]
()([ebrowse-ms "d_theoryArith" () 0 () "    TheoryArithNew* d_theoryArith;" 963 2  () () 0]
)
([ebrowse-ms "ArithTheoremProducer" () 0 () "heoremManager* tm, TheoryArithNew* theoryArith):" 2432 0  () "heoremManager* tm, TheoryArithNew* theoryArith):" 2432]
[ebrowse-ms "IsIntegerElim" () 1 () "    Theorem IsIntegerElim(const" 11646 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12334 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12263 0  () () 0]
[ebrowse-ms "canonCombineLikeTerms" () 1 () "    virtual Expr canonCombineLikeTerms(const" 5436 0  () () 0]
[ebrowse-ms "canonComboLikeTerms" () 1 () "    virtual Theorem canonComboLikeTerms(const" 7758 0  () () 0]
[ebrowse-ms "canonDivide" () 1 () "    virtual Theorem canonDivide(const" 6414 0  () () 0]
[ebrowse-ms "canonDivideConst" () 1 () "    virtual Theorem canonDivideConst(const" 3900 0  () () 0]
[ebrowse-ms "canonDivideMult" () 1 () "    virtual Theorem canonDivideMult(const" 4019 0  () () 0]
[ebrowse-ms "canonDividePlus" () 1 () "    virtual Theorem canonDividePlus(const" 4273 0  () () 0]
[ebrowse-ms "canonDivideVar" () 1 () "    virtual Theorem canonDivideVar(const" 4381 0  () () 0]
[ebrowse-ms "canonFlattenSum" () 1 () "    virtual Theorem canonFlattenSum(const" 7614 0  () () 0]
[ebrowse-ms "canonInvert" () 1 () "    virtual Theorem canonInvert(const" 5973 0  () () 0]
[ebrowse-ms "canonInvertConst" () 1 () "    virtual Theorem canonInvertConst(const" 5766 0  () () 0]
[ebrowse-ms "canonInvertLeaf" () 1 () "    virtual Theorem canonInvertLeaf(const" 5819 0  () () 0]
[ebrowse-ms "canonInvertMult" () 1 () "    virtual Theorem canonInvertMult(const" 5924 0  () () 0]
[ebrowse-ms "canonInvertPow" () 1 () "    virtual Theorem canonInvertPow(const" 5871 0  () () 0]
[ebrowse-ms "canonMult" () 1 () "    virtual Theorem canonMult(const" 6567 0  () () 0]
[ebrowse-ms "canonMultConstConst" () 1 () "    virtual Theorem canonMultConstConst(const" 7083 0  () () 0]
[ebrowse-ms "canonMultConstMult" () 1 () "    virtual Expr canonMultConstMult(const" 5011 0  () () 0]
[ebrowse-ms "canonMultConstPlus" () 1 () "    virtual Expr canonMultConstPlus(const" 5080 0  () () 0]
[ebrowse-ms "canonMultConstSum" () 1 () "    virtual Theorem canonMultConstSum(const" 7362 0  () () 0]
[ebrowse-ms "canonMultConstTerm" () 1 () "      canonMultConstTerm(const" 7211 0  () () 0]
[ebrowse-ms "canonMultLeafLeaf" () 1 () "    virtual Expr canonMultLeafLeaf(const" 5287 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowMult" () 1 () "    virtual Expr canonMultLeafOrPowMult(const" 5362 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowOrMultPlus" () 1 () "	canonMultLeafOrPowOrMultPlus(const" 5521 0  () () 0]
[ebrowse-ms "canonMultMtermMterm" () 1 () "    virtual Theorem canonMultMtermMterm(const" 5666 0  () () 0]
[ebrowse-ms "canonMultOne" () 1 () "    virtual Theorem canonMultOne(const" 6984 0  () () 0]
[ebrowse-ms "canonMultPlusPlus" () 1 () "    virtual Expr canonMultPlusPlus(const" 5591 0  () () 0]
[ebrowse-ms "canonMultPowLeaf" () 1 () "    virtual Expr canonMultPowLeaf(const" 5217 0  () () 0]
[ebrowse-ms "canonMultPowPow" () 1 () "    virtual Expr canonMultPowPow(const" 5148 0  () () 0]
[ebrowse-ms "canonMultTerm1Term2" () 1 () "    virtual Theorem canonMultTerm1Term2(const" 6812 0  () () 0]
[ebrowse-ms "canonMultTermConst" () 1 () "    virtual Theorem canonMultTermConst(const" 6672 0  () () 0]
[ebrowse-ms "canonMultZero" () 1 () "    virtual Theorem canonMultZero(const" 6907 0  () () 0]
[ebrowse-ms "canonPlus" () 1 () "    virtual Theorem canonPlus(const" 5712 0  () () 0]
[ebrowse-ms "canonPowConst" () 1 () "    virtual Theorem canonPowConst(const" 7486 0  () () 0]
[ebrowse-ms "canonUMinusToDivide" () 1 () "    virtual Theorem canonUMinusToDivide(const" 3764 0  () () 0]
[ebrowse-ms "clashingBounds" () 1 () "    Theorem clashingBounds(const" 12175 0  () () 0]
[ebrowse-ms "compactNonLinearTerm" () 1 () "    Theorem compactNonLinearTerm(const" 13411 0  () () 0]
[ebrowse-ms "constPredicate" () 1 () "    virtual Theorem constPredicate(const" 8772 0  () () 0]
[ebrowse-ms "constRHSGrayShadow" () 0 () "    Rational constRHSGrayShadow(const" 11228 0  () () 0]
[ebrowse-ms "create_t" () 0 () "    Expr create_t(const" 1301 2  () () 0]
[ebrowse-ms "create_t2" () 0 () "    Expr create_t2(const" 1390 2  () () 0]
[ebrowse-ms "create_t3" () 0 () "    Expr create_t3(const" 1511 2  () () 0]
[ebrowse-ms "cycleConflict" () 1 () "    Theorem cycleConflict(const" 12959 0  () () 0]
[ebrowse-ms "darkGrayShadow2ab" () 1 () "    Theorem darkGrayShadow2ab(const" 10290 0  () () 0]
[ebrowse-ms "darkGrayShadow2ba" () 1 () "    Theorem darkGrayShadow2ba(const" 10492 0  () () 0]
[ebrowse-ms "darkShadow" () 0 () "    Expr darkShadow(const" 2844 0  () "    Expr darkShadow(const" 2844]
[ebrowse-ms "diseqToIneq" () 1 () "    Theorem diseqToIneq(const" 12026 0  () () 0]
[ebrowse-ms "divideEqnNonConst" () 1 () "    virtual Theorem divideEqnNonConst(const" 9316 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "    Theorem dummyTheorem(const" 12079 0  () () 0]
[ebrowse-ms "elimPower" () 1 () "    virtual Theorem elimPower(const" 8132 0  () () 0]
[ebrowse-ms "elimPowerConst" () 1 () "    virtual Theorem elimPowerConst(const" 8315 0  () () 0]
[ebrowse-ms "eqElimIntRule" () 1 () "    Theorem eqElimIntRule(const" 11696 0  () () 0]
[ebrowse-ms "eqToIneq" () 1 () "    virtual Theorem eqToIneq(const" 9649 0  () () 0]
[ebrowse-ms "equalLeaves1" () 1 () "    Theorem equalLeaves1(const" 11850 0  () () 0]
[ebrowse-ms "equalLeaves2" () 1 () "    Theorem equalLeaves2(const" 11894 0  () () 0]
[ebrowse-ms "equalLeaves3" () 1 () "    Theorem equalLeaves3(const" 11938 0  () () 0]
[ebrowse-ms "equalLeaves4" () 1 () "    Theorem equalLeaves4(const" 11982 0  () () 0]
[ebrowse-ms "evenPowerEqNegConst" () 1 () "    virtual Theorem evenPowerEqNegConst(const" 8455 0  () () 0]
[ebrowse-ms "expandDarkShadow" () 1 () "    Theorem expandDarkShadow(const" 10695 0  () () 0]
[ebrowse-ms "expandGrayShadow" () 1 () "    Theorem expandGrayShadow(const" 10927 0  () () 0]
[ebrowse-ms "expandGrayShadow0" () 1 () "    Theorem expandGrayShadow0(const" 10753 0  () () 0]
[ebrowse-ms "expandGrayShadowConst" () 1 () "    Theorem expandGrayShadowConst(const" 10989 0  () () 0]
[ebrowse-ms "expandGrayShadowRewrite" () 1 () "    Theorem expandGrayShadowRewrite(const" 13349 0  () () 0]
[ebrowse-ms "f" () 0 () "    Rational f(const" 2257 2  () () 0]
[ebrowse-ms "finiteInterval" () 1 () "    Theorem finiteInterval(const" 10159 0  () () 0]
[ebrowse-ms "flipInequality" () 1 () "    virtual Theorem flipInequality(const" 9743 0  () () 0]
[ebrowse-ms "grayShadow" () 0 () "    Expr grayShadow(const" 3103 0  () "    Expr grayShadow(const" 3103]
[ebrowse-ms "grayShadowConst" () 1 () "    Theorem grayShadowConst(const" 11045 0  () () 0]
[ebrowse-ms "implyDiffLogicBothBounds" () 1 () "    Theorem implyDiffLogicBothBounds(const" 13542 0  () () 0]
[ebrowse-ms "implyEqualities" () 1 () "    Theorem implyEqualities(const" 13036 0  () () 0]
[ebrowse-ms "implyNegatedInequality" () 1 () "    Theorem implyNegatedInequality(const" 12487 0  () () 0]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 1 () "   Theorem implyNegatedInequalityDiffLogic(const" 13242 0  () () 0]
[ebrowse-ms "implyWeakerInequality" () 1 () "    Theorem implyWeakerInequality(const" 12408 0  () () 0]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 1 () "    Theorem implyWeakerInequalityDiffLogic(const" 13127 0  () () 0]
[ebrowse-ms "intEqIrrational" () 1 () "    virtual Theorem intEqIrrational(const" 8588 0  () () 0]
[ebrowse-ms "intEqualityRationalConstant" () 1 () "    Theorem intEqualityRationalConstant(const" 12876 0  () () 0]
[ebrowse-ms "intType" () 0 () "    Type intType()" 2712 0  () "    Type intType()" 2712]
[ebrowse-ms "intVarEqnConst" () 1 () "    Theorem intVarEqnConst(const" 11578 0  () () 0]
[ebrowse-ms "integerSplit" () 1 () "    Theorem integerSplit(const" 12552 0  () () 0]
[ebrowse-ms "isIntConst" () 1 () "    Theorem isIntConst(const" 11808 0  () () 0]
[ebrowse-ms "leftMinusRight" () 1 () "    virtual Theorem leftMinusRight(const" 8968 0  () () 0]
[ebrowse-ms "lessThanToLE" () 1 () "    Theorem lessThanToLE(const" 11320 0  () () 0]
[ebrowse-ms "lessThanToLERewrite" () 1 () "    Theorem lessThanToLERewrite(const" 11451 0  () () 0]
[ebrowse-ms "minusToPlus" () 1 () "    virtual Theorem minusToPlus(const" 3624 0  () () 0]
[ebrowse-ms "modEq" () 0 () "    Rational modEq(const" 1193 2  () () 0]
[ebrowse-ms "monomialModM" () 0 () "    Expr monomialModM(const" 1931 2  () () 0]
[ebrowse-ms "monomialMulF" () 0 () "    Expr monomialMulF(const" 2132 2  () () 0]
[ebrowse-ms "moveSumConstantRight" () 1 () "    virtual Theorem moveSumConstantRight(const" 6325 0  () () 0]
[ebrowse-ms "multEqZero" () 1 () "    virtual Theorem multEqZero(const" 7863 0  () () 0]
[ebrowse-ms "multEqn" () 1 () "    virtual Theorem multEqn(const" 9188 0  () () 0]
[ebrowse-ms "multIneqn" () 1 () "    virtual Theorem multIneqn(const" 9553 0  () () 0]
[ebrowse-ms "negatedInequality" () 1 () "    Theorem negatedInequality(const" 9966 0  () () 0]
[ebrowse-ms "nonLinearIneqSignSplit" () 1 () "    Theorem nonLinearIneqSignSplit(const" 13475 0  () () 0]
[ebrowse-ms "oneElimination" () 1 () "    Theorem oneElimination(const" 12127 0  () () 0]
[ebrowse-ms "plusPredicate" () 1 () "    virtual Theorem plusPredicate(const" 9057 0  () () 0]
[ebrowse-ms "powEqZero" () 1 () "    virtual Theorem powEqZero(const" 7989 0  () () 0]
[ebrowse-ms "powerOfOne" () 1 () "    Theorem powerOfOne(const" 13694 0  () () 0]
[ebrowse-ms "rafineStrictInteger" () 1 () "    Theorem rafineStrictInteger(const" 12704 0  () () 0]
[ebrowse-ms "rat" () 0 () "    Expr rat(Rational" 2600 0  () "    Expr rat(Rational" 2600]
[ebrowse-ms "realShadow" () 1 () "    Theorem realShadow(const" 10006 0  () () 0]
[ebrowse-ms "realShadowEq" () 1 () "    Theorem realShadowEq(const" 10081 0  () () 0]
[ebrowse-ms "realType" () 0 () "    Type realType()" 2655 0  () "    Type realType()" 2655]
[ebrowse-ms "rightMinusLeft" () 1 () "    virtual Theorem rightMinusLeft(const" 8870 0  () () 0]
[ebrowse-ms "simpleIneqInt" () 1 () "    Theorem simpleIneqInt(const" 12787 0  () () 0]
[ebrowse-ms "simplifiedMultExpr" () 1 () "    virtual Expr simplifiedMultExpr(std" 4943 0  () () 0]
[ebrowse-ms "splitGrayShadow" () 1 () "    Theorem splitGrayShadow(const" 10809 0  () () 0]
[ebrowse-ms "splitGrayShadowSmall" () 1 () "    Theorem splitGrayShadowSmall(const" 10870 0  () () 0]
[ebrowse-ms "substitute" () 0 () "    Expr substitute(const" 2316 2  () () 0]
[ebrowse-ms "sumModM" () 0 () "    void sumModM(std" 1813 2  () () 0]
[ebrowse-ms "sumMulF" () 0 () "    void sumMulF(std" 2014 2  () () 0]
[ebrowse-ms "trustedRewrite" () 1 () "    Theorem trustedRewrite(const" 12631 0  () () 0]
[ebrowse-ms "uMinusToMult" () 1 () "    virtual Theorem uMinusToMult(const" 3543 0  () () 0]
[ebrowse-ms "varToMult" () 1 () "    virtual Theorem varToMult(const" 3466 0  () () 0]
)
()
([ebrowse-ms "greaterthan" () 0 () "    static bool greaterthan(const" 4880 0  () () 0]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ArithTheoremProducer3" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer3.h" "  class ArithTheoremProducer3:" 878"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer3.h" ]
()([ebrowse-ms "d_theoryArith" () 0 () "    TheoryArith3* d_theoryArith;" 960 2  () () 0]
)
([ebrowse-ms "ArithTheoremProducer3" () 0 () "(TheoremManager* tm, TheoryArith3* theoryArith):" 2429 0  () "(TheoremManager* tm, TheoryArith3* theoryArith):" 2429]
[ebrowse-ms "IsIntegerElim" () 1 () "    Theorem IsIntegerElim(const" 11640 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12329 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12258 0  () () 0]
[ebrowse-ms "canonCombineLikeTerms" () 1 () "    virtual Expr canonCombineLikeTerms(const" 5431 0  () () 0]
[ebrowse-ms "canonComboLikeTerms" () 1 () "    virtual Theorem canonComboLikeTerms(const" 7753 0  () () 0]
[ebrowse-ms "canonDivide" () 1 () "    virtual Theorem canonDivide(const" 6409 0  () () 0]
[ebrowse-ms "canonDivideConst" () 1 () "    virtual Theorem canonDivideConst(const" 3895 0  () () 0]
[ebrowse-ms "canonDivideMult" () 1 () "    virtual Theorem canonDivideMult(const" 4014 0  () () 0]
[ebrowse-ms "canonDividePlus" () 1 () "    virtual Theorem canonDividePlus(const" 4268 0  () () 0]
[ebrowse-ms "canonDivideVar" () 1 () "    virtual Theorem canonDivideVar(const" 4376 0  () () 0]
[ebrowse-ms "canonFlattenSum" () 1 () "    virtual Theorem canonFlattenSum(const" 7609 0  () () 0]
[ebrowse-ms "canonInvert" () 1 () "    virtual Theorem canonInvert(const" 5968 0  () () 0]
[ebrowse-ms "canonInvertConst" () 1 () "    virtual Theorem canonInvertConst(const" 5761 0  () () 0]
[ebrowse-ms "canonInvertLeaf" () 1 () "    virtual Theorem canonInvertLeaf(const" 5814 0  () () 0]
[ebrowse-ms "canonInvertMult" () 1 () "    virtual Theorem canonInvertMult(const" 5919 0  () () 0]
[ebrowse-ms "canonInvertPow" () 1 () "    virtual Theorem canonInvertPow(const" 5866 0  () () 0]
[ebrowse-ms "canonMult" () 1 () "    virtual Theorem canonMult(const" 6562 0  () () 0]
[ebrowse-ms "canonMultConstConst" () 1 () "    virtual Theorem canonMultConstConst(const" 7078 0  () () 0]
[ebrowse-ms "canonMultConstMult" () 1 () "    virtual Expr canonMultConstMult(const" 5006 0  () () 0]
[ebrowse-ms "canonMultConstPlus" () 1 () "    virtual Expr canonMultConstPlus(const" 5075 0  () () 0]
[ebrowse-ms "canonMultConstSum" () 1 () "    virtual Theorem canonMultConstSum(const" 7357 0  () () 0]
[ebrowse-ms "canonMultConstTerm" () 1 () "      canonMultConstTerm(const" 7206 0  () () 0]
[ebrowse-ms "canonMultLeafLeaf" () 1 () "    virtual Expr canonMultLeafLeaf(const" 5282 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowMult" () 1 () "    virtual Expr canonMultLeafOrPowMult(const" 5357 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowOrMultPlus" () 1 () "	canonMultLeafOrPowOrMultPlus(const" 5516 0  () () 0]
[ebrowse-ms "canonMultMtermMterm" () 1 () "    virtual Theorem canonMultMtermMterm(const" 5661 0  () () 0]
[ebrowse-ms "canonMultOne" () 1 () "    virtual Theorem canonMultOne(const" 6979 0  () () 0]
[ebrowse-ms "canonMultPlusPlus" () 1 () "    virtual Expr canonMultPlusPlus(const" 5586 0  () () 0]
[ebrowse-ms "canonMultPowLeaf" () 1 () "    virtual Expr canonMultPowLeaf(const" 5212 0  () () 0]
[ebrowse-ms "canonMultPowPow" () 1 () "    virtual Expr canonMultPowPow(const" 5143 0  () () 0]
[ebrowse-ms "canonMultTerm1Term2" () 1 () "    virtual Theorem canonMultTerm1Term2(const" 6807 0  () () 0]
[ebrowse-ms "canonMultTermConst" () 1 () "    virtual Theorem canonMultTermConst(const" 6667 0  () () 0]
[ebrowse-ms "canonMultZero" () 1 () "    virtual Theorem canonMultZero(const" 6902 0  () () 0]
[ebrowse-ms "canonPlus" () 1 () "    virtual Theorem canonPlus(const" 5707 0  () () 0]
[ebrowse-ms "canonPowConst" () 1 () "    virtual Theorem canonPowConst(const" 7481 0  () () 0]
[ebrowse-ms "canonUMinusToDivide" () 1 () "    virtual Theorem canonUMinusToDivide(const" 3759 0  () () 0]
[ebrowse-ms "clashingBounds" () 1 () "    Theorem clashingBounds(const" 12170 0  () () 0]
[ebrowse-ms "compactNonLinearTerm" () 1 () "    Theorem compactNonLinearTerm(const" 13402 0  () () 0]
[ebrowse-ms "constPredicate" () 1 () "    virtual Theorem constPredicate(const" 8767 0  () () 0]
[ebrowse-ms "constRHSGrayShadow" () 0 () "    Rational constRHSGrayShadow(const" 11223 0  () () 0]
[ebrowse-ms "create_t" () 0 () "    Expr create_t(const" 1298 2  () () 0]
[ebrowse-ms "create_t2" () 0 () "    Expr create_t2(const" 1387 2  () () 0]
[ebrowse-ms "create_t3" () 0 () "    Expr create_t3(const" 1508 2  () () 0]
[ebrowse-ms "cycleConflict" () 1 () "    Theorem cycleConflict(const" 12950 0  () () 0]
[ebrowse-ms "darkGrayShadow2ab" () 1 () "    Theorem darkGrayShadow2ab(const" 10285 0  () () 0]
[ebrowse-ms "darkGrayShadow2ba" () 1 () "    Theorem darkGrayShadow2ba(const" 10487 0  () () 0]
[ebrowse-ms "darkShadow" () 0 () "    Expr darkShadow(const" 2839 0  () "    Expr darkShadow(const" 2839]
[ebrowse-ms "diseqToIneq" () 1 () "    Theorem diseqToIneq(const" 12021 0  () () 0]
[ebrowse-ms "divideEqnNonConst" () 1 () "    virtual Theorem divideEqnNonConst(const" 9311 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "    Theorem dummyTheorem(const" 12074 0  () () 0]
[ebrowse-ms "elimPower" () 1 () "    virtual Theorem elimPower(const" 8127 0  () () 0]
[ebrowse-ms "elimPowerConst" () 1 () "    virtual Theorem elimPowerConst(const" 8310 0  () () 0]
[ebrowse-ms "eqElimIntRule" () 1 () "    Theorem eqElimIntRule(const" 11691 0  () () 0]
[ebrowse-ms "eqToIneq" () 1 () "    virtual Theorem eqToIneq(const" 9644 0  () () 0]
[ebrowse-ms "equalLeaves1" () 1 () "    Theorem equalLeaves1(const" 11845 0  () () 0]
[ebrowse-ms "equalLeaves2" () 1 () "    Theorem equalLeaves2(const" 11889 0  () () 0]
[ebrowse-ms "equalLeaves3" () 1 () "    Theorem equalLeaves3(const" 11933 0  () () 0]
[ebrowse-ms "equalLeaves4" () 1 () "    Theorem equalLeaves4(const" 11977 0  () () 0]
[ebrowse-ms "evenPowerEqNegConst" () 1 () "    virtual Theorem evenPowerEqNegConst(const" 8450 0  () () 0]
[ebrowse-ms "expandDarkShadow" () 1 () "    Theorem expandDarkShadow(const" 10690 0  () () 0]
[ebrowse-ms "expandGrayShadow" () 1 () "    Theorem expandGrayShadow(const" 10922 0  () () 0]
[ebrowse-ms "expandGrayShadow0" () 1 () "    Theorem expandGrayShadow0(const" 10748 0  () () 0]
[ebrowse-ms "expandGrayShadowConst" () 1 () "    Theorem expandGrayShadowConst(const" 10984 0  () () 0]
[ebrowse-ms "expandGrayShadowRewrite" () 1 () "    Theorem expandGrayShadowRewrite(const" 13340 0  () () 0]
[ebrowse-ms "f" () 0 () "    Rational f(const" 2254 2  () () 0]
[ebrowse-ms "finiteInterval" () 1 () "    Theorem finiteInterval(const" 10154 0  () () 0]
[ebrowse-ms "flipInequality" () 1 () "    virtual Theorem flipInequality(const" 9738 0  () () 0]
[ebrowse-ms "grayShadow" () 0 () "    Expr grayShadow(const" 3098 0  () "    Expr grayShadow(const" 3098]
[ebrowse-ms "grayShadowConst" () 1 () "    Theorem grayShadowConst(const" 11040 0  () () 0]
[ebrowse-ms "implyDiffLogicBothBounds" () 1 () "    Theorem implyDiffLogicBothBounds(const" 13533 0  () () 0]
[ebrowse-ms "implyEqualities" () 1 () "    Theorem implyEqualities(const" 13027 0  () () 0]
[ebrowse-ms "implyNegatedInequality" () 1 () "    Theorem implyNegatedInequality(const" 12482 0  () () 0]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 1 () "   Theorem implyNegatedInequalityDiffLogic(const" 13233 0  () () 0]
[ebrowse-ms "implyWeakerInequality" () 1 () "    Theorem implyWeakerInequality(const" 12403 0  () () 0]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 1 () "    Theorem implyWeakerInequalityDiffLogic(const" 13118 0  () () 0]
[ebrowse-ms "intEqIrrational" () 1 () "    virtual Theorem intEqIrrational(const" 8583 0  () () 0]
[ebrowse-ms "intEqualityRationalConstant" () 1 () "    Theorem intEqualityRationalConstant(const" 12867 0  () () 0]
[ebrowse-ms "intType" () 0 () "    Type intType()" 2707 0  () "    Type intType()" 2707]
[ebrowse-ms "intVarEqnConst" () 1 () "    Theorem intVarEqnConst(const" 11573 0  () () 0]
[ebrowse-ms "integerSplit" () 1 () "    Theorem integerSplit(const" 12547 0  () () 0]
[ebrowse-ms "isIntConst" () 1 () "    Theorem isIntConst(const" 11803 0  () () 0]
[ebrowse-ms "leftMinusRight" () 1 () "    virtual Theorem leftMinusRight(const" 8963 0  () () 0]
[ebrowse-ms "lessThanToLE" () 1 () "    Theorem lessThanToLE(const" 11315 0  () () 0]
[ebrowse-ms "lessThanToLERewrite" () 1 () "    Theorem lessThanToLERewrite(const" 11446 0  () () 0]
[ebrowse-ms "minusToPlus" () 1 () "    virtual Theorem minusToPlus(const" 3619 0  () () 0]
[ebrowse-ms "modEq" () 0 () "    Rational modEq(const" 1190 2  () () 0]
[ebrowse-ms "monomialModM" () 0 () "    Expr monomialModM(const" 1928 2  () () 0]
[ebrowse-ms "monomialMulF" () 0 () "    Expr monomialMulF(const" 2129 2  () () 0]
[ebrowse-ms "moveSumConstantRight" () 1 () "    virtual Theorem moveSumConstantRight(const" 6320 0  () () 0]
[ebrowse-ms "multEqZero" () 1 () "    virtual Theorem multEqZero(const" 7858 0  () () 0]
[ebrowse-ms "multEqn" () 1 () "    virtual Theorem multEqn(const" 9183 0  () () 0]
[ebrowse-ms "multIneqn" () 1 () "    virtual Theorem multIneqn(const" 9548 0  () () 0]
[ebrowse-ms "negatedInequality" () 1 () "    Theorem negatedInequality(const" 9961 0  () () 0]
[ebrowse-ms "nonLinearIneqSignSplit" () 1 () "    Theorem nonLinearIneqSignSplit(const" 13466 0  () () 0]
[ebrowse-ms "oneElimination" () 1 () "    Theorem oneElimination(const" 12122 0  () () 0]
[ebrowse-ms "plusPredicate" () 1 () "    virtual Theorem plusPredicate(const" 9052 0  () () 0]
[ebrowse-ms "powEqZero" () 1 () "    virtual Theorem powEqZero(const" 7984 0  () () 0]
[ebrowse-ms "powerOfOne" () 1 () "    Theorem powerOfOne(const" 13685 0  () () 0]
[ebrowse-ms "rafineStrictInteger" () 1 () "    Theorem rafineStrictInteger(const" 12699 0  () () 0]
[ebrowse-ms "rat" () 0 () "    Expr rat(Rational" 2595 0  () "    Expr rat(Rational" 2595]
[ebrowse-ms "realShadow" () 1 () "    Theorem realShadow(const" 10001 0  () () 0]
[ebrowse-ms "realShadowEq" () 1 () "    Theorem realShadowEq(const" 10076 0  () () 0]
[ebrowse-ms "realType" () 0 () "    Type realType()" 2650 0  () "    Type realType()" 2650]
[ebrowse-ms "rightMinusLeft" () 1 () "    virtual Theorem rightMinusLeft(const" 8865 0  () () 0]
[ebrowse-ms "simpleIneqInt" () 1 () "    Theorem simpleIneqInt(const" 12778 0  () () 0]
[ebrowse-ms "simplifiedMultExpr" () 1 () "    virtual Expr simplifiedMultExpr(std" 4938 0  () () 0]
[ebrowse-ms "splitGrayShadow" () 1 () "    Theorem splitGrayShadow(const" 10804 0  () () 0]
[ebrowse-ms "splitGrayShadowSmall" () 1 () "    Theorem splitGrayShadowSmall(const" 10865 0  () () 0]
[ebrowse-ms "substitute" () 0 () "    Expr substitute(const" 2313 2  () () 0]
[ebrowse-ms "sumModM" () 0 () "    void sumModM(std" 1810 2  () () 0]
[ebrowse-ms "sumMulF" () 0 () "    void sumMulF(std" 2011 2  () () 0]
[ebrowse-ms "trustedRewrite" () 1 () "    Theorem trustedRewrite(const" 12626 0  () () 0]
[ebrowse-ms "uMinusToMult" () 1 () "    virtual Theorem uMinusToMult(const" 3538 0  () () 0]
[ebrowse-ms "varToMult" () 1 () "    virtual Theorem varToMult(const" 3461 0  () () 0]
)
()
([ebrowse-ms "greaterthan" () 0 () "    static bool greaterthan(const" 4875 0  () () 0]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ArithTheoremProducerOld" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer_old.h" "  class ArithTheoremProducerOld:" 864"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer_old.h" ]
()([ebrowse-ms "d_theoryArith" () 0 () "    TheoryArithOld* d_theoryArith;" 948 2  () () 0]
)
([ebrowse-ms "ArithTheoremProducerOld" () 0 () "heoremManager* tm, TheoryArithOld* theoryArith):" 2503 0  () "heoremManager* tm, TheoryArithOld* theoryArith):" 2503]
[ebrowse-ms "IsIntegerElim" () 1 () "    Theorem IsIntegerElim(const" 11661 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12334 0  () () 0]
[ebrowse-ms "addInequalities" () 1 () "    Theorem addInequalities(const" 12263 0  () () 0]
[ebrowse-ms "canonCombineLikeTerms" () 1 () "    virtual Expr canonCombineLikeTerms(const" 5505 0  () () 0]
[ebrowse-ms "canonComboLikeTerms" () 1 () "    virtual Theorem canonComboLikeTerms(const" 7811 0  () () 0]
[ebrowse-ms "canonDivide" () 1 () "    virtual Theorem canonDivide(const" 6477 0  () () 0]
[ebrowse-ms "canonDivideConst" () 1 () "    virtual Theorem canonDivideConst(const" 3971 0  () () 0]
[ebrowse-ms "canonDivideMult" () 1 () "    virtual Theorem canonDivideMult(const" 4090 0  () () 0]
[ebrowse-ms "canonDividePlus" () 1 () "    virtual Theorem canonDividePlus(const" 4344 0  () () 0]
[ebrowse-ms "canonDivideVar" () 1 () "    virtual Theorem canonDivideVar(const" 4452 0  () () 0]
[ebrowse-ms "canonFlattenSum" () 1 () "    virtual Theorem canonFlattenSum(const" 7671 0  () () 0]
[ebrowse-ms "canonInvert" () 1 () "    virtual Theorem canonInvert(const" 6041 0  () () 0]
[ebrowse-ms "canonInvertConst" () 1 () "    virtual Theorem canonInvertConst(const" 5834 0  () () 0]
[ebrowse-ms "canonInvertLeaf" () 1 () "    virtual Theorem canonInvertLeaf(const" 5887 0  () () 0]
[ebrowse-ms "canonInvertMult" () 1 () "    virtual Theorem canonInvertMult(const" 5992 0  () () 0]
[ebrowse-ms "canonInvertPow" () 1 () "    virtual Theorem canonInvertPow(const" 5939 0  () () 0]
[ebrowse-ms "canonMult" () 1 () "    virtual Theorem canonMult(const" 6626 0  () () 0]
[ebrowse-ms "canonMultConstConst" () 1 () "    virtual Theorem canonMultConstConst(const" 7141 0  () () 0]
[ebrowse-ms "canonMultConstMult" () 1 () "    virtual Expr canonMultConstMult(const" 5080 0  () () 0]
[ebrowse-ms "canonMultConstPlus" () 1 () "    virtual Expr canonMultConstPlus(const" 5149 0  () () 0]
[ebrowse-ms "canonMultConstSum" () 1 () "    virtual Theorem canonMultConstSum(const" 7419 0  () () 0]
[ebrowse-ms "canonMultConstTerm" () 1 () "      canonMultConstTerm(const" 7268 0  () () 0]
[ebrowse-ms "canonMultLeafLeaf" () 1 () "    virtual Expr canonMultLeafLeaf(const" 5356 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowMult" () 1 () "    virtual Expr canonMultLeafOrPowMult(const" 5431 0  () () 0]
[ebrowse-ms "canonMultLeafOrPowOrMultPlus" () 1 () "	canonMultLeafOrPowOrMultPlus(const" 5589 0  () () 0]
[ebrowse-ms "canonMultMtermMterm" () 1 () "    virtual Theorem canonMultMtermMterm(const" 5734 0  () () 0]
[ebrowse-ms "canonMultOne" () 1 () "    virtual Theorem canonMultOne(const" 7043 0  () () 0]
[ebrowse-ms "canonMultPlusPlus" () 1 () "    virtual Expr canonMultPlusPlus(const" 5659 0  () () 0]
[ebrowse-ms "canonMultPowLeaf" () 1 () "    virtual Expr canonMultPowLeaf(const" 5286 0  () () 0]
[ebrowse-ms "canonMultPowPow" () 1 () "    virtual Expr canonMultPowPow(const" 5217 0  () () 0]
[ebrowse-ms "canonMultTerm1Term2" () 1 () "    virtual Theorem canonMultTerm1Term2(const" 6871 0  () () 0]
[ebrowse-ms "canonMultTermConst" () 1 () "    virtual Theorem canonMultTermConst(const" 6731 0  () () 0]
[ebrowse-ms "canonMultZero" () 1 () "    virtual Theorem canonMultZero(const" 6966 0  () () 0]
[ebrowse-ms "canonPlus" () 1 () "    virtual Theorem canonPlus(const" 5780 0  () () 0]
[ebrowse-ms "canonPowConst" () 1 () "    virtual Theorem canonPowConst(const" 7543 0  () () 0]
[ebrowse-ms "canonUMinusToDivide" () 1 () "    virtual Theorem canonUMinusToDivide(const" 3835 0  () () 0]
[ebrowse-ms "clashingBounds" () 1 () "    Theorem clashingBounds(const" 12179 0  () () 0]
[ebrowse-ms "compactNonLinearTerm" () 1 () "    Theorem compactNonLinearTerm(const" 13366 0  () () 0]
[ebrowse-ms "constPredicate" () 1 () "    virtual Theorem constPredicate(const" 8821 0  () () 0]
[ebrowse-ms "constRHSGrayShadow" () 0 () "    Rational constRHSGrayShadow(const" 11251 0  () () 0]
[ebrowse-ms "create_t" () 0 () "    Expr create_t(const" 1286 2  () () 0]
[ebrowse-ms "create_t2" () 0 () "    Expr create_t2(const" 1375 2  () () 0]
[ebrowse-ms "create_t3" () 0 () "    Expr create_t3(const" 1496 2  () () 0]
[ebrowse-ms "cycleConflict" () 1 () "    Theorem cycleConflict(const" 12934 0  () () 0]
[ebrowse-ms "darkGrayShadow2ab" () 1 () "    Theorem darkGrayShadow2ab(const" 10329 0  () () 0]
[ebrowse-ms "darkGrayShadow2ba" () 1 () "    Theorem darkGrayShadow2ba(const" 10524 0  () () 0]
[ebrowse-ms "darkShadow" () 0 () "    Expr darkShadow(const" 2915 0  () "    Expr darkShadow(const" 2915]
[ebrowse-ms "diseqToIneq" () 1 () "    Theorem diseqToIneq(const" 12042 0  () () 0]
[ebrowse-ms "divideEqnNonConst" () 1 () "    virtual Theorem divideEqnNonConst(const" 9363 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "    Theorem dummyTheorem(const" 12091 0  () () 0]
[ebrowse-ms "elimPower" () 1 () "    virtual Theorem elimPower(const" 8181 0  () () 0]
[ebrowse-ms "elimPowerConst" () 1 () "    virtual Theorem elimPowerConst(const" 8364 0  () () 0]
[ebrowse-ms "eqElimIntRule" () 1 () "    Theorem eqElimIntRule(const" 11712 0  () () 0]
[ebrowse-ms "eqToIneq" () 1 () "    virtual Theorem eqToIneq(const" 9696 0  () () 0]
[ebrowse-ms "equalLeaves1" () 1 () "    Theorem equalLeaves1(const" 11866 0  () () 0]
[ebrowse-ms "equalLeaves2" () 1 () "    Theorem equalLeaves2(const" 11910 0  () () 0]
[ebrowse-ms "equalLeaves3" () 1 () "    Theorem equalLeaves3(const" 11954 0  () () 0]
[ebrowse-ms "equalLeaves4" () 1 () "    Theorem equalLeaves4(const" 11998 0  () () 0]
[ebrowse-ms "evenPowerEqNegConst" () 1 () "    virtual Theorem evenPowerEqNegConst(const" 8504 0  () () 0]
[ebrowse-ms "expandDarkShadow" () 1 () "    Theorem expandDarkShadow(const" 10718 0  () () 0]
[ebrowse-ms "expandGrayShadow" () 1 () "    Theorem expandGrayShadow(const" 10950 0  () () 0]
[ebrowse-ms "expandGrayShadow0" () 1 () "    Theorem expandGrayShadow0(const" 10776 0  () () 0]
[ebrowse-ms "expandGrayShadowConst" () 1 () "    Theorem expandGrayShadowConst(const" 11012 0  () () 0]
[ebrowse-ms "expandGrayShadowRewrite" () 1 () "    Theorem expandGrayShadowRewrite(const" 13308 0  () () 0]
[ebrowse-ms "f" () 0 () "    Rational f(const" 2242 2  () () 0]
[ebrowse-ms "finiteInterval" () 1 () "    Theorem finiteInterval(const" 10202 0  () () 0]
[ebrowse-ms "flipInequality" () 1 () "    virtual Theorem flipInequality(const" 9790 0  () () 0]
[ebrowse-ms "getLeaves" () 0 () "    void getLeaves(const" 2360 2  () () 0]
[ebrowse-ms "grayShadow" () 0 () "    Expr grayShadow(const" 3174 0  () "    Expr grayShadow(const" 3174]
[ebrowse-ms "grayShadowConst" () 1 () "    Theorem grayShadowConst(const" 11068 0  () () 0]
[ebrowse-ms "implyDiffLogicBothBounds" () 1 () "    Theorem implyDiffLogicBothBounds(const" 13489 0  () () 0]
[ebrowse-ms "implyEqualities" () 1 () "    Theorem implyEqualities(const" 13007 0  () () 0]
[ebrowse-ms "implyNegatedInequality" () 1 () "    Theorem implyNegatedInequality(const" 12479 0  () () 0]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 1 () "   Theorem implyNegatedInequalityDiffLogic(const" 13205 0  () () 0]
[ebrowse-ms "implyWeakerInequality" () 1 () "    Theorem implyWeakerInequality(const" 12404 0  () () 0]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 1 () "    Theorem implyWeakerInequalityDiffLogic(const" 13094 0  () () 0]
[ebrowse-ms "intEqIrrational" () 1 () "    virtual Theorem intEqIrrational(const" 8637 0  () () 0]
[ebrowse-ms "intEqualityRationalConstant" () 1 () "    Theorem intEqualityRationalConstant(const" 12855 0  () () 0]
[ebrowse-ms "intType" () 0 () "    Type intType()" 2783 0  () "    Type intType()" 2783]
[ebrowse-ms "intVarEqnConst" () 1 () "    Theorem intVarEqnConst(const" 11594 0  () () 0]
[ebrowse-ms "integerSplit" () 1 () "    Theorem integerSplit(const" 12544 0  () () 0]
[ebrowse-ms "isIntConst" () 1 () "    Theorem isIntConst(const" 11824 0  () () 0]
[ebrowse-ms "leftMinusRight" () 1 () "    virtual Theorem leftMinusRight(const" 9017 0  () () 0]
[ebrowse-ms "lessThanToLE" () 1 () "    Theorem lessThanToLE(const" 11343 0  () () 0]
[ebrowse-ms "lessThanToLERewrite" () 1 () "    Theorem lessThanToLERewrite(const" 11470 0  () () 0]
[ebrowse-ms "minusToPlus" () 1 () "    virtual Theorem minusToPlus(const" 3695 0  () () 0]
[ebrowse-ms "modEq" () 0 () "    Rational modEq(const" 1178 2  () () 0]
[ebrowse-ms "monomialModM" () 0 () "    Expr monomialModM(const" 1916 2  () () 0]
[ebrowse-ms "monomialMulF" () 0 () "    Expr monomialMulF(const" 2117 2  () () 0]
[ebrowse-ms "moveSumConstantRight" () 1 () "    virtual Theorem moveSumConstantRight(const" 6388 0  () () 0]
[ebrowse-ms "multEqZero" () 1 () "    virtual Theorem multEqZero(const" 7912 0  () () 0]
[ebrowse-ms "multEqn" () 1 () "    virtual Theorem multEqn(const" 9235 0  () () 0]
[ebrowse-ms "multIneqn" () 1 () "    virtual Theorem multIneqn(const" 9600 0  () () 0]
[ebrowse-ms "negatedInequality" () 1 () "    Theorem negatedInequality(const" 10009 0  () () 0]
[ebrowse-ms "nonLinearIneqSignSplit" () 1 () "    Theorem nonLinearIneqSignSplit(const" 13426 0  () () 0]
[ebrowse-ms "oneElimination" () 1 () "    Theorem oneElimination(const" 12135 0  () () 0]
[ebrowse-ms "plusPredicate" () 1 () "    virtual Theorem plusPredicate(const" 9106 0  () () 0]
[ebrowse-ms "powEqZero" () 1 () "    virtual Theorem powEqZero(const" 8038 0  () () 0]
[ebrowse-ms "powerOfOne" () 1 () "    Theorem powerOfOne(const" 13633 0  () () 0]
[ebrowse-ms "rafineStrictInteger" () 1 () "    Theorem rafineStrictInteger(const" 12691 0  () () 0]
[ebrowse-ms "rat" () 0 () "    Expr rat(Rational" 2671 0  () "    Expr rat(Rational" 2671]
[ebrowse-ms "realShadow" () 1 () "    Theorem realShadow(const" 10049 0  () () 0]
[ebrowse-ms "realShadowEq" () 1 () "    Theorem realShadowEq(const" 10124 0  () () 0]
[ebrowse-ms "realType" () 0 () "    Type realType()" 2726 0  () "    Type realType()" 2726]
[ebrowse-ms "rewriteLeavesConst" () 1 () "    Theorem rewriteLeavesConst(const" 13681 0  () () 0]
[ebrowse-ms "rightMinusLeft" () 1 () "    virtual Theorem rightMinusLeft(const" 8919 0  () () 0]
[ebrowse-ms "simpleIneqInt" () 1 () "    Theorem simpleIneqInt(const" 12770 0  () () 0]
[ebrowse-ms "simplifiedMultExpr" () 1 () "    virtual Expr simplifiedMultExpr(std" 5012 0  () () 0]
[ebrowse-ms "splitGrayShadow" () 1 () "    Theorem splitGrayShadow(const" 10832 0  () () 0]
[ebrowse-ms "splitGrayShadowSmall" () 1 () "    Theorem splitGrayShadowSmall(const" 10893 0  () () 0]
[ebrowse-ms "substitute" () 0 () "    Expr substitute(const" 2301 2  () () 0]
[ebrowse-ms "sumModM" () 0 () "    void sumModM(std" 1798 2  () () 0]
[ebrowse-ms "sumMulF" () 0 () "    void sumMulF(std" 1999 2  () () 0]
[ebrowse-ms "trustedRewrite" () 1 () "    Theorem trustedRewrite(const" 12619 0  () () 0]
[ebrowse-ms "uMinusToMult" () 1 () "    virtual Theorem uMinusToMult(const" 3614 0  () () 0]
[ebrowse-ms "varToMult" () 1 () "    virtual Theorem varToMult(const" 3537 0  () () 0]
)
()
([ebrowse-ms "greaterthan" () 0 () "    static bool greaterthan(const" 4949 0  () () 0]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ArrayTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/array_theorem_producer.h" "  class ArrayTheoremProducer:" 1007() ]
()([ebrowse-ms "d_theoryArray" () 0 () "    TheoryArray* d_theoryArray;" 1099 2  () () 0]
)
([ebrowse-ms "ArrayTheoremProducer" () 0 () " ArrayTheoremProducer(TheoryArray* theoryArray);" 1166 0  () () 0]
[ebrowse-ms "arrayNotEq" () 1 () "    Theorem arrayNotEq(const" 3289 0  () () 0]
[ebrowse-ms "interchangeIndices" () 1 () "    Theorem interchangeIndices(const" 3050 0  () () 0]
[ebrowse-ms "liftReadIte" () 1 () "    Theorem liftReadIte(const" 3209 0  () () 0]
[ebrowse-ms "readArrayLiteral" () 1 () "    Theorem readArrayLiteral(const" 3168 0  () () 0]
[ebrowse-ms "rewriteReadWrite" () 1 () "    Theorem rewriteReadWrite(const" 2270 0  () () 0]
[ebrowse-ms "rewriteReadWrite2" () 1 () "    Theorem rewriteReadWrite2(const" 2549 0  () () 0]
[ebrowse-ms "rewriteRedundantWrite1" () 1 () "    Theorem rewriteRedundantWrite1(const" 2683 0  () () 0]
[ebrowse-ms "rewriteRedundantWrite2" () 1 () "    Theorem rewriteRedundantWrite2(const" 2857 0  () () 0]
[ebrowse-ms "rewriteSameStore" () 1 () "    Theorem rewriteSameStore(const" 1889 0  () () 0]
[ebrowse-ms "rewriteWriteWrite" () 1 () "    Theorem rewriteWriteWrite(const" 2111 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "BitvectorTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.h" "  class BitvectorTheoremProducer:" 1142"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.h" ]
()([ebrowse-ms "d_bvOne" () 0 () "    Expr d_bvOne;" 1396 2  () () 0]
[ebrowse-ms "d_bvZero" () 0 () "    Expr d_bvZero;" 1338 2  () () 0]
[ebrowse-ms "d_theoryBitvector" () 0 () "    TheoryBitvector* d_theoryBitvector;" 1250 2  () () 0]
)
([ebrowse-ms "BVMult_order_subterms" () 1 () "    virtual Theorem BVMult_order_subterms( const" 22219 0  () () 0]
[ebrowse-ms "BitvectorTheoremProducer" () 0 () "eoremProducer(TheoryBitvector* theoryBitvector);" 3247 0  () () 0]
[ebrowse-ms "MarkNonSolvableEq" () 1 () "    virtual Theorem MarkNonSolvableEq( const" 22374 0  () () 0]
[ebrowse-ms "bitBlastDisEqnRule" () 1 () "    Theorem bitBlastDisEqnRule(const" 4905 0  () () 0]
[ebrowse-ms "bitBlastEqnRule" () 1 () "    Theorem bitBlastEqnRule(const" 4466 0  () () 0]
[ebrowse-ms "bitExtractAllToConstEq" () 1 () "    Theorem bitExtractAllToConstEq(std" 7030 0  () () 0]
[ebrowse-ms "bitExtractBVASHR" () 1 () "    Theorem bitExtractBVASHR(const" 11754 0  () () 0]
[ebrowse-ms "bitExtractBVLSHR" () 1 () "    Theorem bitExtractBVLSHR(const" 11474 0  () () 0]
[ebrowse-ms "bitExtractBVMult" () 1 () "    Theorem bitExtractBVMult(const" 8598 0  () () 0]
[ebrowse-ms "bitExtractBVPlus" () 1 () "    Theorem bitExtractBVPlus(const" 9580 0  () () 0]
[ebrowse-ms "bitExtractBVPlusPreComputed" () 1 () "    Theorem bitExtractBVPlusPreComputed(const" 9733 0  () () 0]
[ebrowse-ms "bitExtractBVSHL" () 1 () "    Theorem bitExtractBVSHL(const" 11195 0  () () 0]
[ebrowse-ms "bitExtractBitwise" () 1 () "    Theorem bitExtractBitwise(const" 10460 0  () () 0]
[ebrowse-ms "bitExtractConcatenation" () 1 () "    Theorem bitExtractConcatenation(const" 8130 0  () () 0]
[ebrowse-ms "bitExtractConstBVMult" () 1 () "    Theorem bitExtractConstBVMult(const" 8365 0  () () 0]
[ebrowse-ms "bitExtractConstant" () 1 () "    Theorem bitExtractConstant(const" 7662 0  () () 0]
[ebrowse-ms "bitExtractExtraction" () 1 () "    Theorem bitExtractExtraction(const" 8907 0  () () 0]
[ebrowse-ms "bitExtractFixedLeftShift" () 1 () "    Theorem bitExtractFixedLeftShift(const" 10863 0  () () 0]
[ebrowse-ms "bitExtractFixedRightShift" () 1 () "    Theorem bitExtractFixedRightShift(const" 10926 0  () () 0]
[ebrowse-ms "bitExtractNot" () 1 () "    Theorem bitExtractNot(const" 10360 0  () () 0]
[ebrowse-ms "bitExtractRewrite" () 1 () "    Theorem bitExtractRewrite(const" 7282 0  () () 0]
[ebrowse-ms "bitExtractSXRule" () 1 () "    Theorem bitExtractSXRule(const" 12174 0  () () 0]
[ebrowse-ms "bitExtractToExtract" () 1 () "    Theorem bitExtractToExtract(const" 7161 0  () () 0]
[ebrowse-ms "bitblastBVMult" () 1 () "    virtual Theorem bitblastBVMult(const" 23686 0  () () 0]
[ebrowse-ms "bitblastBVPlus" () 1 () "    virtual Theorem bitblastBVPlus(const" 24225 0  () () 0]
[ebrowse-ms "bitvectorFalseRule" () 1 () "    Theorem bitvectorFalseRule(const" 3905 0  () () 0]
[ebrowse-ms "bitvectorTrueRule" () 1 () "    Theorem bitvectorTrueRule(const" 4062 0  () () 0]
[ebrowse-ms "bitwiseConcat" () 1 () "    Theorem bitwiseConcat(const" 17203 0  () () 0]
[ebrowse-ms "bitwiseConst" () 1 () "    Theorem bitwiseConst(const" 17064 0  () () 0]
[ebrowse-ms "bitwiseConstElim" () 1 () "    Theorem bitwiseConstElim(const" 17548 0  () () 0]
[ebrowse-ms "bitwiseFlatten" () 1 () "    Theorem bitwiseFlatten(const" 17290 0  () () 0]
[ebrowse-ms "buildPlusTerm" () 0 () "    Expr buildPlusTerm(int" 2956 2  () () 0]
[ebrowse-ms "bvConstIneqn" () 1 () "    Theorem bvConstIneqn(const" 6468 0  () () 0]
[ebrowse-ms "bvConstMultAssocRule" () 1 () "    Theorem bvConstMultAssocRule(const" 14283 0  () () 0]
[ebrowse-ms "bvMultAssocRule" () 1 () "    Theorem bvMultAssocRule(const" 14327 0  () () 0]
[ebrowse-ms "bvMultDistRule" () 1 () "    Theorem bvMultDistRule(const" 14370 0  () () 0]
[ebrowse-ms "bvOne" () 4 () "    const Expr& bvOne()" 1546 2  () "    const Expr& bvOne()" 1546]
[ebrowse-ms "bvPlusAssociativityRule" () 1 () "    Theorem bvPlusAssociativityRule(const" 10114 0  () () 0]
[ebrowse-ms "bvSDivRewrite" () 1 () "    virtual Theorem bvSDivRewrite(const" 24556 0  () () 0]
[ebrowse-ms "bvSModRewrite" () 1 () "    virtual Theorem bvSModRewrite(const" 24830 0  () () 0]
[ebrowse-ms "bvSRemRewrite" () 1 () "    virtual Theorem bvSRemRewrite(const" 24696 0  () () 0]
[ebrowse-ms "bvUDivConst" () 1 () "    virtual Theorem bvUDivConst(const" 22923 0  () () 0]
[ebrowse-ms "bvUDivTheorem" () 1 () "    virtual Theorem bvUDivTheorem(const" 23098 0  () () 0]
[ebrowse-ms "bvURemConst" () 1 () "    virtual Theorem bvURemConst(const" 23198 0  () () 0]
[ebrowse-ms "bvURemRewrite" () 1 () "    virtual Theorem bvURemRewrite(const" 23320 0  () () 0]
[ebrowse-ms "bvZero" () 4 () "    const Expr& bvZero()" 1458 2  () "    const Expr& bvZero()" 1458]
[ebrowse-ms "bvashrToConcat" () 1 () "    Theorem bvashrToConcat(const" 13070 0  () () 0]
[ebrowse-ms "bvlshrToConcat" () 1 () "    Theorem bvlshrToConcat(const" 12987 0  () () 0]
[ebrowse-ms "bvmultBVUminus" () 1 () "    Theorem bvmultBVUminus(const" 14983 0  () () 0]
[ebrowse-ms "bvmultConst" () 1 () "    Theorem bvmultConst(const" 18811 0  () () 0]
[ebrowse-ms "bvplusConst" () 1 () "    Theorem bvplusConst(const" 18654 0  () () 0]
[ebrowse-ms "bvplusZeroConcatRule" () 1 () "    Theorem bvplusZeroConcatRule(const" 13764 0  () () 0]
[ebrowse-ms "bvshlSplit" () 1 () "    Theorem bvshlSplit(const" 12899 0  () () 0]
[ebrowse-ms "bvshlToConcat" () 1 () "    Theorem bvshlToConcat(const" 12801 0  () () 0]
[ebrowse-ms "bvuminusBVConst" () 1 () "    Theorem bvuminusBVConst(const" 14812 0  () () 0]
[ebrowse-ms "bvuminusBVMult" () 1 () "    Theorem bvuminusBVMult(const" 14855 0  () () 0]
[ebrowse-ms "bvuminusBVPlus" () 1 () "    Theorem bvuminusBVPlus(const" 15148 0  () () 0]
[ebrowse-ms "bvuminusBVUminus" () 1 () "    Theorem bvuminusBVUminus(const" 14900 0  () () 0]
[ebrowse-ms "bvuminusToBVPlus" () 1 () "    Theorem bvuminusToBVPlus(const" 15049 0  () () 0]
[ebrowse-ms "bvuminusVar" () 1 () "    Theorem bvuminusVar(const" 14940 0  () () 0]
[ebrowse-ms "canonBVEQ" () 1 () "    virtual Theorem canonBVEQ( const" 21891 0  () () 0]
[ebrowse-ms "canonBVMult" () 1 () "    virtual Theorem canonBVMult( const" 20964 0  () () 0]
[ebrowse-ms "canonBVPlus" () 1 () "    virtual Theorem canonBVPlus( const" 21295 0  () () 0]
[ebrowse-ms "canonBVUMinus" () 1 () "    virtual Theorem canonBVUMinus( const" 21478 0  () () 0]
[ebrowse-ms "chopConcat" () 0 () "    Expr chopConcat(int" 3043 2  () () 0]
[ebrowse-ms "collectLikeTermsOfPlus" () 0 () "    void collectLikeTermsOfPlus(const" 1833 2  () () 0]
[ebrowse-ms "collectOneTermOfPlus" () 0 () "    void collectOneTermOfPlus(const" 2130 2  () () 0]
[ebrowse-ms "combineLikeTermsRule" () 1 () "    Theorem combineLikeTermsRule(const" 14461 0  () () 0]
[ebrowse-ms "computeCarry" () 0 () "    Expr computeCarry(const" 20133 0  () () 0]
[ebrowse-ms "computeCarryPreComputed" () 0 () "    Expr computeCarryPreComputed(const" 20288 0  () () 0]
[ebrowse-ms "concatConst" () 1 () "    Theorem concatConst(const" 18104 0  () () 0]
[ebrowse-ms "concatFlatten" () 1 () "    Theorem concatFlatten(const" 18229 0  () () 0]
[ebrowse-ms "concatMergeExtract" () 1 () "    Theorem concatMergeExtract(const" 18355 0  () () 0]
[ebrowse-ms "constEq" () 1 () "    virtual Theorem constEq(const" 25337 0  () () 0]
[ebrowse-ms "constMultToPlus" () 1 () "    Theorem constMultToPlus(const" 13611 0  () () 0]
[ebrowse-ms "constWidthLeftShiftToConcat" () 1 () "    Theorem constWidthLeftShiftToConcat(const" 12604 0  () () 0]
[ebrowse-ms "createNewPlusCollection" () 0 () "    void createNewPlusCollection(const" 2432 2  () () 0]
[ebrowse-ms "distributive_rule" () 1 () "    virtual Theorem distributive_rule( const" 22030 0  () () 0]
[ebrowse-ms "eqConst" () 1 () "    Theorem eqConst(const" 12281 0  () () 0]
[ebrowse-ms "eqToBits" () 1 () "    Theorem eqToBits(const" 12398 0  () () 0]
[ebrowse-ms "expandTypePred" () 1 () "    Theorem expandTypePred(const" 19200 0  () () 0]
[ebrowse-ms "extractAnd" () 1 () "    Theorem extractAnd(const" 16021 0  () () 0]
[ebrowse-ms "extractBVMult" () 1 () "    Theorem extractBVMult(const" 14547 0  () () 0]
[ebrowse-ms "extractBVPlus" () 1 () "    Theorem extractBVPlus(const" 14589 0  () () 0]
[ebrowse-ms "extractBitwise" () 1 () "    Theorem extractBitwise(const" 15874 0  () () 0]
[ebrowse-ms "extractConcat" () 1 () "    Theorem extractConcat(const" 15765 0  () () 0]
[ebrowse-ms "extractConst" () 1 () "    Theorem extractConst(const" 15464 0  () () 0]
[ebrowse-ms "extractExtract" () 1 () "    Theorem extractExtract(const" 15646 0  () () 0]
[ebrowse-ms "extractNeg" () 1 () "    Theorem extractNeg(const" 16232 0  () () 0]
[ebrowse-ms "extractOr" () 1 () "    Theorem extractOr(const" 16133 0  () () 0]
[ebrowse-ms "extractWhole" () 1 () "    Theorem extractWhole(const" 15539 0  () () 0]
[ebrowse-ms "flattenBVPlus" () 1 () "    Theorem flattenBVPlus(const" 14412 0  () () 0]
[ebrowse-ms "flipBVMult" () 1 () "    Theorem flipBVMult(const" 14072 0  () () 0]
[ebrowse-ms "generalIneqn" () 1 () "    Theorem generalIneqn(const" 6520 0  () () 0]
[ebrowse-ms "getPlusTerms" () 0 () "    void getPlusTerms(const" 2866 2  () () 0]
[ebrowse-ms "isolate_var" () 1 () "    virtual Theorem isolate_var(const" 20629 0  () () 0]
[ebrowse-ms "iteBVnegRule" () 1 () "    Theorem iteBVnegRule(const" 14767 0  () () 0]
[ebrowse-ms "iteExtractRule" () 1 () "    Theorem iteExtractRule(const" 14685 0  () () 0]
[ebrowse-ms "leftShiftToConcat" () 1 () "    Theorem leftShiftToConcat(const" 12498 0  () () 0]
[ebrowse-ms "lhsEqRhsIneqn" () 1 () "    Theorem lhsEqRhsIneqn(const" 6380 0  () () 0]
[ebrowse-ms "lhsMinusRhsRule" () 1 () "    Theorem lhsMinusRhsRule(const" 14505 0  () () 0]
[ebrowse-ms "liftConcatBVMult" () 1 () "    virtual Theorem liftConcatBVMult(const" 20794 0  () () 0]
[ebrowse-ms "liftConcatBVPlus" () 1 () "    virtual Theorem liftConcatBVPlus(const" 21122 0  () () 0]
[ebrowse-ms "negBVand" () 1 () "    Theorem negBVand(const" 16719 0  () () 0]
[ebrowse-ms "negBVor" () 1 () "    Theorem negBVor(const" 16807 0  () () 0]
[ebrowse-ms "negBVxnor" () 1 () "    Theorem negBVxnor(const" 16950 0  () () 0]
[ebrowse-ms "negBVxor" () 1 () "    Theorem negBVxor(const" 16878 0  () () 0]
[ebrowse-ms "negConcat" () 1 () "    Theorem negConcat(const" 16467 0  () () 0]
[ebrowse-ms "negConst" () 1 () "    Theorem negConst(const" 16354 0  () () 0]
[ebrowse-ms "negElim" () 1 () "    Theorem negElim(const" 16630 0  () () 0]
[ebrowse-ms "negNeg" () 1 () "    Theorem negNeg(const" 16550 0  () () 0]
[ebrowse-ms "notBVEQ1Rule" () 1 () "    Theorem notBVEQ1Rule(const" 6093 0  () () 0]
[ebrowse-ms "notBVLTRule" () 1 () "    Theorem notBVLTRule(const" 6257 0  () () 0]
[ebrowse-ms "okToSplit" () 0 () "    bool okToSplit(const" 3121 2  () () 0]
[ebrowse-ms "oneBVAND" () 1 () "    virtual Theorem oneBVAND(const" 25218 0  () () 0]
[ebrowse-ms "oneCoeffBVMult" () 1 () "    Theorem oneCoeffBVMult(const" 14033 0  () () 0]
[ebrowse-ms "pad" () 0 () "    Expr pad(int" 14147 0  () () 0]
[ebrowse-ms "padBVLTRule" () 1 () "    Theorem padBVLTRule(const" 5320 0  () () 0]
[ebrowse-ms "padBVMult" () 1 () "    Theorem padBVMult(const" 14234 0  () () 0]
[ebrowse-ms "padBVPlus" () 1 () "    Theorem padBVPlus(const" 14196 0  () () 0]
[ebrowse-ms "padBVSLTRule" () 1 () "    Theorem padBVSLTRule(const" 5442 0  () () 0]
[ebrowse-ms "processExtract" () 1 () "    virtual Theorem processExtract(const" 21795 0  () () 0]
[ebrowse-ms "rat" () 0 () "    Expr rat(const" 19456 0  () "    Expr rat(const" 19456]
[ebrowse-ms "repeatRule" () 1 () "    virtual Theorem repeatRule(const" 22592 0  () () 0]
[ebrowse-ms "rewriteBVCOMP" () 1 () "    Theorem rewriteBVCOMP(const" 13376 0  () () 0]
[ebrowse-ms "rewriteBVSub" () 1 () "    Theorem rewriteBVSub(const" 13444 0  () () 0]
[ebrowse-ms "rewriteNAND" () 1 () "    Theorem rewriteNAND(const" 13221 0  () () 0]
[ebrowse-ms "rewriteNOR" () 1 () "    Theorem rewriteNOR(const" 13289 0  () () 0]
[ebrowse-ms "rewriteXNOR" () 1 () "    Theorem rewriteXNOR(const" 13151 0  () () 0]
[ebrowse-ms "rightShiftToConcat" () 1 () "    Theorem rightShiftToConcat(const" 12715 0  () () 0]
[ebrowse-ms "rotlRule" () 1 () "    virtual Theorem rotlRule(const" 22672 0  () () 0]
[ebrowse-ms "rotrRule" () 1 () "    virtual Theorem rotrRule(const" 22751 0  () () 0]
[ebrowse-ms "sameKidCheck" () 0 () "    int sameKidCheck(const" 17942 0  () () 0]
[ebrowse-ms "signBVLTRule" () 1 () "    Theorem signBVLTRule(const" 5932 0  () () 0]
[ebrowse-ms "signExtendRule" () 1 () "    Theorem signExtendRule(const" 5218 0  () () 0]
[ebrowse-ms "sumNormalizedElements" () 0 () "    Expr sumNormalizedElements(int" 2777 2  () () 0]
[ebrowse-ms "typePredBit" () 1 () "    Theorem typePredBit(const" 19078 0  () () 0]
[ebrowse-ms "zeroBVOR" () 1 () "    virtual Theorem zeroBVOR(const" 25017 0  () () 0]
[ebrowse-ms "zeroCoeffBVMult" () 1 () "    Theorem zeroCoeffBVMult(const" 13990 0  () () 0]
[ebrowse-ms "zeroExtendRule" () 1 () "    virtual Theorem zeroExtendRule(const" 22508 0  () () 0]
[ebrowse-ms "zeroLeq" () 1 () "    Theorem zeroLeq(const" 6427 0  () () 0]
[ebrowse-ms "zeroPaddingRule" () 1 () "    Theorem zeroPaddingRule(const" 12121 0  () () 0]
[ebrowse-ms "~BitvectorTheoremProducer" () 0 () "    ~BitvectorTheoremProducer()" 3298 0  () "    ~BitvectorTheoremProducer()" 3298]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNF_TheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_theorem_producer.h" "    :" 819"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_theorem_producer.h" ]
()([ebrowse-ms "d_flags" () 0 () "    const CLFlags& d_flags;" 896 2  () () 0]
[ebrowse-ms "d_smartClauses" () 0 () "    const bool& d_smartClauses;" 928 2  () () 0]
)
([ebrowse-ms "CNFAddUnit" () 1 () "    Theorem CNFAddUnit(const" 1365 0  () () 0]
[ebrowse-ms "CNFConvert" () 1 () "    Theorem CNFConvert(const" 1409 0  () () 0]
[ebrowse-ms "CNFITEtranslate" () 1 () "    Theorem CNFITEtranslate(const" 1635 0  () () 0]
[ebrowse-ms "CNF_TheoremProducer" () 0 () "      :" 978 0  () "      :" 978]
[ebrowse-ms "CNFtranslate" () 1 () "    Theorem CNFtranslate(const" 1522 0  () () 0]
[ebrowse-ms "getSmartClauses" () 0 () "    void getSmartClauses(const" 1174 0  () () 0]
[ebrowse-ms "ifLiftRule" () 1 () "    Theorem ifLiftRule(const" 1469 0  () () 0]
[ebrowse-ms "learnedClauses" () 1 () "    void learnedClauses(const" 1251 0  () () 0]
[ebrowse-ms "~CNF_TheoremProducer" () 0 () "    ~CNF_TheoremProducer()" 1138 0  () "    ~CNF_TheoremProducer()" 1138]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CommonTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/common_theorem_producer.h" "  class CommonTheoremProducer:" 1097"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/common_theorem_producer.h" ]
()([ebrowse-ms "d_skolemVars" () 0 () "    CDMap<Expr, Theorem> d_skolemVars;" 1560 2  () () 0]
[ebrowse-ms "d_skolem_axioms" () 0 () "    std::vector<Theorem> d_skolem_axioms;" 1304 2  () () 0]
[ebrowse-ms "d_skolemized_thms" () 0 () "    CDMap<Expr, Theorem> d_skolemized_thms;" 1461 2  () () 0]
)
([ebrowse-ms "CommonTheoremProducer" () 0 () "    CommonTheoremProducer(TheoremManager* tm);" 1734 0  () () 0]
[ebrowse-ms "ackermann" () 1 () "    Theorem ackermann(const" 4768 0  () () 0]
[ebrowse-ms "andElim" () 1 () "    Theorem andElim(const" 3549 0  () () 0]
[ebrowse-ms "andIntro" () 1 () "    Theorem andIntro(const" 3656 0  () () 0]
[ebrowse-ms "andIntro" () 1 () "    Theorem andIntro(const" 3596 0  () () 0]
[ebrowse-ms "assumpRule" () 1 () "    Theorem assumpRule(const" 1995 0  () () 0]
[ebrowse-ms "clearSkolemAxioms" () 1 () "    void clearSkolemAxioms()" 4936 0  () "    void clearSkolemAxioms()" 4936]
[ebrowse-ms "contradictionRule" () 1 () "    Theorem contradictionRule(const" 3053 0  () () 0]
[ebrowse-ms "excludedMiddle" () 1 () "    Theorem excludedMiddle(const" 3121 0  () () 0]
[ebrowse-ms "findITE" () 0 () "    void findITE(const" 1623 2  () () 0]
[ebrowse-ms "getSkolemAxioms" () 1 () "    std::vector<Theorem>& getSkolemAxioms()" 4879 0  () "    std::vector<Theorem>& getSkolemAxioms()" 4879]
[ebrowse-ms "iffContrapositive" () 1 () "    Theorem iffContrapositive(const" 3336 0  () () 0]
[ebrowse-ms "iffFalseElim" () 1 () "    Theorem iffFalseElim(const" 3287 0  () () 0]
[ebrowse-ms "iffMP" () 1 () "    Theorem iffMP(const" 3417 0  () () 0]
[ebrowse-ms "iffNotFalse" () 1 () "    Theorem iffNotFalse(const" 3200 0  () () 0]
[ebrowse-ms "iffTrue" () 1 () "    Theorem iffTrue(const" 3157 0  () () 0]
[ebrowse-ms "iffTrueElim" () 1 () "    Theorem iffTrueElim(const" 3243 0  () () 0]
[ebrowse-ms "implContrapositive" () 1 () "    Theorem implContrapositive(const" 3796 0  () () 0]
[ebrowse-ms "implIntro" () 1 () "    Theorem implIntro(const" 3711 0  () () 0]
[ebrowse-ms "implIntro3" () 1 () "    Theorem3 implIntro3(const" 1877 0  () () 0]
[ebrowse-ms "implMP" () 1 () "    Theorem implMP(const" 3482 0  () () 0]
[ebrowse-ms "liftOneITE" () 1 () "    Theorem liftOneITE(const" 4824 0  () () 0]
[ebrowse-ms "notNotElim" () 1 () "    Theorem notNotElim(const" 3380 0  () () 0]
[ebrowse-ms "notToIff" () 1 () "    Theorem notToIff(const" 3968 0  () () 0]
[ebrowse-ms "queryTCC" () 1 () "    Theorem3 queryTCC(const" 1810 0  () () 0]
[ebrowse-ms "reflexivityRule" () 1 () "    Theorem reflexivityRule(const" 2055 0  () () 0]
[ebrowse-ms "rewriteAnd" () 1 () "    Theorem rewriteAnd(const" 4686 0  () () 0]
[ebrowse-ms "rewriteIff" () 1 () "    Theorem rewriteIff(const" 4051 0  () () 0]
[ebrowse-ms "rewriteIteFalse" () 1 () "    Theorem rewriteIteFalse(const" 3888 0  () () 0]
[ebrowse-ms "rewriteIteSame" () 1 () "    Theorem rewriteIteSame(const" 3931 0  () () 0]
[ebrowse-ms "rewriteIteTrue" () 1 () "    Theorem rewriteIteTrue(const" 3844 0  () () 0]
[ebrowse-ms "rewriteNotExists" () 1 () "    Theorem rewriteNotExists(const" 4356 0  () () 0]
[ebrowse-ms "rewriteNotFalse" () 1 () "    Theorem rewriteNotFalse(const" 4215 0  () () 0]
[ebrowse-ms "rewriteNotForall" () 1 () "    Theorem rewriteNotForall(const" 4302 0  () () 0]
[ebrowse-ms "rewriteNotNot" () 1 () "    Theorem rewriteNotNot(const" 4257 0  () () 0]
[ebrowse-ms "rewriteNotTrue" () 1 () "    Theorem rewriteNotTrue(const" 4171 0  () () 0]
[ebrowse-ms "rewriteOr" () 1 () "    Theorem rewriteOr(const" 4727 0  () () 0]
[ebrowse-ms "rewriteReflexivity" () 1 () "    Theorem rewriteReflexivity(const" 2102 0  () () 0]
[ebrowse-ms "rewriteUsingSymmetry" () 1 () "    Theorem rewriteUsingSymmetry(const" 2202 0  () () 0]
[ebrowse-ms "skolemize" () 1 () "    Theorem skolemize(const" 4572 0  () () 0]
[ebrowse-ms "skolemizeRewrite" () 1 () "    Theorem skolemizeRewrite(const" 4445 0  () () 0]
[ebrowse-ms "skolemizeRewriteVar" () 1 () "    Theorem skolemizeRewriteVar(const" 4493 0  () () 0]
[ebrowse-ms "substitutivityRule" () 1 () "    Theorem substitutivityRule(const" 2906 0  () () 0]
[ebrowse-ms "substitutivityRule" () 1 () "    Theorem substitutivityRule(const" 2725 0  () () 0]
[ebrowse-ms "substitutivityRule" () 1 () "    Theorem substitutivityRule(const" 2463 0  () () 0]
[ebrowse-ms "substitutivityRule" () 1 () "    Theorem substitutivityRule(const" 2614 0  () () 0]
[ebrowse-ms "symmetryRule" () 1 () "    Theorem symmetryRule(const" 2143 0  () () 0]
[ebrowse-ms "transitivityRule" () 1 () "    Theorem transitivityRule(const" 2254 0  () () 0]
[ebrowse-ms "trueTheorem" () 1 () "    Theorem trueTheorem()" 4656 0  () () 0]
[ebrowse-ms "varIntroRule" () 1 () "    Theorem varIntroRule(const" 4534 0  () () 0]
[ebrowse-ms "varIntroSkolem" () 1 () "    Theorem varIntroSkolem(const" 4620 0  () () 0]
[ebrowse-ms "xorToIff" () 1 () "    Theorem xorToIff(const" 4012 0  () () 0]
[ebrowse-ms "~CommonTheoremProducer" () 1 () "    virtual ~CommonTheoremProducer()" 1777 0  () "    virtual ~CommonTheoremProducer()" 1777]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CoreTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_theorem_producer.h" "  class CoreTheoremProducer:" 1066"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_theorem_producer.h" ]
()([ebrowse-ms "d_core" () 0 () "    TheoryCore* d_core;" 1180 2  () () 0]
)
([ebrowse-ms "AndToIte" () 1 () "    Theorem AndToIte(const" 2091 0  () () 0]
[ebrowse-ms "CoreTheoremProducer" () 0 () "      :" 1230 0  () "      :" 1230]
[ebrowse-ms "IffToIte" () 1 () "    Theorem IffToIte(const" 2128 0  () () 0]
[ebrowse-ms "ImpToIte" () 1 () "    Theorem ImpToIte(const" 2165 0  () () 0]
[ebrowse-ms "NotToIte" () 1 () "    Theorem NotToIte(const" 2014 0  () () 0]
[ebrowse-ms "OrToIte" () 1 () "    Theorem OrToIte(const" 2054 0  () () 0]
[ebrowse-ms "andDistributivityRule" () 1 () "    Theorem andDistributivityRule(const" 1890 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "    Theorem dummyTheorem(const" 2710 0  () () 0]
[ebrowse-ms "ifLiftUnaryRule" () 1 () "    Theorem ifLiftUnaryRule(const" 2471 0  () () 0]
[ebrowse-ms "iffAndDistrib" () 1 () "    Theorem iffAndDistrib(const" 2556 0  () () 0]
[ebrowse-ms "iffOrDistrib" () 1 () "    Theorem iffOrDistrib(const" 2512 0  () () 0]
[ebrowse-ms "orDistributivityRule" () 1 () "    Theorem orDistributivityRule(const" 1840 0  () () 0]
[ebrowse-ms "rewriteAndSubterms" () 1 () "    Theorem rewriteAndSubterms(const" 2605 0  () () 0]
[ebrowse-ms "rewriteDistinct" () 1 () "    Theorem rewriteDistinct(const" 1977 0  () () 0]
[ebrowse-ms "rewriteImplies" () 1 () "    Theorem rewriteImplies(const" 1933 0  () () 0]
[ebrowse-ms "rewriteIteBool" () 1 () "    Theorem rewriteIteBool(const" 1753 0  () () 0]
[ebrowse-ms "rewriteIteCond" () 1 () "    Theorem rewriteIteCond(const" 2427 0  () () 0]
[ebrowse-ms "rewriteIteElse" () 1 () "    Theorem rewriteIteElse(const" 1686 0  () () 0]
[ebrowse-ms "rewriteIteThen" () 1 () "    Theorem rewriteIteThen(const" 1619 0  () () 0]
[ebrowse-ms "rewriteIteToAnd" () 1 () "    Theorem rewriteIteToAnd(const" 2296 0  () () 0]
[ebrowse-ms "rewriteIteToIff" () 1 () "    Theorem rewriteIteToIff(const" 2340 0  () () 0]
[ebrowse-ms "rewriteIteToImp" () 1 () "    Theorem rewriteIteToImp(const" 2384 0  () () 0]
[ebrowse-ms "rewriteIteToNot" () 1 () "    Theorem rewriteIteToNot(const" 2209 0  () () 0]
[ebrowse-ms "rewriteIteToOr" () 1 () "    Theorem rewriteIteToOr(const" 2252 0  () () 0]
[ebrowse-ms "rewriteLetDecl" () 1 () "    Theorem rewriteLetDecl(const" 1409 0  () () 0]
[ebrowse-ms "rewriteNotAnd" () 1 () "    Theorem rewriteNotAnd(const" 1451 0  () () 0]
[ebrowse-ms "rewriteNotIff" () 1 () "    Theorem rewriteNotIff(const" 1534 0  () () 0]
[ebrowse-ms "rewriteNotIte" () 1 () "    Theorem rewriteNotIte(const" 1576 0  () () 0]
[ebrowse-ms "rewriteNotOr" () 1 () "    Theorem rewriteNotOr(const" 1492 0  () () 0]
[ebrowse-ms "rewriteOrSubterms" () 1 () "    Theorem rewriteOrSubterms(const" 2660 0  () () 0]
[ebrowse-ms "typePred" () 1 () "    Theorem typePred(const" 1366 0  () () 0]
[ebrowse-ms "~CoreTheoremProducer" () 1 () "    virtual ~CoreTheoremProducer()" 1334 0  () "    virtual ~CoreTheoremProducer()" 1334]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DatatypeTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_theorem_producer.h" "class DatatypeTheoremProducer:" 952"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_theorem_producer.h" ]
()([ebrowse-ms "d_theoryDatatype" () 0 () "  TheoryDatatype* d_theoryDatatype;" 1040 2  () () 0]
)
([ebrowse-ms "DatatypeTheoremProducer" () 0 () "heoremProducer(TheoryDatatype* theoryDatatype) :" 1116 0  () "heoremProducer(TheoryDatatype* theoryDatatype) :" 1116]
[ebrowse-ms "decompose" () 1 () "  Theorem decompose(const" 1445 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "  Theorem dummyTheorem(const" 1266 0  () () 0]
[ebrowse-ms "noCycle" () 1 () "  Theorem noCycle(const" 1482 0  () () 0]
[ebrowse-ms "rewriteSelCons" () 1 () "  Theorem rewriteSelCons(const" 1337 0  () () 0]
[ebrowse-ms "rewriteTestCons" () 1 () "  Theorem rewriteTestCons(const" 1409 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "QuantTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_theorem_producer.h" "  class QuantTheoremProducer:" 775"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_theorem_producer.h" ]
()([ebrowse-ms "d_theoryQuant" () 0 () "    TheoryQuant* d_theoryQuant;" 856 2  () () 0]
[ebrowse-ms "d_typeFound" () 0 () "    std::map<Expr,int> d_typeFound;" 892 2  () () 0]
)
([ebrowse-ms "QuantTheoremProducer" () 0 () "r(TheoremManager* tm, TheoryQuant* theoryQuant):" 1146 0  () "r(TheoremManager* tm, TheoryQuant* theoryQuant):" 1146]
[ebrowse-ms "addNewConst" () 1 () "    virtual Theorem addNewConst(const" 1296 0  () () 0]
[ebrowse-ms "adjustVarUniv" () 1 () "    virtual Theorem adjustVarUniv(const" 2976 0  () () 0]
[ebrowse-ms "boundVarElim" () 1 () "    virtual Theorem boundVarElim(const" 2921 0  () () 0]
[ebrowse-ms "newRWThm" () 1 () "    virtual Theorem newRWThm(const" 1342 0  () () 0]
[ebrowse-ms "normalizeQuant" () 1 () "    virtual Theorem normalizeQuant(const" 1412 0  () () 0]
[ebrowse-ms "packVar" () 1 () "    virtual Theorem packVar(const" 3065 0  () () 0]
[ebrowse-ms "partialUniversalInst" () 1 () "    virtual Theorem partialUniversalInst(const" 2570 0  () () 0]
[ebrowse-ms "pullVarOut" () 1 () "    virtual Theorem pullVarOut(const" 3117 0  () () 0]
[ebrowse-ms "recFindBoundVars" () 0 () "    void recFindBoundVars(const" 1009 2  () () 0]
[ebrowse-ms "rewriteNotExists" () 1 () "    virtual Theorem rewriteNotExists(const" 1525 0  () () 0]
[ebrowse-ms "rewriteNotForall" () 1 () "    virtual Theorem rewriteNotForall(const" 1637 0  () () 0]
[ebrowse-ms "universalInst" () 1 () "    virtual Theorem universalInst(const" 2469 0  () () 0]
[ebrowse-ms "universalInst" () 1 () "    virtual Theorem universalInst(const" 2360 0  () () 0]
[ebrowse-ms "universalInst" () 1 () "    virtual Theorem universalInst(const" 2231 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "RecordsTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_theorem_producer.h" "  class RecordsTheoremProducer:" 787"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_theorem_producer.h" ]
()([ebrowse-ms "d_theoryRecords" () 0 () "      TheoryRecords* d_theoryRecords;" 880 2  () () 0]
)
([ebrowse-ms "RecordsTheoremProducer" () 0 () "mProducer(TheoremManager* tm, TheoryRecords* t):" 956 0  () "mProducer(TheoremManager* tm, TheoryRecords* t):" 956]
[ebrowse-ms "expandEq" () 1 () "      Theorem expandEq(const" 1198 0  () () 0]
[ebrowse-ms "expandNeq" () 1 () "      Theorem expandNeq(const" 1246 0  () () 0]
[ebrowse-ms "expandRecord" () 1 () "      Theorem expandRecord(const" 1298 0  () () 0]
[ebrowse-ms "expandTuple" () 1 () "      Theorem expandTuple(const" 1340 0  () () 0]
[ebrowse-ms "getField" () 0 () "      const std::string& getField(const" 3646 0  () "      const std::string& getField(const" 3646]
[ebrowse-ms "getField" () 0 () "      const std::string& getField(const" 3212 0  () "      const std::string& getField(const" 3212]
[ebrowse-ms "getFieldIndex" () 0 () "      int getFieldIndex(const" 3442 0  () "      int getFieldIndex(const" 3442]
[ebrowse-ms "getFields" () 0 () "      const std::vector<Expr>& getFields(const" 3054 0  () "      const std::vector<Expr>& getFields(const" 3054]
[ebrowse-ms "getIndex" () 0 () "      int getIndex(const" 4539 0  () "      int getIndex(const" 4539]
[ebrowse-ms "isRecordAccess" () 0 () "      bool isRecordAccess(const" 1739 0  () "      bool isRecordAccess(const" 1739]
[ebrowse-ms "isRecordType" () 0 () "      bool isRecordType(const" 1589 0  () "      bool isRecordType(const" 1589]
[ebrowse-ms "isTupleAccess" () 0 () "      bool isTupleAccess(const" 4683 0  () "      bool isTupleAccess(const" 4683]
[ebrowse-ms "recordExpr" () 0 () "      Expr recordExpr(const" 2048 0  () "      Expr recordExpr(const" 2048]
[ebrowse-ms "recordSelect" () 0 () "      Expr recordSelect(const" 2671 0  () "      Expr recordSelect(const" 2671]
[ebrowse-ms "recordType" () 0 () "      Type recordType(const" 2461 0  () "      Type recordType(const" 2461]
[ebrowse-ms "recordUpdate" () 0 () "      Expr recordUpdate(const" 2839 0  () "      Expr recordUpdate(const" 2839]
[ebrowse-ms "rewriteLitSelect" () 1 () "      Theorem rewriteLitSelect(const" 1062 0  () () 0]
[ebrowse-ms "rewriteLitUpdate" () 1 () "      Theorem rewriteLitUpdate(const" 1159 0  () () 0]
[ebrowse-ms "rewriteUpdateSelect" () 1 () "      Theorem rewriteUpdateSelect(const" 1112 0  () () 0]
[ebrowse-ms "tupleExpr" () 0 () "      Expr tupleExpr(const" 3757 0  () "      Expr tupleExpr(const" 3757]
[ebrowse-ms "tupleSelect" () 0 () "      Expr tupleSelect(const" 4209 0  () "      Expr tupleSelect(const" 4209]
[ebrowse-ms "tupleType" () 0 () "      Type tupleType(const" 4056 0  () "      Type tupleType(const" 4056]
[ebrowse-ms "tupleUpdate" () 0 () "      Expr tupleUpdate(const" 4355 0  () "      Expr tupleUpdate(const" 4355]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchEngineTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_theorem_producer.h" "    :" 874"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_theorem_producer.h" ]
()([ebrowse-ms "d_commonRules" () 0 () "    CommonProofRules* d_commonRules;" 979 2  () () 0]
)
([ebrowse-ms "SearchEngineTheoremProducer" () 0 () "SearchEngineTheoremProducer(TheoremManager* tm);" 1364 0  () () 0]
[ebrowse-ms "andCNFRule" () 1 () "    Theorem andCNFRule(const" 5650 0  () () 0]
[ebrowse-ms "caseSplit" () 1 () "    virtual Theorem caseSplit(const" 1885 0  () () 0]
[ebrowse-ms "checkSoundNoSkolems" () 0 () "    void checkSoundNoSkolems(const" 1210 2  () () 0]
[ebrowse-ms "confAndrAF" () 1 () "    virtual Theorem confAndrAF(const" 4366 0  () () 0]
[ebrowse-ms "confAndrAT" () 1 () "    virtual Theorem confAndrAT(const" 4226 0  () () 0]
[ebrowse-ms "confIffr" () 1 () "    virtual Theorem confIffr(const" 4699 0  () () 0]
[ebrowse-ms "confIterIfThen" () 1 () "    virtual Theorem confIterIfThen(const" 5476 0  () () 0]
[ebrowse-ms "confIterThenElse" () 1 () "    virtual Theorem confIterThenElse(const" 5317 0  () () 0]
[ebrowse-ms "conflictClause" () 1 () "    virtual Theorem conflictClause(const" 2793 0  () () 0]
[ebrowse-ms "conflictRule" () 1 () "    virtual Theorem conflictRule(const" 3472 0  () () 0]
[ebrowse-ms "convertToCNF" () 0 () "    Expr convertToCNF(const" 6409 2  () () 0]
[ebrowse-ms "cutRule" () 1 () "    virtual Theorem cutRule(const" 3004 0  () () 0]
[ebrowse-ms "eliminateSkolemAxioms" () 1 () "    virtual Theorem eliminateSkolemAxioms(const" 2262 0  () () 0]
[ebrowse-ms "findInLocalCache" () 0 () "    Expr findInLocalCache(const" 6590 2  () () 0]
[ebrowse-ms "iffCNFRule" () 1 () "    Theorem iffCNFRule(const" 5781 0  () () 0]
[ebrowse-ms "iffToClauses" () 1 () "    Theorem iffToClauses(const" 5917 0  () () 0]
[ebrowse-ms "impCNFRule" () 1 () "    Theorem impCNFRule(const" 5737 0  () () 0]
[ebrowse-ms "iteCNFRule" () 1 () "    Theorem iteCNFRule(const" 5825 0  () () 0]
[ebrowse-ms "iteToClauses" () 1 () "    Theorem iteToClauses(const" 5871 0  () () 0]
[ebrowse-ms "negIntro" () 1 () "    virtual Theorem negIntro(const" 1754 0  () () 0]
[ebrowse-ms "opCNFRule" () 0 () "    Theorem opCNFRule(const" 6314 2  () () 0]
[ebrowse-ms "orCNFRule" () 1 () "    Theorem orCNFRule(const" 5693 0  () () 0]
[ebrowse-ms "proofByContradiction" () 1 () "    virtual Theorem proofByContradiction(const" 1600 0  () () 0]
[ebrowse-ms "propAndrAF" () 1 () "    virtual Theorem propAndrAF(const" 3600 0  () () 0]
[ebrowse-ms "propAndrAT" () 1 () "    virtual Theorem propAndrAT(const" 3709 0  () () 0]
[ebrowse-ms "propAndrLF" () 1 () "    virtual Theorem propAndrLF(const" 3963 0  () () 0]
[ebrowse-ms "propAndrLRT" () 1 () "    virtual void propAndrLRT(const" 3831 0  () () 0]
[ebrowse-ms "propAndrRF" () 1 () "    virtual Theorem propAndrRF(const" 4082 0  () () 0]
[ebrowse-ms "propIffr" () 1 () "    virtual Theorem propIffr(const" 4546 0  () () 0]
[ebrowse-ms "propIterIfThen" () 1 () "    virtual void propIterIfThen(const" 5003 0  () () 0]
[ebrowse-ms "propIterIte" () 1 () "    virtual Theorem propIterIte(const" 4876 0  () () 0]
[ebrowse-ms "propIterThen" () 1 () "    virtual Theorem propIterThen(const" 5174 0  () () 0]
[ebrowse-ms "satProof" () 1 () "    Theorem satProof(const" 6004 0  () () 0]
[ebrowse-ms "unitProp" () 1 () "    virtual Theorem unitProp(const" 3227 0  () () 0]
[ebrowse-ms "verifyConflict" () 0 () "    void verifyConflict(const" 1010 2  () () 0]
[ebrowse-ms "~SearchEngineTheoremProducer" () 1 () "    virtual ~SearchEngineTheoremProducer()" 1431 0  () "    virtual ~SearchEngineTheoremProducer()" 1431]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SimulateTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_theorem_producer.h" "class SimulateTheoremProducer:" 856"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_theorem_producer.h" ]
()()
([ebrowse-ms "SimulateTheoremProducer" () 0 () "  SimulateTheoremProducer(TheoremManager* tm):" 979 0  () "  SimulateTheoremProducer(TheoremManager* tm):" 979]
[ebrowse-ms "expandSimulate" () 1 () "  virtual Theorem expandSimulate(const" 1090 0  () () 0]
[ebrowse-ms "~SimulateTheoremProducer" () 1 () "  virtual ~SimulateTheoremProducer()" 1046 0  () "  virtual ~SimulateTheoremProducer()" 1046]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "UFTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_theorem_producer.h" "class UFTheoremProducer:" 881"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_theorem_producer.h" ]
()([ebrowse-ms "d_theoryUF" () 0 () "    TheoryUF* d_theoryUF;" 953 2  () () 0]
)
([ebrowse-ms "UFTheoremProducer" () 0 () "oducer(TheoremManager* tm, TheoryUF* theoryUF) :" 1031 0  () "oducer(TheoremManager* tm, TheoryUF* theoryUF) :" 1031]
[ebrowse-ms "applyLambda" () 1 () "    Theorem applyLambda(const" 1247 0  () () 0]
[ebrowse-ms "relToClosure" () 1 () "    Theorem relToClosure(const" 1142 0  () () 0]
[ebrowse-ms "relTrans" () 1 () "    Theorem relTrans(const" 1184 0  () () 0]
[ebrowse-ms "rewriteOpDef" () 1 () "    Theorem rewriteOpDef(const" 1288 0  () () 0]
)
()
()
()
()
()()
])([ebrowse-ms "d_checkProofs" () 0 () "    const bool* d_checkProofs;" 3599 1  () () 0]
[ebrowse-ms "d_em" () 0 () "    ExprManager* d_em;" 3509 1  () () 0]
[ebrowse-ms "d_hole" () 0 () "    Expr d_hole;" 3736 1  () () 0]
[ebrowse-ms "d_pfOp" () 0 () "    Op d_pfOp;" 3655 1  () () 0]
[ebrowse-ms "d_tm" () 0 () "    TheoremManager* d_tm;" 3486 1  () () 0]
)
([ebrowse-ms "TheoremProducer" () 0 () "    TheoremProducer(TheoremManager *tm);" 5358 0  () () 0]
[ebrowse-ms "newAssumption" () 0 () "    Theorem newAssumption(const" 4562 1  () "    Theorem newAssumption(const" 4562]
[ebrowse-ms "newLabel" () 0 () "    Proof newLabel(const" 5728 0  () () 0]
[ebrowse-ms "newPf" () 0 () "    Proof newPf(const" 6817 0  () () 0]
[ebrowse-ms "newPf" () 0 () "    Proof newPf(const" 6709 0  () () 0]
[ebrowse-ms "newPf" () 0 () "    Proof newPf(const" 6616 0  () () 0]
[ebrowse-ms "newPf" () 0 () "    Proof newPf(const" 7226 0  () () 0]
[ebrowse-ms "newPf" () 0 () "    Proof newPf(const" 8134 0  () () 0]
[ebrowse-ms "newPf" () 0 () "    Proof newPf(const" 8238 0  () () 0]
[ebrowse-ms "newPf" () 0 () "    Proof newPf(const" 6010 0  () () 0]
[ebrowse-ms "newRWTheorem" () 0 () "    Theorem newRWTheorem(const" 4278 1  () "    Theorem newRWTheorem(const" 4278]
[ebrowse-ms "newRWTheorem3" () 0 () "    Theorem3 newRWTheorem3(const" 5038 1  () "    Theorem3 newRWTheorem3(const" 5038]
[ebrowse-ms "newReflTheorem" () 0 () "    Theorem newReflTheorem(const" 4487 1  () "    Theorem newReflTheorem(const" 4487]
[ebrowse-ms "newTheorem" () 0 () "    Theorem newTheorem(const" 3915 1  () "    Theorem newTheorem(const" 3915]
[ebrowse-ms "newTheorem3" () 0 () "    Theorem3 newTheorem3(const" 4724 1  () "    Theorem3 newTheorem3(const" 4724]
[ebrowse-ms "soundError" () 0 () "    void soundError(const" 5208 1  () () 0]
[ebrowse-ms "withAssumptions" () 0 () "    bool withAssumptions()" 5588 0  () "    bool withAssumptions()" 5588]
[ebrowse-ms "withProof" () 0 () "    bool withProof()" 5482 0  () "    bool withProof()" 5482]
[ebrowse-ms "~TheoremProducer" () 1 () "    virtual ~TheoremProducer()" 5413 0  () "    virtual ~TheoremProducer()" 5413]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "HashString" "CVC3::ExprManager" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" "    class HashString {" 2229"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" ]
()([ebrowse-ms "h" () 0 () "      std::hash<char*> h;" 2255 2  () () 0]
)
([ebrowse-ms "operator ()" () 4 () "      size_t operator()(const" 2297 0  () "      size_t operator()(const" 2297]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "HashEV" "CVC3::ExprManager" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" "    class HashEV {" 3597"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" ]
()([ebrowse-ms "d_em" () 0 () "      ExprManager* d_em;" 3622 2  () () 0]
)
([ebrowse-ms "HashEV" () 0 () "      HashEV(ExprManager* em):" 3659 0  () "      HashEV(ExprManager* em):" 3659]
[ebrowse-ms "operator ()" () 4 () "      size_t operator()(ExprValue" 3712 0  () "      size_t operator()(ExprValue" 3712]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "BoundInfo" "CVC3::TheoryArithNew" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  	  	struct BoundInfo {" 19828"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" ]
()([ebrowse-ms "bound" () 0 () "  	  		EpsRational bound;" 19885 0  () () 0]
[ebrowse-ms "theorem" () 0 () "  	  		Theorem theorem;" 19959 0  () () 0]
)
([ebrowse-ms "BoundInfo" () 0 () "  	  		BoundInfo():" 20162 0  () "  	  		BoundInfo():" 20162]
[ebrowse-ms "BoundInfo" () 0 () "o(const EpsRational& bound, const Theorem& thm):" 20016 0  () "o(const EpsRational& bound, const Theorem& thm):" 20016]
[ebrowse-ms "operator <" () 4 () "  	  		bool operator < (const" 20339 0  () "  	  		bool operator < (const" 20339]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryArray" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/theory_array.cpp" ]
()()
([ebrowse-ms "TheoryArray" () 0 () () 0 0  () "TheoryArray::TheoryArray(TheoryCore* core)
  :" 1606]
[ebrowse-ms "addSharedTerm" () 0 () () 0 0  () "void TheoryArray::addSharedTerm(const" 2604]
[ebrowse-ms "assertFact" () 0 () () 0 0  () "void TheoryArray::assertFact(const" 3505]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "void TheoryArray::checkSat(bool" 4750]
[ebrowse-ms "checkType" () 0 () () 0 0  () "void TheoryArray::checkType(const" 20394]
[ebrowse-ms "computeBaseType" () 0 () () 0 0  () "Type TheoryArray::computeBaseType(const" 25058]
[ebrowse-ms "computeModel" () 0 () () 0 0  () "void TheoryArray::computeModel(const" 26623]
[ebrowse-ms "computeModelTerm" () 0 () () 0 0  () "void TheoryArray::computeModelTerm(const" 25435]
[ebrowse-ms "computeTCC" () 0 () () 0 0  () "Expr TheoryArray::computeTCC(const" 30060]
[ebrowse-ms "computeType" () 0 () () 0 0  () "void TheoryArray::computeType(const" 22581]
[ebrowse-ms "createProofRules" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/array_theorem_producer.cpp" "ArrayProofRules* TheoryArray::createProofRules()" 1064]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  () "Cardinality TheoryArray::finiteTypeInfo(Expr" 21170]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  () "TheoryArray::parseExprOp(const" 34622]
[ebrowse-ms "print" () 0 () () 0 0  () "ExprStream& TheoryArray::print(ExprStream" 30965]
[ebrowse-ms "pullIndex" () 0 () () 0 0  () "Theorem TheoryArray::pullIndex(const" 8485]
[ebrowse-ms "renameExpr" () 0 () () 0 0  () "Theorem TheoryArray::renameExpr(const" 1106]
[ebrowse-ms "rewrite" () 0 () () 0 0  () "Theorem TheoryArray::rewrite(const" 9075]
[ebrowse-ms "setup" () 0 () () 0 0  () "void TheoryArray::setup(const" 13037]
[ebrowse-ms "solve" () 0 () () 0 0  () "Theorem TheoryArray::solve(const" 20082]
[ebrowse-ms "update" () 0 () () 0 0  () "void TheoryArray::update(const" 14895]
[ebrowse-ms "~TheoryArray" () 0 () () 0 0  () "TheoryArray::~TheoryArray()" 2522]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CD_CNF_Formula" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf.cpp" ]
()()
([ebrowse-ms "newClause" () 0 () () 0 0  () "void CD_CNF_Formula::newClause()" 4231]
[ebrowse-ms "registerUnit" () 0 () () 0 0  () "void CD_CNF_Formula::registerUnit()" 4360]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ParserTemp" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser_temp.h" "  class ParserTemp {" 796"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser_temp.h" ]
()([ebrowse-ms "arrFlag" () 0 () "    bool arrFlag;" 1466 0  () () 0]
[ebrowse-ms "bvFlag" () 0 () "    bool bvFlag;" 1541 0  () () 0]
[ebrowse-ms "bvSize" () 0 () "    int bvSize;" 1603 0  () () 0]
[ebrowse-ms "d_uid" () 0 () "    int d_uid;" 869 2  () () 0]
[ebrowse-ms "done" () 0 () "    bool done;" 1331 0  () () 0]
[ebrowse-ms "expr" () 0 () "    Expr expr;" 1282 0  () () 0]
[ebrowse-ms "fileName" () 0 () "    std::string fileName;" 1239 0  () () 0]
[ebrowse-ms "interactive" () 0 () "    bool interactive;" 1395 0  () () 0]
[ebrowse-ms "is" () 0 () "    std::istream* is;" 1149 0  () () 0]
[ebrowse-ms "lineNum" () 0 () "    int lineNum;" 1196 0  () () 0]
[ebrowse-ms "prompt" () 0 () "    std::string prompt;" 1092 2  () () 0]
[ebrowse-ms "prompt1" () 0 () "    std::string prompt1;" 942 2  () () 0]
[ebrowse-ms "prompt2" () 0 () "    std::string prompt2;" 1035 2  () () 0]
[ebrowse-ms "queryParsed" () 0 () "    bool queryParsed;" 1674 0  () () 0]
[ebrowse-ms "vc" () 0 () "    ValidityChecker* vc;" 1127 0  () () 0]
)
([ebrowse-ms "ParserTemp" () 0 () "    ParserTemp() :" 1718 0  () "    ParserTemp() :" 1718]
[ebrowse-ms "error" () 0 () "    int error(const" 1927 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "  int ParserTemp::error(const" 2334]
[ebrowse-ms "getPrompt" () 0 () "    std::string getPrompt()" 2151 0  () "    std::string getPrompt()" 2151]
[ebrowse-ms "setPrompt1" () 0 () "    void setPrompt1()" 2230 0  () "    void setPrompt1()" 2230]
[ebrowse-ms "setPrompt2" () 0 () "    void setPrompt2()" 2317 0  () "    void setPrompt2()" 2317]
[ebrowse-ms "uniqueID" () 0 () "    std::string uniqueID()" 2012 0  () "    std::string uniqueID()" 2012]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "hash" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" "  template <class _Key> struct hash {" 1972() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchParams" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "struct SearchParams {" 7084"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" ]
()([ebrowse-ms "random_var_freq" () 0 () "double var_decay, clause_decay, random_var_freq;" 7137 0  () () 0]
)
([ebrowse-ms "SearchParams" () 0 () "rams(double v = 1, double c = 1, double r = 0) :" 7214 0  () "rams(double v = 1, double c = 1, double r = 0) :" 7214]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryRecords" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_theorem_producer.cpp" ]
()()
([ebrowse-ms "TheoryRecords" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "eoryRecords::TheoryRecords(TheoryCore* core)
  :" 2571]
[ebrowse-ms "assertFact" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "void TheoryRecords::assertFact(const" 3434]
[ebrowse-ms "checkType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "void TheoryRecords::checkType(const" 9064]
[ebrowse-ms "computeBaseType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::computeBaseType(const" 13725]
[ebrowse-ms "computeModel" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "void TheoryRecords::computeModel(const" 7254]
[ebrowse-ms "computeModelTerm" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "void TheoryRecords::computeModelTerm(const" 6656]
[ebrowse-ms "computeTCC" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "Expr TheoryRecords::computeTCC(const" 5771]
[ebrowse-ms "computeType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "void TheoryRecords::computeType(const" 10240]
[ebrowse-ms "computeTypePred" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "Expr TheoryRecords::computeTypePred(const" 8087]
[ebrowse-ms "createProofRules" () 0 () () 0 0  () "rdsProofRules* TheoryRecords::createProofRules()" 774]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "Cardinality TheoryRecords::finiteTypeInfo(Expr" 10080]
[ebrowse-ms "getField" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::getField(const" 30143]
[ebrowse-ms "getField" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::getField(const" 29382]
[ebrowse-ms "getFieldIndex" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::getFieldIndex(const" 29707]
[ebrowse-ms "getFields" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::getFields(const" 29048]
[ebrowse-ms "getIndex" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::getIndex(const" 31396]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::parseExprOp(const" 24267]
[ebrowse-ms "print" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "ExprStream& TheoryRecords::print(ExprStream" 16470]
[ebrowse-ms "recordExpr" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::recordExpr(const" 27571]
[ebrowse-ms "recordSelect" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::recordSelect(const" 28614]
[ebrowse-ms "recordType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::recordType(const" 28398]
[ebrowse-ms "recordUpdate" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::recordUpdate(const" 28808]
[ebrowse-ms "rewrite" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "Theorem TheoryRecords::rewrite(const" 4318]
[ebrowse-ms "rewriteAux" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::rewriteAux(const" 2463]
[ebrowse-ms "setup" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::setup(const" 14265]
[ebrowse-ms "tupleExpr" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::tupleExpr(const" 30440]
[ebrowse-ms "tupleSelect" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::tupleSelect(const" 31008]
[ebrowse-ms "tupleType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::tupleType(const" 30851]
[ebrowse-ms "tupleUpdate" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::tupleUpdate(const" 31183]
[ebrowse-ms "update" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::update(const" 15720]
[ebrowse-ms "~TheoryRecords" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/theory_records.cpp" "TheoryRecords::~TheoryRecords()" 3374]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TypeComputer" "CVC3::ExprManager" 0() () 0() ]
([ebrowse-ts [ebrowse-cs "TypeComputerCore" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" "  class TypeComputerCore:" 1729"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" ]
()([ebrowse-ms "d_core" () 0 () "    TheoryCore *d_core;" 1788 2  () () 0]
)
([ebrowse-ms "TypeComputerCore" () 0 () "    TypeComputerCore(TheoryCore* core):" 1830 0  () "    TypeComputerCore(TheoryCore* core):" 1830]
[ebrowse-ms "checkType" () 0 () "    void checkType(const" 2214 0  () "    void checkType(const" 2214]
[ebrowse-ms "computeType" () 0 () "    void computeType(const" 1882 0  () "    void computeType(const" 1882]
[ebrowse-ms "finiteTypeInfo" () 0 () "    Cardinality finiteTypeInfo(Expr" 2437 0  () "    Cardinality finiteTypeInfo(Expr" 2437]
)
()
()
()
()
()()
])()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Theory" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory.cpp" ]
()()
([ebrowse-ms "Theory" () 0 () () 0 0  () "(TheoryCore* theoryCore, const string& name)
  :" 815]
[ebrowse-ms "Theory" () 0 () () 0 0  () "Theory::Theory(void) :" 761]
[ebrowse-ms "addBoundVar" () 0 () () 0 0  () "Expr Theory::addBoundVar(const" 19446]
[ebrowse-ms "addBoundVar" () 0 () () 0 0  () "Expr Theory::addBoundVar(const" 18730]
[ebrowse-ms "addGlobalLemma" () 0 () () 0 0  () "void Theory::addGlobalLemma(const" 3929]
[ebrowse-ms "addSplitter" () 0 () () 0 0  () "void Theory::addSplitter(const" 3553]
[ebrowse-ms "assertEqualities" () 0 () () 0 0  () "void Theory::assertEqualities(const" 3467]
[ebrowse-ms "assignValue" () 0 () () 0 0  () "void Theory::assignValue(const" 4313]
[ebrowse-ms "assignValue" () 0 () () 0 0  () "void Theory::assignValue(const" 4055]
[ebrowse-ms "computeModelTerm" () 0 () () 0 0  () "void Theory::computeModelTerm(const" 1069]
[ebrowse-ms "computeTCC" () 0 () () 0 0  () "Expr Theory::computeTCC(const" 1953]
[ebrowse-ms "enqueueFact" () 0 () () 0 0  () "void Theory::enqueueFact(const" 3144]
[ebrowse-ms "enqueueSE" () 0 () () 0 0  () "void Theory::enqueueSE(const" 3302]
[ebrowse-ms "find" () 0 () () 0 0  () "Theorem Theory::find(const" 8178]
[ebrowse-ms "findReduce" () 0 () () 0 0  () "Theorem Theory::findReduce(const" 8646]
[ebrowse-ms "findReduced" () 0 () () 0 0  () "bool Theory::findReduced(const" 9383]
[ebrowse-ms "findRef" () 0 () () 0 0  () "const Theorem& Theory::findRef(const" 7733]
[ebrowse-ms "getBaseType" () 0 () () 0 0  () "Type Theory::getBaseType(const" 10171]
[ebrowse-ms "getModelTerm" () 0 () () 0 0  () "void Theory::getModelTerm(const" 13992]
[ebrowse-ms "getModelValue" () 0 () () 0 0  () "Theorem Theory::getModelValue(const" 14472]
[ebrowse-ms "getNumTheories" () 0 () () 0 0  () "int Theory::getNumTheories()" 6302]
[ebrowse-ms "getTCC" () 0 () () 0 0  () "Expr Theory::getTCC(const" 9605]
[ebrowse-ms "getTypePred" () 0 () () 0 0  () "Expr Theory::getTypePred(const" 10593]
[ebrowse-ms "hasTheory" () 0 () () 0 0  () "bool Theory::hasTheory(int" 6377]
[ebrowse-ms "inconsistent" () 0 () () 0 0  () "bool Theory::inconsistent()" 2349]
[ebrowse-ms "installID" () 0 () () 0 0  () "void Theory::installID(const" 24413]
[ebrowse-ms "isLeafIn" () 0 () () 0 0  () "bool Theory::isLeafIn(const" 14556]
[ebrowse-ms "leavesAreSimp" () 0 () () 0 0  () "bool Theory::leavesAreSimp(const" 14856]
[ebrowse-ms "lookupTypeExpr" () 0 () () 0 0  () "Type Theory::lookupTypeExpr(const" 21146]
[ebrowse-ms "lookupVar" () 0 () () 0 0  () "Expr Theory::lookupVar(const" 20425]
[ebrowse-ms "newFunction" () 0 () () 0 0  () "Op Theory::newFunction(const" 18172]
[ebrowse-ms "newFunction" () 0 () () 0 0  () "Op Theory::newFunction(const" 17171]
[ebrowse-ms "newSubtypeExpr" () 0 () () 0 0  () "Type Theory::newSubtypeExpr(const" 21349]
[ebrowse-ms "newTypeExpr" () 0 () () 0 0  () "Type Theory::newTypeExpr(const" 23369]
[ebrowse-ms "newTypeExpr" () 0 () () 0 0  () "Type Theory::newTypeExpr(const" 20775]
[ebrowse-ms "newVar" () 0 () () 0 0  () "Expr Theory::newVar(const" 16205]
[ebrowse-ms "newVar" () 0 () () 0 0  () "Expr Theory::newVar(const" 15077]
[ebrowse-ms "parseExpr" () 0 () () 0 0  () "Expr Theory::parseExpr(const" 13775]
[ebrowse-ms "registerAtom" () 0 () () 0 0  () "void Theory::registerAtom(const" 2248]
[ebrowse-ms "registerKinds" () 0 () () 0 0  () "void Theory::registerKinds(Theory" 4539]
[ebrowse-ms "registerTheory" () 0 () () 0 0  () "void Theory::registerTheory(Theory" 5312]
[ebrowse-ms "resolveID" () 0 () () 0 0  () "Expr Theory::resolveID(const" 23721]
[ebrowse-ms "rewriteCC" () 0 () () 0 0  () "Theorem Theory::rewriteCC(const" 13616]
[ebrowse-ms "rewriteIte" () 0 () () 0 0  () "Theorem Theory::rewriteIte(const" 24698]
[ebrowse-ms "setIncomplete" () 0 () () 0 0  () "void Theory::setIncomplete(const" 2730]
[ebrowse-ms "setInconsistent" () 0 () () 0 0  () "void Theory::setInconsistent(const" 2429]
[ebrowse-ms "setupCC" () 0 () () 0 0  () "void Theory::setupCC(const" 12039]
[ebrowse-ms "simplify" () 0 () () 0 0  () "Theorem Theory::simplify(const" 2901]
[ebrowse-ms "simplifyOp" () 0 () () 0 0  () "Theorem Theory::simplifyOp(const" 1226]
[ebrowse-ms "theoryOf" () 0 () () 0 0  () "Theory* Theory::theoryOf(const" 7010]
[ebrowse-ms "theoryOf" () 0 () () 0 0  () "Theory* Theory::theoryOf(int" 6472]
[ebrowse-ms "typePred" () 0 () () 0 0  () "Theorem Theory::typePred(const" 24614]
[ebrowse-ms "unregisterKinds" () 0 () () 0 0  () "void Theory::unregisterKinds(Theory" 4930]
[ebrowse-ms "unregisterTheory" () 0 () () 0 0  () "void Theory::unregisterTheory(Theory" 5852]
[ebrowse-ms "updateCC" () 0 () () 0 0  () "void Theory::updateCC(const" 12449]
[ebrowse-ms "updateHelper" () 0 () () 0 0  () "Theorem Theory::updateHelper(const" 10937]
[ebrowse-ms "~Theory" () 0 () () 0 0  () "Theory::~Theory(void" 1026]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Theory" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory.h" "class Theory {" 1848"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory.h" ]
([ebrowse-ts [ebrowse-cs "TheoryArith" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "class TheoryArith :" 1442"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" ]
([ebrowse-ts [ebrowse-cs "TheoryArith3" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith3.h" "class TheoryArith3 :" 696"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith3.h" ]
()([ebrowse-ms "d_buffer" () 0 () "  CDList<Theorem> d_buffer;" 3230 2  () () 0]
[ebrowse-ms "d_bufferIdx" () 0 () "  CDO<size_t> d_bufferIdx;" 3292 2  () () 0]
[ebrowse-ms "d_bufferThres" () 0 () "  const int* d_bufferThres;" 3374 2  () () 0]
[ebrowse-ms "d_countLeft" () 0 () "  CDMap<Expr, int> d_countLeft;" 3768 2  () () 0]
[ebrowse-ms "d_countRight" () 0 () "  CDMap<Expr, int> d_countRight;" 3614 2  () () 0]
[ebrowse-ms "d_diseq" () 0 () "  CDList<Theorem> d_diseq;" 743 2  () () 0]
[ebrowse-ms "d_diseqIdx" () 0 () "  CDO<size_t> d_diseqIdx;" 803 2  () () 0]
[ebrowse-ms "d_freeConstDB" () 0 () "  CDMap<Expr, FreeConst> d_freeConstDB;" 3148 2  () () 0]
[ebrowse-ms "d_graph" () 0 () "  VarOrderGraph d_graph;" 4766 2  () () 0]
[ebrowse-ms "d_inModelCreation" () 0 () "  CDO<bool> d_inModelCreation;" 907 2  () () 0]
[ebrowse-ms "d_inequalitiesLeftDB" () 0 () "  ExprMap<CDList<Ineq> *> d_inequalitiesLeftDB;" 2626 2  () () 0]
[ebrowse-ms "d_inequalitiesRightDB" () 0 () "  ExprMap<CDList<Ineq> *> d_inequalitiesRightDB;" 2509 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  ArithProofRules* d_rules;" 876 2  () () 0]
[ebrowse-ms "d_sharedTerms" () 0 () "  CDMap<Expr, bool> d_sharedTerms;" 3862 2  () () 0]
[ebrowse-ms "d_sharedVars" () 0 () "  CDMap<Expr, bool> d_sharedVars;" 3946 2  () () 0]
[ebrowse-ms "fixedMaxCoefficient" () 0 () "	CDMap<Expr, Rational> fixedMaxCoefficient;" 11865 2  () () 0]
[ebrowse-ms "maxCoefficientLeft" () 0 () "	CDMap<Expr, Rational> maxCoefficientLeft;" 11700 2  () () 0]
[ebrowse-ms "maxCoefficientRight" () 0 () "	CDMap<Expr, Rational> maxCoefficientRight;" 11744 2  () () 0]
)
([ebrowse-ms "TheoryArith3" () 0 () "  TheoryArith3(TheoryCore* core);" 10430 0  () () 0]
[ebrowse-ms "addSharedTerm" () 1 () "  void addSharedTerm(const" 10673 0  () () 0]
[ebrowse-ms "addToBuffer" () 0 () "  void addToBuffer(const" 7657 2  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 10707 0  () () 0]
[ebrowse-ms "assignVariables" () 0 () "  void assignVariables(std" 8944 2  () () 0]
[ebrowse-ms "canon" () 1 () "  Theorem canon(const" 5772 2  () () 0]
[ebrowse-ms "canonConjunctionEquiv" () 0 () "  Theorem canonConjunctionEquiv(const" 6649 2  () () 0]
[ebrowse-ms "canonPred" () 0 () "  Theorem canonPred(const" 6262 2  () () 0]
[ebrowse-ms "canonPredEquiv" () 0 () "  Theorem canonPredEquiv(const" 6418 2  () () 0]
[ebrowse-ms "canonSimplify" () 0 () "  Theorem canonSimplify(const" 6106 2  () "  Theorem canonSimplify(const" 6106]
[ebrowse-ms "checkAssertEqInvariant" () 1 () "  void checkAssertEqInvariant(const" 11082 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 10887 0  () () 0]
[ebrowse-ms "checkType" () 1 () "  void checkType(const" 11118 0  () () 0]
[ebrowse-ms "collectVars" () 0 () "  void collectVars(const" 9866 2  () () 0]
[ebrowse-ms "computeBaseType" () 1 () "  Type computeBaseType(const" 11307 0  () () 0]
[ebrowse-ms "computeModel" () 1 () "  void computeModel(const" 10831 0  () () 0]
[ebrowse-ms "computeModelBasic" () 1 () "  void computeModelBasic(const" 10782 0  () () 0]
[ebrowse-ms "computeModelTerm" () 1 () "  void computeModelTerm(const" 11347 0  () () 0]
[ebrowse-ms "computeNormalFactor" () 0 () "  Expr computeNormalFactor(const" 7821 2  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 11457 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 11268 0  () () 0]
[ebrowse-ms "computeTypePred" () 1 () "  Expr computeTypePred(const" 11408 0  () () 0]
[ebrowse-ms "createProofRules3" () 0 () "  ArithProofRules* createProofRules3()" 10622 0  () () 0]
[ebrowse-ms "currentMaxCoefficient" () 0 () "	Rational currentMaxCoefficient(Expr" 12011 2  () () 0]
[ebrowse-ms "doSolve" () 0 () "  Theorem doSolve(const" 6534 2  () () 0]
[ebrowse-ms "findBounds" () 0 () "  bool findBounds(const" 9095 2  () () 0]
[ebrowse-ms "findRationalBound" () 0 () "  void findRationalBound(const" 8994 2  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  Cardinality finiteTypeInfo(Expr" 11162 0  () () 0]
[ebrowse-ms "fixCurrentMaxCoefficient" () 0 () "	void fixCurrentMaxCoefficient(Expr" 12294 2  () () 0]
[ebrowse-ms "freeConstIneq" () 0 () "  const Rational& freeConstIneq(const" 5195 2  () () 0]
[ebrowse-ms "getFactors" () 0 () "  void getFactors(const" 8237 2  () () 0]
[ebrowse-ms "isInteger" () 0 () "  bool isInteger(const" 8544 0  () "  bool isInteger(const" 8544]
[ebrowse-ms "isIntegerDerive" () 0 () "  Theorem isIntegerDerive(const" 5070 2  () () 0]
[ebrowse-ms "isIntegerThm" () 0 () "  Theorem isIntegerThm(const" 4913 2  () () 0]
[ebrowse-ms "isStale" () 0 () "  bool isStale(const" 8822 2  () () 0]
[ebrowse-ms "isolateVariable" () 0 () "  Theorem isolateVariable(const" 7313 2  () () 0]
[ebrowse-ms "kidsCanonical" () 0 () "  bool kidsCanonical(const" 5670 2  () () 0]
[ebrowse-ms "lessThanVar" () 0 () "  bool lessThanVar(const" 8631 2  () () 0]
[ebrowse-ms "normalize" () 0 () "  Theorem normalize(const" 8156 2  () () 0]
[ebrowse-ms "normalizeProjectIneqs" () 0 () "  Theorem normalizeProjectIneqs(const" 9175 2  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  Expr parseExprOp(const" 11544 0  () () 0]
[ebrowse-ms "pickIntEqMonomial" () 0 () "  bool pickIntEqMonomial(const" 6787 2  () () 0]
[ebrowse-ms "pickMonomial" () 0 () "  Expr pickMonomial(const" 8198 2  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 11498 0  () () 0]
[ebrowse-ms "processBuffer" () 0 () "  void processBuffer()" 7231 2  () () 0]
[ebrowse-ms "processFiniteInterval" () 0 () "  void processFiniteInterval(const" 10106 2  () () 0]
[ebrowse-ms "processFiniteIntervals" () 0 () "  void processFiniteIntervals(const" 10276 2  () () 0]
[ebrowse-ms "processIntEq" () 0 () "  Theorem processIntEq(const" 7025 2  () () 0]
[ebrowse-ms "processRealEq" () 0 () "  Theorem processRealEq(const" 6922 2  () () 0]
[ebrowse-ms "processSimpleIntEq" () 0 () "  Theorem processSimpleIntEq(const" 7151 2  () () 0]
[ebrowse-ms "projectInequalities" () 0 () "  void projectInequalities(const" 8869 2  () () 0]
[ebrowse-ms "refineCounterExample" () 1 () "  void refineCounterExample()" 10750 0  () () 0]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 10924 0  () () 0]
[ebrowse-ms "selectSmallestByCoefficient" () 0 () "	void selectSmallestByCoefficient(std" 12461 2  () () 0]
[ebrowse-ms "separateMonomial" () 1 () "  void separateMonomial(const" 8438 0  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 10953 0  () () 0]
[ebrowse-ms "setupRec" () 0 () "  void setupRec(const" 10385 2  () () 0]
[ebrowse-ms "solve" () 1 () "  Theorem solve(const" 11033 0  () () 0]
[ebrowse-ms "solvedForm" () 0 () "  Theorem solvedForm(const" 9316 2  () () 0]
[ebrowse-ms "substAndCanonize" () 0 () "  Theorem substAndCanonize(const" 9737 2  () () 0]
[ebrowse-ms "update" () 1 () "  void update(const" 10983 0  () () 0]
[ebrowse-ms "updateStats" () 0 () "  void updateStats(const" 7550 2  () () 0]
[ebrowse-ms "updateStats" () 0 () "  void updateStats(const" 7439 2  () () 0]
[ebrowse-ms "updateSubsumptionDB" () 0 () "  const FreeConst& updateSubsumptionDB(const" 5509 2  () () 0]
[ebrowse-ms "~TheoryArith3" () 0 () "  ~TheoryArith3()" 10456 0  () () 0]
)
()
()
([ebrowse-ms "operator <<" () 0 () "  friend std::ostream& operator<<(std" 2357 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
)
()
()()
][ebrowse-ts [ebrowse-cs "TheoryArithNew" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "class TheoryArithNew :" 917"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" ]
()([ebrowse-ms "NormalizationType" () 0 () "RMALIZE_GCD, NORMALIZE_UNIT } NormalizationType;" 30755 2  () () 0]
[ebrowse-ms "allBounds" () 0 () "		BoundInfoSet allBounds;" 24598 2  () () 0]
[ebrowse-ms "assertedExpr" () 0 () "		std::vector<Expr> assertedExpr;" 23860 2  () () 0]
[ebrowse-ms "assertedExprCount" () 0 () "		CDO<unsigned int> assertedExprCount;" 23968 2  () () 0]
[ebrowse-ms "beta" () 0 () "  		CDMap<Expr, EpsRational> beta;" 22839 2  () () 0]
[ebrowse-ms "consistent" () 0 () "  	  	CDO<QueryResult> consistent;" 19634 2  () () 0]
[ebrowse-ms "d_buffer" () 0 () "  CDList<Theorem> d_buffer;" 3468 2  () () 0]
[ebrowse-ms "d_bufferIdx" () 0 () "  CDO<size_t> d_bufferIdx;" 3529 2  () () 0]
[ebrowse-ms "d_bufferThres" () 0 () "  const int* d_bufferThres;" 3610 2  () () 0]
[ebrowse-ms "d_countLeft" () 0 () "  CDMap<Expr, int> d_countLeft;" 4001 2  () () 0]
[ebrowse-ms "d_countRight" () 0 () "  CDMap<Expr, int> d_countRight;" 3848 2  () () 0]
[ebrowse-ms "d_diseq" () 0 () "  CDList<Theorem> d_diseq;" 1006 2  () () 0]
[ebrowse-ms "d_diseqIdx" () 0 () "  CDO<size_t> d_diseqIdx;" 1086 2  () () 0]
[ebrowse-ms "d_freeConstDB" () 0 () "  CDMap<Expr, FreeConst> d_freeConstDB;" 3387 2  () () 0]
[ebrowse-ms "d_graph" () 0 () "  VarOrderGraph d_graph;" 4997 2  () () 0]
[ebrowse-ms "d_inModelCreation" () 0 () "  CDO<bool> d_inModelCreation;" 1146 2  () () 0]
[ebrowse-ms "d_inequalitiesLeftDB" () 0 () "  ExprMap<CDList<Ineq> *> d_inequalitiesLeftDB;" 2866 2  () () 0]
[ebrowse-ms "d_inequalitiesRightDB" () 0 () "  ExprMap<CDList<Ineq> *> d_inequalitiesRightDB;" 2750 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  ArithProofRules* d_rules;" 1115 2  () () 0]
[ebrowse-ms "d_sharedTerms" () 0 () "  CDMap<Expr, bool> d_sharedTerms;" 4094 2  () () 0]
[ebrowse-ms "d_sharedVars" () 0 () "  CDMap<Expr, bool> d_sharedVars;" 4177 2  () () 0]
[ebrowse-ms "dependenciesMap" () 0 () "  		DependenciesMap dependenciesMap;" 23275 2  () () 0]
[ebrowse-ms "explanation" () 0 () "  	  	Theorem explanation;" 19722 2  () () 0]
[ebrowse-ms "freshVariables" () 0 () "		TebleauxMap freshVariables;" 23624 2  () () 0]
[ebrowse-ms "intVariables" () 0 () "  	  	std::set<Expr> intVariables;" 18652 2  () () 0]
[ebrowse-ms "integer_lemma" () 0 () "  		CDO<Theorem> integer_lemma;" 34955 2  () () 0]
[ebrowse-ms "lowerBound" () 0 () "  		CDMap<Expr, BoundInfo> lowerBound;" 22562 2  () () 0]
[ebrowse-ms "propagate" () 0 () "		bool propagate;" 24139 2  () () 0]
[ebrowse-ms "tableaux" () 0 () "  		TebleauxMap tableaux;" 23455 2  () () 0]
[ebrowse-ms "unsatBasicVariables" () 0 () "		std::set<Expr> unsatBasicVariables;" 23727 2  () () 0]
[ebrowse-ms "upperBound" () 0 () "  		CDMap<Expr, BoundInfo> upperBound;" 22682 2  () () 0]
)
([ebrowse-ms "TheoryArithNew" () 0 () "  TheoryArithNew(TheoryCore* core);" 9518 0  () () 0]
[ebrowse-ms "addInequalities" () 0 () "  		Theorem addInequalities(const" 34517 2  () () 0]
[ebrowse-ms "addSharedTerm" () 1 () "  void addSharedTerm(const" 9762 0  () () 0]
[ebrowse-ms "addToBuffer" () 0 () "  void addToBuffer(const" 7320 2  () () 0]
[ebrowse-ms "assertEqual" () 0 () "  		QueryResult assertEqual(const" 30547 2  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 9796 0  () () 0]
[ebrowse-ms "assertLower" () 0 () "  		QueryResult assertLower(const" 30282 2  () () 0]
[ebrowse-ms "assertUpper" () 0 () "  		QueryResult assertUpper(const" 29999 2  () () 0]
[ebrowse-ms "assignVariables" () 0 () "  void assignVariables(std" 8039 2  () () 0]
[ebrowse-ms "boundsAsString" () 0 () "		std::string boundsAsString()" 26550 2  () () 0]
[ebrowse-ms "canon" () 1 () "  Theorem canon(const" 5545 2  () () 0]
[ebrowse-ms "canonConjunctionEquiv" () 0 () "  Theorem canonConjunctionEquiv(const" 6416 2  () () 0]
[ebrowse-ms "canonPred" () 0 () "  Theorem canonPred(const" 6032 2  () () 0]
[ebrowse-ms "canonPredEquiv" () 0 () "  Theorem canonPredEquiv(const" 6187 2  () () 0]
[ebrowse-ms "canonSimplify" () 0 () "  Theorem canonSimplify(const" 5877 2  () "  Theorem canonSimplify(const" 5877]
[ebrowse-ms "checkAssertEqInvariant" () 1 () "  void checkAssertEqInvariant(const" 10171 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 9976 0  () () 0]
[ebrowse-ms "checkSatInteger" () 0 () "  		QueryResult checkSatInteger()" 34755 2  () () 0]
[ebrowse-ms "checkSatSimplex" () 0 () "  		QueryResult checkSatSimplex()" 34644 2  () () 0]
[ebrowse-ms "checkType" () 1 () "  void checkType(const" 10207 0  () () 0]
[ebrowse-ms "collectVars" () 0 () "  void collectVars(const" 8955 2  () () 0]
[ebrowse-ms "computeBaseType" () 1 () "  Type computeBaseType(const" 10396 0  () () 0]
[ebrowse-ms "computeModel" () 1 () "  void computeModel(const" 9920 0  () () 0]
[ebrowse-ms "computeModelBasic" () 1 () "  void computeModelBasic(const" 9871 0  () () 0]
[ebrowse-ms "computeModelTerm" () 1 () "  void computeModelTerm(const" 10436 0  () () 0]
[ebrowse-ms "computeNormalFactor" () 0 () "  		Expr computeNormalFactor(const" 30914 2  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 10546 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 10357 0  () () 0]
[ebrowse-ms "computeTypePred" () 1 () "  Expr computeTypePred(const" 10497 0  () () 0]
[ebrowse-ms "createProofRules" () 0 () "  ArithProofRules* createProofRules()" 9711 0  () () 0]
[ebrowse-ms "deriveGomoryCut" () 0 () "  	  	Theorem deriveGomoryCut(const" 19182 2  () () 0]
[ebrowse-ms "doSolve" () 0 () "  Theorem doSolve(const" 6302 2  () () 0]
[ebrowse-ms "findBounds" () 0 () "  bool findBounds(const" 8188 2  () () 0]
[ebrowse-ms "findCoefficient" () 0 () "  		const Rational& findCoefficient(const" 27675 2  () () 0]
[ebrowse-ms "findRationalBound" () 0 () "  void findRationalBound(const" 8088 2  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  Cardinality finiteTypeInfo(Expr" 10251 0  () () 0]
[ebrowse-ms "getBeta" () 0 () "  		EpsRational getBeta(const" 36000 0  () () 0]
[ebrowse-ms "getLowerBound" () 4 () "  		EpsRational getLowerBound(const" 35158 0  () () 0]
[ebrowse-ms "getLowerBoundExplanation" () 0 () "  		Theorem getLowerBoundExplanation(const" 33538 2  () () 0]
[ebrowse-ms "getLowerBoundThm" () 4 () "  		Theorem getLowerBoundThm(const" 35575 0  () () 0]
[ebrowse-ms "getTableauxEntry" () 0 () "  		Rational getTableauxEntry(const" 28348 2  () () 0]
[ebrowse-ms "getUpperBound" () 4 () "  		EpsRational getUpperBound(const" 35362 0  () () 0]
[ebrowse-ms "getUpperBoundExplanation" () 0 () "		Theorem getUpperBoundExplanation(const" 34446 2  () () 0]
[ebrowse-ms "getUpperBoundThm" () 4 () "  		Theorem getUpperBoundThm(const" 35793 0  () () 0]
[ebrowse-ms "getVariableIntroThm" () 0 () "		Theorem getVariableIntroThm(const" 26968 2  () () 0]
[ebrowse-ms "isBasic" () 4 () "  		bool isBasic(const" 28032 2  () () 0]
[ebrowse-ms "isInteger" () 0 () "  bool isInteger(const" 7646 0  () "  bool isInteger(const" 7646]
[ebrowse-ms "isIntegerDerive" () 0 () "  Theorem isIntegerDerive(const" 5299 2  () () 0]
[ebrowse-ms "isIntegerThm" () 0 () "  Theorem isIntegerThm(const" 5143 2  () () 0]
[ebrowse-ms "isStale" () 0 () "  bool isStale(const" 7919 2  () () 0]
[ebrowse-ms "isolateVariable" () 0 () "  Theorem isolateVariable(const" 6979 2  () () 0]
[ebrowse-ms "kidsCanonical" () 0 () "  bool kidsCanonical(const" 5441 2  () () 0]
[ebrowse-ms "lessThanVar" () 0 () "  bool lessThanVar(const" 7730 2  () () 0]
[ebrowse-ms "normalize" () 0 () "  		Theorem normalize(const" 31364 2  () () 0]
[ebrowse-ms "normalizeProjectIneqs" () 0 () "  Theorem normalizeProjectIneqs(const" 8268 2  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  virtual Expr parseExprOp(const" 10641 0  () () 0]
[ebrowse-ms "pickIntEqMonomial" () 0 () "  Expr pickIntEqMonomial(const" 6553 2  () () 0]
[ebrowse-ms "pickMonomial" () 0 () "  Expr pickMonomial(const" 7361 2  () () 0]
[ebrowse-ms "pivot" () 0 () "  		void pivot(const" 28974 2  () () 0]
[ebrowse-ms "pivotAndUpdate" () 0 () "  		void pivotAndUpdate(const" 29715 2  () () 0]
[ebrowse-ms "pivotRule" () 0 () "  		Theorem pivotRule(const" 32624 2  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 10587 0  () () 0]
[ebrowse-ms "processFiniteInterval" () 0 () "  void processFiniteInterval(const" 9194 2  () () 0]
[ebrowse-ms "processFiniteIntervals" () 0 () "  void processFiniteIntervals(const" 9363 2  () () 0]
[ebrowse-ms "processIntEq" () 0 () "  Theorem processIntEq(const" 6759 2  () () 0]
[ebrowse-ms "processRealEq" () 0 () "  Theorem processRealEq(const" 6657 2  () () 0]
[ebrowse-ms "processSimpleIntEq" () 0 () "  Theorem processSimpleIntEq(const" 6884 2  () () 0]
[ebrowse-ms "projectInequalities" () 0 () "  void projectInequalities(const" 7965 2  () () 0]
[ebrowse-ms "propagateTheory" () 0 () "		void propagateTheory(const" 24255 2  () () 0]
[ebrowse-ms "rafineIntegerConstraints" () 0 () "  	  	Theorem rafineIntegerConstraints(const" 19539 2  () () 0]
[ebrowse-ms "refineCounterExample" () 1 () "  void refineCounterExample()" 9839 0  () () 0]
[ebrowse-ms "registerAtom" () 0 () " 		void registerAtom(const" 18540 0  () () 0]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 10013 0  () () 0]
[ebrowse-ms "separateMonomial" () 1 () "  void separateMonomial(const" 7540 0  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 10042 0  () () 0]
[ebrowse-ms "setupRec" () 0 () "  void setupRec(const" 9471 2  () () 0]
[ebrowse-ms "solve" () 1 () "  Theorem solve(const" 10122 0  () () 0]
[ebrowse-ms "solvedForm" () 0 () "  Theorem solvedForm(const" 8408 2  () () 0]
[ebrowse-ms "substAndCanonize" () 0 () "  Theorem substAndCanonize(const" 8827 2  () () 0]
[ebrowse-ms "substAndCanonizeModTableaux" () 0 () "  		Theorem substAndCanonizeModTableaux(const" 32059 2  () () 0]
[ebrowse-ms "substAndCanonizeTableaux" () 0 () "  		void substAndCanonizeTableaux(const" 32258 2  () () 0]
[ebrowse-ms "tableauxAsString" () 4 () "		std::string tableauxAsString()" 26251 2  () () 0]
[ebrowse-ms "unsatAsString" () 4 () "		std::string unsatAsString()" 26399 2  () () 0]
[ebrowse-ms "update" () 1 () "  		void update(const" 29316 2  () () 0]
[ebrowse-ms "updateDependencies" () 0 () "		void updateDependencies(const" 25666 2  () () 0]
[ebrowse-ms "updateDependenciesAdd" () 0 () "		void updateDependenciesAdd(const" 24823 2  () () 0]
[ebrowse-ms "updateDependenciesRemove" () 0 () "		void updateDependenciesRemove(const" 25084 2  () () 0]
[ebrowse-ms "updateFreshVariables" () 0 () "		void updateFreshVariables()" 25878 2  () () 0]
[ebrowse-ms "updateStats" () 0 () "  void updateStats(const" 7214 2  () () 0]
[ebrowse-ms "updateStats" () 0 () "  void updateStats(const" 7104 2  () () 0]
[ebrowse-ms "updateValue" () 0 () "		void updateValue(const" 26084 2  () () 0]
[ebrowse-ms "~TheoryArithNew" () 0 () "  ~TheoryArithNew()" 9546 0  () () 0]
)
()
()
([ebrowse-ms "operator <<" () 0 () "  friend std::ostream& operator<<(std" 2599 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
)
([ebrowse-ms "BoundInfoSet" () 0 () "		typedef std::set<ExprBoundInfo> BoundInfoSet;" 24055 2  () () 0]
[ebrowse-ms "DependenciesMap" () 0 () ":hash_map<Expr, SetOfVariables> DependenciesMap;" 23152 2  () () 0]
[ebrowse-ms "SetOfVariables" () 0 () "  		typedef std::set<Expr> SetOfVariables;" 23086 2  () () 0]
[ebrowse-ms "TebleauxMap" () 0 () "pedef Hash::hash_map<Expr, Theorem> TebleauxMap;" 22902 2  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "TheoryArithOld" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "class TheoryArithOld :" 734"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" ]
()([ebrowse-ms "alreadyProjected" () 0 () "	CDMap<Expr, Expr> alreadyProjected;" 15041 2  () () 0]
[ebrowse-ms "bufferedInequalities" () 0 () "	CDMap<Expr, Theorem> bufferedInequalities;" 14336 2  () () 0]
[ebrowse-ms "d_bufferIdx_0" () 0 () "  CDO<size_t> d_bufferIdx_0;" 3801 2  () () 0]
[ebrowse-ms "d_bufferIdx_1" () 0 () "  CDO<size_t> d_bufferIdx_1;" 3883 2  () () 0]
[ebrowse-ms "d_bufferIdx_2" () 0 () "  CDO<size_t> d_bufferIdx_2;" 3965 2  () () 0]
[ebrowse-ms "d_bufferIdx_3" () 0 () "  CDO<size_t> d_bufferIdx_3;" 4047 2  () () 0]
[ebrowse-ms "d_bufferThres" () 0 () "  const int* d_bufferThres;" 4215 2  () () 0]
[ebrowse-ms "d_buffer_0" () 0 () "  CDList<Theorem> d_buffer_0;" 3477 2  () () 0]
[ebrowse-ms "d_buffer_1" () 0 () "  CDList<Theorem> d_buffer_1;" 3557 2  () () 0]
[ebrowse-ms "d_buffer_2" () 0 () "  CDList<Theorem> d_buffer_2;" 3636 2  () () 0]
[ebrowse-ms "d_buffer_3" () 0 () "  CDList<Theorem> d_buffer_3;" 3720 2  () () 0]
[ebrowse-ms "d_countLeft" () 0 () "  CDMap<Expr, int> d_countLeft;" 4803 2  () () 0]
[ebrowse-ms "d_countRight" () 0 () "  CDMap<Expr, int> d_countRight;" 4649 2  () () 0]
[ebrowse-ms "d_diseq" () 0 () "  CDList<Theorem> d_diseq;" 781 2  () () 0]
[ebrowse-ms "d_diseqIdx" () 0 () "  CDO<size_t> d_diseqIdx;" 841 2  () () 0]
[ebrowse-ms "d_freeConstDB" () 0 () "  CDMap<Expr, FreeConst> d_freeConstDB;" 3269 2  () () 0]
[ebrowse-ms "d_graph" () 0 () "  VarOrderGraph d_graph;" 6019 2  () () 0]
[ebrowse-ms "d_grayShadowThres" () 0 () "  const int* d_grayShadowThres;" 4392 2  () () 0]
[ebrowse-ms "d_inModelCreation" () 0 () "  CDO<bool> d_inModelCreation;" 1029 2  () () 0]
[ebrowse-ms "d_inequalitiesLeftDB" () 0 () "  ExprMap<CDList<Ineq> *> d_inequalitiesLeftDB;" 2747 2  () () 0]
[ebrowse-ms "d_inequalitiesRightDB" () 0 () "  ExprMap<CDList<Ineq> *> d_inequalitiesRightDB;" 2630 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  ArithProofRules* d_rules;" 998 2  () () 0]
[ebrowse-ms "d_sharedTerms" () 0 () "  CDMap<Expr, bool> d_sharedTerms;" 4897 2  () () 0]
[ebrowse-ms "d_sharedTermsList" () 0 () "  CDList<Expr> d_sharedTermsList;" 4931 2  () () 0]
[ebrowse-ms "d_sharedVars" () 0 () "  CDMap<Expr, bool> d_sharedVars;" 5015 2  () () 0]
[ebrowse-ms "d_splitSign" () 0 () "  const bool* d_splitSign;" 4292 2  () () 0]
[ebrowse-ms "diffLogicGraph" () 0 () "	DifferenceLogicGraph diffLogicGraph;" 28967 2  () () 0]
[ebrowse-ms "diffLogicOnly" () 0 () "	CDO<bool> diffLogicOnly;" 15335 2  () () 0]
[ebrowse-ms "diff_logic_size" () 0 () "  CDO<size_t> diff_logic_size;" 4132 2  () () 0]
[ebrowse-ms "diseqSplitAlready" () 0 () "  CDMap<Expr, bool> diseqSplitAlready;" 925 2  () () 0]
[ebrowse-ms "dontBuffer" () 0 () "	CDMap<Expr, bool> dontBuffer;" 15258 2  () () 0]
[ebrowse-ms "fixedMaxCoefficient" () 0 () "	ExprMap<Rational> fixedMaxCoefficient;" 13232 2  () () 0]
[ebrowse-ms "formulaAtomLowerBound" () 0 () "	AtomsMap formulaAtomLowerBound;" 16198 2  () () 0]
[ebrowse-ms "formulaAtomUpperBound" () 0 () "	AtomsMap formulaAtomUpperBound;" 16314 2  () () 0]
[ebrowse-ms "formulaAtoms" () 0 () "	ExprMap<bool> formulaAtoms;" 16388 2  () () 0]
[ebrowse-ms "maxCoefficientLeft" () 0 () "	ExprMap<Rational> maxCoefficientLeft;" 13077 2  () () 0]
[ebrowse-ms "maxCoefficientRight" () 0 () "	ExprMap<Rational> maxCoefficientRight;" 13117 2  () () 0]
[ebrowse-ms "multiplicativeSignSplits" () 0 () "	std::vector<Theorem> multiplicativeSignSplits;" 29200 2  () () 0]
[ebrowse-ms "shared_index_1" () 0 () "	CDO<unsigned> shared_index_1;" 29066 2  () () 0]
[ebrowse-ms "shared_index_2" () 0 () "	CDO<unsigned> shared_index_2;" 29151 2  () () 0]
[ebrowse-ms "termConstrainedAbove" () 0 () "	CDMap<Expr, bool> termConstrainedAbove;" 29648 2  () () 0]
[ebrowse-ms "termConstrainedBelow" () 0 () "	CDMap<Expr, bool> termConstrainedBelow;" 29607 2  () () 0]
[ebrowse-ms "termLowerBound" () 0 () "	CDMap<Expr, Rational> termLowerBound;" 14462 2  () () 0]
[ebrowse-ms "termLowerBoundThm" () 0 () "	CDMap<Expr, Theorem> termLowerBoundThm;" 14503 2  () () 0]
[ebrowse-ms "termLowerBounded" () 0 () "erenceLogicGraph::EpsRational> termLowerBounded;" 29518 2  () () 0]
[ebrowse-ms "termUpperBound" () 0 () "	CDMap<Expr, Rational> termUpperBound;" 14628 2  () () 0]
[ebrowse-ms "termUpperBoundThm" () 0 () "	CDMap<Expr, Theorem> termUpperBoundThm;" 14669 2  () () 0]
[ebrowse-ms "termUpperBounded" () 0 () "erenceLogicGraph::EpsRational> termUpperBounded;" 29452 2  () () 0]
[ebrowse-ms "zero" () 0 () "	Expr zero;" 28980 2  () () 0]
)
([ebrowse-ms "TheoryArithOld" () 0 () "  TheoryArithOld(TheoryCore* core);" 11809 0  () () 0]
[ebrowse-ms "addMultiplicativeSignSplit" () 1 () "	void addMultiplicativeSignSplit(const" 31437 0  () () 0]
[ebrowse-ms "addPairToArithOrder" () 1 () "	bool addPairToArithOrder(const" 31496 0  () () 0]
[ebrowse-ms "addSharedTerm" () 1 () "  void addSharedTerm(const" 12056 0  () () 0]
[ebrowse-ms "addToBuffer" () 0 () "  bool addToBuffer(const" 8910 2  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 12090 0  () () 0]
[ebrowse-ms "assignVariables" () 0 () "  void assignVariables(std" 10323 2  () () 0]
[ebrowse-ms "canPickEqMonomial" () 0 () "	bool canPickEqMonomial(const" 29264 2  () () 0]
[ebrowse-ms "canon" () 1 () "  Theorem canon(const" 7025 2  () () 0]
[ebrowse-ms "canonConjunctionEquiv" () 0 () "  Theorem canonConjunctionEquiv(const" 7902 2  () () 0]
[ebrowse-ms "canonPred" () 0 () "  Theorem canonPred(const" 7515 2  () () 0]
[ebrowse-ms "canonPredEquiv" () 0 () "  Theorem canonPredEquiv(const" 7671 2  () () 0]
[ebrowse-ms "canonSimplify" () 0 () "  Theorem canonSimplify(const" 7359 2  () "  Theorem canonSimplify(const" 7359]
[ebrowse-ms "checkAssertEqInvariant" () 1 () "  void checkAssertEqInvariant(const" 12465 0  () () 0]
[ebrowse-ms "checkIntegerEquality" () 0 () "	Theorem checkIntegerEquality(const" 14216 2  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 12270 0  () () 0]
[ebrowse-ms "checkType" () 1 () "  void checkType(const" 12501 0  () () 0]
[ebrowse-ms "collectVars" () 0 () "  void collectVars(const" 11244 2  () () 0]
[ebrowse-ms "computeBaseType" () 1 () "  Type computeBaseType(const" 12690 0  () () 0]
[ebrowse-ms "computeModel" () 1 () "  void computeModel(const" 12214 0  () () 0]
[ebrowse-ms "computeModelBasic" () 1 () "  void computeModelBasic(const" 12165 0  () () 0]
[ebrowse-ms "computeModelTerm" () 1 () "  void computeModelTerm(const" 12730 0  () () 0]
[ebrowse-ms "computeNormalFactor" () 0 () "  Expr computeNormalFactor(const" 9097 2  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 12840 0  () () 0]
[ebrowse-ms "computeTermBounds" () 0 () "	int computeTermBounds()" 31278 2  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 12651 0  () () 0]
[ebrowse-ms "computeTypePred" () 1 () "  Expr computeTypePred(const" 12791 0  () () 0]
[ebrowse-ms "createProofRulesOld" () 0 () "  ArithProofRules* createProofRulesOld()" 12005 0  () () 0]
[ebrowse-ms "currentMaxCoefficient" () 0 () "	Rational currentMaxCoefficient(Expr" 13374 2  () () 0]
[ebrowse-ms "doSolve" () 0 () "  Theorem doSolve(const" 7787 2  () () 0]
[ebrowse-ms "extractTermsFromInequality" () 0 () "	int extractTermsFromInequality(const" 15904 2  () () 0]
[ebrowse-ms "findBounds" () 0 () "  bool findBounds(const" 10473 2  () () 0]
[ebrowse-ms "findRationalBound" () 0 () "  void findRationalBound(const" 10373 2  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  Cardinality finiteTypeInfo(Expr" 12545 0  () () 0]
[ebrowse-ms "fixCurrentMaxCoefficient" () 0 () "	void fixCurrentMaxCoefficient(Expr" 13654 2  () () 0]
[ebrowse-ms "freeConstIneq" () 0 () "  const Rational& freeConstIneq(const" 6446 2  () () 0]
[ebrowse-ms "getFactors" () 0 () "  void getFactors(const" 9538 2  () () 0]
[ebrowse-ms "getLowerBound" () 0 () "renceLogicGraph::EpsRational getLowerBound(const" 31137 2  () () 0]
[ebrowse-ms "getUpperBound" () 0 () "renceLogicGraph::EpsRational getUpperBound(const" 30921 2  () () 0]
[ebrowse-ms "hasLowerBound" () 0 () "	bool hasLowerBound(const" 30227 2  () "	bool hasLowerBound(const" 30227]
[ebrowse-ms "hasUpperBound" () 0 () "	bool hasUpperBound(const" 30363 2  () "	bool hasUpperBound(const" 30363]
[ebrowse-ms "inequalityToFind" () 0 () "	Theorem inequalityToFind(const" 15475 2  () () 0]
[ebrowse-ms "isBounded" () 0 () "	bool isBounded(const" 30141 2  () () 0]
[ebrowse-ms "isConstrained" () 0 () "	bool isConstrained(const" 30500 2  () () 0]
[ebrowse-ms "isConstrainedAbove" () 0 () "	bool isConstrainedAbove(const" 30612 2  () () 0]
[ebrowse-ms "isConstrainedBelow" () 0 () "	bool isConstrainedBelow(const" 30703 2  () () 0]
[ebrowse-ms "isInteger" () 0 () "  bool isInteger(const" 9850 0  () "  bool isInteger(const" 9850]
[ebrowse-ms "isIntegerDerive" () 0 () "  Theorem isIntegerDerive(const" 6321 2  () () 0]
[ebrowse-ms "isIntegerThm" () 0 () "  Theorem isIntegerThm(const" 6164 2  () () 0]
[ebrowse-ms "isNonlinearEq" () 0 () "	bool isNonlinearEq(const" 31776 0  () () 0]
[ebrowse-ms "isNonlinearSumTerm" () 0 () "	bool isNonlinearSumTerm(const" 31865 0  () () 0]
[ebrowse-ms "isPowerEquality" () 0 () "	bool isPowerEquality(const" 32128 0  () () 0]
[ebrowse-ms "isPowersEquality" () 0 () "	bool isPowersEquality(const" 31988 0  () () 0]
[ebrowse-ms "isStale" () 0 () "  bool isStale(const" 10201 2  () () 0]
[ebrowse-ms "isolateVariable" () 0 () "  Theorem isolateVariable(const" 8566 2  () () 0]
[ebrowse-ms "kidsCanonical" () 0 () "  bool kidsCanonical(const" 6921 2  () () 0]
[ebrowse-ms "lessThanVar" () 0 () "  bool lessThanVar(const" 10010 2  () () 0]
[ebrowse-ms "nonlinearSignSplit" () 4 () "	bool nonlinearSignSplit()" 31560 0  () "	bool nonlinearSignSplit()" 31560]
[ebrowse-ms "normalize" () 0 () "  Theorem normalize(const" 9457 2  () () 0]
[ebrowse-ms "normalizeProjectIneqs" () 0 () "  Theorem normalizeProjectIneqs(const" 10553 2  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  Expr parseExprOp(const" 12927 0  () () 0]
[ebrowse-ms "pickIntEqMonomial" () 0 () "  bool pickIntEqMonomial(const" 8040 2  () () 0]
[ebrowse-ms "pickMonomial" () 0 () "  Expr pickMonomial(const" 9499 2  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 12881 0  () () 0]
[ebrowse-ms "processBuffer" () 0 () "  void processBuffer()" 8484 2  () () 0]
[ebrowse-ms "processFiniteInterval" () 0 () "  void processFiniteInterval(const" 11484 2  () () 0]
[ebrowse-ms "processFiniteIntervals" () 0 () "  void processFiniteIntervals(const" 11653 2  () () 0]
[ebrowse-ms "processIntEq" () 0 () "  Theorem processIntEq(const" 8278 2  () () 0]
[ebrowse-ms "processRealEq" () 0 () "  Theorem processRealEq(const" 8175 2  () () 0]
[ebrowse-ms "processSimpleIntEq" () 0 () "  Theorem processSimpleIntEq(const" 8404 2  () () 0]
[ebrowse-ms "projectInequalities" () 0 () "  void projectInequalities(const" 10248 2  () () 0]
[ebrowse-ms "rafineIneqaulityToInteger" () 0 () "	Theorem rafineIneqaulityToInteger(const" 14033 2  () () 0]
[ebrowse-ms "refineCounterExample" () 1 () "  void refineCounterExample()" 12133 0  () () 0]
[ebrowse-ms "registerAtom" () 0 () "	void registerAtom(const" 16003 2  () () 0]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 12307 0  () () 0]
[ebrowse-ms "selectSmallestByCoefficient" () 0 () "	void selectSmallestByCoefficient(const" 13822 2  () () 0]
[ebrowse-ms "separateMonomial" () 1 () "  void separateMonomial(const" 9743 0  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 12336 0  () () 0]
[ebrowse-ms "setupRec" () 0 () "  void setupRec(const" 11762 2  () () 0]
[ebrowse-ms "solve" () 1 () "  Theorem solve(const" 12416 0  () () 0]
[ebrowse-ms "solvedForm" () 0 () "  Theorem solvedForm(const" 10694 2  () () 0]
[ebrowse-ms "substAndCanonize" () 0 () "  Theorem substAndCanonize(const" 11115 2  () () 0]
[ebrowse-ms "termDegree" () 0 () "	int termDegree(const" 29223 2  () () 0]
[ebrowse-ms "tryPropagate" () 0 () "	void tryPropagate(const" 31314 0  () () 0]
[ebrowse-ms "update" () 1 () "  void update(const" 12366 0  () () 0]
[ebrowse-ms "updateStats" () 0 () "  void updateStats(const" 8803 2  () () 0]
[ebrowse-ms "updateStats" () 0 () "  void updateStats(const" 8692 2  () () 0]
[ebrowse-ms "updateSubsumptionDB" () 0 () "  const FreeConst& updateSubsumptionDB(const" 6760 2  () () 0]
[ebrowse-ms "~TheoryArithOld" () 0 () "  ~TheoryArithOld()" 11837 0  () () 0]
)
()
()
([ebrowse-ms "operator <<" () 0 () "  friend std::ostream& operator<<(std" 2478 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
)
([ebrowse-ms "AtomsMap" () 0 () "td::set< std::pair<Rational, Expr> > > AtomsMap;" 16082 2  () () 0]
[ebrowse-ms "BoundsQueryType" () 0 () "	enum BoundsQueryType {" 29673 2  () "	enum BoundsQueryType {" 29673]
)
()()
])([ebrowse-ms "d_intType" () 0 () "  Type d_intType;" 1506 1  () () 0]
[ebrowse-ms "d_kinds" () 0 () "  std::vector<int> d_kinds;" 1534 1  () () 0]
[ebrowse-ms "d_realType" () 0 () "  Type d_realType;" 1488 1  () () 0]
)
([ebrowse-ms "TheoryArith" () 0 () "    :" 2176 0  () "    :" 2176]
[ebrowse-ms "addMultiplicativeSignSplit" () 1 () "  virtual void addMultiplicativeSignSplit(const" 2305 0  () "  virtual void addMultiplicativeSignSplit(const" 2305]
[ebrowse-ms "addPairToArithOrder" () 1 () "  virtual bool addPairToArithOrder(const" 2533 0  () "  virtual bool addPairToArithOrder(const" 2533]
[ebrowse-ms "addSharedTerm" () 9 () "  virtual void addSharedTerm(const" 3455 0  () () 0]
[ebrowse-ms "assertFact" () 9 () "  virtual void assertFact(const" 3501 0  () () 0]
[ebrowse-ms "canon" () 9 () "  virtual Theorem canon(const" 1647 1  () () 0]
[ebrowse-ms "canonRec" () 0 () "  Theorem canonRec(const" 1731 1  () () 0]
[ebrowse-ms "canonSimp" () 0 () "  Theorem canonSimp(const" 2043 1  () () 0]
[ebrowse-ms "canonThm" () 0 () "  Theorem canonThm(const" 3121 0  () "  Theorem canonThm(const" 3121]
[ebrowse-ms "checkAssertEqInvariant" () 9 () "  virtual void checkAssertEqInvariant(const" 3984 0  () () 0]
[ebrowse-ms "checkSat" () 9 () "  virtual void checkSat(bool" 3729 0  () () 0]
[ebrowse-ms "checkType" () 9 () "  virtual void checkType(const" 4032 0  () () 0]
[ebrowse-ms "computeBaseType" () 9 () "  virtual Type computeBaseType(const" 4265 0  () () 0]
[ebrowse-ms "computeModel" () 9 () "  virtual void computeModel(const" 3661 0  () () 0]
[ebrowse-ms "computeModelBasic" () 9 () "  virtual void computeModelBasic(const" 3600 0  () () 0]
[ebrowse-ms "computeModelTerm" () 9 () "  virtual void computeModelTerm(const" 4317 0  () () 0]
[ebrowse-ms "computeTCC" () 9 () "  virtual Expr computeTCC(const" 4451 0  () () 0]
[ebrowse-ms "computeType" () 9 () "  virtual void computeType(const" 4214 0  () () 0]
[ebrowse-ms "computeTypePred" () 9 () "  virtual Expr computeTypePred(const" 4390 0  () () 0]
[ebrowse-ms "darkShadow" () 0 () "  Expr darkShadow(const" 4973 0  () "  Expr darkShadow(const" 4973]
[ebrowse-ms "finiteTypeInfo" () 9 () "  virtual Cardinality finiteTypeInfo(Expr" 4088 0  () () 0]
[ebrowse-ms "grayShadow" () 0 () "  Expr grayShadow(const" 5212 0  () "  Expr grayShadow(const" 5212]
[ebrowse-ms "intType" () 0 () "  Type intType()" 4659 0  () "  Type intType()" 4659]
[ebrowse-ms "isAtomicArithFormula" () 0 () "  bool isAtomicArithFormula(const" 2845 0  () () 0]
[ebrowse-ms "isAtomicArithTerm" () 0 () "  bool isAtomicArithTerm(const" 1966 1  () () 0]
[ebrowse-ms "isSyntacticRational" () 0 () "  bool isSyntacticRational(const" 2717 0  () () 0]
[ebrowse-ms "leavesAreNumConst" () 0 () "  bool leavesAreNumConst(const" 5371 0  () () 0]
[ebrowse-ms "parseExprOp" () 9 () "  virtual Expr parseExprOp(const" 4562 0  () () 0]
[ebrowse-ms "print" () 9 () "  virtual ExprStream& print(ExprStream" 4504 0  () () 0]
[ebrowse-ms "printRational" () 0 () "  void printRational(ExprStream" 1815 1  () () 0]
[ebrowse-ms "rat" () 0 () "  Expr rat(Rational" 4793 0  () "  Expr rat(Rational" 4793]
[ebrowse-ms "realType" () 0 () "  Type realType()" 4619 0  () "  Type realType()" 4619]
[ebrowse-ms "recursiveCanonSimpCheck" () 0 () "  bool recursiveCanonSimpCheck(const" 2131 1  () () 0]
[ebrowse-ms "refineCounterExample" () 9 () "  virtual void refineCounterExample()" 3556 0  () () 0]
[ebrowse-ms "rewrite" () 9 () "  virtual Theorem rewrite(const" 3778 0  () () 0]
[ebrowse-ms "rewriteToDiff" () 0 () "  Expr rewriteToDiff(const" 2964 0  () () 0]
[ebrowse-ms "separateMonomial" () 9 () "  virtual void separateMonomial(const" 3363 0  () () 0]
[ebrowse-ms "setup" () 9 () "  virtual void setup(const" 3819 0  () () 0]
[ebrowse-ms "solve" () 9 () "  virtual Theorem solve(const" 3923 0  () () 0]
[ebrowse-ms "subrangeType" () 0 () "  Type subrangeType(const" 4706 0  () "  Type subrangeType(const" 4706]
[ebrowse-ms "update" () 9 () "  virtual void update(const" 3861 0  () () 0]
[ebrowse-ms "~TheoryArith" () 0 () "  ~TheoryArith()" 2253 0  () "  ~TheoryArith()" 2253]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryArray" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "class TheoryArray :" 1229() ]
()([ebrowse-ms "d_applicationsInModel" () 0 () "  const bool& d_applicationsInModel;" 1560 2  () () 0]
[ebrowse-ms "d_inCheckSat" () 0 () "  int d_inCheckSat;" 1912 2  () () 0]
[ebrowse-ms "d_index" () 0 () "  CDO<unsigned> d_index;" 1860 2  () () 0]
[ebrowse-ms "d_liftReadIte" () 0 () "  const bool& d_liftReadIte;" 1625 2  () () 0]
[ebrowse-ms "d_reads" () 0 () "  CDList<Expr> d_reads;" 1367 2  () () 0]
[ebrowse-ms "d_renameThms" () 0 () "  ExprMap<Theorem> d_renameThms;" 1467 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  ArrayProofRules* d_rules;" 1272 2  () () 0]
[ebrowse-ms "d_sharedSubterms" () 0 () "  CDMap<Expr,Expr> d_sharedSubterms;" 1719 2  () () 0]
[ebrowse-ms "d_sharedSubtermsList" () 0 () "  CDList<Expr> d_sharedSubtermsList;" 1812 2  () () 0]
)
([ebrowse-ms "TheoryArray" () 0 () "  TheoryArray(TheoryCore* core);" 2172 0  () () 0]
[ebrowse-ms "addSharedTerm" () 1 () "  void addSharedTerm(const" 2413 0  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 2447 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 2481 0  () () 0]
[ebrowse-ms "checkType" () 1 () "  void checkType(const" 2663 0  () () 0]
[ebrowse-ms "computeBaseType" () 1 () "  Type computeBaseType(const" 2852 0  () () 0]
[ebrowse-ms "computeModel" () 1 () "  void computeModel(const" 2950 0  () () 0]
[ebrowse-ms "computeModelTerm" () 1 () "  void computeModelTerm(const" 2892 0  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 3009 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 2813 0  () () 0]
[ebrowse-ms "createProofRules" () 0 () "  ArrayProofRules* createProofRules()" 2362 0  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  Cardinality finiteTypeInfo(Expr" 2707 0  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  virtual Expr parseExprOp(const" 3052 0  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 3093 0  () () 0]
[ebrowse-ms "pullIndex" () 0 () "  Theorem pullIndex(const" 2109 2  () () 0]
[ebrowse-ms "renameExpr" () 0 () "  Theorem renameExpr(const" 1961 2  () () 0]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 2518 0  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 2547 0  () () 0]
[ebrowse-ms "solve" () 1 () "  Theorem solve(const" 2627 0  () () 0]
[ebrowse-ms "update" () 1 () "  void update(const" 2577 0  () () 0]
[ebrowse-ms "~TheoryArray" () 0 () "  ~TheoryArray()" 2197 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryBitvector" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_bitvector.h" "class TheoryBitvector :" 1911"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_bitvector.h" ]
()([ebrowse-ms "additionalRewriteConstraints" () 0 () "d::vector<Theorem> additionalRewriteConstraints;" 13398 0  () () 0]
[ebrowse-ms "d_bb_index" () 0 () "  CDO<unsigned int> d_bb_index;" 3599 2  () () 0]
[ebrowse-ms "d_bitblast" () 0 () "  CDList<Theorem> d_bitblast;" 3521 2  () () 0]
[ebrowse-ms "d_bitvecCache" () 0 () "  CDMap<Expr,Theorem> d_bitvecCache;" 3008 2  () () 0]
[ebrowse-ms "d_boolExtractCacheFlag" () 0 () "  const bool* d_boolExtractCacheFlag;" 2805 2  () () 0]
[ebrowse-ms "d_booleanRWFlag" () 0 () "  const bool* d_booleanRWFlag;" 2737 2  () () 0]
[ebrowse-ms "d_bv32Flag" () 0 () "  const bool* d_bv32Flag;" 2905 2  () () 0]
[ebrowse-ms "d_bvAssertDiseq" () 0 () "  StatCounter d_bvAssertDiseq;" 2402 2  () () 0]
[ebrowse-ms "d_bvAssertEq" () 0 () "  StatCounter d_bvAssertEq;" 2261 2  () () 0]
[ebrowse-ms "d_bvBitBlastDiseq" () 0 () "  StatCounter d_bvBitBlastDiseq;" 2667 2  () () 0]
[ebrowse-ms "d_bvBitBlastEq" () 0 () "  StatCounter d_bvBitBlastEq;" 2596 2  () () 0]
[ebrowse-ms "d_bvConstExprIndex" () 0 () "  size_t d_bvConstExprIndex;" 2038 2  () () 0]
[ebrowse-ms "d_bvDelayDiseq" () 0 () "  StatCounter d_bvDelayDiseq;" 2335 2  () () 0]
[ebrowse-ms "d_bvDelayEq" () 0 () "  StatCounter d_bvDelayEq;" 2200 2  () () 0]
[ebrowse-ms "d_bvDelayTypePreds" () 0 () "  StatCounter d_bvDelayTypePreds;" 2531 2  () () 0]
[ebrowse-ms "d_bvOne" () 0 () "  Expr d_bvOne;" 3895 2  () () 0]
[ebrowse-ms "d_bvParameterExprIndex" () 0 () "  size_t d_bvParameterExprIndex;" 2099 2  () () 0]
[ebrowse-ms "d_bvPlusCarryCacheLeftBV" () 0 () "  ExprMap<Expr> d_bvPlusCarryCacheLeftBV;" 7444 0  () () 0]
[ebrowse-ms "d_bvPlusCarryCacheRightBV" () 0 () "  ExprMap<Expr> d_bvPlusCarryCacheRightBV;" 7487 0  () () 0]
[ebrowse-ms "d_bvPlusExprIndex" () 0 () "  size_t d_bvPlusExprIndex;" 2066 2  () () 0]
[ebrowse-ms "d_bvTypePredExprIndex" () 0 () "  size_t d_bvTypePredExprIndex;" 2131 2  () () 0]
[ebrowse-ms "d_bvTypePreds" () 0 () "  StatCounter d_bvTypePreds;" 2460 2  () () 0]
[ebrowse-ms "d_bvZero" () 0 () "  Expr d_bvZero;" 3841 2  () () 0]
[ebrowse-ms "d_eq" () 0 () "  CDList<Theorem> d_eq;" 3282 2  () () 0]
[ebrowse-ms "d_eqPending" () 0 () "  CDList<Theorem> d_eqPending;" 3362 2  () () 0]
[ebrowse-ms "d_eq_index" () 0 () "  CDO<unsigned int> d_eq_index;" 3441 2  () () 0]
[ebrowse-ms "d_index1" () 0 () "  CDO<unsigned> d_index1;" 4176 2  () () 0]
[ebrowse-ms "d_index2" () 0 () "  CDO<unsigned> d_index2;" 4202 2  () () 0]
[ebrowse-ms "d_maxLength" () 0 () "  int d_maxLength;" 4126 2  () () 0]
[ebrowse-ms "d_pushNegCache" () 0 () "  ExprMap<Theorem> d_pushNegCache;" 3217 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  BitvectorProofRules* d_rules;" 1958 2  () () 0]
[ebrowse-ms "d_sharedSubterms" () 0 () "  CDMap<Expr,Expr> d_sharedSubterms;" 3692 2  () () 0]
[ebrowse-ms "d_sharedSubtermsList" () 0 () "  CDList<Expr> d_sharedSubtermsList;" 3785 2  () () 0]
)
([ebrowse-ms "BVSize" () 0 () "  int BVSize(const" 8619 0  () () 0]
[ebrowse-ms "Odd_coeff" () 0 () "  Rational Odd_coeff( const" 6895 2  () () 0]
[ebrowse-ms "TheoryBitvector" () 0 () "  TheoryBitvector(TheoryCore* core);" 7371 0  () () 0]
[ebrowse-ms "addSharedTerm" () 1 () "  void addSharedTerm(const" 7710 0  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 7744 0  () () 0]
[ebrowse-ms "assertTypePred" () 1 () "  void assertTypePred(const" 7785 0  () () 0]
[ebrowse-ms "bitBlastDisEqn" () 0 () "  Theorem bitBlastDisEqn(const" 4363 2  () () 0]
[ebrowse-ms "bitBlastEqn" () 0 () "  Theorem bitBlastEqn(const" 4295 2  () () 0]
[ebrowse-ms "bitBlastIneqn" () 0 () "  Theorem bitBlastIneqn(const" 4481 2  () () 0]
[ebrowse-ms "bitBlastTerm" () 0 () "  Theorem bitBlastTerm(const" 4584 2  () () 0]
[ebrowse-ms "bvOne" () 4 () "  const Expr& bvOne()" 4037 2  () "  const Expr& bvOne()" 4037]
[ebrowse-ms "bvZero" () 4 () "  const Expr& bvZero()" 3953 2  () "  const Expr& bvZero()" 3953]
[ebrowse-ms "canSolveFor" () 0 () "  bool canSolveFor( const" 13165 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 7837 0  () () 0]
[ebrowse-ms "checkType" () 1 () "  void checkType(const" 8059 0  () () 0]
[ebrowse-ms "check_linear" () 0 () "  int check_linear( const" 6972 2  () () 0]
[ebrowse-ms "comparebv" () 0 () "  bool comparebv(const" 8787 0  () () 0]
[ebrowse-ms "computeBVConst" () 0 () "  Rational computeBVConst(const" 12787 0  () () 0]
[ebrowse-ms "computeModel" () 1 () "  void computeModel(const" 8307 0  () () 0]
[ebrowse-ms "computeModelTerm" () 1 () "  void computeModelTerm(const" 8249 0  () () 0]
[ebrowse-ms "computeNegBVConst" () 0 () "  Rational computeNegBVConst(const" 12887 0  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 8420 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 8209 0  () () 0]
[ebrowse-ms "computeTypePred" () 1 () "  Expr computeTypePred(const" 8371 0  () () 0]
[ebrowse-ms "countTermIn" () 0 () "  int countTermIn( const" 7153 2  () () 0]
[ebrowse-ms "createProofRules" () 0 () "  BitvectorProofRules* createProofRules()" 7659 0  () () 0]
[ebrowse-ms "extract_vars" () 0 () "  void extract_vars( const" 13059 0  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  Cardinality finiteTypeInfo(Expr" 8103 0  () () 0]
[ebrowse-ms "generalBitBlast" () 0 () "  Theorem generalBitBlast( const" 7279 2  () () 0]
[ebrowse-ms "getBVConstSize" () 0 () "  unsigned getBVConstSize(const" 12643 0  () () 0]
[ebrowse-ms "getBVConstValue" () 0 () "  bool getBVConstValue(const" 12682 0  () () 0]
[ebrowse-ms "getBVIndex" () 0 () "  int getBVIndex(const" 12322 0  () () 0]
[ebrowse-ms "getBVMultParam" () 0 () "  int getBVMultParam(const" 12600 0  () () 0]
[ebrowse-ms "getBVPlusParam" () 0 () "  int getBVPlusParam(const" 12563 0  () () 0]
[ebrowse-ms "getBitvectorTypeParam" () 0 () "  int getBitvectorTypeParam(const" 12119 0  () "  int getBitvectorTypeParam(const" 12119]
[ebrowse-ms "getBoolExtractIndex" () 0 () "  int getBoolExtractIndex(const" 12364 0  () () 0]
[ebrowse-ms "getExtractHi" () 0 () "  int getExtractHi(const" 12490 0  () () 0]
[ebrowse-ms "getExtractLow" () 0 () "  int getExtractLow(const" 12526 0  () () 0]
[ebrowse-ms "getFixedLeftShiftParam" () 0 () "  int getFixedLeftShiftParam(const" 12409 0  () () 0]
[ebrowse-ms "getFixedRightShiftParam" () 0 () "  int getFixedRightShiftParam(const" 12455 0  () () 0]
[ebrowse-ms "getMaxSize" () 0 () "  int getMaxSize()" 12917 0  () "  int getMaxSize()" 12917]
[ebrowse-ms "getSXIndex" () 0 () "  int getSXIndex(const" 12289 0  () () 0]
[ebrowse-ms "getTypePredExpr" () 0 () "  const Expr& getTypePredExpr(const" 12255 0  () () 0]
[ebrowse-ms "getTypePredType" () 0 () "  Type getTypePredType(const" 12208 0  () () 0]
[ebrowse-ms "isLinearTerm" () 0 () "  bool isLinearTerm( const" 13021 0  () () 0]
[ebrowse-ms "isTermIn" () 0 () "  bool isTermIn(const" 7006 2  () () 0]
[ebrowse-ms "min" () 0 () "  int min(std" 6565 2  () () 0]
[ebrowse-ms "multiplicative_inverse" () 0 () "  Rational multiplicative_inverse(Rational" 13279 0  () () 0]
[ebrowse-ms "multiply_coeff" () 0 () "  Expr multiply_coeff( Rational" 6476 2  () () 0]
[ebrowse-ms "newBVAndExpr" () 0 () "  Expr newBVAndExpr(const" 9112 0  () () 0]
[ebrowse-ms "newBVAndExpr" () 0 () "  Expr newBVAndExpr(const" 9059 0  () () 0]
[ebrowse-ms "newBVCompExpr" () 0 () "  Expr newBVCompExpr(const" 9591 0  () () 0]
[ebrowse-ms "newBVConstExpr" () 0 () "  Expr newBVConstExpr(const" 10492 0  () () 0]
[ebrowse-ms "newBVConstExpr" () 0 () "  Expr newBVConstExpr(const" 10841 0  () () 0]
[ebrowse-ms "newBVExtractExpr" () 0 () "  Expr newBVExtractExpr(const" 10992 0  () () 0]
[ebrowse-ms "newBVIndexExpr" () 0 () "  Expr newBVIndexExpr(int" 9792 0  () () 0]
[ebrowse-ms "newBVLEExpr" () 0 () "  Expr newBVLEExpr(const" 9696 0  () () 0]
[ebrowse-ms "newBVLTExpr" () 0 () "  Expr newBVLTExpr(const" 9644 0  () () 0]
[ebrowse-ms "newBVMultExpr" () 0 () "  Expr newBVMultExpr(int" 11522 0  () () 0]
[ebrowse-ms "newBVMultExpr" () 0 () "  Expr newBVMultExpr(int" 11447 0  () () 0]
[ebrowse-ms "newBVMultPadExpr" () 0 () "  Expr newBVMultPadExpr(int" 11687 0  () () 0]
[ebrowse-ms "newBVMultPadExpr" () 0 () "  Expr newBVMultPadExpr(int" 11592 0  () () 0]
[ebrowse-ms "newBVNandExpr" () 0 () "  Expr newBVNandExpr(const" 9484 0  () () 0]
[ebrowse-ms "newBVNegExpr" () 0 () "  Expr newBVNegExpr(const" 9957 0  () () 0]
[ebrowse-ms "newBVNorExpr" () 0 () "  Expr newBVNorExpr(const" 9537 0  () () 0]
[ebrowse-ms "newBVOneString" () 0 () "  Expr newBVOneString(int" 10925 0  () () 0]
[ebrowse-ms "newBVOrExpr" () 0 () "  Expr newBVOrExpr(const" 9216 0  () () 0]
[ebrowse-ms "newBVOrExpr" () 0 () "  Expr newBVOrExpr(const" 9164 0  () () 0]
[ebrowse-ms "newBVPlusExpr" () 0 () "  Expr newBVPlusExpr(int" 11271 0  () () 0]
[ebrowse-ms "newBVPlusExpr" () 0 () "  Expr newBVPlusExpr(int" 11152 0  () () 0]
[ebrowse-ms "newBVPlusPadExpr" () 0 () "  Expr newBVPlusPadExpr(int" 11383 0  () () 0]
[ebrowse-ms "newBVSDivExpr" () 0 () "  Expr newBVSDivExpr(const" 11864 0  () () 0]
[ebrowse-ms "newBVSLEExpr" () 0 () "  Expr newBVSLEExpr(const" 9903 0  () () 0]
[ebrowse-ms "newBVSLTExpr" () 0 () "  Expr newBVSLTExpr(const" 9850 0  () () 0]
[ebrowse-ms "newBVSModExpr" () 0 () "  Expr newBVSModExpr(const" 11972 0  () () 0]
[ebrowse-ms "newBVSRemExpr" () 0 () "  Expr newBVSRemExpr(const" 11918 0  () () 0]
[ebrowse-ms "newBVSubExpr" () 0 () "  Expr newBVSubExpr(const" 11048 0  () () 0]
[ebrowse-ms "newBVUDivExpr" () 0 () "  Expr newBVUDivExpr(const" 11756 0  () () 0]
[ebrowse-ms "newBVURemExpr" () 0 () "  Expr newBVURemExpr(const" 11810 0  () () 0]
[ebrowse-ms "newBVUminusExpr" () 0 () "  Expr newBVUminusExpr(const" 9997 0  () () 0]
[ebrowse-ms "newBVXnorExpr" () 0 () "  Expr newBVXnorExpr(const" 9430 0  () () 0]
[ebrowse-ms "newBVXnorExpr" () 0 () "  Expr newBVXnorExpr(const" 9376 0  () () 0]
[ebrowse-ms "newBVXorExpr" () 0 () "  Expr newBVXorExpr(const" 9322 0  () () 0]
[ebrowse-ms "newBVXorExpr" () 0 () "  Expr newBVXorExpr(const" 9269 0  () () 0]
[ebrowse-ms "newBVZeroString" () 0 () "  Expr newBVZeroString(int" 10895 0  () () 0]
[ebrowse-ms "newBitvectorType" () 0 () "  Type newBitvectorType(int" 8894 0  () "  Type newBitvectorType(int" 8894]
[ebrowse-ms "newBitvectorTypeExpr" () 0 () "  Expr newBitvectorTypeExpr(int" 9028 0  () () 0]
[ebrowse-ms "newBitvectorTypePred" () 0 () "  Expr newBitvectorTypePred(const" 8971 0  () () 0]
[ebrowse-ms "newBoolExtractExpr" () 0 () "  Expr newBoolExtractExpr(const" 10040 0  () () 0]
[ebrowse-ms "newConcatExpr" () 0 () "  Expr newConcatExpr(const" 10379 0  () () 0]
[ebrowse-ms "newConcatExpr" () 0 () "  Expr newConcatExpr(const" 10309 0  () () 0]
[ebrowse-ms "newConcatExpr" () 0 () "  Expr newConcatExpr(const" 10255 0  () () 0]
[ebrowse-ms "newFixedConstWidthLeftShiftExpr" () 0 () "  Expr newFixedConstWidthLeftShiftExpr(const" 10156 0  () () 0]
[ebrowse-ms "newFixedLeftShiftExpr" () 0 () "  Expr newFixedLeftShiftExpr(const" 10093 0  () () 0]
[ebrowse-ms "newFixedRightShiftExpr" () 0 () "  Expr newFixedRightShiftExpr(const" 10210 0  () () 0]
[ebrowse-ms "newSXExpr" () 0 () "  Expr newSXExpr(const" 9746 0  () () 0]
[ebrowse-ms "pad" () 0 () "  Expr pad(int" 8742 0  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  Expr parseExprOp(const" 8507 0  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 8461 0  () () 0]
[ebrowse-ms "pushNegation" () 0 () "  Theorem pushNegation(const" 5586 2  () () 0]
[ebrowse-ms "pushNegationRec" () 0 () "  Theorem pushNegationRec(const" 5536 0  () () 0]
[ebrowse-ms "rat" () 0 () "  Expr rat(const" 8647 0  () "  Expr rat(const" 8647]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 7874 0  () () 0]
[ebrowse-ms "rewriteAtomic" () 1 () "  Theorem rewriteAtomic(const" 7914 0  () () 0]
[ebrowse-ms "rewriteBV" () 0 () "  Theorem rewriteBV(const" 6210 2  () "  Theorem rewriteBV(const" 6210]
[ebrowse-ms "rewriteBV" () 0 () "  Theorem rewriteBV(const" 6064 2  () "  Theorem rewriteBV(const" 6064]
[ebrowse-ms "rewriteBoolean" () 0 () "  Theorem rewriteBoolean(const" 6388 2  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 7943 0  () () 0]
[ebrowse-ms "signed_newBVConstExpr" () 0 () "  Expr signed_newBVConstExpr( Rational" 10687 0  () () 0]
[ebrowse-ms "simplifyOp" () 1 () "  virtual Theorem simplifyOp(const" 5658 2  () () 0]
[ebrowse-ms "simplifyPendingEq" () 0 () "  Theorem simplifyPendingEq(const" 7216 2  () () 0]
[ebrowse-ms "solve" () 1 () "  Theorem solve(const" 8023 0  () () 0]
[ebrowse-ms "update" () 1 () "  void update(const" 7973 0  () () 0]
[ebrowse-ms "updateSubterms" () 0 () "  Theorem updateSubterms( const" 7066 2  () () 0]
[ebrowse-ms "~TheoryBitvector" () 0 () "  ~TheoryBitvector()" 7400 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryCore" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_core.h" "class TheoryCore :" 1323"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_core.h" ]
()([ebrowse-ms "EffortLevel" () 0 () "  } EffortLevel;" 7964 2  () () 0]
[ebrowse-ms "d_basicModelVars" () 0 () "  std::vector<Expr> d_basicModelVars;" 3620 2  () () 0]
[ebrowse-ms "d_boundVarMap" () 0 () " std::hash_map<std::string, Expr> d_boundVarMap;" 2963 2  () () 0]
[ebrowse-ms "d_boundVarStack" () 0 () "<std::pair<std::string, Expr> > d_boundVarStack;" 2888 2  () () 0]
[ebrowse-ms "d_cm" () 0 () "  ContextManager* d_cm;" 1408 2  () () 0]
[ebrowse-ms "d_coreSatAPI" () 0 () "  CoreSatAPI* d_coreSatAPI;" 7183 2  () () 0]
[ebrowse-ms "d_exprTrans" () 0 () "  ExprTransform* d_exprTrans;" 1811 2  () () 0]
[ebrowse-ms "d_flags" () 0 () "  const CLFlags& d_flags;" 1571 2  () () 0]
[ebrowse-ms "d_globals" () 0 () "  std::map<std::string, Expr> d_globals;" 2768 2  () () 0]
[ebrowse-ms "d_impliedLiterals" () 0 () "  CDList<Theorem> d_impliedLiterals;" 5372 2  () () 0]
[ebrowse-ms "d_impliedLiteralsIdx" () 0 () "  CDO<unsigned> d_impliedLiteralsIdx;" 5479 2  () () 0]
[ebrowse-ms "d_inAddFact" () 0 () "  bool d_inAddFact;" 4794 2  () () 0]
[ebrowse-ms "d_inCheckSATCore" () 0 () "  bool d_inCheckSATCore;" 4774 2  () () 0]
[ebrowse-ms "d_inPP" () 0 () "  bool d_inPP;" 4834 2  () () 0]
[ebrowse-ms "d_inRegisterAtom" () 0 () "  bool d_inRegisterAtom;" 4819 2  () () 0]
[ebrowse-ms "d_inUpdate" () 0 () "  unsigned d_inUpdate;" 5937 2  () () 0]
[ebrowse-ms "d_incThm" () 0 () "  CDO<Theorem> d_incThm;" 2218 2  () () 0]
[ebrowse-ms "d_incomplete" () 0 () "  CDMap<std::string, bool> d_incomplete;" 2164 2  () () 0]
[ebrowse-ms "d_inconsistent" () 0 () "  CDO<bool> d_inconsistent;" 2050 2  () () 0]
[ebrowse-ms "d_notifyEq" () 0 () "  NotifyList d_notifyEq;" 5861 2  () () 0]
[ebrowse-ms "d_notifyObj" () 0 () "  CoreNotifyObj d_notifyObj;" 5254 2  () () 0]
[ebrowse-ms "d_parseCache" () 0 () "  ExprMap<Expr> d_parseCache;" 3016 2  () () 0]
[ebrowse-ms "d_predicates" () 0 () "  CDList<Expr> d_predicates;" 2606 2  () () 0]
[ebrowse-ms "d_printer" () 0 () "  PrettyPrinter* d_printer;" 1691 2  () () 0]
[ebrowse-ms "d_queue" () 0 () "  std::queue<Theorem> d_queue;" 1911 2  () () 0]
[ebrowse-ms "d_queueSE" () 0 () "  std::vector<Theorem> d_queueSE;" 1997 2  () () 0]
[ebrowse-ms "d_resourceLimit" () 0 () "  unsigned d_resourceLimit;" 4485 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  CoreProofRules* d_rules;" 1506 2  () () 0]
[ebrowse-ms "d_simplifiedModelVars" () 0 () "  ExprHashMap<Theorem> d_simplifiedModelVars;" 4015 2  () () 0]
[ebrowse-ms "d_simplifyInPlace" () 0 () "  const bool* d_simplifyInPlace;" 4102 2  () () 0]
[ebrowse-ms "d_solver" () 0 () "  Theory* d_solver;" 3287 2  () () 0]
[ebrowse-ms "d_statistics" () 0 () "  Statistics& d_statistics;" 1630 2  () () 0]
[ebrowse-ms "d_tccCache" () 0 () "  ExprMap<Expr> d_tccCache;" 3066 2  () () 0]
[ebrowse-ms "d_termTheorems" () 0 () "  std::hash_map<Expr, Theorem> d_termTheorems;" 2434 2  () () 0]
[ebrowse-ms "d_terms" () 0 () "  CDList<Expr> d_terms;" 2318 2  () () 0]
[ebrowse-ms "d_theories" () 0 () "  std::vector<Theory*> d_theories;" 3137 2  () () 0]
[ebrowse-ms "d_theoryMap" () 0 () "  std::hash_map<int, Theory*> d_theoryMap;" 3219 2  () () 0]
[ebrowse-ms "d_timeBase" () 0 () "  unsigned d_timeBase;" 4724 2  () () 0]
[ebrowse-ms "d_timeLimit" () 0 () "  unsigned d_timeLimit;" 4748 2  () () 0]
[ebrowse-ms "d_tm" () 0 () "  TheoremManager* d_tm;" 1455 2  () () 0]
[ebrowse-ms "d_translator" () 0 () "  Translator* d_translator;" 1857 2  () () 0]
[ebrowse-ms "d_typeComputer" () 0 () "  ExprManager::TypeComputer* d_typeComputer;" 1757 2  () () 0]
[ebrowse-ms "d_update_data" () 0 () "  std::vector<Expr> d_update_data;" 5779 2  () () 0]
[ebrowse-ms "d_update_thms" () 0 () "  std::vector<Theorem> d_update_thms;" 5673 2  () () 0]
[ebrowse-ms "d_varAssignments" () 0 () "  ExprHashMap<Theorem> d_varAssignments;" 3511 2  () () 0]
[ebrowse-ms "d_varModelMap" () 0 () "  ExprHashMap<std::vector<Expr> > d_varModelMap;" 3414 2  () () 0]
[ebrowse-ms "d_vars" () 0 () "  CDList<Expr> d_vars;" 2688 2  () () 0]
)
([ebrowse-ms "IF_DEBUG" () 0 () "  IF_DEBUG(void" 8867 2  () () 0]
[ebrowse-ms "IF_DEBUG" () 0 () "  IF_DEBUG(ExprMap" 4854 2  () () 0]
[ebrowse-ms "Theorem" () 0 () "  Theorem (TheoryCore" 4164 2  () () 0]
[ebrowse-ms "TheoryCore" () 0 () "             Statistics& statistics);" 10130 0  () () 0]
[ebrowse-ms "addFact" () 0 () "  void addFact(const" 13610 0  () () 0]
[ebrowse-ms "addNotifyEq" () 0 () "  void addNotifyEq(Theory" 10811 0  () "  void addNotifyEq(Theory" 10811]
[ebrowse-ms "addSharedTerm" () 1 () "  void addSharedTerm(const" 12391 0  () "  void addSharedTerm(const" 12391]
[ebrowse-ms "addToVarDB" () 0 () "  void addToVarDB(const" 15666 0  () () 0]
[ebrowse-ms "assertEqualities" () 1 () "  void assertEqualities(const" 16993 2  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 12428 0  () () 0]
[ebrowse-ms "assertFactCore" () 0 () "  void assertFactCore(const" 8704 2  () () 0]
[ebrowse-ms "assertFormula" () 0 () "  void assertFormula(const" 8782 2  () () 0]
[ebrowse-ms "assignValue" () 1 () "  void assignValue(const" 15588 0  () () 0]
[ebrowse-ms "assignValue" () 1 () "  void assignValue(const" 15481 0  () () 0]
[ebrowse-ms "buildModel" () 0 () "  void buildModel(ExprMap" 16063 0  () () 0]
[ebrowse-ms "callTheoryPreprocess" () 0 () "  Theorem callTheoryPreprocess(const" 10941 0  () () 0]
[ebrowse-ms "checkEquation" () 0 () "  void checkEquation(const" 9927 2  () () 0]
[ebrowse-ms "checkSATCore" () 0 () "  bool checkSATCore()" 14156 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 12462 0  () "  void checkSat(bool" 12462]
[ebrowse-ms "checkSolved" () 0 () "  void checkSolved(const" 10006 2  () () 0]
[ebrowse-ms "checkType" () 1 () "  void checkType(const" 12857 0  () () 0]
[ebrowse-ms "clearInPP" () 0 () "  void clearInPP()" 11655 0  () "  void clearInPP()" 11655]
[ebrowse-ms "collectBasicVars" () 0 () "  void collectBasicVars()" 15968 0  () () 0]
[ebrowse-ms "collectModelValues" () 0 () "  void collectModelValues(const" 16172 0  () () 0]
[ebrowse-ms "computeBaseType" () 1 () "  Type computeBaseType(const" 13046 0  () () 0]
[ebrowse-ms "computeModelBasic" () 1 () "  void computeModelBasic(const" 13365 0  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 13080 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 13007 0  () () 0]
[ebrowse-ms "computeTypePred" () 1 () "  Expr computeTypePred(const" 13119 0  () () 0]
[ebrowse-ms "createProofRules" () 0 () " CoreProofRules* createProofRules(TheoremManager" 7623 2  () () 0]
[ebrowse-ms "enqueueFact" () 1 () "  void enqueueFact(const" 17367 0  () () 0]
[ebrowse-ms "enqueueSE" () 1 () "  void enqueueSE(const" 17403 0  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  Cardinality finiteTypeInfo(Expr" 12901 0  () () 0]
[ebrowse-ms "getCM" () 4 () "  ContextManager* getCM()" 10978 0  () "  ContextManager* getCM()" 10978]
[ebrowse-ms "getCoreRules" () 4 () "  CoreProofRules* getCoreRules()" 11260 0  () "  CoreProofRules* getCoreRules()" 11260]
[ebrowse-ms "getCurQuantLevel" () 0 () "  int getCurQuantLevel()" 11558 0  () () 0]
[ebrowse-ms "getExprTrans" () 4 () "  ExprTransform* getExprTrans()" 11197 0  () "  ExprTransform* getExprTrans()" 11197]
[ebrowse-ms "getFlags" () 4 () "  const CLFlags& getFlags()" 11078 0  () "  const CLFlags& getFlags()" 11078]
[ebrowse-ms "getImpliedLiteral" () 0 () "  Theorem getImpliedLiteral(void" 14715 0  () () 0]
[ebrowse-ms "getImpliedLiteralByIndex" () 0 () "  Theorem getImpliedLiteralByIndex(unsigned" 14919 0  () () 0]
[ebrowse-ms "getModelValue" () 0 () "  Theorem getModelValue(const" 9635 2  () () 0]
[ebrowse-ms "getPredicates" () 0 () "  const CDList<Expr>& getPredicates()" 11966 0  () "  const CDList<Expr>& getPredicates()" 11966]
[ebrowse-ms "getQuantLevelForTerm" () 0 () "  unsigned getQuantLevelForTerm(const" 11889 0  () () 0]
[ebrowse-ms "getResource" () 0 () "  void getResource()" 10517 0  () "  void getResource()" 10517]
[ebrowse-ms "getResourceLimit" () 0 () "  unsigned getResourceLimit()" 16374 0  () "  unsigned getResourceLimit()" 16374]
[ebrowse-ms "getStatistics" () 4 () "  Statistics& getStatistics()" 11134 0  () "  Statistics& getStatistics()" 11134]
[ebrowse-ms "getTM" () 4 () "  TheoremManager* getTM()" 11027 0  () "  TheoremManager* getTM()" 11027]
[ebrowse-ms "getTerms" () 0 () "  const CDList<Expr>& getTerms()" 11512 0  () "  const CDList<Expr>& getTerms()" 11512]
[ebrowse-ms "getTheoremForTerm" () 0 () "  Theorem getTheoremForTerm(const" 11776 0  () () 0]
[ebrowse-ms "getTranslator" () 4 () "  Translator* getTranslator()" 11316 0  () "  Translator* getTranslator()" 11316]
[ebrowse-ms "inUpdate" () 0 () "  bool inUpdate()" 12051 0  () "  bool inUpdate()" 12051]
[ebrowse-ms "incomplete" () 0 () "  bool incomplete(std" 14378 0  () () 0]
[ebrowse-ms "incomplete" () 0 () "  bool incomplete()" 14245 0  () "  bool incomplete()" 14245]
[ebrowse-ms "inconsistent" () 1 () "  bool inconsistent()" 13760 0  () "  bool inconsistent()" 13760]
[ebrowse-ms "inconsistentThm" () 0 () "  Theorem inconsistentThm()" 13909 0  () "  Theorem inconsistentThm()" 13909]
[ebrowse-ms "initTimeLimit" () 0 () "  void initTimeLimit()" 16578 0  () () 0]
[ebrowse-ms "isBasicKind" () 0 () "  bool isBasicKind(int" 9853 2  () () 0]
[ebrowse-ms "numImpliedLiterals" () 0 () "  unsigned numImpliedLiterals()" 14796 0  () "  unsigned numImpliedLiterals()" 14796]
[ebrowse-ms "okToEnqueue" () 0 () "  bool okToEnqueue()" 12159 0  () "  bool okToEnqueue()" 12159]
[ebrowse-ms "outOfResources" () 0 () "  bool outOfResources()" 16471 0  () "  bool outOfResources()" 16471]
[ebrowse-ms "parseExpr" () 1 () "  Expr parseExpr(const" 15145 0  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  Expr parseExprOp(const" 13168 0  () () 0]
[ebrowse-ms "parseExprTop" () 0 () "  Expr parseExprTop(const" 15296 0  () "  Expr parseExprTop(const" 15296]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 13209 0  () () 0]
[ebrowse-ms "processCond" () 0 () "  Expr processCond(const" 9746 2  () () 0]
[ebrowse-ms "processFactQueue" () 0 () "  bool processFactQueue(EffortLevel" 8116 2  () () 0]
[ebrowse-ms "processNotify" () 0 () "  void processNotify(const" 8228 2  () () 0]
[ebrowse-ms "processUpdates" () 0 () "  void processUpdates()" 8540 2  () () 0]
[ebrowse-ms "refineCounterExample" () 1 () "  void refineCounterExample()" 13333 0  () () 0]
[ebrowse-ms "registerAtom" () 1 () "  void registerAtom(const" 14590 0  () () 0]
[ebrowse-ms "registerCoreSatAPI" () 0 () "  void registerCoreSatAPI(CoreSatAPI" 10695 0  () "  void registerCoreSatAPI(CoreSatAPI" 10695]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 12502 0  () () 0]
[ebrowse-ms "rewriteCore" () 0 () "  Theorem rewriteCore(const" 8346 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" "Theorem CVC3::TheoryCore::rewriteCore(const" 13912]
[ebrowse-ms "rewriteLitCore" () 0 () "  Theorem rewriteLitCore(const" 9417 2  () () 0]
[ebrowse-ms "rewriteLiteral" () 0 () "  Theorem rewriteLiteral(const" 16731 0  () () 0]
[ebrowse-ms "setFindLiteral" () 0 () "  void setFindLiteral(const" 9325 2  () () 0]
[ebrowse-ms "setInPP" () 0 () "  void setInPP()" 11617 0  () "  void setInPP()" 11617]
[ebrowse-ms "setIncomplete" () 1 () "  void setIncomplete(const" 17070 2  () () 0]
[ebrowse-ms "setInconsistent" () 1 () "  void setInconsistent(const" 17549 0  () () 0]
[ebrowse-ms "setResourceLimit" () 0 () "  void setResourceLimit(unsigned" 16279 0  () "  void setResourceLimit(unsigned" 16279]
[ebrowse-ms "setTimeLimit" () 0 () "  void setTimeLimit(unsigned" 16661 0  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 12700 0  () "  void setup(const" 12700]
[ebrowse-ms "setupSubFormulas" () 0 () "  void setupSubFormulas(const" 8419 2  () () 0]
[ebrowse-ms "setupTerm" () 0 () "  void setupTerm(const" 17707 0  () () 0]
[ebrowse-ms "simplify" () 1 () "  Theorem simplify(const" 13676 0  () () 0]
[ebrowse-ms "simplifyOp" () 1 () "  Theorem simplifyOp(const" 12824 0  () () 0]
[ebrowse-ms "solve" () 1 () "  Theorem solve(const" 12783 0  () () 0]
[ebrowse-ms "tccCache" () 0 () "  ExprMap<Expr>& tccCache()" 11431 0  () "  ExprMap<Expr>& tccCache()" 11431]
[ebrowse-ms "timeLimitReached" () 0 () "  bool timeLimitReached()" 10074 2  () () 0]
[ebrowse-ms "typePred" () 0 () "  Theorem typePred(const" 17210 2  () () 0]
[ebrowse-ms "update" () 1 () "  void update(const" 12733 0  () () 0]
[ebrowse-ms "~TheoryCore" () 0 () "  ~TheoryCore()" 10307 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryDatatype" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "class TheoryDatatype :" 1229() ]
([ebrowse-ts [ebrowse-cs "TheoryDatatypeLazy" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype_lazy.h" "class TheoryDatatypeLazy :" 1108"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype_lazy.h" ]
()([ebrowse-ms "ProcessKinds" () 0 () "  } ProcessKinds;" 1207 2  () () 0]
[ebrowse-ms "d_processIndex" () 0 () "  CDO<unsigned> d_processIndex;" 1317 2  () () 0]
[ebrowse-ms "d_processQueue" () 0 () "  CDList<Theorem> d_processQueue;" 1242 2  () () 0]
[ebrowse-ms "d_processQueueKind" () 0 () "  CDList<ProcessKinds> d_processQueueKind;" 1285 2  () () 0]
[ebrowse-ms "d_typeComplete" () 0 () "  CDO<bool> d_typeComplete;" 1345 2  () () 0]
)
([ebrowse-ms "TheoryDatatypeLazy" () 0 () "  TheoryDatatypeLazy(TheoryCore* theoryCore);" 1685 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 1770 0  () () 0]
[ebrowse-ms "initializeLabels" () 1 () "  void initializeLabels(const" 1439 2  () () 0]
[ebrowse-ms "instantiate" () 1 () "  void instantiate(const" 1380 2  () () 0]
[ebrowse-ms "mergeLabels" () 1 () "  void mergeLabels(const" 1561 2  () () 0]
[ebrowse-ms "mergeLabels" () 1 () "  void mergeLabels(const" 1489 2  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 1802 0  () () 0]
[ebrowse-ms "update" () 1 () "  void update(const" 1832 0  () () 0]
[ebrowse-ms "~TheoryDatatypeLazy" () 0 () "  ~TheoryDatatypeLazy()" 1723 0  () "  ~TheoryDatatypeLazy()" 1723]
)
()
()
()
()
()()
])([ebrowse-ms "d_constructorMap" () 0 () "  ExprMap<std::vector<Expr> > d_constructorMap;" 1497 1  () () 0]
[ebrowse-ms "d_datatypes" () 0 () "  ExprMap<ExprMap<unsigned> > d_datatypes;" 1410 1  () () 0]
[ebrowse-ms "d_facts" () 0 () "  CDList<Theorem> d_facts;" 1832 1  () () 0]
[ebrowse-ms "d_getConstantStack" () 0 () "  ExprMap<bool> d_getConstantStack;" 1991 1  () () 0]
[ebrowse-ms "d_labels" () 0 () "  CDMap<Expr, SmartCDO<Unsigned> > d_labels;" 1804 1  () () 0]
[ebrowse-ms "d_reach" () 0 () "  ExprMap<Op> d_reach;" 1758 1  () () 0]
[ebrowse-ms "d_rules" () 0 () "  DatatypeProofRules* d_rules;" 1286 1  () () 0]
[ebrowse-ms "d_selectorMap" () 0 () "xprMap<std::pair<Expr,unsigned> > d_selectorMap;" 1658 1  () () 0]
[ebrowse-ms "d_smartSplits" () 0 () "  const bool& d_smartSplits;" 1955 1  () () 0]
[ebrowse-ms "d_splitterAsserted" () 0 () "  CDO<bool> d_splitterAsserted;" 1926 1  () () 0]
[ebrowse-ms "d_splitters" () 0 () "  CDList<Expr> d_splitters;" 1860 1  () () 0]
[ebrowse-ms "d_splittersIndex" () 0 () "  CDO<unsigned> d_splittersIndex;" 1894 1  () () 0]
[ebrowse-ms "d_testerMap" () 0 () "  ExprMap<Expr> d_testerMap;" 1735 1  () () 0]
)
([ebrowse-ms "TheoryDatatype" () 0 () "  TheoryDatatype(TheoryCore* theoryCore);" 2369 0  () () 0]
[ebrowse-ms "addSharedTerm" () 1 () "  void addSharedTerm(const" 2633 0  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 2667 0  () () 0]
[ebrowse-ms "canCollapse" () 0 () "  bool canCollapse(const" 4393 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  virtual void checkSat(bool" 2709 0  () () 0]
[ebrowse-ms "checkType" () 1 () "  void checkType(const" 2907 0  () () 0]
[ebrowse-ms "computeModelTerm" () 1 () "  void computeModelTerm(const" 3097 0  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 3153 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 3057 0  () () 0]
[ebrowse-ms "createProofRules" () 0 () "  DatatypeProofRules* createProofRules()" 2582 0  () () 0]
[ebrowse-ms "dataType" () 0 () "  Expr dataType(const" 3608 0  () () 0]
[ebrowse-ms "datatypeConsExpr" () 0 () "  Expr datatypeConsExpr(const" 3912 0  () () 0]
[ebrowse-ms "datatypeSelExpr" () 0 () "  Expr datatypeSelExpr(const" 4023 0  () () 0]
[ebrowse-ms "datatypeTestExpr" () 0 () "  Expr datatypeTestExpr(const" 4094 0  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  Cardinality finiteTypeInfo(Expr" 2951 0  () () 0]
[ebrowse-ms "getConsForTester" () 0 () "  Expr getConsForTester(const" 4235 0  () () 0]
[ebrowse-ms "getConsPos" () 0 () "  unsigned getConsPos(const" 4273 0  () () 0]
[ebrowse-ms "getConstant" () 0 () "  Expr getConstant(const" 4308 0  () () 0]
[ebrowse-ms "getReachablePredicate" () 0 () "  const Op& getReachablePredicate(const" 4358 0  () () 0]
[ebrowse-ms "getSelectorInfo" () 0 () " std::pair<Expr,unsigned>& getSelectorInfo(const" 4195 0  () () 0]
[ebrowse-ms "initializeLabels" () 1 () "  virtual void initializeLabels(const" 2103 1  () () 0]
[ebrowse-ms "instantiate" () 1 () "  virtual void instantiate(const" 2036 1  () () 0]
[ebrowse-ms "mergeLabels" () 1 () "  virtual void mergeLabels(const" 2241 1  () () 0]
[ebrowse-ms "mergeLabels" () 1 () "  virtual void mergeLabels(const" 2161 1  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  Expr parseExprOp(const" 3188 0  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 3229 0  () () 0]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 2746 0  () () 0]
[ebrowse-ms "setup" () 1 () "  virtual void setup(const" 2783 0  () () 0]
[ebrowse-ms "solve" () 1 () "  Theorem solve(const" 2871 0  () () 0]
[ebrowse-ms "update" () 1 () "  virtual void update(const" 2821 0  () () 0]
[ebrowse-ms "~TheoryDatatype" () 1 () "  virtual ~TheoryDatatype()" 2411 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryQuant" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_quant.h" " class TheoryQuant :" 4662"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_quant.h" ]
()([ebrowse-ms "cacheHead" () 0 () "  std::set<std::string> cacheHead;" 14006 2  () () 0]
[ebrowse-ms "d_abInstCount" () 0 () "  StatCounter d_abInstCount;" 14298 2  () () 0]
[ebrowse-ms "d_allInstCount" () 0 () "  StatCounter d_allInstCount ;" 14038 2  () () 0]
[ebrowse-ms "d_allInstCount2" () 0 () "  StatCounter d_allInstCount2 ;" 14114 2  () () 0]
[ebrowse-ms "d_allInsts" () 0 () "  std::vector<Expr> d_allInsts;" 10419 2  () () 0]
[ebrowse-ms "d_all_multTrigsInfo" () 0 () " std::vector<multTrigsInfo> d_all_multTrigsInfo;" 11768 2  () () 0]
[ebrowse-ms "d_allmap_trigs" () 0 () "DMap<Expr, CDList<dynTrig>* >* > d_allmap_trigs;" 20971 2  () () 0]
[ebrowse-ms "d_allout" () 0 () "  int d_allout;" 6989 2  () () 0]
[ebrowse-ms "d_alltrig_list" () 0 () "  CDList<Trigger> d_alltrig_list;" 21008 2  () () 0]
[ebrowse-ms "d_arrayIndic" () 0 () "  CDMap<Expr, std::vector<Expr> > d_arrayIndic;" 10311 2  () () 0]
[ebrowse-ms "d_arrayTrigs" () 0 () "  CDList<dynTrig> d_arrayTrigs;" 5204 2  () () 0]
[ebrowse-ms "d_bindGlobalHistory" () 0 () "td::hash_map<Expr, bool>* > d_bindGlobalHistory;" 14851 2  () () 0]
[ebrowse-ms "d_bindGlobalThmHistory" () 0 () "sh_map<Expr, Theorem>* > d_bindGlobalThmHistory;" 14950 2  () () 0]
[ebrowse-ms "d_bindHistory" () 0 () "  ExprMap<CDMap<Expr, bool>* > d_bindHistory;" 14759 2  () () 0]
[ebrowse-ms "d_cacheTheorem" () 0 () "  std::vector<Theorem> d_cacheTheorem;" 14432 2  () () 0]
[ebrowse-ms "d_cacheThmPos" () 0 () "  size_t d_cacheThmPos;" 14456 2  () () 0]
[ebrowse-ms "d_callThisRound" () 0 () "  int d_callThisRound;" 10542 2  () () 0]
[ebrowse-ms "d_contextCache" () 0 () "  CDMap<Expr, bool> d_contextCache;" 7271 2  () () 0]
[ebrowse-ms "d_contextMap" () 0 () "p<Type, CDList<size_t>* ,TypeComp> d_contextMap;" 7112 2  () () 0]
[ebrowse-ms "d_contextTerms" () 0 () "  CDList<Expr> d_contextTerms;" 7206 2  () () 0]
[ebrowse-ms "d_curMaxExprScore" () 0 () "  CDO<int> d_curMaxExprScore;" 10112 2  () () 0]
[ebrowse-ms "d_eq_list" () 0 () "  ExprMap<CDList<Expr>* > d_eq_list;" 13052 2  () () 0]
[ebrowse-ms "d_eq_pos" () 0 () "  ExprMap<CDO<size_t>* > d_eq_pos;" 13316 2  () () 0]
[ebrowse-ms "d_eqs" () 0 () "  CDList<Expr > d_eqs;" 13210 2  () () 0]
[ebrowse-ms "d_eqsUpdate" () 0 () "  CDList<Theorem> d_eqsUpdate;" 13106 2  () () 0]
[ebrowse-ms "d_eqs_pos" () 0 () "  CDO<size_t > d_eqs_pos;" 13258 2  () () 0]
[ebrowse-ms "d_exprLastUpdatedPos" () 0 () "  CDO<size_t> d_exprLastUpdatedPos ;" 11025 2  () () 0]
[ebrowse-ms "d_fullTrigs" () 0 () "  ExprMap<std::vector<Trigger> > d_fullTrigs;" 10825 2  () () 0]
[ebrowse-ms "d_gBindQueue" () 0 () "  std::queue<Expr> d_gBindQueue;" 5548 2  () () 0]
[ebrowse-ms "d_gUnivQueue" () 0 () "  std::queue<Theorem> d_gUnivQueue;" 5512 2  () () 0]
[ebrowse-ms "d_gfactLimit" () 0 () "  const int* d_gfactLimit;" 9913 2  () () 0]
[ebrowse-ms "d_hasMoreBVs" () 0 () "  ExprMap<bool> d_hasMoreBVs;" 11300 2  () () 0]
[ebrowse-ms "d_hasTriggers" () 0 () "  ExprMap<bool> d_hasTriggers;" 11270 2  () () 0]
[ebrowse-ms "d_inEnd" () 0 () "  int d_inEnd;" 6971 2  () () 0]
[ebrowse-ms "d_indexExpr" () 0 () "  std::map<ExprIndex, Expr> d_indexExpr;" 11165 2  () () 0]
[ebrowse-ms "d_indexScore" () 0 () "  std::map<ExprIndex, int> d_indexScore;" 11123 2  () () 0]
[ebrowse-ms "d_initMaxScore" () 0 () "  int d_initMaxScore;" 10465 2  () () 0]
[ebrowse-ms "d_instCount" () 0 () "  CDO<int> d_instCount;" 6871 2  () () 0]
[ebrowse-ms "d_instHistory" () 0 () "r, std::set<std::vector<Expr> > > d_instHistory;" 14573 2  () () 0]
[ebrowse-ms "d_instHistoryGlobal" () 0 () "::set<std::vector<Expr> > > d_instHistoryGlobal;" 15045 2  () () 0]
[ebrowse-ms "d_instThisRound" () 0 () "  int d_instThisRound;" 10519 2  () () 0]
[ebrowse-ms "d_insts" () 0 () "  ExprMap<std::vector<Expr> >  d_insts;" 7629 2  () () 0]
[ebrowse-ms "d_lastArrayPos" () 0 () "  CDO<size_t> d_lastArrayPos;" 5235 2  () () 0]
[ebrowse-ms "d_lastEqsUpdatePos" () 0 () "  CDO<size_t> d_lastEqsUpdatePos;" 13186 2  () () 0]
[ebrowse-ms "d_lastPartLevel" () 0 () "  CDO<size_t> d_lastPartLevel;" 6146 2  () () 0]
[ebrowse-ms "d_lastPartPredsPos" () 0 () "  CDO<size_t> d_lastPartPredsPos;" 5834 2  () () 0]
[ebrowse-ms "d_lastPartTermsPos" () 0 () "  CDO<size_t> d_lastPartTermsPos;" 5929 2  () () 0]
[ebrowse-ms "d_lastPredsPos" () 0 () "  CDO<size_t> d_lastPredsPos;" 5672 2  () () 0]
[ebrowse-ms "d_lastTermsPos" () 0 () "  CDO<size_t> d_lastTermsPos;" 5738 2  () () 0]
[ebrowse-ms "d_lastUsefulGtermsPos" () 0 () "  CDO<size_t> d_lastUsefulGtermsPos;" 6396 2  () () 0]
[ebrowse-ms "d_maxIL" () 0 () "  const int*  d_maxIL;" 9779 2  () () 0]
[ebrowse-ms "d_maxILReached" () 0 () "  CDO<bool> d_maxILReached;" 6246 2  () () 0]
[ebrowse-ms "d_maxInst" () 0 () "  const int* d_maxInst;" 9723 2  () () 0]
[ebrowse-ms "d_maxNaiveCall" () 0 () "  const int* d_maxNaiveCall;" 10050 2  () () 0]
[ebrowse-ms "d_maxQuantInst" () 0 () "  const int* d_maxQuantInst;" 7732 2  () () 0]
[ebrowse-ms "d_mtrigs_bvorder" () 0 () "  ExprMap<std::vector<Expr> > d_mtrigs_bvorder;" 13465 2  () () 0]
[ebrowse-ms "d_mtrigs_inst" () 0 () "Map<CDList<std::vector<Expr> >* > d_mtrigs_inst;" 12891 2  () () 0]
[ebrowse-ms "d_multTriggers" () 0 () "  ExprMap<std::vector<Expr> > d_multTriggers;" 10732 2  () () 0]
[ebrowse-ms "d_multTrigs" () 0 () "  ExprMap<std::vector<Trigger> > d_multTrigs;" 10939 2  () () 0]
[ebrowse-ms "d_multitrigs_maps" () 0 () "  ExprMap<multTrigsInfo> d_multitrigs_maps;" 11718 2  () () 0]
[ebrowse-ms "d_mybvs" () 0 () "  Expr d_mybvs[MAX_TRIG_BVS];" 20768 2  () () 0]
[ebrowse-ms "d_offset_multi_trig" () 0 () "  int d_offset_multi_trig ;" 10493 2  () () 0]
[ebrowse-ms "d_parent_list" () 0 () "  ExprMap<CDList<Expr>* > d_parent_list;" 13358 2  () () 0]
[ebrowse-ms "d_partCalled" () 0 () "  CDO<bool> d_partCalled;" 6173 2  () () 0]
[ebrowse-ms "d_partTriggers" () 0 () "  ExprMap<std::vector<Expr> > d_partTriggers;" 10778 2  () () 0]
[ebrowse-ms "d_partTrigs" () 0 () "  ExprMap<std::vector<Trigger> > d_partTrigs;" 10985 2  () () 0]
[ebrowse-ms "d_rawUnivs" () 0 () "  CDList<Theorem> d_rawUnivs;" 5170 2  () () 0]
[ebrowse-ms "d_rawUnivsSavedPos" () 0 () "  CDO<size_t> d_rawUnivsSavedPos;" 6595 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  QuantProofRules* d_rules;" 7700 2  () () 0]
[ebrowse-ms "d_same_head_expr" () 0 () "  ExprMap<CDList<Expr>* > d_same_head_expr;" 12961 2  () () 0]
[ebrowse-ms "d_savedCache" () 0 () "  ExprMap<bool> d_savedCache;" 7387 2  () () 0]
[ebrowse-ms "d_savedMap" () 0 () "  typeMap d_savedMap;" 7357 2  () () 0]
[ebrowse-ms "d_savedTerms" () 0 () "  std::vector<Expr> d_savedTerms;" 7512 2  () () 0]
[ebrowse-ms "d_savedTermsPos" () 0 () "  CDO<size_t> d_savedTermsPos;" 6476 2  () () 0]
[ebrowse-ms "d_simplifiedThmQueue" () 0 () "  std::queue<Theorem> d_simplifiedThmQueue;" 5475 2  () () 0]
[ebrowse-ms "d_subTermsMap" () 0 () "  ExprMap<std::vector<Expr> > d_subTermsMap;" 15125 2  () () 0]
[ebrowse-ms "d_tempBinds" () 0 () "Map<std::set<std::vector<Expr> > >  d_tempBinds;" 5605 2  () () 0]
[ebrowse-ms "d_thmCount" () 0 () "  ExprMap<int> d_thmCount;" 14675 2  () () 0]
[ebrowse-ms "d_totalInstCount" () 0 () "  StatCounter d_totalInstCount ;" 14148 2  () () 0]
[ebrowse-ms "d_totalThmCount" () 0 () "  ExprMap<size_t> d_totalThmCount;" 14711 2  () () 0]
[ebrowse-ms "d_trans2_found" () 0 () "  CDMap<Expr,bool > d_trans2_found;" 11922 2  () () 0]
[ebrowse-ms "d_trans2_num" () 0 () "  int d_trans2_num;" 11340 2  () () 0]
[ebrowse-ms "d_transThm" () 0 () "  Theorem d_transThm;" 12715 2  () () 0]
[ebrowse-ms "d_trans_back" () 0 () "  ExprMap<CDList<Expr>* > d_trans_back;" 11811 2  () () 0]
[ebrowse-ms "d_trans_forw" () 0 () "  ExprMap<CDList<Expr>* > d_trans_forw;" 11851 2  () () 0]
[ebrowse-ms "d_trans_found" () 0 () "  CDMap<Expr,bool > d_trans_found;" 11886 2  () () 0]
[ebrowse-ms "d_trans_num" () 0 () "  int d_trans_num;" 11320 2  () () 0]
[ebrowse-ms "d_translate" () 0 () "  const bool* d_translate;" 9296 2  () () 0]
[ebrowse-ms "d_trueInstCount" () 0 () "  StatCounter d_trueInstCount;" 14217 2  () () 0]
[ebrowse-ms "d_typeExprMap" () 0 () "ype, std::vector<Expr>,TypeComp > d_typeExprMap;" 13971 2  () () 0]
[ebrowse-ms "d_univs" () 0 () "  CDList<Theorem> d_univs;" 5138 2  () () 0]
[ebrowse-ms "d_univsContextPos" () 0 () "  CDO<size_t> d_univsContextPos;" 6841 2  () () 0]
[ebrowse-ms "d_univsPartSavedPos" () 0 () "  CDO<size_t> d_univsPartSavedPos;" 6044 2  () () 0]
[ebrowse-ms "d_univsPosFull" () 0 () "  CDO<size_t> d_univsPosFull;" 6679 2  () () 0]
[ebrowse-ms "d_univsQueue" () 0 () "  std::queue<Theorem> d_univsQueue;" 5430 2  () () 0]
[ebrowse-ms "d_univsSavedPos" () 0 () "  CDO<size_t> d_univsSavedPos;" 6561 2  () () 0]
[ebrowse-ms "d_useCompleteInst" () 0 () "  const bool* d_useCompleteInst;" 9237 2  () () 0]
[ebrowse-ms "d_useEqu" () 0 () "  const bool* d_useEqu;" 9994 2  () () 0]
[ebrowse-ms "d_useExprScore" () 0 () "  const bool* d_useExprScore;" 9671 2  () () 0]
[ebrowse-ms "d_useFullTrig" () 0 () "  bool d_useFullTrig;" 10135 2  () () 0]
[ebrowse-ms "d_useGFact" () 0 () "  const bool* d_useGFact;" 9886 2  () () 0]
[ebrowse-ms "d_useInstAll" () 0 () "  const bool* d_useInstAll;" 9941 2  () () 0]
[ebrowse-ms "d_useInstEnd" () 0 () "  const bool* d_useInstEnd;" 9489 2  () () 0]
[ebrowse-ms "d_useInstGCache" () 0 () "  const bool* d_useInstGCache;" 9551 2  () () 0]
[ebrowse-ms "d_useInstLCache" () 0 () "  const bool* d_useInstLCache;" 9520 2  () () 0]
[ebrowse-ms "d_useInstThmCache" () 0 () "  const bool* d_useInstThmCache;" 9584 2  () () 0]
[ebrowse-ms "d_useInstTrue" () 0 () "  const bool* d_useInstTrue;" 9613 2  () () 0]
[ebrowse-ms "d_useLazyInst" () 0 () "  const bool* d_useLazyInst;" 9126 2  () () 0]
[ebrowse-ms "d_useManTrig" () 0 () "  const bool* d_useManTrig;" 9860 2  () () 0]
[ebrowse-ms "d_useMult" () 0 () "  const bool* d_useMult;" 9455 2  () () 0]
[ebrowse-ms "d_useMultTrig" () 0 () "  bool d_useMultTrig;" 10179 2  () () 0]
[ebrowse-ms "d_useNaiveInst" () 0 () "  const bool* d_useNaiveInst;" 10080 2  () () 0]
[ebrowse-ms "d_useNew" () 0 () "  const bool* d_useNew;" 9066 2  () () 0]
[ebrowse-ms "d_useNewEqu" () 0 () "  const bool* d_useNewEqu;" 10021 2  () () 0]
[ebrowse-ms "d_usePart" () 0 () "  const bool* d_usePart;" 9403 2  () () 0]
[ebrowse-ms "d_usePartTrig" () 0 () "  bool d_usePartTrig;" 10157 2  () () 0]
[ebrowse-ms "d_usePolarity" () 0 () "  const bool* d_usePolarity;" 9970 2  () () 0]
[ebrowse-ms "d_usePullVar" () 0 () "  const bool* d_usePullVar;" 9641 2  () () 0]
[ebrowse-ms "d_useSemMatch" () 0 () "  const bool* d_useSemMatch;" 9180 2  () () 0]
[ebrowse-ms "d_useTrans" () 0 () "  const bool* d_useTrans;" 9805 2  () () 0]
[ebrowse-ms "d_useTrans2" () 0 () "  const bool* d_useTrans2;" 9832 2  () () 0]
[ebrowse-ms "d_useTrigLoop" () 0 () "  const int* d_useTrigLoop;" 9699 2  () () 0]
[ebrowse-ms "d_useTrigNew" () 0 () "  const bool* d_useTrigNew;" 9342 2  () () 0]
[ebrowse-ms "d_usefulGterms" () 0 () "  CDList<Expr> d_usefulGterms;" 6314 2  () () 0]
[ebrowse-ms "defaultDivideExpr" () 0 () "  Expr  defaultDivideExpr;" 12567 2  () () 0]
[ebrowse-ms "defaultMinusExpr" () 0 () "  Expr  defaultMinusExpr ;" 12514 2  () () 0]
[ebrowse-ms "defaultMultExpr" () 0 () "  Expr  defaultMultExpr ;" 12540 2  () () 0]
[ebrowse-ms "defaultPlusExpr" () 0 () "  Expr defaultPlusExpr;" 12487 2  () () 0]
[ebrowse-ms "defaultPowExpr" () 0 () "  Expr  defaultPowExpr ;" 12592 2  () () 0]
[ebrowse-ms "defaultReadExpr" () 0 () "  Expr defaultReadExpr;" 12463 2  () () 0]
[ebrowse-ms "defaultWriteExpr" () 0 () "  Expr defaultWriteExpr;" 12439 2  () () 0]
[ebrowse-ms "null_cdlist" () 0 () "  CDList<Expr> null_cdlist;" 12692 2  () () 0]
[ebrowse-ms "partial_called" () 0 () "  int partial_called;" 10565 2  () () 0]
)
([ebrowse-ms "TheoryQuant" () 0 () "  TheoryQuant(TheoryCore* core);" 21927 0  () () 0]
[ebrowse-ms "addNotify" () 0 () "  void addNotify(const" 14480 2  () () 0]
[ebrowse-ms "addSharedTerm" () 1 () "  void addSharedTerm(const" 22058 0  () "  void addSharedTerm(const" 22058]
[ebrowse-ms "add_parent" () 2 () "  inline void add_parent(const" 17920 2  () () 0]
[ebrowse-ms "arrayHeuristic" () 0 () "  void arrayHeuristic(const" 16364 2  () () 0]
[ebrowse-ms "arrayIndexName" () 0 () "  void arrayIndexName(const" 10376 2  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 22413 0  () () 0]
[ebrowse-ms "backList" () 2 () "  inline  CDList<Expr> & backList(const" 12161 2  () () 0]
[ebrowse-ms "canMatch" () 0 () "  bool canMatch(const" 21275 2  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 23149 0  () () 0]
[ebrowse-ms "collectChangedTerms" () 0 () "  void  collectChangedTerms(CDList" 13394 2  () () 0]
[ebrowse-ms "combineOldNewTrigs" () 0 () "  void combineOldNewTrigs(ExprMap" 17842 2  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 23600 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 23565 0  () () 0]
[ebrowse-ms "createProofRules" () 0 () "  QuantProofRules* createProofRules()" 22024 0  () () 0]
[ebrowse-ms "debug" () 1 () "  void debug(int" 23423 0  () () 0]
[ebrowse-ms "delNewTrigs" () 0 () "  void delNewTrigs(ExprMap" 17762 2  () () 0]
[ebrowse-ms "enqueueInst" () 0 () "  void enqueueInst(const" 15829 2  () () 0]
[ebrowse-ms "enqueueInst" () 0 () "  void enqueueInst(size_t" 15743 2  () () 0]
[ebrowse-ms "enqueueInst" () 0 () "  void enqueueInst(const" 15651 2  () () 0]
[ebrowse-ms "enqueueInst" () 0 () "  void enqueueInst(const" 15600 2  () () 0]
[ebrowse-ms "exprMap2string" () 0 () "  std::string exprMap2string(const" 15399 2  () () 0]
[ebrowse-ms "exprMap2stringSig" () 0 () "  std::string exprMap2stringSig(const" 15522 2  () () 0]
[ebrowse-ms "exprMap2stringSimplify" () 0 () "  std::string exprMap2stringSimplify(const" 15463 2  () () 0]
[ebrowse-ms "findInstAssumptions" () 0 () "  void findInstAssumptions(const" 9002 2  () () 0]
[ebrowse-ms "forwList" () 2 () "  inline  CDList<Expr> & forwList(const" 12215 2  () () 0]
[ebrowse-ms "generalTrig" () 0 () "  Expr generalTrig(const" 20877 2  () () 0]
[ebrowse-ms "getExprScore" () 0 () "  int getExprScore(const" 11191 2  () () 0]
[ebrowse-ms "getHead" () 0 () "  Expr getHead(const" 12614 2  () () 0]
[ebrowse-ms "getHeadExpr" () 0 () "  Expr getHeadExpr(const" 12650 2  () () 0]
[ebrowse-ms "getSubTerms" () 0 () "  const std::vector<Expr>& getSubTerms(const" 15224 2  () () 0]
[ebrowse-ms "goodSynMatch" () 0 () "  void goodSynMatch(const" 16805 2  () () 0]
[ebrowse-ms "goodSynMatchNewTrig" () 0 () "  bool goodSynMatchNewTrig(const" 17293 2  () () 0]
[ebrowse-ms "goodSynMatchNewTrig" () 0 () "  void goodSynMatchNewTrig(const" 17047 2  () () 0]
[ebrowse-ms "hasGoodSemInst" () 0 () "  bool hasGoodSemInst(const" 20458 2  () () 0]
[ebrowse-ms "hasGoodSynInstNewTrig" () 0 () "  bool hasGoodSynInstNewTrig(Trigger" 19843 2  () () 0]
[ebrowse-ms "hasGoodSynInstNewTrigOld" () 0 () "  bool hasGoodSynInstNewTrigOld(Trigger" 19610 2  () () 0]
[ebrowse-ms "hasGoodSynMultiInst" () 0 () "  bool hasGoodSynMultiInst(const" 20103 2  () () 0]
[ebrowse-ms "help" () 1 () "  int help(int" 23210 0  () () 0]
[ebrowse-ms "instantiate" () 0 () "  void instantiate(Theorem" 8617 2  () () 0]
[ebrowse-ms "insted" () 0 () "  bool insted(const" 16113 2  () () 0]
[ebrowse-ms "isTrans2Like" () 0 () "  bool isTrans2Like (const" 20647 2  () () 0]
[ebrowse-ms "isTransLike" () 0 () "  bool isTransLike (const" 20590 2  () () 0]
[ebrowse-ms "iterBKList" () 2 () "  void inline iterBKList(const" 12351 2  () () 0]
[ebrowse-ms "iterFWList" () 2 () "  void inline iterFWList(const" 12258 2  () () 0]
[ebrowse-ms "loc_gterm" () 0 () "  int loc_gterm(const" 13488 2  () () 0]
[ebrowse-ms "mapTermsByType" () 0 () "  void mapTermsByType(const" 8253 2  () () 0]
[ebrowse-ms "matchListNew" () 0 () "  void matchListNew(ExprMap" 17614 2  () () 0]
[ebrowse-ms "matchListOld" () 0 () "  void matchListOld(const" 17491 2  () () 0]
[ebrowse-ms "multMatchChild" () 2 () "  inline bool multMatchChild(const" 19292 2  () () 0]
[ebrowse-ms "multMatchTop" () 2 () "  inline bool multMatchTop(const" 19410 2  () () 0]
[ebrowse-ms "naiveCheckSat" () 0 () "  void naiveCheckSat(bool" 16090 2  () () 0]
[ebrowse-ms "newTopMatch" () 0 () "  void newTopMatch(const" 17961 2  () () 0]
[ebrowse-ms "newTopMatchBackupOnly" () 0 () "  void newTopMatchBackupOnly(const" 18388 2  () () 0]
[ebrowse-ms "newTopMatchNoSig" () 0 () "  void newTopMatchNoSig(const" 18248 2  () () 0]
[ebrowse-ms "newTopMatchSig" () 0 () "  void newTopMatchSig(const" 18098 2  () () 0]
[ebrowse-ms "notifyInconsistent" () 1 () "  void notifyInconsistent(const" 23459 0  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  virtual Expr parseExprOp(const" 23646 0  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 23688 0  () () 0]
[ebrowse-ms "pushBackList" () 2 () "  inline  void  pushBackList(const" 12751 2  () () 0]
[ebrowse-ms "pushForwList" () 2 () "  inline  void  pushForwList(const" 12808 2  () () 0]
[ebrowse-ms "recGeneralTrig" () 0 () "  Expr recGeneralTrig(const" 20798 2  () () 0]
[ebrowse-ms "recGoodSemMatch" () 0 () "  void recGoodSemMatch(const" 20291 2  () () 0]
[ebrowse-ms "recInstantiate" () 0 () "  void recInstantiate(Theorem" 8759 2  () () 0]
[ebrowse-ms "recMultMatch" () 0 () "  bool recMultMatch(const" 18889 2  () () 0]
[ebrowse-ms "recMultMatchDebug" () 0 () "  bool recMultMatchDebug(const" 18988 2  () () 0]
[ebrowse-ms "recMultMatchNewWay" () 0 () "  bool recMultMatchNewWay(const" 19088 2  () () 0]
[ebrowse-ms "recMultMatchOldWay" () 0 () "  bool recMultMatchOldWay(const" 19188 2  () () 0]
[ebrowse-ms "recSearchCover" () 0 () "  void  recSearchCover(const" 13579 2  () () 0]
[ebrowse-ms "recSynMatch" () 0 () "  bool recSynMatch(const" 18809 2  () () 0]
[ebrowse-ms "recSynMatchBackupOnly" () 0 () "  bool recSynMatchBackupOnly(const" 19516 2  () () 0]
[ebrowse-ms "recursiveMap" () 0 () "  bool recursiveMap(const" 8038 2  () () 0]
[ebrowse-ms "registerTrig" () 0 () "  void registerTrig(ExprMap" 21037 2  () () 0]
[ebrowse-ms "registerTrigReal" () 0 () "  void registerTrigReal(Trigger" 21204 2  () () 0]
[ebrowse-ms "rewrite" () 1 () "   Theorem rewrite(const" 4706 2  () () 0]
[ebrowse-ms "saveContext" () 0 () "  void saveContext()" 21632 2  () () 0]
[ebrowse-ms "searchCover" () 0 () "  void  searchCover(const" 13801 2  () () 0]
[ebrowse-ms "semCheckSat" () 0 () "  void semCheckSat(bool" 16062 2  () () 0]
[ebrowse-ms "semInst" () 0 () "  void semInst(const" 16745 2  () () 0]
[ebrowse-ms "sendInstNew" () 0 () "  int sendInstNew()" 14511 2  () () 0]
[ebrowse-ms "setGround" () 0 () "  void setGround(const" 21345 2  () () 0]
[ebrowse-ms "setTrans2Found" () 2 () "  inline  void setTrans2Found(const" 12105 2  () () 0]
[ebrowse-ms "setTransFound" () 2 () "  inline   void setTransFound(const" 12008 2  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 23181 0  () () 0]
[ebrowse-ms "setupTriggers" () 0 () "  void setupTriggers(ExprMap" 21511 2  () () 0]
[ebrowse-ms "simpRAWList" () 0 () "  Expr simpRAWList(const" 16423 2  () () 0]
[ebrowse-ms "simplifyExprMap" () 0 () "  void simplifyExprMap(ExprMap" 15267 2  () () 0]
[ebrowse-ms "simplifyVectorExprMap" () 0 () "  void simplifyVectorExprMap(std" 15320 2  () () 0]
[ebrowse-ms "synCheckSat" () 0 () "  void synCheckSat(bool" 16036 2  () () 0]
[ebrowse-ms "synCheckSat" () 0 () "  void synCheckSat(ExprMap" 15967 2  () () 0]
[ebrowse-ms "synFullInst" () 0 () "  void synFullInst(const" 16272 2  () () 0]
[ebrowse-ms "synInst" () 0 () "  void synInst(const" 16183 2  () () 0]
[ebrowse-ms "synMatchTopPred" () 0 () "  bool synMatchTopPred(const" 18536 2  () () 0]
[ebrowse-ms "synMultInst" () 0 () "  void synMultInst(const" 16569 2  () () 0]
[ebrowse-ms "synNewInst" () 0 () "  void synNewInst(size_t" 16461 2  () () 0]
[ebrowse-ms "synPartInst" () 0 () "  void synPartInst(const" 16659 2  () () 0]
[ebrowse-ms "theoryPreprocess" () 1 () "   Theorem theoryPreprocess(const" 4751 2  () () 0]
[ebrowse-ms "trans2Found" () 2 () "  inline  bool trans2Found(const" 12055 2  () () 0]
[ebrowse-ms "transFound" () 2 () "  inline  bool transFound(const" 11956 2  () () 0]
[ebrowse-ms "update" () 1 () "  void update(const" 23237 0  () () 0]
[ebrowse-ms "~TheoryQuant" () 0 () "  ~TheoryQuant()" 21969 0  () () 0]
)
([ebrowse-ms "MAX_TRIG_BVS" () 0 () "  static const size_t MAX_TRIG_BVS=15;" 20738 2  () () 0]
)
()
()
([ebrowse-ms "multTrigsInfo" () 0 () "  } multTrigsInfo ;" 11671 2  () () 0]
[ebrowse-ms "typeMap" () 0 () "p<Type, std::vector<size_t>, TypeComp > typeMap;" 5059 2  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "TheoryRecords" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_records.h" "class TheoryRecords :" 1199"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_records.h" ]
()([ebrowse-ms "d_rules" () 0 () "  RecordsProofRules* d_rules;" 1244 2  () () 0]
)
([ebrowse-ms "TheoryRecords" () 0 () "  TheoryRecords(TheoryCore* core);" 1514 0  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 1756 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 1841 0  () "  void checkSat(bool" 1841]
[ebrowse-ms "checkType" () 1 () "  void checkType(const" 2009 0  () () 0]
[ebrowse-ms "computeBaseType" () 1 () "  Type computeBaseType(const" 2245 0  () () 0]
[ebrowse-ms "computeModel" () 1 () "  void computeModel(const" 2400 0  () () 0]
[ebrowse-ms "computeModelTerm" () 1 () "  void computeModelTerm(const" 2342 0  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 2460 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 2206 0  () () 0]
[ebrowse-ms "computeTypePred" () 1 () "  Expr computeTypePred(const" 2287 0  () () 0]
[ebrowse-ms "createProofRules" () 0 () "  RecordsProofRules* createProofRules()" 1660 0  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  Cardinality finiteTypeInfo(Expr" 2053 0  () () 0]
[ebrowse-ms "getField" () 0 () "  const std::string& getField(const" 4697 0  () () 0]
[ebrowse-ms "getField" () 0 () "  const std::string& getField(const" 4380 0  () () 0]
[ebrowse-ms "getFieldIndex" () 0 () "  int getFieldIndex(const" 4554 0  () () 0]
[ebrowse-ms "getFields" () 0 () "  const std::vector<Expr>& getFields(const" 4272 0  () () 0]
[ebrowse-ms "getIndex" () 0 () "  int getIndex(const" 5261 0  () () 0]
[ebrowse-ms "isRecord" () 0 () "  bool isRecord(const" 2730 0  () "  bool isRecord(const" 2730]
[ebrowse-ms "isRecordAccess" () 0 () "  bool isRecordAccess(const" 3141 0  () "  bool isRecordAccess(const" 3141]
[ebrowse-ms "isRecordType" () 0 () "  bool isRecordType(const" 3001 0  () "  bool isRecordType(const" 3001]
[ebrowse-ms "isTuple" () 0 () "  bool isTuple(const" 5528 0  () "  bool isTuple(const" 5528]
[ebrowse-ms "isTupleAccess" () 0 () "  bool isTupleAccess(const" 5356 0  () "  bool isTupleAccess(const" 5356]
[ebrowse-ms "isTupleType" () 0 () "  bool isTupleType(const" 5783 0  () "  bool isTupleType(const" 5783]
[ebrowse-ms "parseExprOp" () 1 () "  virtual Expr parseExprOp(const" 2503 0  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 2643 0  () () 0]
[ebrowse-ms "recordExpr" () 0 () "  Expr recordExpr(const" 3430 0  () () 0]
[ebrowse-ms "recordSelect" () 0 () "  Expr recordSelect(const" 4017 0  () () 0]
[ebrowse-ms "recordType" () 0 () "  Type recordType(const" 3881 0  () () 0]
[ebrowse-ms "recordUpdate" () 0 () "  Expr recordUpdate(const" 4125 0  () () 0]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 1943 0  () () 0]
[ebrowse-ms "rewriteAux" () 0 () "  Theorem rewriteAux(const" 1463 2  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 2532 0  () () 0]
[ebrowse-ms "tupleExpr" () 0 () "  Expr tupleExpr(const" 4759 0  () () 0]
[ebrowse-ms "tupleSelect" () 0 () "  Expr tupleSelect(const" 5050 0  () () 0]
[ebrowse-ms "tupleType" () 0 () "  Type tupleType(const" 4951 0  () () 0]
[ebrowse-ms "tupleUpdate" () 0 () "  Expr tupleUpdate(const" 5139 0  () () 0]
[ebrowse-ms "update" () 1 () "  void update(const" 2562 0  () () 0]
[ebrowse-ms "~TheoryRecords" () 0 () "  ~TheoryRecords()" 1558 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheorySimulate" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_simulate.h" "class TheorySimulate:" 1234"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_simulate.h" ]
()([ebrowse-ms "d_rules" () 0 () "  SimulateProofRules* d_rules;" 1318 2  () () 0]
)
([ebrowse-ms "TheorySimulate" () 0 () "  TheorySimulate(TheoryCore* core);" 1455 0  () () 0]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 1564 0  () "  void assertFact(const" 1564]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 1601 0  () "  void checkSat(bool" 1601]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 1710 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 1676 0  () () 0]
[ebrowse-ms "createProofRules" () 0 () "  SimulateProofRules* createProofRules()" 1400 2  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  Expr parseExprOp(const" 1745 0  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 1786 0  () () 0]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 1641 0  () () 0]
[ebrowse-ms "~TheorySimulate" () 0 () "  ~TheorySimulate()" 1500 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryUF" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_uf.h" "class TheoryUF :" 1211"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_uf.h" ]
()([ebrowse-ms "d_applicationsInModel" () 0 () "  const bool& d_applicationsInModel;" 1356 2  () () 0]
[ebrowse-ms "d_funApplications" () 0 () "  CDList<Expr> d_funApplications;" 1767 2  () () 0]
[ebrowse-ms "d_funApplicationsIdx" () 0 () "  CDO<size_t> d_funApplicationsIdx;" 1873 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "  UFProofRules* d_rules;" 1251 2  () () 0]
[ebrowse-ms "d_transClosureMap" () 0 () "  ExprMap<TCMapPair*> d_transClosureMap;" 1596 2  () () 0]
)
([ebrowse-ms "TheoryUF" () 0 () "  TheoryUF(TheoryCore* core);" 1906 0  () () 0]
[ebrowse-ms "addSharedTerm" () 1 () "  void addSharedTerm(const" 2138 0  () "  void addSharedTerm(const" 2138]
[ebrowse-ms "assertFact" () 1 () "  void assertFact(const" 2174 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  void checkSat(bool" 2208 0  () () 0]
[ebrowse-ms "checkType" () 1 () "  void checkType(const" 2355 0  () () 0]
[ebrowse-ms "computeBaseType" () 1 () "  Type computeBaseType(const" 2544 0  () () 0]
[ebrowse-ms "computeModel" () 1 () "  void computeModel(const" 2642 0  () () 0]
[ebrowse-ms "computeModelTerm" () 1 () "  void computeModelTerm(const" 2584 0  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  Expr computeTCC(const" 2701 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  void computeType(const" 2505 0  () () 0]
[ebrowse-ms "createProofRules" () 0 () "  UFProofRules* createProofRules()" 2087 0  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  Cardinality finiteTypeInfo(Expr" 2399 0  () () 0]
[ebrowse-ms "lambdaExpr" () 0 () "  Expr lambdaExpr(const" 2869 0  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  virtual Expr parseExprOp(const" 2744 0  () () 0]
[ebrowse-ms "print" () 1 () "  ExprStream& print(ExprStream" 2785 0  () () 0]
[ebrowse-ms "rewrite" () 1 () "  Theorem rewrite(const" 2245 0  () () 0]
[ebrowse-ms "setup" () 1 () "  void setup(const" 2274 0  () () 0]
[ebrowse-ms "transClosureExpr" () 0 () "  Expr transClosureExpr(const" 2988 0  () () 0]
[ebrowse-ms "update" () 1 () "  void update(const" 2304 0  () () 0]
[ebrowse-ms "~TheoryUF" () 0 () "  ~TheoryUF()" 1928 0  () () 0]
)
()
()
()
([ebrowse-ms "TCMapPair" () 0 () "  } TCMapPair;" 1554 2  () () 0]
)
()()
])([ebrowse-ms "d_commonRules" () 0 () "  CommonProofRules* d_commonRules;" 2005 2  () () 0]
[ebrowse-ms "d_em" () 0 () "  ExprManager* d_em;" 1905 2  () () 0]
[ebrowse-ms "d_name" () 0 () "  std::string d_name;" 2058 2  () () 0]
[ebrowse-ms "d_theoryCore" () 0 () "  TheoryCore* d_theoryCore;" 1933 2  () () 0]
[ebrowse-ms "d_theoryUsed" () 0 () "  bool d_theoryUsed;" 2320 1  () () 0]
)
([ebrowse-ms "Theory" () 0 () "heoryCore* theoryCore, const std::string& name);" 2530 0  () () 0]
[ebrowse-ms "Theory" () 0 () "  Theory(void);" 2285 2  () () 0]
[ebrowse-ms "addBoundVar" () 0 () "  Expr addBoundVar(const" 24645 0  () () 0]
[ebrowse-ms "addBoundVar" () 0 () "  Expr addBoundVar(const" 24218 0  () () 0]
[ebrowse-ms "addGlobalLemma" () 0 () "  void addGlobalLemma(const" 21661 0  () () 0]
[ebrowse-ms "addSharedTerm" () 1 () "  virtual void addSharedTerm(const" 4169 0  () "  virtual void addSharedTerm(const" 4169]
[ebrowse-ms "addSplitter" () 0 () "  void addSplitter(const" 21579 0  () () 0]
[ebrowse-ms "assertEqualities" () 1 () "  virtual void assertEqualities(const" 18039 0  () () 0]
[ebrowse-ms "assertFact" () 9 () "  virtual void assertFact(const" 4496 0  () () 0]
[ebrowse-ms "assertTypePred" () 1 () "  virtual void assertTypePred(const" 14579 0  () "  virtual void assertTypePred(const" 14579]
[ebrowse-ms "assignValue" () 1 () "  virtual void assignValue(const" 18502 0  () () 0]
[ebrowse-ms "assignValue" () 1 () "  virtual void assignValue(const" 18387 0  () () 0]
[ebrowse-ms "boolType" () 0 () "  Type boolType()" 22877 0  () "  Type boolType()" 22877]
[ebrowse-ms "checkAssertEqInvariant" () 1 () "  virtual void checkAssertEqInvariant(const" 8201 0  () "  virtual void checkAssertEqInvariant(const" 8201]
[ebrowse-ms "checkSat" () 9 () "  virtual void checkSat(bool" 5317 0  () () 0]
[ebrowse-ms "checkType" () 1 () "  virtual void checkType(const" 9397 0  () "  virtual void checkType(const" 9397]
[ebrowse-ms "computeBaseType" () 1 () "  virtual Type computeBaseType(const" 10760 0  () "  virtual Type computeBaseType(const" 10760]
[ebrowse-ms "computeModel" () 1 () "  virtual void computeModel(const" 13979 0  () "  virtual void computeModel(const" 13979]
[ebrowse-ms "computeModelBasic" () 1 () "  virtual void computeModelBasic(const" 12889 0  () "  virtual void computeModelBasic(const" 12889]
[ebrowse-ms "computeModelTerm" () 1 () "  virtual void computeModelTerm(const" 12649 0  () () 0]
[ebrowse-ms "computeTCC" () 1 () "  virtual Expr computeTCC(const" 11861 0  () () 0]
[ebrowse-ms "computeType" () 1 () "  virtual void computeType(const" 10636 0  () "  virtual void computeType(const" 10636]
[ebrowse-ms "computeTypePred" () 1 () "  virtual Expr computeTypePred(const" 11304 0  () "  virtual Expr computeTypePred(const" 11304]
[ebrowse-ms "debug" () 1 () "  virtual void debug(int" 16114 0  () "  virtual void debug(int" 16114]
[ebrowse-ms "enqueueFact" () 1 () "  virtual void enqueueFact(const" 17707 0  () () 0]
[ebrowse-ms "enqueueSE" () 1 () "  virtual void enqueueSE(const" 17751 0  () () 0]
[ebrowse-ms "falseExpr" () 0 () "  const Expr& falseExpr()" 22961 0  () "  const Expr& falseExpr()" 22961]
[ebrowse-ms "find" () 0 () "  Theorem find(const" 19778 0  () () 0]
[ebrowse-ms "findExpr" () 2 () "  inline Expr findExpr(const" 20121 0  () "  inline Expr findExpr(const" 20121]
[ebrowse-ms "findReduce" () 0 () "  Theorem findReduce(const" 19956 0  () () 0]
[ebrowse-ms "findReduced" () 0 () "  bool findReduced(const" 20031 0  () () 0]
[ebrowse-ms "findRef" () 0 () "  const Theorem& findRef(const" 19879 0  () () 0]
[ebrowse-ms "finiteTypeInfo" () 1 () "  virtual Cardinality finiteTypeInfo(Expr" 10241 0  () "  virtual Cardinality finiteTypeInfo(Expr" 10241]
[ebrowse-ms "getBaseType" () 0 () "  Type getBaseType(const" 20471 0  () () 0]
[ebrowse-ms "getCommonRules" () 0 () "  CommonProofRules* getCommonRules()" 2847 0  () "  CommonProofRules* getCommonRules()" 2847]
[ebrowse-ms "getEM" () 0 () "  ExprManager* getEM()" 2663 0  () "  ExprManager* getEM()" 2663]
[ebrowse-ms "getModelTerm" () 0 () "  void getModelTerm(const" 21360 0  () () 0]
[ebrowse-ms "getModelValue" () 0 () "  Theorem getModelValue(const" 21498 0  () () 0]
[ebrowse-ms "getName" () 4 () "  const std::string& getName()" 2963 0  () "  const std::string& getName()" 2963]
[ebrowse-ms "getNumTheories" () 0 () "  int getNumTheories()" 19386 0  () () 0]
[ebrowse-ms "getTCC" () 0 () "  Expr getTCC(const" 20273 0  () () 0]
[ebrowse-ms "getTypePred" () 0 () "  Expr getTypePred(const" 20566 0  () () 0]
[ebrowse-ms "hasTheory" () 0 () "  bool hasTheory(int" 19454 0  () () 0]
[ebrowse-ms "help" () 1 () "  virtual int help(int" 16189 0  () "  virtual int help(int" 16189]
[ebrowse-ms "iffMP" () 0 () "  Theorem iffMP(const" 27838 0  () "  Theorem iffMP(const" 27838]
[ebrowse-ms "inconsistent" () 1 () "  virtual bool inconsistent()" 16668 0  () () 0]
[ebrowse-ms "installID" () 0 () "  void installID(const" 25803 0  () () 0]
[ebrowse-ms "isLeaf" () 0 () "  bool isLeaf(const" 22315 0  () "  bool isLeaf(const" 22315]
[ebrowse-ms "isLeafIn" () 0 () "  bool isLeafIn(const" 22448 0  () () 0]
[ebrowse-ms "leavesAreSimp" () 0 () "  bool leavesAreSimp(const" 22570 0  () () 0]
[ebrowse-ms "lookupTypeExpr" () 0 () "  Type lookupTypeExpr(const" 25126 0  () () 0]
[ebrowse-ms "lookupVar" () 0 () "  Expr lookupVar(const" 24831 0  () () 0]
[ebrowse-ms "newFunction" () 0 () "  Op newFunction(const" 23844 0  () () 0]
[ebrowse-ms "newFunction" () 0 () "  Op newFunction(const" 23626 0  () () 0]
[ebrowse-ms "newSubtypeExpr" () 0 () "  Type newSubtypeExpr(const" 25333 0  () () 0]
[ebrowse-ms "newTypeExpr" () 0 () "  Type newTypeExpr(const" 25229 0  () () 0]
[ebrowse-ms "newTypeExpr" () 0 () "  Type newTypeExpr(const" 25014 0  () () 0]
[ebrowse-ms "newVar" () 0 () "  Expr newVar(const" 23427 0  () () 0]
[ebrowse-ms "newVar" () 0 () "  Expr newVar(const" 23218 0  () () 0]
[ebrowse-ms "notifyInconsistent" () 1 () "  virtual void notifyInconsistent(const" 15575 0  () "  virtual void notifyInconsistent(const" 15575]
[ebrowse-ms "parseExpr" () 1 () "  virtual Expr parseExpr(const" 18278 0  () () 0]
[ebrowse-ms "parseExprOp" () 1 () "  virtual Expr parseExprOp(const" 11957 0  () "  virtual Expr parseExprOp(const" 11957]
[ebrowse-ms "print" () 1 () "  virtual ExprStream& print(ExprStream" 12423 0  () "  virtual ExprStream& print(ExprStream" 12423]
[ebrowse-ms "refineCounterExample" () 1 () "  virtual void refineCounterExample()" 12789 0  () "  virtual void refineCounterExample()" 12789]
[ebrowse-ms "reflexivityRule" () 0 () "  Theorem reflexivityRule(const" 26230 0  () "  Theorem reflexivityRule(const" 26230]
[ebrowse-ms "registerAtom" () 1 () "  virtual void registerAtom(const" 16013 0  () "  virtual void registerAtom(const" 16013]
[ebrowse-ms "registerAtom" () 1 () "  virtual void registerAtom(const" 15628 0  () () 0]
[ebrowse-ms "registerKinds" () 0 () "  void registerKinds(Theory" 18925 0  () () 0]
[ebrowse-ms "registerTheory" () 0 () "  void registerTheory(Theory" 19118 0  () () 0]
[ebrowse-ms "resolveID" () 0 () "  Expr resolveID(const" 25697 0  () () 0]
[ebrowse-ms "rewrite" () 1 () "  virtual Theorem rewrite(const" 5828 0  () "  virtual Theorem rewrite(const" 5828]
[ebrowse-ms "rewriteAnd" () 0 () "  Theorem rewriteAnd(const" 28002 0  () "  Theorem rewriteAnd(const" 28002]
[ebrowse-ms "rewriteAtomic" () 1 () "  virtual Theorem rewriteAtomic(const" 15232 0  () "  virtual Theorem rewriteAtomic(const" 15232]
[ebrowse-ms "rewriteCC" () 0 () "  Theorem rewriteCC(const" 21200 0  () () 0]
[ebrowse-ms "rewriteIte" () 0 () "  Theorem rewriteIte(const" 28253 0  () () 0]
[ebrowse-ms "rewriteOr" () 0 () "  Theorem rewriteOr(const" 28131 0  () "  Theorem rewriteOr(const" 28131]
[ebrowse-ms "setIncomplete" () 1 () "  virtual void setIncomplete(const" 17262 0  () () 0]
[ebrowse-ms "setInconsistent" () 1 () "  virtual void setInconsistent(const" 16779 0  () () 0]
[ebrowse-ms "setUsed" () 1 () "  virtual void setUsed()" 3079 0  () "  virtual void setUsed()" 3079]
[ebrowse-ms "setup" () 1 () "  virtual void setup(const" 6422 0  () "  virtual void setup(const" 6422]
[ebrowse-ms "setupCC" () 0 () "  void setupCC(const" 20959 0  () () 0]
[ebrowse-ms "simplify" () 1 () "  virtual Theorem simplify(const" 17398 0  () () 0]
[ebrowse-ms "simplifyExpr" () 0 () "  Expr simplifyExpr(const" 17507 0  () "  Expr simplifyExpr(const" 17507]
[ebrowse-ms "simplifyOp" () 1 () "  virtual Theorem simplifyOp(const" 9315 0  () () 0]
[ebrowse-ms "solve" () 1 () "  virtual Theorem solve(const" 8084 0  () "  virtual Theorem solve(const" 8084]
[ebrowse-ms "substitutivityRule" () 0 () "  Theorem substitutivityRule(const" 27616 0  () "  Theorem substitutivityRule(const" 27616]
[ebrowse-ms "substitutivityRule" () 0 () "  Theorem substitutivityRule(const" 27367 0  () "  Theorem substitutivityRule(const" 27367]
[ebrowse-ms "substitutivityRule" () 0 () "  Theorem substitutivityRule(const" 27106 0  () "  Theorem substitutivityRule(const" 27106]
[ebrowse-ms "substitutivityRule" () 0 () "  Theorem substitutivityRule(const" 26918 0  () "  Theorem substitutivityRule(const" 26918]
[ebrowse-ms "symmetryRule" () 0 () "  Theorem symmetryRule(const" 26348 0  () "  Theorem symmetryRule(const" 26348]
[ebrowse-ms "theoryCore" () 0 () "  TheoryCore* theoryCore()" 2742 0  () "  TheoryCore* theoryCore()" 2742]
[ebrowse-ms "theoryOf" () 0 () "  Theory* theoryOf(const" 19693 0  () () 0]
[ebrowse-ms "theoryOf" () 0 () "  Theory* theoryOf(int" 19531 0  () () 0]
[ebrowse-ms "theoryPreprocess" () 1 () "  virtual Theorem theoryPreprocess(const" 6057 0  () "  virtual Theorem theoryPreprocess(const" 6057]
[ebrowse-ms "theoryUsed" () 1 () "  virtual bool theoryUsed()" 3195 0  () "  virtual bool theoryUsed()" 3195]
[ebrowse-ms "transitivityRule" () 0 () "  Theorem transitivityRule(const" 26500 0  () "  Theorem transitivityRule(const" 26500]
[ebrowse-ms "trueExpr" () 0 () "  const Expr& trueExpr()" 23040 0  () "  const Expr& trueExpr()" 23040]
[ebrowse-ms "typePred" () 0 () "  Theorem typePred(const" 25864 0  () () 0]
[ebrowse-ms "unregisterKinds" () 0 () "  void unregisterKinds(Theory" 19026 0  () () 0]
[ebrowse-ms "unregisterTheory" () 0 () "  void unregisterTheory(Theory" 19240 0  () () 0]
[ebrowse-ms "update" () 1 () "  virtual void update(const" 7256 0  () "  virtual void update(const" 7256]
[ebrowse-ms "updateCC" () 0 () "  void updateCC(const" 21068 0  () () 0]
[ebrowse-ms "updateHelper" () 0 () "  Theorem updateHelper(const" 20851 0  () () 0]
[ebrowse-ms "~Theory" () 1 () "  virtual ~Theory(void" 2609 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SimulateProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_proof_rules.h" "class SimulateProofRules {" 809"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "SimulateTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_theorem_producer.h" "class SimulateTheoremProducer:" 856"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_theorem_producer.h" ]
()()
([ebrowse-ms "SimulateTheoremProducer" () 0 () "  SimulateTheoremProducer(TheoremManager* tm):" 979 0  () "  SimulateTheoremProducer(TheoremManager* tm):" 979]
[ebrowse-ms "expandSimulate" () 1 () "  virtual Theorem expandSimulate(const" 1090 0  () () 0]
[ebrowse-ms "~SimulateTheoremProducer" () 1 () "  virtual ~SimulateTheoremProducer()" 1046 0  () "  virtual ~SimulateTheoremProducer()" 1046]
)
()
()
()
()
()()
])()
([ebrowse-ms "expandSimulate" () 9 () "  virtual Theorem expandSimulate(const" 990 0  () () 0]
[ebrowse-ms "~SimulateProofRules" () 1 () "  virtual ~SimulateProofRules()" 866 0  () "  virtual ~SimulateProofRules()" 866]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchEngineRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_rules.h" "  class SearchEngineRules {" 929"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_rules.h" ]
([ebrowse-ts [ebrowse-cs "SearchEngineTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_theorem_producer.h" "    :" 874"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_theorem_producer.h" ]
()([ebrowse-ms "d_commonRules" () 0 () "    CommonProofRules* d_commonRules;" 979 2  () () 0]
)
([ebrowse-ms "SearchEngineTheoremProducer" () 0 () "SearchEngineTheoremProducer(TheoremManager* tm);" 1364 0  () () 0]
[ebrowse-ms "andCNFRule" () 1 () "    Theorem andCNFRule(const" 5650 0  () () 0]
[ebrowse-ms "caseSplit" () 1 () "    virtual Theorem caseSplit(const" 1885 0  () () 0]
[ebrowse-ms "checkSoundNoSkolems" () 0 () "    void checkSoundNoSkolems(const" 1210 2  () () 0]
[ebrowse-ms "confAndrAF" () 1 () "    virtual Theorem confAndrAF(const" 4366 0  () () 0]
[ebrowse-ms "confAndrAT" () 1 () "    virtual Theorem confAndrAT(const" 4226 0  () () 0]
[ebrowse-ms "confIffr" () 1 () "    virtual Theorem confIffr(const" 4699 0  () () 0]
[ebrowse-ms "confIterIfThen" () 1 () "    virtual Theorem confIterIfThen(const" 5476 0  () () 0]
[ebrowse-ms "confIterThenElse" () 1 () "    virtual Theorem confIterThenElse(const" 5317 0  () () 0]
[ebrowse-ms "conflictClause" () 1 () "    virtual Theorem conflictClause(const" 2793 0  () () 0]
[ebrowse-ms "conflictRule" () 1 () "    virtual Theorem conflictRule(const" 3472 0  () () 0]
[ebrowse-ms "convertToCNF" () 0 () "    Expr convertToCNF(const" 6409 2  () () 0]
[ebrowse-ms "cutRule" () 1 () "    virtual Theorem cutRule(const" 3004 0  () () 0]
[ebrowse-ms "eliminateSkolemAxioms" () 1 () "    virtual Theorem eliminateSkolemAxioms(const" 2262 0  () () 0]
[ebrowse-ms "findInLocalCache" () 0 () "    Expr findInLocalCache(const" 6590 2  () () 0]
[ebrowse-ms "iffCNFRule" () 1 () "    Theorem iffCNFRule(const" 5781 0  () () 0]
[ebrowse-ms "iffToClauses" () 1 () "    Theorem iffToClauses(const" 5917 0  () () 0]
[ebrowse-ms "impCNFRule" () 1 () "    Theorem impCNFRule(const" 5737 0  () () 0]
[ebrowse-ms "iteCNFRule" () 1 () "    Theorem iteCNFRule(const" 5825 0  () () 0]
[ebrowse-ms "iteToClauses" () 1 () "    Theorem iteToClauses(const" 5871 0  () () 0]
[ebrowse-ms "negIntro" () 1 () "    virtual Theorem negIntro(const" 1754 0  () () 0]
[ebrowse-ms "opCNFRule" () 0 () "    Theorem opCNFRule(const" 6314 2  () () 0]
[ebrowse-ms "orCNFRule" () 1 () "    Theorem orCNFRule(const" 5693 0  () () 0]
[ebrowse-ms "proofByContradiction" () 1 () "    virtual Theorem proofByContradiction(const" 1600 0  () () 0]
[ebrowse-ms "propAndrAF" () 1 () "    virtual Theorem propAndrAF(const" 3600 0  () () 0]
[ebrowse-ms "propAndrAT" () 1 () "    virtual Theorem propAndrAT(const" 3709 0  () () 0]
[ebrowse-ms "propAndrLF" () 1 () "    virtual Theorem propAndrLF(const" 3963 0  () () 0]
[ebrowse-ms "propAndrLRT" () 1 () "    virtual void propAndrLRT(const" 3831 0  () () 0]
[ebrowse-ms "propAndrRF" () 1 () "    virtual Theorem propAndrRF(const" 4082 0  () () 0]
[ebrowse-ms "propIffr" () 1 () "    virtual Theorem propIffr(const" 4546 0  () () 0]
[ebrowse-ms "propIterIfThen" () 1 () "    virtual void propIterIfThen(const" 5003 0  () () 0]
[ebrowse-ms "propIterIte" () 1 () "    virtual Theorem propIterIte(const" 4876 0  () () 0]
[ebrowse-ms "propIterThen" () 1 () "    virtual Theorem propIterThen(const" 5174 0  () () 0]
[ebrowse-ms "satProof" () 1 () "    Theorem satProof(const" 6004 0  () () 0]
[ebrowse-ms "unitProp" () 1 () "    virtual Theorem unitProp(const" 3227 0  () () 0]
[ebrowse-ms "verifyConflict" () 0 () "    void verifyConflict(const" 1010 2  () () 0]
[ebrowse-ms "~SearchEngineTheoremProducer" () 1 () "    virtual ~SearchEngineTheoremProducer()" 1431 0  () "    virtual ~SearchEngineTheoremProducer()" 1431]
)
()
()
()
()
()()
])()
([ebrowse-ms "andCNFRule" () 9 () "    virtual Theorem andCNFRule(const" 7968 0  () () 0]
[ebrowse-ms "caseSplit" () 9 () "    virtual Theorem caseSplit(const" 2871 0  () () 0]
[ebrowse-ms "confAndrAF" () 9 () "    virtual Theorem confAndrAF(const" 6584 0  () () 0]
[ebrowse-ms "confAndrAT" () 9 () "    virtual Theorem confAndrAT(const" 6440 0  () () 0]
[ebrowse-ms "confIffr" () 9 () "    virtual Theorem confIffr(const" 6925 0  () () 0]
[ebrowse-ms "confIterIfThen" () 9 () "    virtual Theorem confIterIfThen(const" 7721 0  () () 0]
[ebrowse-ms "confIterThenElse" () 9 () "    virtual Theorem confIterThenElse(const" 7558 0  () () 0]
[ebrowse-ms "conflictClause" () 9 () "    virtual Theorem conflictClause(const" 3532 0  () () 0]
[ebrowse-ms "conflictRule" () 9 () "    virtual Theorem conflictRule(const" 5662 0  () () 0]
[ebrowse-ms "cutRule" () 9 () "    virtual Theorem cutRule(const" 4188 0  () () 0]
[ebrowse-ms "eliminateSkolemAxioms" () 9 () "    virtual Theorem eliminateSkolemAxioms(const" 1327 0  () () 0]
[ebrowse-ms "iffCNFRule" () 9 () "    virtual Theorem iffCNFRule(const" 8299 0  () () 0]
[ebrowse-ms "iffToClauses" () 9 () "    virtual Theorem iffToClauses(const" 8640 0  () () 0]
[ebrowse-ms "impCNFRule" () 9 () "    virtual Theorem impCNFRule(const" 8189 0  () () 0]
[ebrowse-ms "iteCNFRule" () 9 () "    virtual Theorem iteCNFRule(const" 8415 0  () () 0]
[ebrowse-ms "iteToClauses" () 9 () "    virtual Theorem iteToClauses(const" 8527 0  () () 0]
[ebrowse-ms "negIntro" () 9 () "    virtual Theorem negIntro(const" 2378 0  () () 0]
[ebrowse-ms "orCNFRule" () 9 () "    virtual Theorem orCNFRule(const" 8081 0  () () 0]
[ebrowse-ms "proofByContradiction" () 9 () "    virtual Theorem proofByContradiction(const" 1793 0  () () 0]
[ebrowse-ms "propAndrAF" () 9 () "    virtual Theorem propAndrAF(const" 5794 0  () () 0]
[ebrowse-ms "propAndrAT" () 9 () "    virtual Theorem propAndrAT(const" 5907 0  () () 0]
[ebrowse-ms "propAndrLF" () 9 () "    virtual Theorem propAndrLF(const" 6169 0  () () 0]
[ebrowse-ms "propAndrLRT" () 9 () "    virtual void propAndrLRT(const" 6033 0  () () 0]
[ebrowse-ms "propAndrRF" () 9 () "    virtual Theorem propAndrRF(const" 6292 0  () () 0]
[ebrowse-ms "propIffr" () 9 () "    virtual Theorem propIffr(const" 6768 0  () () 0]
[ebrowse-ms "propIterIfThen" () 9 () "    virtual void propIterIfThen(const" 7237 0  () () 0]
[ebrowse-ms "propIterIte" () 9 () "    virtual Theorem propIterIte(const" 7106 0  () () 0]
[ebrowse-ms "propIterThen" () 9 () "    virtual Theorem propIterThen(const" 7412 0  () () 0]
[ebrowse-ms "satProof" () 9 () "    virtual Theorem satProof(const" 8695 0  () () 0]
[ebrowse-ms "unitProp" () 9 () "    virtual Theorem unitProp(const" 4971 0  () () 0]
[ebrowse-ms "~SearchEngineRules" () 1 () "    virtual ~SearchEngineRules()" 1039 0  () "    virtual ~SearchEngineRules()" 1039]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DatatypeProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_proof_rules.h" "  class DatatypeProofRules {" 873"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "DatatypeTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_theorem_producer.h" "class DatatypeTheoremProducer:" 952"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_theorem_producer.h" ]
()([ebrowse-ms "d_theoryDatatype" () 0 () "  TheoryDatatype* d_theoryDatatype;" 1040 2  () () 0]
)
([ebrowse-ms "DatatypeTheoremProducer" () 0 () "heoremProducer(TheoryDatatype* theoryDatatype) :" 1116 0  () "heoremProducer(TheoryDatatype* theoryDatatype) :" 1116]
[ebrowse-ms "decompose" () 1 () "  Theorem decompose(const" 1445 0  () () 0]
[ebrowse-ms "dummyTheorem" () 1 () "  Theorem dummyTheorem(const" 1266 0  () () 0]
[ebrowse-ms "noCycle" () 1 () "  Theorem noCycle(const" 1482 0  () () 0]
[ebrowse-ms "rewriteSelCons" () 1 () "  Theorem rewriteSelCons(const" 1337 0  () () 0]
[ebrowse-ms "rewriteTestCons" () 1 () "  Theorem rewriteTestCons(const" 1409 0  () () 0]
)
()
()
()
()
()()
])()
([ebrowse-ms "decompose" () 9 () "    virtual Theorem decompose(const" 1399 0  () () 0]
[ebrowse-ms "dummyTheorem" () 9 () "    virtual Theorem dummyTheorem(const" 1145 0  () () 0]
[ebrowse-ms "noCycle" () 9 () "    virtual Theorem noCycle(const" 1450 0  () () 0]
[ebrowse-ms "rewriteSelCons" () 9 () "    virtual Theorem rewriteSelCons(const" 1263 0  () () 0]
[ebrowse-ms "rewriteTestCons" () 9 () "    virtual Theorem rewriteTestCons(const" 1349 0  () () 0]
[ebrowse-ms "~DatatypeProofRules" () 1 () "    virtual ~DatatypeProofRules()" 935 0  () "    virtual ~DatatypeProofRules()" 935]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "EpsRational" "TheoryArithOld::DifferenceLogicGraph" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  		class EpsRational {" 17191"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith_old.cpp" ]
()([ebrowse-ms "RationalType" () 0 () "E, PLUS_INFINITY, MINUS_INFINITY } RationalType;" 17349 1  () () 0]
[ebrowse-ms "Zero" () 0 () () 0 0  () "ithOld::DifferenceLogicGraph::EpsRational::Zero;" 176050]
[ebrowse-ms "k" () 0 () "	  				Rational k;" 17525 1  () () 0]
[ebrowse-ms "q" () 0 () "	  				Rational q;" 17468 1  () () 0]
[ebrowse-ms "type" () 0 () "	  				RationalType type;" 17416 1  () () 0]
)
([ebrowse-ms "EpsRational" () 0 () "Rational(const Rational& q, const Rational& k) :" 20004 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "Rational(const Rational& q, const Rational& k) :" 20004]
[ebrowse-ms "EpsRational" () 0 () "					EpsRational(const Rational& q) :" 19721 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "					EpsRational(const Rational& q) :" 19721]
[ebrowse-ms "EpsRational" () 0 () "					EpsRational() :" 19431 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "					EpsRational() :" 19431]
[ebrowse-ms "EpsRational" () 0 () "	  				EpsRational(RationalType type) :" 17634 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				EpsRational(RationalType type) :" 17634]
[ebrowse-ms "MinusInfinity" () 0 () () 0 0  () "Graph::EpsRational::MinusInfinity(MINUS_INFINITY" 175901]
[ebrowse-ms "PlusInfinity" () 0 () () 0 0  () "icGraph::EpsRational::PlusInfinity(PLUS_INFINITY" 175729]
[ebrowse-ms "getEpsilon" () 6 () "					inline Rational getEpsilon()" 19123 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "					inline Rational getEpsilon()" 19123]
[ebrowse-ms "getFloor" () 6 () "	  				inline Rational getFloor()" 18636 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline Rational getFloor()" 18636]
[ebrowse-ms "getRational" () 6 () "					inline Rational getRational()" 18967 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "					inline Rational getRational()" 18967]
[ebrowse-ms "isFinite" () 6 () "	  				inline bool isFinite()" 17766 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline bool isFinite()" 17766]
[ebrowse-ms "isInteger" () 6 () "	  				inline bool isInteger()" 18162 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline bool isInteger()" 18162]
[ebrowse-ms "isRational" () 6 () "	  				inline bool isRational()" 17969 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline bool isRational()" 17969]
[ebrowse-ms "operator *" () 6 () "	  				inline EpsRational operator * (const" 21978 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline EpsRational operator * (const" 21978]
[ebrowse-ms "operator +" () 6 () "	  				inline EpsRational operator + (const" 20292 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline EpsRational operator + (const" 20292]
[ebrowse-ms "operator +=" () 2 () "	  				inline EpsRational& operator += (const" 20783 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline EpsRational& operator += (const" 20783]
[ebrowse-ms "operator -" () 2 () "	  				inline EpsRational operator - ()" 21562 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline EpsRational operator - ()" 21562]
[ebrowse-ms "operator -" () 6 () "	  				inline EpsRational operator - (const" 21194 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline EpsRational operator - (const" 21194]
[ebrowse-ms "operator /" () 6 () "	  				inline EpsRational operator / (const" 22393 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline EpsRational operator / (const" 22393]
[ebrowse-ms "operator <" () 6 () "	  				inline bool operator < (const" 23665 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline bool operator < (const" 23665]
[ebrowse-ms "operator <=" () 6 () "	  				inline bool operator <= (const" 22825 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline bool operator <= (const" 22825]
[ebrowse-ms "operator ==" () 6 () "	  				inline bool operator == (const" 22658 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline bool operator == (const" 22658]
[ebrowse-ms "operator >" () 6 () "	  				inline bool operator > (const" 23822 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				inline bool operator > (const" 23822]
[ebrowse-ms "toString" () 4 () "	  				std::string toString()" 24049 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "	  				std::string toString()" 24049]
)
([ebrowse-ms "MinusInfinity" () 0 () "					static const EpsRational MinusInfinity;" 19310 0  () () 0]
[ebrowse-ms "PlusInfinity" () 0 () "					static const EpsRational PlusInfinity;" 19222 0  () () 0]
[ebrowse-ms "Zero" () 0 () "					static const EpsRational Zero;" 19376 0  () () 0]
)
()
()
()
()()
][ebrowse-ts [ebrowse-cs "EpsRational" "TheoryArithNew" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  		class EpsRational {" 11542"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith_new.cpp" ]
()([ebrowse-ms "RationalType" () 0 () "E, PLUS_INFINITY, MINUS_INFINITY } RationalType;" 11707 1  () () 0]
[ebrowse-ms "Zero" () 0 () () 0 0  () "::EpsRational TheoryArithNew::EpsRational::Zero;" 111380]
[ebrowse-ms "k" () 0 () "  				Rational k;" 11894 1  () () 0]
[ebrowse-ms "q" () 0 () "  				Rational q;" 11832 1  () () 0]
[ebrowse-ms "type" () 0 () "  				RationalType type;" 11778 1  () () 0]
)
([ebrowse-ms "EpsRational" () 0 () "psRational(const Rational q, const Rational k) :" 14137 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "psRational(const Rational q, const Rational k) :" 14137]
[ebrowse-ms "EpsRational" () 0 () "				EpsRational(const Rational q) :" 13856 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "				EpsRational(const Rational q) :" 13856]
[ebrowse-ms "EpsRational" () 0 () "				EpsRational(const EpsRational& r) :" 13648 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "				EpsRational(const EpsRational& r) :" 13648]
[ebrowse-ms "EpsRational" () 0 () "				EpsRational() :" 13567 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "				EpsRational() :" 13567]
[ebrowse-ms "EpsRational" () 0 () "  				EpsRational(RationalType type) :" 12009 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				EpsRational(RationalType type) :" 12009]
[ebrowse-ms "MinusInfinity" () 0 () () 0 0  () "thNew::EpsRational::MinusInfinity(MINUS_INFINITY" 111275]
[ebrowse-ms "PlusInfinity" () 0 () () 0 0  () "rithNew::EpsRational::PlusInfinity(PLUS_INFINITY" 111147]
[ebrowse-ms "getFloor" () 6 () "  				inline Rational getFloor()" 12933 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline Rational getFloor()" 12933]
[ebrowse-ms "getRational" () 6 () "				inline Rational getRational()" 13263 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "				inline Rational getRational()" 13263]
[ebrowse-ms "isInteger" () 6 () "  				inline bool isInteger()" 12414 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline bool isInteger()" 12414]
[ebrowse-ms "isRational" () 6 () "  				inline bool isRational()" 12220 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline bool isRational()" 12220]
[ebrowse-ms "operator *" () 6 () "  				inline EpsRational operator * (const" 15843 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline EpsRational operator * (const" 15843]
[ebrowse-ms "operator +" () 6 () "  				inline EpsRational operator + (const" 14423 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline EpsRational operator + (const" 14423]
[ebrowse-ms "operator +=" () 2 () "  				inline EpsRational& operator += (const" 14911 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline EpsRational& operator += (const" 14911]
[ebrowse-ms "operator -" () 6 () "  				inline EpsRational operator - (const" 15318 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline EpsRational operator - (const" 15318]
[ebrowse-ms "operator /" () 6 () "  				inline EpsRational operator / (const" 16256 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline EpsRational operator / (const" 16256]
[ebrowse-ms "operator <" () 6 () "  				inline bool operator < (const" 17517 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline bool operator < (const" 17517]
[ebrowse-ms "operator <=" () 6 () "  				inline bool operator <= (const" 16689 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline bool operator <= (const" 16689]
[ebrowse-ms "operator ==" () 6 () "  				inline bool operator == (const" 16520 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline bool operator == (const" 16520]
[ebrowse-ms "operator >" () 6 () "  				inline bool operator > (const" 17676 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				inline bool operator > (const" 17676]
[ebrowse-ms "toString" () 4 () "  				std::string toString()" 17905 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  				std::string toString()" 17905]
)
([ebrowse-ms "MinusInfinity" () 0 () "				static const EpsRational MinusInfinity;" 13446 0  () () 0]
[ebrowse-ms "PlusInfinity" () 0 () "				static const EpsRational PlusInfinity;" 13360 0  () () 0]
[ebrowse-ms "Zero" () 0 () "				static const EpsRational Zero;" 13510 0  () () 0]
)
()
()
()
()()
][ebrowse-ts [ebrowse-cs "long" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" "  template<> struct hash<unsigned long> {" 3258"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "    size_t operator()(unsigned" 3289 0  () "    size_t operator()(unsigned" 3289]
[ebrowse-ms "operator ()" () 4 () "    size_t operator()(long" 3183 0  () "    size_t operator()(long" 3183]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DecisionEngine" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine.cpp" ]
()()
([ebrowse-ms "DecisionEngine" () 0 () () 0 0  () "Engine(TheoryCore* core, SearchImplBase* se)
  :" 741]
[ebrowse-ms "findSplitterRec" () 0 () () 0 0  () "Expr DecisionEngine::findSplitterRec(const" 1670]
[ebrowse-ms "lastSplitter" () 0 () () 0 0  () "Expr DecisionEngine::lastSplitter()" 4472]
[ebrowse-ms "popDecision" () 0 () () 0 0  () "void DecisionEngine::popDecision()" 4167]
[ebrowse-ms "popTo" () 0 () () 0 0  () "void DecisionEngine::popTo(int" 4312]
[ebrowse-ms "pushDecision" () 0 () () 0 0  () "void DecisionEngine::pushDecision(Expr" 3304]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DecisionEngine" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine.h" "class DecisionEngine {" 725"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine.h" ]
([ebrowse-ts [ebrowse-cs "DecisionEngineCaching" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_caching.h" "class DecisionEngineCaching :" 667"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_caching.h" ]
()([ebrowse-ms "d_bottomLevel" () 0 () "  int d_bottomLevel;" 867 2  () () 0]
[ebrowse-ms "d_cache" () 0 () "  std::vector<CacheEntry> d_cache;" 960 2  () () 0]
[ebrowse-ms "d_height" () 0 () "  int d_height;" 924 2  () () 0]
[ebrowse-ms "d_index" () 0 () "  ExprMap<int> d_index;" 984 2  () () 0]
[ebrowse-ms "d_startLevel" () 0 () "  int d_startLevel;" 846 2  () () 0]
[ebrowse-ms "d_topLevel" () 0 () "  int d_topLevel;" 885 2  () () 0]
[ebrowse-ms "d_topLevelLock" () 0 () "  bool d_topLevelLock;" 908 2  () () 0]
)
([ebrowse-ms "DecisionEngineCaching" () 0 () "neCaching(TheoryCore* core, SearchImplBase* se);" 1097 0  () () 0]
[ebrowse-ms "findSplitter" () 1 () "  virtual Expr findSplitter(const" 1199 0  () () 0]
[ebrowse-ms "goalSatisfied" () 1 () "  virtual void goalSatisfied()" 1240 0  () () 0]
[ebrowse-ms "isBetter" () 1 () "  virtual bool isBetter(const" 1026 1  () () 0]
[ebrowse-ms "~DecisionEngineCaching" () 1 () "  virtual ~DecisionEngineCaching()" 1160 0  () "  virtual ~DecisionEngineCaching()" 1160]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DecisionEngineDFS" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_dfs.h" "class DecisionEngineDFS :" 1073"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_dfs.h" ]
()()
([ebrowse-ms "DecisionEngineDFS" () 0 () "EngineDFS(TheoryCore* core, SearchImplBase* se);" 1224 0  () () 0]
[ebrowse-ms "findSplitter" () 1 () "  virtual Expr findSplitter(const" 1410 0  () () 0]
[ebrowse-ms "goalSatisfied" () 1 () "  virtual void goalSatisfied()" 1506 0  () () 0]
[ebrowse-ms "isBetter" () 1 () "  virtual bool isBetter(const" 1139 1  () () 0]
[ebrowse-ms "~DecisionEngineDFS" () 1 () "  virtual ~DecisionEngineDFS()" 1283 0  () "  virtual ~DecisionEngineDFS()" 1283]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DecisionEngineMBTF" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_mbtf.h" "class DecisionEngineMBTF :" 655"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_mbtf.h" ]
()([ebrowse-ms "d_bottomLevel" () 0 () "  int d_bottomLevel;" 855 2  () () 0]
[ebrowse-ms "d_cache" () 0 () "  std::vector<CacheEntry> d_cache;" 948 2  () () 0]
[ebrowse-ms "d_height" () 0 () "  int d_height;" 912 2  () () 0]
[ebrowse-ms "d_index" () 0 () "  ExprMap<int> d_index;" 972 2  () () 0]
[ebrowse-ms "d_startLevel" () 0 () "  int d_startLevel;" 834 2  () () 0]
[ebrowse-ms "d_topLevel" () 0 () "  int d_topLevel;" 873 2  () () 0]
[ebrowse-ms "d_topLevelLock" () 0 () "  bool d_topLevelLock;" 896 2  () () 0]
)
([ebrowse-ms "DecisionEngineMBTF" () 0 () "ngineMBTF(TheoryCore* core, SearchImplBase* se);" 1082 0  () () 0]
[ebrowse-ms "findSplitter" () 1 () "  virtual Expr findSplitter(const" 1181 0  () () 0]
[ebrowse-ms "goalSatisfied" () 1 () "  virtual void goalSatisfied()" 1222 0  () () 0]
[ebrowse-ms "isBetter" () 1 () "  virtual bool isBetter(const" 1014 1  () () 0]
[ebrowse-ms "~DecisionEngineMBTF" () 1 () "  virtual ~DecisionEngineMBTF()" 1142 0  () "  virtual ~DecisionEngineMBTF()" 1142]
)
()
()
()
()
()()
])([ebrowse-ms "d_bestByExpr" () 0 () "  ExprMap<Expr> d_bestByExpr;" 1285 1  () () 0]
[ebrowse-ms "d_core" () 0 () "  TheoryCore* d_core;" 1038 1  () () 0]
[ebrowse-ms "d_se" () 0 () "  SearchImplBase* d_se;" 1090 1  () () 0]
[ebrowse-ms "d_splitterCount" () 0 () "  StatCounter d_splitterCount;" 1254 1  () () 0]
[ebrowse-ms "d_splitters" () 0 () "  CDList<Expr> d_splitters;" 1190 1  () () 0]
[ebrowse-ms "d_visited" () 0 () "  ExprMap<Expr> d_visited;" 1421 1  () () 0]
)
([ebrowse-ms "DecisionEngine" () 0 () "ionEngine(TheoryCore* core, SearchImplBase* se);" 1559 0  () () 0]
[ebrowse-ms "findSplitter" () 9 () "  virtual Expr findSplitter(const" 1874 0  () () 0]
[ebrowse-ms "findSplitterRec" () 0 () "  Expr findSplitterRec(const" 1451 1  () () 0]
[ebrowse-ms "goalSatisfied" () 9 () "  virtual void goalSatisfied()" 2244 0  () () 0]
[ebrowse-ms "isBetter" () 9 () "  virtual bool isBetter(const" 1491 1  () () 0]
[ebrowse-ms "lastSplitter" () 0 () "  Expr lastSplitter()" 2157 0  () () 0]
[ebrowse-ms "popDecision" () 0 () "  void popDecision()" 2048 0  () () 0]
[ebrowse-ms "popTo" () 0 () "  void popTo(int" 2091 0  () () 0]
[ebrowse-ms "pushDecision" () 0 () "  void pushDecision(Expr" 1957 0  () () 0]
[ebrowse-ms "~DecisionEngine" () 1 () "  virtual ~DecisionEngine()" 1615 0  () "  virtual ~DecisionEngine()" 1615]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "VarOrder_lt" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_varorder.h" "struct VarOrder_lt {" 2270"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_varorder.h" ]
()([ebrowse-ms "activity" () 0 () "  const std::vector<double>&  activity;" 2310 0  () () 0]
)
([ebrowse-ms "VarOrder_lt" () 0 () "  VarOrder_lt(const std::vector<double>&  act) :" 2402 0  () "  VarOrder_lt(const std::vector<double>&  act) :" 2402]
[ebrowse-ms "operator ()" () 0 () "  bool operator () (Var" 2334 0  () "  bool operator () (Var" 2334]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "StrPairLess" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "class StrPairLess {" 1503"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "  bool operator()(const" 1535 0  () "  bool operator()(const" 1535]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Decider" "SAT::DPLLT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt.h" "  class Decider {" 3574"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt.h" ]
([ebrowse-ts [ebrowse-cs "SearchSatDecider" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" "class SearchSatDecider :" 2510"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" ]
()([ebrowse-ms "d_ss" () 0 () "  SearchSat* d_ss;" 2552 2  () () 0]
)
([ebrowse-ms "SearchSatDecider" () 0 () "  SearchSatDecider(SearchSat* ss) :" 2589 0  () "  SearchSatDecider(SearchSat* ss) :" 2589]
[ebrowse-ms "makeDecision" () 1 () "  Lit makeDecision()" 2655 0  () "  Lit makeDecision()" 2655]
[ebrowse-ms "~SearchSatDecider" () 0 () "  ~SearchSatDecider()" 2630 0  () "  ~SearchSatDecider()" 2630]
)
()
()
()
()
()()
])()
([ebrowse-ms "Decider" () 0 () "    Decider() {" 3598 0  () "    Decider() {" 3598]
[ebrowse-ms "makeDecision" () 9 () "    virtual Lit makeDecision()" 3752 0  () () 0]
[ebrowse-ms "~Decider" () 1 () "    virtual ~Decider()" 3624 0  () "    virtual ~Decider()" 3624]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchSimple" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_simple.cpp" ]
()()
([ebrowse-ms "SearchSimple" () 0 () () 0 0  () "SearchSimple::SearchSimple(TheoryCore* core)
  :" 2678]
[ebrowse-ms "addNonLiteralFact" () 0 () () 0 0  () "void SearchSimple::addNonLiteralFact(const" 6651]
[ebrowse-ms "checkValidInternal" () 0 () () 0 0  () "eryResult SearchSimple::checkValidInternal(const" 4530]
[ebrowse-ms "checkValidMain" () 0 () () 0 0  () "QueryResult SearchSimple::checkValidMain(const" 3417]
[ebrowse-ms "checkValidRec" () 0 () () 0 0  () "QueryResult SearchSimple::checkValidRec(Theorem" 924]
[ebrowse-ms "restartInternal" () 0 () () 0 0  () "QueryResult SearchSimple::restartInternal(const" 5861]
[ebrowse-ms "~SearchSimple" () 0 () () 0 0  () "SearchSimple::~SearchSimple()" 3337]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Debug" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  class CVC_DLL Debug {" 10702"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" ]
()([ebrowse-ms "d_counters" () 0 () "    CounterMap d_counters;" 11657 2  () () 0]
[ebrowse-ms "d_dumpName" () 0 () "    const std::string* d_dumpName;" 10918 2  () () 0]
[ebrowse-ms "d_flags" () 0 () "    FlagMap d_flags;" 11555 2  () () 0]
[ebrowse-ms "d_os" () 0 () "    std::ostream* d_os;" 10964 2  () () 0]
[ebrowse-ms "d_osDumpTrace" () 0 () "    std::ostream* d_osDumpTrace;" 11059 2  () () 0]
[ebrowse-ms "d_timers" () 0 () "    TimerMap d_timers;" 11856 2  () () 0]
[ebrowse-ms "d_traceFlags" () 0 () "    FlagMap d_traceFlags;" 11605 2  () () 0]
[ebrowse-ms "d_traceOptions" () 0 () "r<std::pair<std::string,bool> >* d_traceOptions;" 10857 2  () () 0]
)
([ebrowse-ms "Debug" () 0 () "    Debug():" 11922 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "    Debug():" 11922]
[ebrowse-ms "counter" () 0 () "    DebugCounter counter(const" 13109 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "    DebugCounter counter(const" 13109]
[ebrowse-ms "dumpTrace" () 0 () "    void dumpTrace(const" 14695 0  () "void Debug::dumpTrace(const" 9155]
[ebrowse-ms "finalize" () 0 () "    void finalize()" 12330 0  () "void Debug::finalize()" 3750]
[ebrowse-ms "flag" () 0 () "    DebugFlag flag(const" 12471 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "    DebugFlag flag(const" 12471]
[ebrowse-ms "getOS" () 0 () "    std::ostream& getOS()" 14530 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "    std::ostream& getOS()" 14530]
[ebrowse-ms "getOSDumpTrace" () 0 () "    std::ostream& getOSDumpTrace()" 14628 0  () "ostream& Debug::getOSDumpTrace()" 8830]
[ebrowse-ms "init" () 0 () "    void init(const" 12136 0  () "void Debug::init(const" 3561]
[ebrowse-ms "newTimer" () 0 () () 0 0  () "DebugTimer Debug::newTimer()" 8177]
[ebrowse-ms "printAll" () 0 () "    void printAll()" 15103 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "    void printAll()" 15103]
[ebrowse-ms "printAll" () 0 () "    void printAll(std" 14964 0  () "void Debug::printAll(ostream" 9531]
[ebrowse-ms "scopeLevel" () 0 () "    int scopeLevel()" 15216 0  () () 0]
[ebrowse-ms "setCurrentTime" () 0 () "    void setCurrentTime(const" 14068 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "    void setCurrentTime(const" 14068]
[ebrowse-ms "setCurrentTime" () 0 () "    void setCurrentTime(DebugTimer" 14029 0  () "void Debug::setCurrentTime(DebugTimer" 8287]
[ebrowse-ms "setElapsed" () 0 () "    void setElapsed(DebugTimer" 14441 0  () "void Debug::setElapsed(DebugTimer" 8583]
[ebrowse-ms "setOS" () 0 () "    void setOS(std" 14843 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "    void setOS(std" 14843]
[ebrowse-ms "timer" () 0 () "    DebugTimer timer(const" 13311 0  () "DebugTimer Debug::timer(const" 7899]
[ebrowse-ms "trace" () 0 () "    bool trace(const" 13541 0  () "Debug::trace(const" 7420]
[ebrowse-ms "traceAll" () 0 () "    void traceAll(bool" 12951 0  () "Debug::traceAll(bool" 3914]
[ebrowse-ms "traceFlag" () 0 () "    DebugFlag traceFlag(const" 12686 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "    DebugFlag traceFlag(const" 12686]
[ebrowse-ms "traceFlag" () 0 () "    DebugFlag traceFlag(const" 12845 0  () "Debug::traceFlag(const" 3834]
[ebrowse-ms "~Debug" () 0 () "    ~Debug()" 12054 0  () "Debug::~Debug()" 7216]
)
()
([ebrowse-ms "newTimer" () 0 () "    static DebugTimer newTimer()" 13928 0  () () 0]
)
()
([ebrowse-ms "CounterMap" () 0 () "sh_map<std::string, int, stringHash> CounterMap;" 11461 2  () () 0]
[ebrowse-ms "FlagMap" () 0 () "hash_map<std::string, bool, stringHash> FlagMap;" 11393 2  () () 0]
[ebrowse-ms "TimerMap" () 0 () "p<std::string, DebugTime*, stringHash> TimerMap;" 11534 2  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "ExprValue" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class CVC_DLL ExprValue {" 2169"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
([ebrowse-ts [ebrowse-cs "BVConstExpr" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_expr_value.h" "class BVConstExpr :" 1042"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_expr_value.h" ]
()([ebrowse-ms "d_MMIndex" () 0 () "  size_t d_MMIndex;" 1154 2  () () 0]
[ebrowse-ms "d_bvconst" () 0 () "  std::vector<bool> d_bvconst;" 1101 2  () () 0]
)
([ebrowse-ms "BVConstExpr" () 0 () "	      size_t mmIndex, ExprIndex idx = 0);" 1367 0  () () 0]
[ebrowse-ms "BVConstExpr" () 0 () "	      size_t mmIndex, ExprIndex idx = 0);" 1251 0  () () 0]
[ebrowse-ms "computeHash" () 5 () "  size_t computeHash()" 1625 0  () () 0]
[ebrowse-ms "copy" () 5 () "  ExprValue* copy(ExprManager" 1475 0  () "  ExprValue* copy(ExprManager" 1475]
[ebrowse-ms "getExprValue" () 5 () "  const ExprValue* getExprValue()" 1717 0  () "  const ExprValue* getExprValue()" 1717]
[ebrowse-ms "getMMIndex" () 5 () "  size_t getMMIndex()" 1654 0  () "  size_t getMMIndex()" 1654]
[ebrowse-ms "getValue" () 4 () "  bool getValue(int" 2266 0  () "  bool getValue(int" 2266]
[ebrowse-ms "operator ==" () 5 () "  bool operator==(const" 1836 0  () "  bool operator==(const" 1836]
[ebrowse-ms "size" () 4 () "  unsigned size()" 2211 0  () "  unsigned size()" 2211]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 2186 0  () "  void operator delete(void" 2186]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 2099 0  () "  void operator delete(void" 2099]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 2010 0  () "  void* operator new(size_t" 2010]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprBoundVar" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class ExprBoundVar:" 25937"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
()([ebrowse-ms "d_name" () 0 () "  std::string d_name;" 26036 2  () () 0]
[ebrowse-ms "d_uid" () 0 () "  std::string d_uid;" 26057 2  () () 0]
)
([ebrowse-ms "ExprBoundVar" () 0 () "    :" 26642 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 26642]
[ebrowse-ms "computeHash" () 5 () "  virtual size_t computeHash()" 26324 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t computeHash()" 26324]
[ebrowse-ms "copy" () 5 () "  virtual ExprValue* copy(ExprManager" 26558 1  () "ExprValue* ExprBoundVar::copy(ExprManager" 5843]
[ebrowse-ms "getMMIndex" () 5 () "  virtual size_t getMMIndex()" 26248 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t getMMIndex()" 26248]
[ebrowse-ms "getName" () 5 () "  virtual const std::string& getName()" 26097 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::string& getName()" 26097]
[ebrowse-ms "getUid" () 5 () "  virtual const std::string& getUid()" 26160 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::string& getUid()" 26160]
[ebrowse-ms "isVar" () 5 () "  virtual bool isVar()" 26432 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isVar()" 26432]
[ebrowse-ms "operator ==" () 5 () "  virtual bool operator==(const" 26875 0  () "bool ExprBoundVar::operator==(const" 5616]
[ebrowse-ms "~ExprBoundVar" () 1 () "  virtual ~ExprBoundVar()" 26838 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprBoundVar()" 26838]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 27124 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 27124]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 27038 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 27038]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 26949 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 26949]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprClosure" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class ExprClosure:" 27296"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
()([ebrowse-ms "d_body" () 0 () "  Expr d_body;" 27478 2  () () 0]
[ebrowse-ms "d_manual_triggers" () 0 () "  std::vector<Expr> d_manual_triggers;" 27669 2  () () 0]
[ebrowse-ms "d_vars" () 0 () "  std::vector<Expr> d_vars;" 27423 2  () () 0]
)
([ebrowse-ms "ExprClosure" () 0 () "    :" 28733 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 28733]
[ebrowse-ms "ExprClosure" () 0 () "    :" 28546 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 28546]
[ebrowse-ms "computeHash" () 5 () "  size_t computeHash()" 28107 1  () "size_t ExprClosure::computeHash()" 9042]
[ebrowse-ms "computeSize" () 5 () "  Unsigned computeSize()" 28139 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  Unsigned computeSize()" 28139]
[ebrowse-ms "copy" () 5 () "  ExprValue* copy(ExprManager" 28281 1  () "ExprValue* ExprClosure::copy(ExprManager" 7557]
[ebrowse-ms "getBody" () 5 () "  virtual const Expr& getBody()" 27867 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const Expr& getBody()" 27867]
[ebrowse-ms "getMMIndex" () 5 () "  virtual size_t getMMIndex()" 27733 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t getMMIndex()" 27733]
[ebrowse-ms "getTrigs" () 5 () "  virtual const std::vector<Expr>&  getTrigs()" 28035 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::vector<Expr>&  getTrigs()" 28035]
[ebrowse-ms "getVars" () 5 () "  virtual const std::vector<Expr>& getVars()" 27810 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::vector<Expr>& getVars()" 27810]
[ebrowse-ms "isClosure" () 5 () "  virtual bool isClosure()" 29306 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isClosure()" 29306]
[ebrowse-ms "operator ==" () 5 () "  bool operator==(const" 29024 0  () "bool ExprClosure::operator==(const" 7316]
[ebrowse-ms "setTriggers" () 1 () "  virtual void setTriggers(const" 27925 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual void setTriggers(const" 27925]
[ebrowse-ms "~ExprClosure" () 1 () "  virtual ~ExprClosure()" 28995 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprClosure()" 28995]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 29273 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 29273]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 29187 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 29187]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 29098 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 29098]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprNode" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class CVC_DLL ExprNode:" 12625"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
([ebrowse-ts [ebrowse-cs "ExprApply" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class CVC_DLL ExprApply:" 16887"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
()([ebrowse-ms "d_opExpr" () 0 () "  Expr d_opExpr;" 16980 2  () () 0]
)
([ebrowse-ms "ExprApply" () 0 () "    :" 17603 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 17603]
[ebrowse-ms "ExprApply" () 0 () "    :" 17395 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 17395]
[ebrowse-ms "computeHash" () 5 () "  size_t computeHash()" 17065 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t computeHash()" 17065]
[ebrowse-ms "copy" () 5 () "  ExprValue* copy(ExprManager" 17315 1  () "ExprValue* ExprApply::copy(ExprManager" 6181]
[ebrowse-ms "getMMIndex" () 5 () "  size_t getMMIndex()" 17013 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t getMMIndex()" 17013]
[ebrowse-ms "getOp" () 4 () "  Op getOp()" 17150 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  Op getOp()" 17150]
[ebrowse-ms "isApply" () 4 () "  bool isApply()" 17198 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  bool isApply()" 17198]
[ebrowse-ms "operator ==" () 5 () "  bool operator==(const" 17888 0  () "bool ExprApply::operator==(const" 5984]
[ebrowse-ms "~ExprApply" () 1 () "  virtual ~ExprApply()" 17859 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprApply()" 17859]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 18137 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 18137]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 18051 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 18051]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 17962 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 17962]
)
()
()
()()
])([ebrowse-ms "d_children" () 0 () "  std::vector<Expr> d_children;" 12762 1  () () 0]
[ebrowse-ms "d_rep" () 0 () "  CDO<Theorem>* d_rep;" 12869 1  () () 0]
[ebrowse-ms "d_sig" () 0 () "  CDO<Theorem>* d_sig;" 12846 1  () () 0]
)
([ebrowse-ms "ExprNode" () 0 () "    :" 13863 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 13863]
[ebrowse-ms "ExprNode" () 0 () "    :" 13727 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 13727]
[ebrowse-ms "arity" () 5 () "  unsigned arity()" 13027 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  unsigned arity()" 13027]
[ebrowse-ms "computeHash" () 5 () "  size_t computeHash()" 13330 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t computeHash()" 13330]
[ebrowse-ms "computeSize" () 5 () "  Unsigned computeSize()" 13478 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  Unsigned computeSize()" 13478]
[ebrowse-ms "copy" () 5 () "  virtual ExprValue* copy(ExprManager" 13646 1  () "ExprValue* ExprNode::copy(ExprManager" 3398]
[ebrowse-ms "getKids" () 5 () "  const std::vector<Expr>& getKids()" 13227 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  const std::vector<Expr>& getKids()" 13227]
[ebrowse-ms "getKids1" () 0 () "  std::vector<Expr>& getKids1()" 13131 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  std::vector<Expr>& getKids1()" 13131]
[ebrowse-ms "getMMIndex" () 5 () "  size_t getMMIndex()" 12936 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t getMMIndex()" 12936]
[ebrowse-ms "getRep" () 5 () "  virtual CDO<Theorem>* getRep()" 14514 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual CDO<Theorem>* getRep()" 14514]
[ebrowse-ms "getSig" () 5 () "  virtual CDO<Theorem>* getSig()" 14457 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual CDO<Theorem>* getSig()" 14457]
[ebrowse-ms "operator ==" () 5 () "  virtual bool operator==(const" 14400 0  () "bool ExprNode::operator==(const" 3203]
[ebrowse-ms "setRep" () 1 () "  virtual void setRep(CDO" 14565 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual void setRep(CDO" 14565]
[ebrowse-ms "setSig" () 1 () "  virtual void setSig(CDO" 14623 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual void setSig(CDO" 14623]
[ebrowse-ms "~ExprNode" () 1 () "  virtual ~ExprNode()" 14057 0  () "ExprNode::~ExprNode()" 2849]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 14324 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 14324]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 14206 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 14206]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 14119 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 14119]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprNodeTmp" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class ExprNodeTmp:" 14775"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
([ebrowse-ts [ebrowse-cs "ExprApplyTmp" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class ExprApplyTmp:" 16022"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
()([ebrowse-ms "d_opExpr" () 0 () "  Expr d_opExpr;" 16118 2  () () 0]
)
([ebrowse-ms "ExprApplyTmp" () 0 () "    :" 16539 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 16539]
[ebrowse-ms "computeHash" () 5 () "  size_t computeHash()" 16203 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t computeHash()" 16203]
[ebrowse-ms "copy" () 5 () "  ExprValue* copy(ExprManager" 16456 1  () "ExprValue* ExprApplyTmp::copy(ExprManager" 6849]
[ebrowse-ms "getMMIndex" () 5 () "  size_t getMMIndex()" 16151 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t getMMIndex()" 16151]
[ebrowse-ms "getOp" () 4 () "  Op getOp()" 16291 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  Op getOp()" 16291]
[ebrowse-ms "isApply" () 4 () "  bool isApply()" 16339 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  bool isApply()" 16339]
[ebrowse-ms "operator ==" () 5 () "  bool operator==(const" 16809 0  () "bool ExprApplyTmp::operator==(const" 6649]
[ebrowse-ms "~ExprApplyTmp" () 1 () "  virtual ~ExprApplyTmp()" 16780 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprApplyTmp()" 16780]
)
()
()
()
()
()()
])([ebrowse-ms "d_children" () 0 () "  const std::vector<Expr>& d_children;" 14919 1  () () 0]
)
([ebrowse-ms "ExprNodeTmp" () 0 () "    :" 15689 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 15689]
[ebrowse-ms "arity" () 5 () "  unsigned arity()" 15077 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  unsigned arity()" 15077]
[ebrowse-ms "computeHash" () 5 () "  size_t computeHash()" 15289 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t computeHash()" 15289]
[ebrowse-ms "computeSize" () 5 () "  Unsigned computeSize()" 15437 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  Unsigned computeSize()" 15437]
[ebrowse-ms "copy" () 5 () "  virtual ExprValue* copy(ExprManager" 15605 1  () "ExprValue* ExprNodeTmp::copy(ExprManager" 2432]
[ebrowse-ms "getKids" () 5 () "  const std::vector<Expr>& getKids()" 15186 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  const std::vector<Expr>& getKids()" 15186]
[ebrowse-ms "getMMIndex" () 5 () "  size_t getMMIndex()" 14986 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t getMMIndex()" 14986]
[ebrowse-ms "operator ==" () 5 () "  virtual bool operator==(const" 15906 0  () "bool ExprNodeTmp::operator==(const" 2256]
[ebrowse-ms "~ExprNodeTmp" () 1 () "  virtual ~ExprNodeTmp()" 15829 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprNodeTmp()" 15829]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprRational" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class ExprRational:" 22493"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
()([ebrowse-ms "d_r" () 0 () "  Rational d_r;" 22586 2  () () 0]
)
([ebrowse-ms "ExprRational" () 0 () "    :" 23239 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 23239]
[ebrowse-ms "computeHash" () 5 () "  virtual size_t computeHash()" 22918 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t computeHash()" 22918]
[ebrowse-ms "copy" () 5 () "  virtual ExprValue* copy(ExprManager" 23104 1  () "ExprValue* ExprRational::copy(ExprManager" 4829]
[ebrowse-ms "getMMIndex" () 5 () "  virtual size_t getMMIndex()" 22842 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t getMMIndex()" 22842]
[ebrowse-ms "getRational" () 5 () "  virtual const Rational& getRational()" 22627 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const Rational& getRational()" 22627]
[ebrowse-ms "isRational" () 5 () "  virtual bool isRational()" 23163 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isRational()" 23163]
[ebrowse-ms "operator ==" () 5 () "  virtual bool operator==(const" 22978 1  () "bool ExprRational::operator==(const" 4655]
[ebrowse-ms "~ExprRational" () 1 () "  virtual ~ExprRational()" 23376 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprRational()" 23376]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 23606 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 23606]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 23520 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 23520]
[ebrowse-ms "hash" () 0 () "  static size_t hash(const" 22714 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  static size_t hash(const" 22714]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 23431 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 23431]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprSkolem" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class ExprSkolem:" 21237"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
()([ebrowse-ms "d_idx" () 0 () "  int d_idx;" 21387 2  () () 0]
[ebrowse-ms "d_quant" () 0 () "  Expr d_quant;" 21330 2  () () 0]
)
([ebrowse-ms "ExprSkolem" () 0 () "    :" 22041 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 22041]
[ebrowse-ms "computeHash" () 5 () "  size_t computeHash()" 21655 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t computeHash()" 21655]
[ebrowse-ms "copy" () 5 () "  ExprValue* copy(ExprManager" 21918 1  () "ExprValue* ExprSkolem::copy(ExprManager" 4350]
[ebrowse-ms "getBoundIndex" () 5 () "  int getBoundIndex()" 21513 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  int getBoundIndex()" 21513]
[ebrowse-ms "getExistential" () 5 () "  const Expr& getExistential()" 21467 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  const Expr& getExistential()" 21467]
[ebrowse-ms "getMMIndex" () 5 () "  size_t getMMIndex()" 21591 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t getMMIndex()" 21591]
[ebrowse-ms "isVar" () 5 () "  bool isVar()" 21964 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  bool isVar()" 21964]
[ebrowse-ms "operator ==" () 5 () "  bool operator==(const" 21799 1  () "bool ExprSkolem::operator==(const" 4127]
[ebrowse-ms "~ExprSkolem" () 1 () "  virtual ~ExprSkolem()" 22206 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprSkolem()" 22206]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 22436 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 22436]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 22350 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 22350]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 22261 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 22261]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprString" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class ExprString:" 20019"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
()([ebrowse-ms "d_str" () 0 () "  std::string d_str;" 20117 2  () () 0]
)
([ebrowse-ms "ExprString" () 0 () "    :" 20758 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 20758]
[ebrowse-ms "computeHash" () 5 () "  virtual size_t computeHash()" 20428 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t computeHash()" 20428]
[ebrowse-ms "copy" () 5 () "  virtual ExprValue* copy(ExprManager" 20677 1  () "ExprValue* ExprString::copy(ExprManager" 3995]
[ebrowse-ms "getMMIndex" () 5 () "  virtual size_t getMMIndex()" 20306 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t getMMIndex()" 20306]
[ebrowse-ms "getString" () 5 () "  virtual const std::string& getString()" 20549 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::string& getString()" 20549]
[ebrowse-ms "isString" () 5 () "  virtual bool isString()" 20485 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isString()" 20485]
[ebrowse-ms "operator ==" () 5 () "  virtual bool operator==(const" 20933 0  () "bool ExprString::operator==(const" 3827]
[ebrowse-ms "~ExprString" () 1 () "  virtual ~ExprString()" 20896 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprString()" 20896]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 21182 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 21182]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 21096 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 21096]
[ebrowse-ms "hash" () 0 () "  static size_t hash(const" 20182 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  static size_t hash(const" 20182]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 21007 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 21007]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprSymbol" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class ExprSymbol:" 24829"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
()([ebrowse-ms "d_name" () 0 () "  std::string d_name;" 24928 2  () () 0]
)
([ebrowse-ms "ExprSymbol" () 0 () "    :" 25433 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 25433]
[ebrowse-ms "computeHash" () 5 () "  virtual size_t computeHash()" 25130 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t computeHash()" 25130]
[ebrowse-ms "copy" () 5 () "  virtual ExprValue* copy(ExprManager" 25310 1  () "ExprValue* ExprSymbol::copy(ExprManager" 5473]
[ebrowse-ms "getMMIndex" () 5 () "  virtual size_t getMMIndex()" 25057 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t getMMIndex()" 25057]
[ebrowse-ms "getName" () 5 () "  virtual const std::string& getName()" 24968 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::string& getName()" 24968]
[ebrowse-ms "isSymbol" () 5 () "  bool isSymbol()" 25359 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  bool isSymbol()" 25359]
[ebrowse-ms "operator ==" () 5 () "  virtual bool operator==(const" 25631 0  () "bool ExprSymbol::operator==(const" 5279]
[ebrowse-ms "~ExprSymbol" () 1 () "  virtual ~ExprSymbol()" 25594 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprSymbol()" 25594]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 25880 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 25880]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 25794 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 25794]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 25705 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 25705]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprVar" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "class ExprVar:" 23699"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_value.cpp" ]
()([ebrowse-ms "d_name" () 0 () "  std::string d_name;" 23798 2  () () 0]
)
([ebrowse-ms "ExprVar" () 0 () "    :" 24280 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 24280]
[ebrowse-ms "computeHash" () 5 () "  virtual size_t computeHash()" 24000 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t computeHash()" 24000]
[ebrowse-ms "copy" () 5 () "  virtual ExprValue* copy(ExprManager" 24201 1  () "ExprValue* ExprVar::copy(ExprManager" 5149]
[ebrowse-ms "getMMIndex" () 5 () "  virtual size_t getMMIndex()" 23927 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t getMMIndex()" 23927]
[ebrowse-ms "getName" () 5 () "  virtual const std::string& getName()" 23838 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::string& getName()" 23838]
[ebrowse-ms "isVar" () 5 () "  virtual bool isVar()" 24074 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isVar()" 24074]
[ebrowse-ms "operator ==" () 5 () "  virtual bool operator==(const" 24454 0  () "bool ExprVar::operator==(const" 4958]
[ebrowse-ms "~ExprVar" () 1 () "  virtual ~ExprVar()" 24417 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual ~ExprVar()" 24417]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 24703 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 24703]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 24617 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 24617]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 24528 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 24528]
)
()
()
()()
])([ebrowse-ms "d_dynamicFlags" () 0 () "  CDFlags d_dynamicFlags;" 3279 2  () () 0]
[ebrowse-ms "d_em" () 0 () "  ExprManager* d_em;" 3788 1  () () 0]
[ebrowse-ms "d_eqNext" () 0 () "  CDO<Theorem>* d_eqNext;" 2719 2  () () 0]
[ebrowse-ms "d_find" () 0 () "  CDO<Theorem>* d_find;" 2599 2  () () 0]
[ebrowse-ms "d_flag" () 0 () "  unsigned d_flag;" 3576 2  () () 0]
[ebrowse-ms "d_hash" () 0 () "  size_t d_hash;" 2534 2  () () 0]
[ebrowse-ms "d_index" () 0 () "  ExprIndex d_index;" 2405 2  () () 0]
[ebrowse-ms "d_kind" () 0 () "  int d_kind;" 3742 1  () () 0]
[ebrowse-ms "d_notifyList" () 0 () "  NotifyList* d_notifyList;" 3041 2  () () 0]
[ebrowse-ms "d_refcount" () 0 () "  unsigned d_refcount;" 2476 2  () () 0]
[ebrowse-ms "d_simpCache" () 0 () "  Theorem d_simpCache;" 3101 2  () () 0]
[ebrowse-ms "d_simpCacheTag" () 0 () "  unsigned d_simpCacheTag;" 3180 2  () () 0]
[ebrowse-ms "d_size" () 0 () "  Unsigned d_size;" 3343 2  () () 0]
[ebrowse-ms "d_type" () 0 () "  Type d_type;" 2789 2  () () 0]
[ebrowse-ms "s_charHash" () 0 () () 0 0  () "std::hash<char*> ExprValue::s_charHash;" 857]
[ebrowse-ms "s_intHash" () 0 () () 0 0  () "std::hash<long int> ExprValue::s_intHash;" 899]
)
([ebrowse-ms "ExprValue" () 0 () "    :" 6710 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "    :" 6710]
[ebrowse-ms "arity" () 5 () "  virtual unsigned arity()" 9386 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual unsigned arity()" 9386]
[ebrowse-ms "computeHash" () 5 () "  virtual size_t computeHash()" 6315 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t computeHash()" 6315]
[ebrowse-ms "computeSize" () 5 () "  virtual Unsigned computeSize()" 6511 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual Unsigned computeSize()" 6511]
[ebrowse-ms "copy" () 5 () "  virtual ExprValue* copy(ExprManager" 6632 1  () "ExprValue* ExprValue::copy(ExprManager" 2031]
[ebrowse-ms "decRefcount" () 0 () "  void decRefcount()" 4029 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void decRefcount()" 4029]
[ebrowse-ms "getBody" () 5 () "  virtual const Expr& getBody()" 11190 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const Expr& getBody()" 11190]
[ebrowse-ms "getBoundIndex" () 5 () "  virtual int getBoundIndex()" 11807 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual int getBoundIndex()" 11807]
[ebrowse-ms "getExistential" () 5 () "  virtual const Expr& getExistential()" 11659 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const Expr& getExistential()" 11659]
[ebrowse-ms "getExprValue" () 5 () "  virtual const ExprValue* getExprValue()" 8472 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const ExprValue* getExprValue()" 8472]
[ebrowse-ms "getField" () 5 () "  virtual const std::string& getField()" 12122 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::string& getField()" 12122]
[ebrowse-ms "getFields" () 5 () "tual const std::vector<std::string>& getFields()" 11949 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "tual const std::vector<std::string>& getFields()" 11949]
[ebrowse-ms "getKids" () 5 () "  virtual const std::vector<Expr>& getKids()" 9241 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::vector<Expr>& getKids()" 9241]
[ebrowse-ms "getKind" () 4 () "  int getKind()" 7720 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  int getKind()" 7720]
[ebrowse-ms "getMM" () 0 () "  MemoryManager* getMM(size_t" 5753 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  MemoryManager* getMM(size_t" 5753]
[ebrowse-ms "getMMIndex" () 5 () "  virtual size_t getMMIndex()" 8079 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual size_t getMMIndex()" 8079]
[ebrowse-ms "getName" () 5 () "  virtual const std::string& getName()" 10502 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::string& getName()" 10502]
[ebrowse-ms "getOp" () 5 () "  virtual Op getOp()" 10890 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual Op getOp()" 10890]
[ebrowse-ms "getRational" () 5 () "  virtual const Rational& getRational()" 10284 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const Rational& getRational()" 10284]
[ebrowse-ms "getRep" () 5 () "  virtual CDO<Theorem>* getRep()" 9615 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual CDO<Theorem>* getRep()" 9615]
[ebrowse-ms "getSig" () 5 () "  virtual CDO<Theorem>* getSig()" 9493 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual CDO<Theorem>* getSig()" 9493]
[ebrowse-ms "getSize" () 4 () "  Unsigned getSize()" 4551 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  Unsigned getSize()" 4551]
[ebrowse-ms "getString" () 5 () "  virtual const std::string& getString()" 10125 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::string& getString()" 10125]
[ebrowse-ms "getTheorem" () 5 () "  virtual const Theorem& getTheorem()" 12401 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const Theorem& getTheorem()" 12401]
[ebrowse-ms "getTrigs" () 5 () "  virtual const std::vector<Expr>& getTrigs()" 11481 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::vector<Expr>& getTrigs()" 11481]
[ebrowse-ms "getTupleIndex" () 5 () "  virtual int getTupleIndex()" 12271 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual int getTupleIndex()" 12271]
[ebrowse-ms "getUid" () 5 () "  virtual const std::string& getUid()" 9956 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::string& getUid()" 9956]
[ebrowse-ms "getVar" () 5 () "  virtual const Expr& getVar()" 10722 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const Expr& getVar()" 10722]
[ebrowse-ms "getVars" () 5 () "  virtual const std::vector<Expr>& getVars()" 11032 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual const std::vector<Expr>& getVars()" 11032]
[ebrowse-ms "hash" () 4 () "  size_t hash()" 4387 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  size_t hash()" 4387]
[ebrowse-ms "hash" () 0 () () 0 0  () "size_t ExprValue::hash(const" 8460]
[ebrowse-ms "incRefcount" () 0 () "  void incRefcount()" 3955 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void incRefcount()" 3955]
[ebrowse-ms "isApply" () 5 () "  virtual bool isApply()" 8852 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isApply()" 8852]
[ebrowse-ms "isClosure" () 5 () "  virtual bool isClosure()" 9022 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isClosure()" 9022]
[ebrowse-ms "isRational" () 5 () "  virtual bool isRational()" 8686 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isRational()" 8686]
[ebrowse-ms "isString" () 5 () "  virtual bool isString()" 8594 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isString()" 8594]
[ebrowse-ms "isSymbol" () 5 () "  virtual bool isSymbol()" 8929 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isSymbol()" 8929]
[ebrowse-ms "isTheorem" () 5 () "  virtual bool isTheorem()" 9110 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isTheorem()" 9110]
[ebrowse-ms "isVar" () 5 () "  virtual bool isVar()" 8763 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual bool isVar()" 8763]
[ebrowse-ms "operator ==" () 5 () "  virtual bool operator==(const" 8213 0  () "bool ExprValue::operator==(const" 1773]
[ebrowse-ms "rebuild" () 4 () "  Expr rebuild(Expr" 6072 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  Expr rebuild(Expr" 6072]
[ebrowse-ms "rebuild" () 4 () "  ExprValue* rebuild(ExprManager" 5948 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  ExprValue* rebuild(ExprManager" 5948]
[ebrowse-ms "setIndex" () 0 () "  void setIndex(ExprIndex" 3875 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void setIndex(ExprIndex" 3875]
[ebrowse-ms "setRep" () 1 () "  virtual void setRep(CDO" 9837 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual void setRep(CDO" 9837]
[ebrowse-ms "setSig" () 1 () "  virtual void setSig(CDO" 9730 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual void setSig(CDO" 9730]
[ebrowse-ms "setTriggers" () 1 () "  virtual void setTriggers(const" 11335 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  virtual void setTriggers(const" 11335]
[ebrowse-ms "sizeWithChildren" () 0 () () 0 0  () "Unsigned ExprValue::sizeWithChildren(const" 8814]
[ebrowse-ms "~ExprValue" () 1 () "  virtual ~ExprValue()" 7665 0  () "ExprValue::~ExprValue()" 1113]
)
([ebrowse-ms "s_charHash" () 0 () "  static std::hash<char*> s_charHash;" 5214 1  () () 0]
[ebrowse-ms "s_intHash" () 0 () "  static std::hash<long int> s_intHash;" 5254 1  () () 0]
)
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 8007 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 8007]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 7889 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void operator delete(void" 7889]
[ebrowse-ms "hash" () 0 () "  static size_t hash(const" 5500 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  static size_t hash(const" 5500]
[ebrowse-ms "hash" () 0 () "  static size_t hash(const" 5402 1  () () 0]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 7802 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  void* operator new(size_t" 7802]
[ebrowse-ms "pointerHash" () 0 () "  static size_t pointerHash(void" 5288 1  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "  static size_t pointerHash(void" 5288]
[ebrowse-ms "sizeWithChildren" () 0 () "  static Unsigned sizeWithChildren(const" 5632 1  () () 0]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "VariableManager" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "  class VariableManager {" 12270"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" ]
()([ebrowse-ms "d_cm" () 0 () "    ContextManager* d_cm;" 12366 2  () () 0]
[ebrowse-ms "d_deleted" () 0 () "    std::vector<VariableValue*> d_deleted;" 12833 2  () () 0]
[ebrowse-ms "d_disableGC" () 0 () "    bool d_disableGC;" 12664 2  () () 0]
[ebrowse-ms "d_mm" () 0 () "    MemoryManager* d_mm;" 12391 2  () () 0]
[ebrowse-ms "d_notifyObj" () 0 () "    VariableManagerNotifyObj* d_notifyObj;" 12466 2  () () 0]
[ebrowse-ms "d_postponeGC" () 0 () "    bool d_postponeGC;" 12723 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "    SearchEngineRules* d_rules;" 12423 2  () () 0]
[ebrowse-ms "d_varSet" () 0 () "    VariableValueSet d_varSet;" 13292 2  () () 0]
)
([ebrowse-ms "VariableManager" () 0 () "		    const std::string& mmFlag);" 13499 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "				 const string& mmFlag)
  :" 10786]
[ebrowse-ms "gc" () 0 () "    void gc(VariableValue" 13679 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "VariableManager::gc(VariableValue" 11744]
[ebrowse-ms "getCM" () 4 () "    ContextManager* getCM()" 13867 0  () "    ContextManager* getCM()" 13867]
[ebrowse-ms "getRules" () 4 () "    SearchEngineRules* getRules()" 13924 0  () "    SearchEngineRules* getRules()" 13924]
[ebrowse-ms "newVariableValue" () 0 () "    VariableValue* newVariableValue(const" 13376 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "VariableManager::newVariableValue(const" 10435]
[ebrowse-ms "postponeGC" () 0 () "    void postponeGC()" 13742 0  () "    void postponeGC()" 13742]
[ebrowse-ms "resumeGC" () 0 () "    void resumeGC()" 13821 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "VariableManager::resumeGC()" 11940]
[ebrowse-ms "~VariableManager" () 0 () "    ~VariableManager()" 13605 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "VariableManager::~VariableManager()" 11178]
)
()
()
()
([ebrowse-ms "VariableValueSet" () 0 () "<VariableValue*, HashLV, EqLV> VariableValueSet;" 13261 2  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "StatCounter" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "  class StatCounter {" 2654"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" ]
()([ebrowse-ms "d_counter" () 0 () "    int* d_counter;" 2685 2  () () 0]
)
([ebrowse-ms "StatCounter" () 0 () "    StatCounter(int& c) :" 2854 0  () "    StatCounter(int& c) :" 2854]
[ebrowse-ms "operator ++" () 0 () "    int operator++(int" 3330 0  () "    int operator++(int" 3330]
[ebrowse-ms "operator ++" () 0 () "    int operator++()" 3204 0  () "    int operator++()" 3204]
[ebrowse-ms "operator +=" () 0 () "    StatCounter& operator+=(const" 3862 0  () "    StatCounter& operator+=(const" 3862]
[ebrowse-ms "operator +=" () 0 () "    StatCounter& operator+=(int" 3526 0  () "    StatCounter& operator+=(int" 3526]
[ebrowse-ms "operator --" () 0 () "    int operator--(int" 3279 0  () "    int operator--(int" 3279]
[ebrowse-ms "operator --" () 0 () "    int operator--()" 3156 0  () "    int operator--()" 3156]
[ebrowse-ms "operator -=" () 0 () "    StatCounter& operator-=(const" 3762 0  () "    StatCounter& operator-=(const" 3762]
[ebrowse-ms "operator -=" () 0 () "    StatCounter& operator-=(int" 3594 0  () "    StatCounter& operator-=(int" 3594]
[ebrowse-ms "operator =" () 0 () "    StatCounter& operator=(const" 3663 0  () "    StatCounter& operator=(const" 3663]
[ebrowse-ms "operator =" () 0 () "    StatCounter& operator=(int" 3459 0  () "    StatCounter& operator=(int" 3459]
[ebrowse-ms "~StatCounter" () 0 () "    ~StatCounter()" 2915 0  () "    ~StatCounter()" 2915]
)
()
()
([ebrowse-ms "operator !=" () 2 () "    friend bool operator!=(const" 4340 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(const" 7730]
[ebrowse-ms "operator !=" () 2 () "    friend bool operator!=(int" 4220 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(int" 7534]
[ebrowse-ms "operator !=" () 2 () "    friend bool operator!=(const" 4089 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(const" 7313]
[ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 4422 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(const" 4281 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator==(const" 7633]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(int" 4161 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator==(int" 7437]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(const" 4015 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
)
()
()()
][ebrowse-ts [ebrowse-cs "SatSolver" "SAT" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SatSolver" () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "class SatSolver {" 1226"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/sat_api.cpp" ]
()([ebrowse-ms "SATStatus" () 0 () "  } SATStatus;" 1364 0  () () 0]
)
([ebrowse-ms "AddClause" () 9 () "  virtual Clause AddClause(std" 3893 0  () () 0]
[ebrowse-ms "AddVariable" () 0 () "  Var AddVariable()" 2747 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  Var AddVariable()" 2747]
[ebrowse-ms "AddVariables" () 9 () "  virtual Var AddVariables(int" 2689 0  () () 0]
[ebrowse-ms "Continue" () 9 () "  virtual SATStatus Continue()" 6045 0  () () 0]
[ebrowse-ms "Create" () 0 () () 0 0  () "SatSolver *SatSolver::Create()" 700]
[ebrowse-ms "DeleteClause" () 1 () "  virtual bool DeleteClause(Clause" 4340 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual bool DeleteClause(Clause" 4340]
[ebrowse-ms "DisableClauseDeletion" () 1 () "  virtual bool DisableClauseDeletion()" 9393 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual bool DisableClauseDeletion()" 9393]
[ebrowse-ms "EnableClauseDeletion" () 1 () "  virtual bool EnableClauseDeletion()" 9332 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual bool EnableClauseDeletion()" 9332]
[ebrowse-ms "GetBudgetUsed" () 1 () "  virtual int GetBudgetUsed()" 9954 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetBudgetUsed()" 9954]
[ebrowse-ms "GetClause" () 9 () "  virtual Clause GetClause(int" 4499 0  () () 0]
[ebrowse-ms "GetClauseLits" () 9 () "  virtual void GetClauseLits(Clause" 4930 0  () () 0]
[ebrowse-ms "GetFirstClause" () 9 () "  virtual Clause GetFirstClause()" 4625 0  () () 0]
[ebrowse-ms "GetFirstVar" () 9 () "  virtual Var GetFirstVar()" 3112 0  () () 0]
[ebrowse-ms "GetMaxDLevel" () 1 () "  virtual int GetMaxDLevel()" 11265 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetMaxDLevel()" 11265]
[ebrowse-ms "GetMemUsed" () 1 () "  virtual int GetMemUsed()" 10045 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetMemUsed()" 10045]
[ebrowse-ms "GetNextClause" () 9 () "  virtual Clause GetNextClause(Clause" 4764 0  () () 0]
[ebrowse-ms "GetNextVar" () 9 () "  virtual Var GetNextVar(Var" 3237 0  () () 0]
[ebrowse-ms "GetNumConflicts" () 1 () "  virtual int GetNumConflicts()" 10278 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetNumConflicts()" 10278]
[ebrowse-ms "GetNumDecisions" () 1 () "  virtual int GetNumDecisions()" 10152 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetNumDecisions()" 10152]
[ebrowse-ms "GetNumDeletedClauses" () 1 () "  virtual int GetNumDeletedClauses()" 10956 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetNumDeletedClauses()" 10956]
[ebrowse-ms "GetNumDeletedLiterals" () 1 () "  virtual int GetNumDeletedLiterals()" 11075 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetNumDeletedLiterals()" 11075]
[ebrowse-ms "GetNumExtConflicts" () 1 () "  virtual int GetNumExtConflicts()" 10432 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetNumExtConflicts()" 10432]
[ebrowse-ms "GetNumImplications" () 1 () "  virtual int GetNumImplications()" 11170 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetNumImplications()" 11170]
[ebrowse-ms "GetNumLiterals" () 1 () "  virtual int GetNumLiterals()" 10844 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual int GetNumLiterals()" 10844]
[ebrowse-ms "GetPhaseFromLit" () 9 () "  virtual int GetPhaseFromLit(Lit" 3531 0  () () 0]
[ebrowse-ms "GetSATTime" () 1 () "  virtual float GetSATTime()" 10732 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual float GetSATTime()" 10732]
[ebrowse-ms "GetTotalTime" () 1 () "  virtual float GetTotalTime()" 10560 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual float GetTotalTime()" 10560]
[ebrowse-ms "GetVar" () 9 () "  virtual Var GetVar(int" 2898 0  () () 0]
[ebrowse-ms "GetVarAssignment" () 9 () "  virtual int GetVarAssignment(Var" 5729 0  () () 0]
[ebrowse-ms "GetVarFromLit" () 9 () "  virtual Var GetVarFromLit(Lit" 3456 0  () () 0]
[ebrowse-ms "GetVarIndex" () 9 () "  virtual int GetVarIndex(Var" 3001 0  () () 0]
[ebrowse-ms "MakeLit" () 9 () "  virtual Lit MakeLit(Var" 3377 0  () () 0]
[ebrowse-ms "NumClauses" () 9 () "  virtual int NumClauses()" 3603 0  () () 0]
[ebrowse-ms "NumVariables" () 9 () "  virtual int NumVariables()" 2608 0  () () 0]
[ebrowse-ms "PrintStatistics" () 0 () "  void PrintStatistics(std" 11355 0  () "void SatSolver::PrintStatistics(ostream" 767]
[ebrowse-ms "RegisterAssignmentHook" () 9 () "  virtual void RegisterAssignmentHook(void" 8020 0  () () 0]
[ebrowse-ms "RegisterDLevelHook" () 9 () "  virtual void RegisterDLevelHook(void" 7035 0  () () 0]
[ebrowse-ms "RegisterDecisionHook" () 9 () "  virtual void RegisterDecisionHook(Lit" 7684 0  () () 0]
[ebrowse-ms "RegisterDeductionHook" () 9 () "  virtual void RegisterDeductionHook(void" 8317 0  () () 0]
[ebrowse-ms "Reset" () 9 () "  virtual void Reset()" 6271 0  () () 0]
[ebrowse-ms "Restart" () 9 () "  virtual void Restart()" 6166 0  () () 0]
[ebrowse-ms "SatSolver" () 0 () "  SatSolver() {" 1411 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  SatSolver() {" 1411]
[ebrowse-ms "Satisfiable" () 9 () "  virtual SATStatus Satisfiable(bool" 5600 0  () () 0]
[ebrowse-ms "SetBudget" () 1 () "  virtual bool SetBudget(int" 8882 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual bool SetBudget(int" 8882]
[ebrowse-ms "SetMemLimit" () 1 () "  virtual bool SetMemLimit(int" 8977 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual bool SetMemLimit(int" 8977]
[ebrowse-ms "SetRandSeed" () 1 () "  virtual bool SetRandSeed(int" 9188 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual bool SetRandSeed(int" 9188]
[ebrowse-ms "SetRandomness" () 1 () "  virtual bool SetRandomness(int" 9130 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual bool SetRandomness(int" 9130]
[ebrowse-ms "~SatSolver" () 1 () "  virtual ~SatSolver()" 1437 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  virtual ~SatSolver()" 1437]
)
()
([ebrowse-ms "Create" () 0 () "  static SatSolver *Create()" 1517 0  () () 0]
)
()
([ebrowse-ms "SATStatus" () 0 () "  typedef enum SATStatus {" 1261 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "  typedef enum SATStatus {" 1261]
)
()()
][ebrowse-ts [ebrowse-cs "ContextObj" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/context/context.cpp" ]
()()
([ebrowse-ms "update" () 0 () () 0 0  () "void ContextObj::update(int" 4113]
[ebrowse-ms "~ContextObj" () 0 () () 0 0  () "ContextObj::~ContextObj()" 4941]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ContextObj" "CVC3::ContextObjChain" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" "class CVC_DLL ContextObj {" 5978"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" ]
()([ebrowse-ms "d_restore" () 0 () "  ContextObjChain* d_restore;" 6259 2  () () 0]
[ebrowse-ms "d_scope" () 0 () "  Scope* d_scope;" 6129 2  () () 0]
)
([ebrowse-ms "ContextObj" () 0 () "  ContextObj(Context* context);" 8123 0  () () 0]
[ebrowse-ms "ContextObj" () 0 () "    :" 6516 1  () "    :" 6516]
[ebrowse-ms "IF_DEBUG" () 0 () "  IF_DEBUG(void" 8459 0  () "  IF_DEBUG(void" 8459]
[ebrowse-ms "IF_DEBUG" () 0 () "  IF_DEBUG(virtual" 7620 1  () "  IF_DEBUG(virtual" 7620]
[ebrowse-ms "IF_DEBUG" () 0 () "  IF_DEBUG(std" 6275 2  () () 0]
[ebrowse-ms "getRestore" () 0 () "  const ContextObj* getRestore()" 7429 1  () "  const ContextObj* getRestore()" 7429]
[ebrowse-ms "isCurrent" () 4 () "  bool isCurrent(int" 8251 0  () "  bool isCurrent(int" 8251]
[ebrowse-ms "level" () 4 () "  int level()" 8174 0  () "  int level()" 8174]
[ebrowse-ms "makeCopy" () 9 () "irtual ContextObj* makeCopy(ContextMemoryManager" 7177 1  () () 0]
[ebrowse-ms "makeCurrent" () 0 () "  void makeCurrent(int" 8389 0  () "  void makeCurrent(int" 8389]
[ebrowse-ms "operator =" () 0 () "  ContextObj& operator=(const" 6914 1  () "  ContextObj& operator=(const" 6914]
[ebrowse-ms "restoreData" () 1 () "  virtual void restoreData(ContextObj" 7280 1  () "  virtual void restoreData(ContextObj" 7280]
[ebrowse-ms "setNull" () 9 () "  virtual void setNull(void" 7556 1  () () 0]
[ebrowse-ms "update" () 0 () "  void update(int" 6409 2  () () 0]
[ebrowse-ms "~ContextObj" () 1 () "  virtual ~ContextObj()" 8158 0  () () 0]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 8947 0  () "  void operator delete(void" 8947]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 8881 0  () "  void operator delete(void" 8881]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 8628 0  () "  void operator delete(void" 8628]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 8808 0  () "  void* operator new(size_t" 8808]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ContextObj" "CVC3" 0() () 0() ]
([ebrowse-ts [ebrowse-cs "CDFlags" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdflags.h" "class CVC_DLL CDFlags :" 1245"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdflags.h" ]
()([ebrowse-ms "d_flags" () 0 () "  unsigned d_flags;" 1284 2  () () 0]
)
([ebrowse-ms "CDFlags" () 0 () "  CDFlags(Context* context) :" 1873 0  () "  CDFlags(Context* context) :" 1873]
[ebrowse-ms "CDFlags" () 0 () "  CDFlags(const CDFlags& cdflags):" 1714 2  () "  CDFlags(const CDFlags& cdflags):" 1714]
[ebrowse-ms "clear" () 0 () "  void clear(unsigned" 2064 0  () "  void clear(unsigned" 2064]
[ebrowse-ms "get" () 4 () "  bool get(unsigned" 2136 0  () "  bool get(unsigned" 2136]
[ebrowse-ms "makeCopy" () 1 () "irtual ContextObj* makeCopy(ContextMemoryManager" 1337 2  () "irtual ContextObj* makeCopy(ContextMemoryManager" 1337]
[ebrowse-ms "operator =" () 0 () "  CDFlags& operator=(const" 1810 2  () "  CDFlags& operator=(const" 1810]
[ebrowse-ms "restoreData" () 1 () "  virtual void restoreData(ContextObj" 1421 2  () "  virtual void restoreData(ContextObj" 1421]
[ebrowse-ms "set" () 0 () "  void set(unsigned" 1991 0  () "  void set(unsigned" 1991]
[ebrowse-ms "setNull" () 1 () "  virtual void setNull(void" 1501 2  () "  virtual void setNull(void" 1501]
[ebrowse-ms "update" () 0 () "  void update(unsigned" 1576 2  () () 0]
[ebrowse-ms "~CDFlags" () 0 () "  ~CDFlags()" 1968 0  () "  ~CDFlags()" 1968]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CDList" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdlist.h" "class CDList :" 1481"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdlist.h" ]
()([ebrowse-ms "d_list" () 0 () "  std::deque<T>* d_list;" 1673 2  () () 0]
[ebrowse-ms "d_size" () 0 () "  unsigned d_size;" 1696 2  () () 0]
)
([ebrowse-ms "CDList" () 0 () "  CDList(Context* context) :" 2263 0  () "  CDList(Context* context) :" 2263]
[ebrowse-ms "CDList" () 0 () "  CDList(const CDList<T>& l):" 2173 2  () "  CDList(const CDList<T>& l):" 2173]
[ebrowse-ms "at" () 4 () "  const T& at(unsigned" 3032 0  () "  const T& at(unsigned" 3032]
[ebrowse-ms "back" () 4 () "  const T& back()" 3180 0  () "  const T& back()" 3180]
[ebrowse-ms "begin" () 4 () "  const_iterator begin()" 3384 0  () "  const_iterator begin()" 3384]
[ebrowse-ms "empty" () 4 () "  bool empty()" 2495 0  () "  bool empty()" 2495]
[ebrowse-ms "end" () 4 () "  const_iterator end()" 3447 0  () "  const_iterator end()" 3447]
[ebrowse-ms "makeCopy" () 1 () "irtual ContextObj* makeCopy(ContextMemoryManager" 1749 2  () "irtual ContextObj* makeCopy(ContextMemoryManager" 1749]
[ebrowse-ms "operator []" () 4 () "  const T& operator[](unsigned" 2879 0  () "  const T& operator[](unsigned" 2879]
[ebrowse-ms "pop_back" () 0 () "  void pop_back()" 2674 0  () "  void pop_back()" 2674]
[ebrowse-ms "push_back" () 0 () "  T& push_back(const" 2546 0  () "  T& push_back(const" 2546]
[ebrowse-ms "restoreData" () 1 () "  virtual void restoreData(ContextObj" 1831 2  () "  virtual void restoreData(ContextObj" 1831]
[ebrowse-ms "setNull" () 1 () "  virtual void setNull(void" 1969 2  () "  virtual void setNull(void" 1969]
[ebrowse-ms "size" () 4 () "  unsigned size()" 2455 0  () "  unsigned size()" 2455]
[ebrowse-ms "~CDList" () 1 () "  virtual ~CDList()" 2399 0  () "  virtual ~CDList()" 2399]
)
()
()
()
([ebrowse-ms "const_iterator" () 0 () "me std::deque<T>::const_iterator const_iterator;" 3359 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "CDMap" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" "class CDMap:" 4500"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" ]
()([ebrowse-ms "d_context" () 0 () "  Context* d_context;" 4800 2  () () 0]
[ebrowse-ms "d_first" () 0 () "  CDOmap<Key, Data, HashFcn>* d_first;" 4778 2  () () 0]
[ebrowse-ms "d_map" () 0 () "<Key,CDOmap<Key, Data, HashFcn>*,HashFcn> d_map;" 4637 2  () () 0]
[ebrowse-ms "d_trash" () 0 () "td::vector<CDOmap<Key, Data, HashFcn>*> d_trash;" 4739 2  () () 0]
)
([ebrowse-ms "CDMap" () 0 () "    :" 5642 0  () "    :" 5642]
[ebrowse-ms "begin" () 4 () "  iterator begin()" 9029 0  () "  iterator begin()" 9029]
[ebrowse-ms "count" () 4 () "  size_t count(const" 5897 0  () "  size_t count(const" 5897]
[ebrowse-ms "emptyTrash" () 0 () "  void emptyTrash()" 5110 2  () "  void emptyTrash()" 5110]
[ebrowse-ms "end" () 4 () "  iterator end()" 9088 0  () "  iterator end()" 9088]
[ebrowse-ms "find" () 4 () "  iterator find(const" 10695 0  () "  iterator find(const" 10695]
[ebrowse-ms "insert" () 0 () "  void insert(const" 6505 0  () "  void insert(const" 6505]
[ebrowse-ms "makeCopy" () 1 () "irtual ContextObj* makeCopy(ContextMemoryManager" 4912 2  () "irtual ContextObj* makeCopy(ContextMemoryManager" 4912]
[ebrowse-ms "operator []" () 0 () "  CDOmap<Key, Data, HashFcn>& operator[](const" 6110 0  () "  CDOmap<Key, Data, HashFcn>& operator[](const" 6110]
[ebrowse-ms "orderedBegin" () 4 () "  orderedIterator orderedBegin()" 10558 0  () "  orderedIterator orderedBegin()" 10558]
[ebrowse-ms "orderedEnd" () 4 () "  orderedIterator orderedEnd()" 10632 0  () "  orderedIterator orderedEnd()" 10632]
[ebrowse-ms "restoreData" () 1 () "  virtual void restoreData(ContextObj" 5033 2  () "  virtual void restoreData(ContextObj" 5033]
[ebrowse-ms "setNull" () 1 () "  virtual void setNull(void" 5331 2  () "  virtual void setNull(void" 5331]
[ebrowse-ms "size" () 4 () "  size_t size()" 5845 0  () "  size_t size()" 5845]
[ebrowse-ms "~CDMap" () 0 () "  ~CDMap()" 5782 0  () "  ~CDMap()" 5782]
)
()
()
()
([ebrowse-ms "ElementReference" () 0 () "ef CDOmap<Key, Data, HashFcn>& ElementReference;" 5995 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "CDMapData" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" "class CDMapData :" 4113"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" ]
()()
([ebrowse-ms "CDMapData" () 0 () "  CDMapData(const ContextObj& co):" 4373 0  () "  CDMapData(const ContextObj& co):" 4373]
[ebrowse-ms "CDMapData" () 0 () "  CDMapData(Context* context):" 4320 0  () "  CDMapData(Context* context):" 4320]
[ebrowse-ms "makeCopy" () 0 () "  ContextObj* makeCopy(ContextMemoryManager" 4177 2  () "  ContextObj* makeCopy(ContextMemoryManager" 4177]
[ebrowse-ms "restoreData" () 0 () "  void restoreData(ContextObj" 4255 2  () "  void restoreData(ContextObj" 4255]
[ebrowse-ms "setNull" () 0 () "  void setNull(void" 4286 2  () "  void setNull(void" 4286]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CDMapOrdered" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "class CDMapOrdered:" 4398"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" ]
()([ebrowse-ms "d_context" () 0 () "  Context* d_context;" 4681 2  () () 0]
[ebrowse-ms "d_first" () 0 () "  CDOmapOrdered<Key,Data>* d_first;" 4659 2  () () 0]
[ebrowse-ms "d_map" () 0 () "  std::map<Key,CDOmapOrdered<Key,Data>*> d_map;" 4517 2  () () 0]
[ebrowse-ms "d_trash" () 0 () "  std::vector<CDOmapOrdered<Key,Data>*> d_trash;" 4623 2  () () 0]
)
([ebrowse-ms "CDMapOrdered" () 0 () "    :" 5466 0  () "    :" 5466]
[ebrowse-ms "begin" () 4 () "  iterator begin()" 8715 0  () "  iterator begin()" 8715]
[ebrowse-ms "count" () 4 () "  size_t count(const" 5736 0  () "  size_t count(const" 5736]
[ebrowse-ms "emptyTrash" () 0 () "  void emptyTrash()" 5009 2  () "  void emptyTrash()" 5009]
[ebrowse-ms "end" () 4 () "  iterator end()" 8774 0  () "  iterator end()" 8774]
[ebrowse-ms "find" () 4 () "  iterator find(const" 10375 0  () "  iterator find(const" 10375]
[ebrowse-ms "insert" () 0 () "  void insert(const" 6256 0  () "  void insert(const" 6256]
[ebrowse-ms "makeCopy" () 1 () "irtual ContextObj* makeCopy(ContextMemoryManager" 4795 2  () "irtual ContextObj* makeCopy(ContextMemoryManager" 4795]
[ebrowse-ms "operator []" () 0 () "  CDOmapOrdered<Key,Data>& operator[](const" 5889 0  () "  CDOmapOrdered<Key,Data>& operator[](const" 5889]
[ebrowse-ms "orderedBegin" () 4 () "  orderedIterator orderedBegin()" 10238 0  () "  orderedIterator orderedBegin()" 10238]
[ebrowse-ms "orderedEnd" () 4 () "  orderedIterator orderedEnd()" 10312 0  () "  orderedIterator orderedEnd()" 10312]
[ebrowse-ms "restoreData" () 1 () "  virtual void restoreData(ContextObj" 4923 2  () "  virtual void restoreData(ContextObj" 4923]
[ebrowse-ms "setNull" () 1 () "  virtual void setNull(void" 5203 2  () "  virtual void setNull(void" 5203]
[ebrowse-ms "size" () 4 () "  size_t size()" 5684 0  () "  size_t size()" 5684]
[ebrowse-ms "~CDMapOrdered" () 0 () "  ~CDMapOrdered()" 5621 0  () "  ~CDMapOrdered()" 5621]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CDMapOrderedData" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "class CDMapOrderedData :" 3991"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" ]
()()
([ebrowse-ms "CDMapOrderedData" () 0 () "  CDMapOrderedData(const ContextObj& co):" 4272 0  () "  CDMapOrderedData(const ContextObj& co):" 4272]
[ebrowse-ms "CDMapOrderedData" () 0 () "  CDMapOrderedData(Context* context):" 4212 0  () "  CDMapOrderedData(Context* context):" 4212]
[ebrowse-ms "makeCopy" () 0 () "  ContextObj* makeCopy(ContextMemoryManager" 4055 2  () "  ContextObj* makeCopy(ContextMemoryManager" 4055]
[ebrowse-ms "restoreData" () 0 () "  void restoreData(ContextObj" 4140 2  () "  void restoreData(ContextObj" 4140]
[ebrowse-ms "setNull" () 0 () "  void setNull(void" 4171 2  () "  void setNull(void" 4171]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CDO" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdo.h" "class CDO :" 1412"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdo.h" ]
()([ebrowse-ms "d_data" () 0 () "  T d_data;" 1443 2  () () 0]
)
([ebrowse-ms "CDO" () 0 () "    :" 1978 0  () "    :" 1978]
[ebrowse-ms "CDO" () 0 () "  CDO(Context* context) :" 1898 0  () "  CDO(Context* context) :" 1898]
[ebrowse-ms "CDO" () 0 () "  CDO(const CDO<T>& cdo):" 1779 2  () "  CDO(const CDO<T>& cdo):" 1779]
[ebrowse-ms "T" () 0 () "  operator T()" 2256 0  () "  operator T()" 2256]
[ebrowse-ms "get" () 4 () "  const T& get()" 2216 0  () "  const T& get()" 2216]
[ebrowse-ms "makeCopy" () 1 () "irtual ContextObj* makeCopy(ContextMemoryManager" 1496 2  () "irtual ContextObj* makeCopy(ContextMemoryManager" 1496]
[ebrowse-ms "operator =" () 0 () "  CDO<T>& operator=(const" 2300 0  () "  CDO<T>& operator=(const" 2300]
[ebrowse-ms "restoreData" () 1 () "  virtual void restoreData(ContextObj" 1579 2  () "  virtual void restoreData(ContextObj" 1579]
[ebrowse-ms "set" () 0 () "  void set(const" 2137 0  () "  void set(const" 2137]
[ebrowse-ms "setNull" () 1 () "  virtual void setNull(void" 1658 2  () "  virtual void setNull(void" 1658]
[ebrowse-ms "~CDO" () 0 () "  ~CDO()" 2117 0  () "  ~CDO()" 2117]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CDOmap" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" "class CDOmap :" 1919"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" ]
()([ebrowse-ms "d_cdmap" () 0 () "  CDMap<Key, Data, HashFcn>* d_cdmap;" 2059 2  () () 0]
[ebrowse-ms "d_data" () 0 () "  Data d_data;" 1966 2  () () 0]
[ebrowse-ms "d_inMap" () 0 () "  bool d_inMap;" 1982 2  () () 0]
[ebrowse-ms "d_key" () 0 () "  Key d_key;" 1951 2  () () 0]
[ebrowse-ms "d_next" () 0 () "  CDOmap<Key, Data, HashFcn>* d_next;" 2212 2  () () 0]
[ebrowse-ms "d_prev" () 0 () "  CDOmap<Key, Data, HashFcn>* d_prev;" 2174 2  () () 0]
)
([ebrowse-ms "CDOmap" () 0 () "    :" 3085 0  () "    :" 3085]
[ebrowse-ms "Data" () 0 () "  operator Data()" 3782 0  () "  operator Data()" 3782]
[ebrowse-ms "get" () 4 () "  const Data& get()" 3739 0  () "  const Data& get()" 3739]
[ebrowse-ms "getKey" () 4 () "  const Key& getKey()" 3695 0  () "  const Key& getKey()" 3695]
[ebrowse-ms "makeCopy" () 1 () "irtual ContextObj* makeCopy(ContextMemoryManager" 2265 2  () "irtual ContextObj* makeCopy(ContextMemoryManager" 2265]
[ebrowse-ms "next" () 4 () "  CDOmap<Key, Data, HashFcn>* next()" 3924 0  () "  CDOmap<Key, Data, HashFcn>* next()" 3924]
[ebrowse-ms "operator =" () 0 () "  CDOmap<Key, Data, HashFcn>& operator=(const" 3846 0  () "  CDOmap<Key, Data, HashFcn>& operator=(const" 3846]
[ebrowse-ms "restoreData" () 1 () "  virtual void restoreData(ContextObj" 2369 2  () "  virtual void restoreData(ContextObj" 2369]
[ebrowse-ms "set" () 0 () "  void set(const" 3586 0  () "  void set(const" 3586]
[ebrowse-ms "setNull" () 1 () "  virtual void setNull(void" 2559 2  () "  virtual void setNull(void" 2559]
[ebrowse-ms "~CDOmap" () 0 () "  ~CDOmap()" 3566 0  () "  ~CDOmap()" 3566]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CDOmapOrdered" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "class CDOmapOrdered :" 1756"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" ]
()([ebrowse-ms "d_cdmap" () 0 () "  CDMapOrdered<Key, Data>* d_cdmap;" 1894 2  () () 0]
[ebrowse-ms "d_data" () 0 () "  Data d_data;" 1803 2  () () 0]
[ebrowse-ms "d_inMap" () 0 () "  bool d_inMap;" 1819 2  () () 0]
[ebrowse-ms "d_key" () 0 () "  Key d_key;" 1788 2  () () 0]
[ebrowse-ms "d_next" () 0 () "  CDOmapOrdered<Key,Data>* d_next;" 2041 2  () () 0]
[ebrowse-ms "d_prev" () 0 () "  CDOmapOrdered<Key,Data>* d_prev;" 2006 2  () () 0]
)
([ebrowse-ms "CDOmapOrdered" () 0 () "    :" 2912 0  () "    :" 2912]
[ebrowse-ms "Data" () 0 () "  operator Data()" 3652 0  () "  operator Data()" 3652]
[ebrowse-ms "get" () 4 () "  const Data& get()" 3609 0  () "  const Data& get()" 3609]
[ebrowse-ms "getKey" () 4 () "  const Key& getKey()" 3565 0  () "  const Key& getKey()" 3565]
[ebrowse-ms "makeCopy" () 1 () "irtual ContextObj* makeCopy(ContextMemoryManager" 2094 2  () "irtual ContextObj* makeCopy(ContextMemoryManager" 2094]
[ebrowse-ms "next" () 4 () "  CDOmapOrdered<Key,Data>* next()" 3788 0  () "  CDOmapOrdered<Key,Data>* next()" 3788]
[ebrowse-ms "operator =" () 0 () "  CDOmapOrdered<Key,Data>& operator=(const" 3713 0  () "  CDOmapOrdered<Key,Data>& operator=(const" 3713]
[ebrowse-ms "restoreData" () 1 () "  virtual void restoreData(ContextObj" 2195 2  () "  virtual void restoreData(ContextObj" 2195]
[ebrowse-ms "set" () 0 () "  void set(const" 3456 0  () "  void set(const" 3456]
[ebrowse-ms "setNull" () 1 () "  virtual void setNull(void" 2379 2  () "  virtual void setNull(void" 2379]
[ebrowse-ms "~CDOmapOrdered" () 0 () "  ~CDOmapOrdered()" 3436 0  () "  ~CDOmapOrdered()" 3436]
)
()
()
()
()
()()
])()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoryBitvector" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" ]
()()
([ebrowse-ms "BVSize" () 0 () () 0 0  () "int TheoryBitvector::BVSize(const" 1191]
[ebrowse-ms "Odd_coeff" () 0 () () 0 0  () "Rational TheoryBitvector::Odd_coeff( const" 71127]
[ebrowse-ms "TheoryBitvector" () 0 () () 0 0  () "Bitvector::TheoryBitvector(TheoryCore* core)
  :" 56842]
[ebrowse-ms "addSharedTerm" () 0 () () 0 0  () "void TheoryBitvector::addSharedTerm(const" 61838]
[ebrowse-ms "assertFact" () 0 () () 0 0  () "void TheoryBitvector::assertFact(const" 62452]
[ebrowse-ms "assertTypePred" () 0 () () 0 0  () "void TheoryBitvector::assertTypePred(const" 64551]
[ebrowse-ms "bitBlastDisEqn" () 0 () () 0 0  () "Theorem TheoryBitvector::bitBlastDisEqn(const" 5264]
[ebrowse-ms "bitBlastEqn" () 0 () () 0 0  () "Theorem TheoryBitvector::bitBlastEqn(const" 2371]
[ebrowse-ms "bitBlastIneqn" () 0 () () 0 0  () "Theorem TheoryBitvector::bitBlastIneqn(const" 8339]
[ebrowse-ms "bitBlastTerm" () 0 () () 0 0  () "Theorem TheoryBitvector::bitBlastTerm(const" 12638]
[ebrowse-ms "canSolveFor" () 0 () () 0 0  () "bool TheoryBitvector::canSolveFor( const" 74524]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "void TheoryBitvector::checkSat(bool" 82602]
[ebrowse-ms "checkType" () 0 () () 0 0  () "void TheoryBitvector::checkType(const" 94323]
[ebrowse-ms "check_linear" () 0 () () 0 0  () "int TheoryBitvector::check_linear( const" 73148]
[ebrowse-ms "comparebv" () 0 () () 0 0  () "bool TheoryBitvector::comparebv(const" 80829]
[ebrowse-ms "computeBVConst" () 0 () () 0 0  () "Rational TheoryBitvector::computeBVConst(const" 173170]
[ebrowse-ms "computeModel" () 0 () () 0 0  () "void TheoryBitvector::computeModel(const" 108267]
[ebrowse-ms "computeModelTerm" () 0 () () 0 0  () "void TheoryBitvector::computeModelTerm(const" 107304]
[ebrowse-ms "computeNegBVConst" () 0 () () 0 0  () "ational TheoryBitvector::computeNegBVConst(const" 173746]
[ebrowse-ms "computeTCC" () 0 () () 0 0  () "Expr TheoryBitvector::computeTCC(const" 175946]
[ebrowse-ms "computeType" () 0 () () 0 0  () "void TheoryBitvector::computeType(const" 95256]
[ebrowse-ms "computeTypePred" () 0 () () 0 0  () "TheoryBitvector::computeTypePred(const" 109881]
[ebrowse-ms "countTermIn" () 0 () () 0 0  () "int TheoryBitvector::countTermIn( const" 75360]
[ebrowse-ms "createProofRules" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.cpp" "TheoryBitvector::createProofRules()" 1277]
[ebrowse-ms "extract_vars" () 0 () () 0 0  () "void TheoryBitvector::extract_vars(const" 65264]
[ebrowse-ms "finiteTypeInfo" () 0 () () 0 0  () "Cardinality TheoryBitvector::finiteTypeInfo(Expr" 94646]
[ebrowse-ms "generalBitBlast" () 0 () () 0 0  () "Theorem TheoryBitvector::generalBitBlast( const" 77543]
[ebrowse-ms "getBVConstSize" () 0 () () 0 0  () "unsigned TheoryBitvector::getBVConstSize(const" 172110]
[ebrowse-ms "getBVConstValue" () 0 () () 0 0  () "bool TheoryBitvector::getBVConstValue(const" 172400]
[ebrowse-ms "getBVIndex" () 0 () () 0 0  () "int TheoryBitvector::getBVIndex(const" 170175]
[ebrowse-ms "getBVMultParam" () 0 () () 0 0  () "int TheoryBitvector::getBVMultParam(const" 171859]
[ebrowse-ms "getBVPlusParam" () 0 () () 0 0  () "int TheoryBitvector::getBVPlusParam(const" 171614]
[ebrowse-ms "getBitvectorTypeParam" () 0 () () 0 0  () "int TheoryBitvector::getBitvectorTypeParam(const" 169075]
[ebrowse-ms "getBoolExtractIndex" () 0 () () 0 0  () "int TheoryBitvector::getBoolExtractIndex(const" 169712]
[ebrowse-ms "getExtractHi" () 0 () () 0 0  () "int TheoryBitvector::getExtractHi(const" 171377]
[ebrowse-ms "getExtractLow" () 0 () () 0 0  () "int TheoryBitvector::getExtractLow(const" 171141]
[ebrowse-ms "getFixedLeftShiftParam" () 0 () () 0 0  () "nt TheoryBitvector::getFixedLeftShiftParam(const" 170560]
[ebrowse-ms "getFixedRightShiftParam" () 0 () () 0 0  () "t TheoryBitvector::getFixedRightShiftParam(const" 170891]
[ebrowse-ms "getSXIndex" () 0 () () 0 0  () "int TheoryBitvector::getSXIndex(const" 169956]
[ebrowse-ms "getTypePredExpr" () 0 () () 0 0  () "nst Expr& TheoryBitvector::getTypePredExpr(const" 169524]
[ebrowse-ms "getTypePredType" () 0 () () 0 0  () "Type TheoryBitvector::getTypePredType(const" 169298]
[ebrowse-ms "isLinearTerm" () 0 () () 0 0  () "bool TheoryBitvector::isLinearTerm( const" 75828]
[ebrowse-ms "isTermIn" () 0 () () 0 0  () "bool TheoryBitvector::isTermIn(const" 74218]
[ebrowse-ms "multiplicative_inverse" () 0 () () 0 0  () "TheoryBitvector::multiplicative_inverse(Rational" 67809]
[ebrowse-ms "multiply_coeff" () 0 () () 0 0  () "Expr TheoryBitvector::multiply_coeff( Rational" 65643]
[ebrowse-ms "newBVAndExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVAndExpr(const" 147040]
[ebrowse-ms "newBVAndExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVAndExpr(const" 146483]
[ebrowse-ms "newBVCompExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVCompExpr(const" 151898]
[ebrowse-ms "newBVConstExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVConstExpr(const" 165350]
[ebrowse-ms "newBVConstExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVConstExpr(const" 164296]
[ebrowse-ms "newBVExtractExpr" () 0 () () 0 0  () "newBVExtractExpr(const" 165890]
[ebrowse-ms "newBVIndexExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVIndexExpr(int" 154349]
[ebrowse-ms "newBVLEExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVLEExpr(const" 153518]
[ebrowse-ms "newBVLTExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVLTExpr(const" 153148]
[ebrowse-ms "newBVMultExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVMultExpr(int" 160313]
[ebrowse-ms "newBVMultExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVMultExpr(int" 159619]
[ebrowse-ms "newBVMultPadExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVMultPadExpr(int" 161175]
[ebrowse-ms "newBVMultPadExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVMultPadExpr(int" 160925]
[ebrowse-ms "newBVNandExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVNandExpr(const" 148975]
[ebrowse-ms "newBVNegExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVNegExpr(const" 155641]
[ebrowse-ms "newBVNorExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVNorExpr(const" 149534]
[ebrowse-ms "newBVOneString" () 0 () () 0 0  () "Expr TheoryBitvector::newBVOneString(int" 163986]
[ebrowse-ms "newBVOrExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVOrExpr(const" 148287]
[ebrowse-ms "newBVOrExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVOrExpr(const" 147727]
[ebrowse-ms "newBVPlusExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVPlusExpr(int" 168020]
[ebrowse-ms "newBVPlusExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVPlusExpr(int" 167171]
[ebrowse-ms "newBVPlusPadExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVPlusPadExpr(int" 168748]
[ebrowse-ms "newBVSDivExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVSDivExpr(const" 162257]
[ebrowse-ms "newBVSLEExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVSLEExpr(const" 155268]
[ebrowse-ms "newBVSLTExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVSLTExpr(const" 154895]
[ebrowse-ms "newBVSModExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVSModExpr(const" 163139]
[ebrowse-ms "newBVSRemExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVSRemExpr(const" 162698]
[ebrowse-ms "newBVSubExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVSubExpr(const" 166625]
[ebrowse-ms "newBVUDivExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVUDivExpr(const" 161375]
[ebrowse-ms "newBVURemExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVURemExpr(const" 161816]
[ebrowse-ms "newBVUminusExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVUminusExpr(const" 155911]
[ebrowse-ms "newBVXnorExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVXnorExpr(const" 152458]
[ebrowse-ms "newBVXnorExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVXnorExpr(const" 151338]
[ebrowse-ms "newBVXorExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVXorExpr(const" 150648]
[ebrowse-ms "newBVXorExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBVXorExpr(const" 150091]
[ebrowse-ms "newBVZeroString" () 0 () () 0 0  () "Expr TheoryBitvector::newBVZeroString(int" 163628]
[ebrowse-ms "newBitvectorTypeExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBitvectorTypeExpr(int" 146004]
[ebrowse-ms "newBitvectorTypePred" () 0 () () 0 0  () "Expr TheoryBitvector::newBitvectorTypePred(const" 146356]
[ebrowse-ms "newBoolExtractExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newBoolExtractExpr(const" 156187]
[ebrowse-ms "newConcatExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newConcatExpr(const" 159168]
[ebrowse-ms "newConcatExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newConcatExpr(const" 158668]
[ebrowse-ms "newConcatExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newConcatExpr(const" 158296]
[ebrowse-ms "newFixedConstWidthLeftShiftExpr" () 0 () () 0 0  () "Bitvector::newFixedConstWidthLeftShiftExpr(const" 157210]
[ebrowse-ms "newFixedLeftShiftExpr" () 0 () () 0 0  () "xpr TheoryBitvector::newFixedLeftShiftExpr(const" 156682]
[ebrowse-ms "newFixedRightShiftExpr" () 0 () () 0 0  () "pr TheoryBitvector::newFixedRightShiftExpr(const" 157751]
[ebrowse-ms "newSXExpr" () 0 () () 0 0  () "Expr TheoryBitvector::newSXExpr(const" 153886]
[ebrowse-ms "pad" () 0 () () 0 0  () "Expr TheoryBitvector::pad(int" 1566]
[ebrowse-ms "parseExprOp" () 0 () () 0 0  () "Expr TheoryBitvector::parseExprOp(const" 126201]
[ebrowse-ms "print" () 0 () () 0 0  () "TheoryBitvector::print(ExprStream" 110493]
[ebrowse-ms "pushNegation" () 0 () () 0 0  () "Theorem TheoryBitvector::pushNegation(const" 28835]
[ebrowse-ms "pushNegationRec" () 0 () () 0 0  () "Theorem TheoryBitvector::pushNegationRec(const" 25670]
[ebrowse-ms "rewrite" () 0 () () 0 0  () "Theorem TheoryBitvector::rewrite(const" 86442]
[ebrowse-ms "rewriteAtomic" () 0 () () 0 0  () "Theorem TheoryBitvector::rewriteAtomic(const" 86558]
[ebrowse-ms "rewriteBV" () 0 () () 0 0  () "Theorem TheoryBitvector::rewriteBV(const" 54676]
[ebrowse-ms "rewriteBV" () 0 () () 0 0  () "Theorem TheoryBitvector::rewriteBV(const" 30873]
[ebrowse-ms "rewriteBoolean" () 0 () () 0 0  () "Theorem TheoryBitvector::rewriteBoolean(const" 54803]
[ebrowse-ms "setup" () 0 () () 0 0  () "void TheoryBitvector::setup(const" 86636]
[ebrowse-ms "signed_newBVConstExpr" () 0 () () 0 0  () "TheoryBitvector::signed_newBVConstExpr( Rational" 172815]
[ebrowse-ms "simplifyOp" () 0 () () 0 0  () "Theorem TheoryBitvector::simplifyOp(const" 29028]
[ebrowse-ms "simplifyPendingEq" () 0 () () 0 0  () "Theorem TheoryBitvector::simplifyPendingEq(const" 76197]
[ebrowse-ms "solve" () 0 () () 0 0  () "Theorem TheoryBitvector::solve(const" 90833]
[ebrowse-ms "update" () 0 () () 0 0  () "void TheoryBitvector::update(const" 86825]
[ebrowse-ms "updateSubterms" () 0 () () 0 0  () "Theorem TheoryBitvector::updateSubterms( const" 90087]
[ebrowse-ms "~TheoryBitvector" () 0 () () 0 0  () "TheoryBitvector::~TheoryBitvector()" 61731]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "const_iterator" "Hash::hash_table<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "    class const_iterator {" 19475"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" ]
()([ebrowse-ms "d_hash_table" () 0 () "      const hash_table* d_hash_table;" 19628 1  () () 0]
[ebrowse-ms "d_node" () 0 () "      const BucketNode* d_node;" 19719 1  () () 0]
)
([ebrowse-ms "const_iterator" () 0 () "      const_iterator(const iterator& other)
	:" 20328 0  () "      const_iterator(const iterator& other)
	:" 20328]
[ebrowse-ms "const_iterator" () 0 () "      const_iterator()
	:" 20053 0  () "      const_iterator()
	:" 20053]
[ebrowse-ms "const_iterator" () 0 () "le const* hash_table, const BucketNode* node)
	:" 19836 1  () "le const* hash_table, const BucketNode* node)
	:" 19836]
[ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 22068 0  () "      bool operator!=(const" 22068]
[ebrowse-ms "operator *" () 4 () "      const value_type& operator*()" 21591 0  () "      const value_type& operator*()" 21591]
[ebrowse-ms "operator ++" () 0 () "      const_iterator operator++(int" 21489 0  () "      const_iterator operator++(int" 21489]
[ebrowse-ms "operator ++" () 0 () "      const_iterator& operator++()" 20688 0  () "      const_iterator& operator++()" 20688]
[ebrowse-ms "operator ->" () 4 () "      const value_type* operator->()" 21670 0  () "      const value_type* operator->()" 21670]
[ebrowse-ms "operator =" () 0 () "      const_iterator& operator=(const" 20472 0  () "      const_iterator& operator=(const" 20472]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 21776 0  () "      bool operator==(const" 21776]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "orderedIterator" "CVC3::CDMapOrdered<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "  class orderedIterator {" 8841"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" ]
()([ebrowse-ms "d_it" () 0 () "      const CDOmapOrdered<Key,Data>* d_it;" 8884 2  () () 0]
)
([ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 9226 0  () "      bool operator!=(const" 9226]
[ebrowse-ms "operator *" () 4 () "      std::pair<const Key, Data> operator*()" 9363 0  () "      std::pair<const Key, Data> operator*()" 9363]
[ebrowse-ms "operator ++" () 0 () "      Proxy operator++(int" 10145 0  () "      Proxy operator++(int" 10145]
[ebrowse-ms "operator ++" () 0 () "      orderedIterator& operator++()" 9519 0  () "      orderedIterator& operator++()" 9519]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 9138 0  () "      bool operator==(const" 9138]
[ebrowse-ms "orderedIterator" () 0 () "      orderedIterator() {" 9083 0  () "      orderedIterator() {" 9083]
[ebrowse-ms "orderedIterator" () 0 () "      orderedIterator(const orderedIterator& i):" 8992 0  () "      orderedIterator(const orderedIterator& i):" 8992]
[ebrowse-ms "orderedIterator" () 0 () "deredIterator(const CDOmapOrdered<Key,Data>* p):" 8924 0  () "deredIterator(const CDOmapOrdered<Key,Data>* p):" 8924]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "orderedIterator" "CVC3::CDMap<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" "  class orderedIterator {" 9155"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" ]
()([ebrowse-ms "d_it" () 0 () "      const CDOmap<Key, Data, HashFcn>* d_it;" 9201 2  () () 0]
)
([ebrowse-ms "operator !=" () 4 () "      bool operator!=(const" 9546 0  () "      bool operator!=(const" 9546]
[ebrowse-ms "operator *" () 4 () "      std::pair<const Key, Data> operator*()" 9683 0  () "      std::pair<const Key, Data> operator*()" 9683]
[ebrowse-ms "operator ++" () 0 () "      Proxy operator++(int" 10465 0  () "      Proxy operator++(int" 10465]
[ebrowse-ms "operator ++" () 0 () "      orderedIterator& operator++()" 9839 0  () "      orderedIterator& operator++()" 9839]
[ebrowse-ms "operator ==" () 4 () "      bool operator==(const" 9458 0  () "      bool operator==(const" 9458]
[ebrowse-ms "orderedIterator" () 0 () "      orderedIterator() {" 9403 0  () "      orderedIterator() {" 9403]
[ebrowse-ms "orderedIterator" () 0 () "      orderedIterator(const orderedIterator& i):" 9312 0  () "      orderedIterator(const orderedIterator& i):" 9312]
[ebrowse-ms "orderedIterator" () 0 () "edIterator(const CDOmap<Key, Data, HashFcn>* p):" 9241 0  () "edIterator(const CDOmap<Key, Data, HashFcn>* p):" 9241]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CacheEntry" "CVC3::DecisionEngineCaching" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_caching.h" "  class CacheEntry
  {" 715"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_caching.h" ]
()([ebrowse-ms "d_expr" () 0 () "    Expr d_expr;" 742 0  () () 0]
[ebrowse-ms "d_rank" () 0 () "    int d_rank;" 758 0  () () 0]
[ebrowse-ms "d_trust" () 0 () "    int d_trust;" 775 0  () () 0]
)
([ebrowse-ms "CacheEntry" () 0 () "    CacheEntry() :" 793 0  () "    CacheEntry() :" 793]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CacheEntry" "CVC3::DecisionEngineMBTF" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_mbtf.h" "  class CacheEntry
  {" 703"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_mbtf.h" ]
()([ebrowse-ms "d_expr" () 0 () "    Expr d_expr;" 730 0  () () 0]
[ebrowse-ms "d_rank" () 0 () "    int d_rank;" 746 0  () () 0]
[ebrowse-ms "d_trust" () 0 () "    int d_trust;" 763 0  () () 0]
)
([ebrowse-ms "CacheEntry" () 0 () "    CacheEntry() :" 781 0  () "    CacheEntry() :" 781]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SearchImplBase" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_impl_base.cpp" ]
()()
([ebrowse-ms "SearchImplBase" () 0 () () 0 0  () "chImplBase::SearchImplBase(TheoryCore* core)
  :" 2603]
[ebrowse-ms "addCNFFact" () 0 () () 0 0  () "void SearchImplBase::addCNFFact(const" 6375]
[ebrowse-ms "addFact" () 0 () () 0 0  () "void SearchImplBase::addFact(const" 6769]
[ebrowse-ms "addSplitter" () 0 () () 0 0  () "void SearchImplBase::addSplitter(const" 7042]
[ebrowse-ms "addToCNFCache" () 0 () () 0 0  () "SearchImplBase::addToCNFCache(const" 22056]
[ebrowse-ms "applyCNFRules" () 0 () () 0 0  () "SearchImplBase::applyCNFRules(const" 17281]
[ebrowse-ms "checkValid" () 0 () () 0 0  () "QueryResult SearchImplBase::checkValid(const" 10412]
[ebrowse-ms "enqueueCNF" () 0 () () 0 0  () "SearchImplBase::enqueueCNF(const" 10758]
[ebrowse-ms "enqueueCNFrec" () 0 () () 0 0  () "SearchImplBase::enqueueCNFrec(const" 10981]
[ebrowse-ms "findInCNFCache" () 0 () () 0 0  () "SearchImplBase::findInCNFCache(const" 22800]
[ebrowse-ms "getAssumptions" () 0 () () 0 0  () "void SearchImplBase::getAssumptions(std" 6049]
[ebrowse-ms "getAssumptionsUsed" () 0 () () 0 0  () "SearchImplBase::getAssumptionsUsed()" 8810]
[ebrowse-ms "getCounterExample" () 0 () () 0 0  () "void SearchImplBase::getCounterExample(vector" 7251]
[ebrowse-ms "getInternalAssumptions" () 0 () () 0 0  () "void SearchImplBase::getInternalAssumptions(std" 5779]
[ebrowse-ms "getProof" () 0 () () 0 0  () "SearchImplBase::getProof()" 8394]
[ebrowse-ms "getUserAssumptions" () 0 () () 0 0  () "void SearchImplBase::getUserAssumptions(vector" 5508]
[ebrowse-ms "isAssumption" () 0 () () 0 0  () "bool SearchImplBase::isAssumption(const" 6285]
[ebrowse-ms "isClause" () 0 () () 0 0  () "bool SearchImplBase::isClause(const" 21177]
[ebrowse-ms "isGoodSplitter" () 0 () () 0 0  () "SearchImplBase::isGoodSplitter(const" 21689]
[ebrowse-ms "isPropClause" () 0 () () 0 0  () "SearchImplBase::isPropClause(const" 21431]
[ebrowse-ms "newIntAssumption" () 0 () () 0 0  () "void SearchImplBase::newIntAssumption(const" 5158]
[ebrowse-ms "newUserAssumption" () 0 () () 0 0  () "Theorem SearchImplBase::newUserAssumption(const" 3929]
[ebrowse-ms "processResult" () 0 () () 0 0  () "void SearchImplBase::processResult(const" 9460]
[ebrowse-ms "replaceITE" () 0 () () 0 0  () "SearchImplBase::replaceITE(const" 24482]
[ebrowse-ms "restart" () 0 () () 0 0  () "QueryResult SearchImplBase::restart(const" 10607]
[ebrowse-ms "~SearchImplBase" () 0 () () 0 0  () "SearchImplBase::~SearchImplBase()" 3730]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Solver" "MiniSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "class Solver {" 7326"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" ]
()([ebrowse-ms "d_activity" () 0 () "  std::vector<double> d_activity;" 13557 1  () () 0]
[ebrowse-ms "d_analyze_redundant" () 0 () "  std::vector<Lit> d_analyze_redundant;" 14875 1  () () 0]
[ebrowse-ms "d_analyze_seen" () 0 () "  std::vector<char> d_analyze_seen;" 14799 1  () () 0]
[ebrowse-ms "d_analyze_stack" () 0 () "  std::vector<Lit> d_analyze_stack;" 14835 1  () () 0]
[ebrowse-ms "d_assigns" () 0 () "  std::vector<char> d_assigns;" 9403 1  () () 0]
[ebrowse-ms "d_cla_decay" () 0 () "  double d_cla_decay;" 13422 1  () () 0]
[ebrowse-ms "d_cla_inc" () 0 () "  double d_cla_inc;" 13337 1  () () 0]
[ebrowse-ms "d_clauseIDCounter" () 0 () "  int d_clauseIDCounter;" 11292 1  () () 0]
[ebrowse-ms "d_clauses" () 0 () "  std::vector<Clause*> d_clauses;" 11418 1  () () 0]
[ebrowse-ms "d_conflict" () 0 () "  Clause* d_conflict;" 9084 1  () () 0]
[ebrowse-ms "d_decider" () 0 () "  SAT::DPLLT::Decider* d_decider;" 14328 1  () () 0]
[ebrowse-ms "d_default_params" () 0 () "  SearchParams d_default_params;" 14558 1  () () 0]
[ebrowse-ms "d_derivation" () 0 () "  Derivation* d_derivation;" 14465 1  () () 0]
[ebrowse-ms "d_expensive_ccmin" () 0 () "  bool d_expensive_ccmin;" 14646 1  () () 0]
[ebrowse-ms "d_inSearch" () 0 () "  bool d_inSearch;" 7499 1  () () 0]
[ebrowse-ms "d_learnts" () 0 () "  std::vector<Clause*> d_learnts;" 11492 1  () () 0]
[ebrowse-ms "d_level" () 0 () "  std::vector<int> d_level;" 10846 1  () () 0]
[ebrowse-ms "d_ok" () 0 () "  bool d_ok;" 7566 1  () () 0]
[ebrowse-ms "d_order" () 0 () "  VarOrder d_order;" 13824 1  () () 0]
[ebrowse-ms "d_pendingClauses" () 0 () "  std::queue<Clause*> d_pendingClauses;" 11720 1  () () 0]
[ebrowse-ms "d_popLemmas" () 0 () "  std::vector<Clause*> d_popLemmas;" 12157 1  () () 0]
[ebrowse-ms "d_popRequests" () 0 () "  unsigned int d_popRequests;" 13222 1  () () 0]
[ebrowse-ms "d_pushIDs" () 0 () "  std::vector<int> d_pushIDs;" 12977 1  () () 0]
[ebrowse-ms "d_pushes" () 0 () "  std::vector<PushEntry> d_pushes;" 12064 1  () () 0]
[ebrowse-ms "d_qhead" () 0 () "  size_type d_qhead;" 10135 1  () () 0]
[ebrowse-ms "d_reason" () 0 () "  std::vector<Clause*> d_reason;" 10522 1  () () 0]
[ebrowse-ms "d_registeredVars" () 0 () "::vector<Hash::hash_set<Var> > d_registeredVars;" 11227 1  () () 0]
[ebrowse-ms "d_simpDB_assigns" () 0 () "  int d_simpDB_assigns;" 13977 1  () () 0]
[ebrowse-ms "d_simpDB_props" () 0 () "  int64_t d_simpDB_props;" 14100 1  () () 0]
[ebrowse-ms "d_simpRD_learnts" () 0 () "  int d_simpRD_learnts;" 14184 1  () () 0]
[ebrowse-ms "d_stats" () 0 () "  SolverStats d_stats;" 14922 1  () () 0]
[ebrowse-ms "d_thead" () 0 () "  size_type d_thead;" 10271 1  () () 0]
[ebrowse-ms "d_theoryAPI" () 0 () "  SAT::DPLLT::TheoryAPI* d_theoryAPI;" 14265 1  () () 0]
[ebrowse-ms "d_theoryExplanations" () 0 () "<std::pair<int, Clause*> > d_theoryExplanations;" 11997 1  () () 0]
[ebrowse-ms "d_trail" () 0 () "  std::vector<Lit> d_trail;" 9666 1  () () 0]
[ebrowse-ms "d_trail_lim" () 0 () "  std::vector<int> d_trail_lim;" 9817 1  () () 0]
[ebrowse-ms "d_trail_pos" () 0 () "  std::vector<size_type> d_trail_pos;" 9948 1  () () 0]
[ebrowse-ms "d_var_decay" () 0 () "  double d_var_decay;" 13755 1  () () 0]
[ebrowse-ms "d_var_inc" () 0 () "  double d_var_inc;" 13617 1  () () 0]
[ebrowse-ms "d_watches" () 0 () "  std::vector<std::vector<Clause*> > d_watches;" 9299 1  () () 0]
)
([ebrowse-ms "Solver" () 0 () "	 bool logDerivation);" 21669 0  () () 0]
[ebrowse-ms "addClause" () 0 () "  void addClause(const" 22659 0  () () 0]
[ebrowse-ms "addClause" () 0 () "  void addClause(Lit" 22461 0  () () 0]
[ebrowse-ms "addClause" () 0 () "  void addClause(std" 17988 1  () () 0]
[ebrowse-ms "addFormula" () 0 () "  void addFormula(const" 22751 0  () () 0]
[ebrowse-ms "addWatch" () 0 () "  void addWatch(Lit" 17396 1  () "  void addWatch(Lit" 17396]
[ebrowse-ms "allClausesSatisfied" () 0 () "  bool allClausesSatisfied()" 20573 1  () () 0]
[ebrowse-ms "analyze" () 0 () "  Clause* analyze(int" 15669 1  () () 0]
[ebrowse-ms "analyze_minimize" () 0 () "  void analyze_minimize(std" 15798 1  () () 0]
[ebrowse-ms "analyze_removable" () 0 () "  bool analyze_removable(Lit" 15975 1  () () 0]
[ebrowse-ms "assume" () 0 () "  bool assume(Lit" 15084 1  () () 0]
[ebrowse-ms "backtrack" () 0 () "  void backtrack(int" 16082 1  () () 0]
[ebrowse-ms "checkClause" () 4 () "  void checkClause(const" 21003 1  () () 0]
[ebrowse-ms "checkClauses" () 4 () "  void checkClauses()" 21048 1  () () 0]
[ebrowse-ms "checkTrail" () 4 () "  void checkTrail()" 21205 1  () () 0]
[ebrowse-ms "checkWatched" () 4 () "  void checkWatched()" 20710 1  () () 0]
[ebrowse-ms "checkWatched" () 4 () "  void checkWatched(const" 20665 1  () () 0]
[ebrowse-ms "claBumpActivity" () 0 () "  void claBumpActivity (Clause" 20344 1  () "  void claBumpActivity (Clause" 20344]
[ebrowse-ms "claDecayActivity" () 0 () "  void claDecayActivity()" 20253 1  () "  void claDecayActivity()" 20253]
[ebrowse-ms "claRescaleActivity" () 0 () "  void claRescaleActivity()" 20311 1  () () 0]
[ebrowse-ms "curAssigns" () 0 () "  std::vector<SAT::Lit> curAssigns()" 27665 0  () () 0]
[ebrowse-ms "curClauses" () 0 () "std::vector<std::vector<SAT::Lit> > curClauses()" 27718 0  () () 0]
[ebrowse-ms "cvcToMiniSat" () 0 () "  Clause* cvcToMiniSat(const" 22366 0  () () 0]
[ebrowse-ms "decisionLevel" () 4 () "  int decisionLevel()" 15004 1  () "  int decisionLevel()" 15004]
[ebrowse-ms "doPops" () 0 () "  void doPops()" 24567 0  () () 0]
[ebrowse-ms "enqueue" () 0 () "  bool enqueue(Lit" 15181 1  () () 0]
[ebrowse-ms "getClauses" () 4 () "  const std::vector<Clause*>& getClauses()" 26038 0  () "  const std::vector<Clause*>& getClauses()" 26038]
[ebrowse-ms "getConflictLevel" () 4 () "  int getConflictLevel(const" 16672 1  () () 0]
[ebrowse-ms "getDerivation" () 0 () "  Derivation* getDerivation()" 26336 0  () "  Derivation* getDerivation()" 26336]
[ebrowse-ms "getImplicationLevel" () 4 () "  int getImplicationLevel(const" 16472 1  () () 0]
[ebrowse-ms "getLemmas" () 4 () "  const std::vector<Clause*>& getLemmas()" 26136 0  () "  const std::vector<Clause*>& getLemmas()" 26136]
[ebrowse-ms "getLevel" () 4 () "  int getLevel(Lit" 25102 0  () "  int getLevel(Lit" 25102]
[ebrowse-ms "getLevel" () 4 () "  int getLevel(Var" 25046 0  () "  int getLevel(Var" 25046]
[ebrowse-ms "getProof" () 0 () "  Derivation* getProof()" 23837 0  () () 0]
[ebrowse-ms "getPushID" () 4 () "  int getPushID(Lit" 19691 1  () "  int getPushID(Lit" 19691]
[ebrowse-ms "getPushID" () 4 () "  int getPushID(Var" 19633 1  () "  int getPushID(Var" 19633]
[ebrowse-ms "getReason" () 0 () "  Clause* getReason(Lit" 25918 0  () () 0]
[ebrowse-ms "getReason" () 4 () "  Clause* getReason(Var" 25698 0  () "  Clause* getReason(Var" 25698]
[ebrowse-ms "getStats" () 4 () "  const SolverStats& getStats()" 26439 0  () "  const SolverStats& getStats()" 26439]
[ebrowse-ms "getTrail" () 4 () "  const std::vector<Lit>& getTrail()" 26240 0  () "  const std::vector<Lit>& getTrail()" 26240]
[ebrowse-ms "getValue" () 4 () "  lbool getValue(Lit" 24875 0  () "  lbool getValue(Lit" 24875]
[ebrowse-ms "getValue" () 4 () "  lbool getValue(Var" 24811 0  () "  lbool getValue(Var" 24811]
[ebrowse-ms "getWatches" () 4 () "  const std::vector<Clause*>& getWatches(Lit" 17207 1  () "  const std::vector<Clause*>& getWatches(Lit" 17207]
[ebrowse-ms "getWatches" () 0 () "  std::vector<Clause*>& getWatches(Lit" 17066 1  () "  std::vector<Clause*>& getWatches(Lit" 17066]
[ebrowse-ms "inPush" () 4 () "  bool inPush()" 24660 0  () "  bool inPush()" 24660]
[ebrowse-ms "inSearch" () 4 () "  bool inSearch()" 23978 0  () "  bool inSearch()" 23978]
[ebrowse-ms "insertClause" () 0 () "  void insertClause(Clause" 18328 1  () () 0]
[ebrowse-ms "insertLemma" () 0 () "  void insertLemma(const" 18523 1  () () 0]
[ebrowse-ms "isConflicting" () 4 () "  bool isConflicting()" 16205 1  () () 0]
[ebrowse-ms "isConsistent" () 4 () "  bool isConsistent()" 24094 0  () "  bool isConsistent()" 24094]
[ebrowse-ms "isImpliedAt" () 4 () "  bool isImpliedAt(Lit" 19289 1  () () 0]
[ebrowse-ms "isPermSatisfied" () 4 () "  bool isPermSatisfied(Clause" 19393 1  () () 0]
[ebrowse-ms "isReason" () 4 () "  bool isReason(const" 25518 0  () "  bool isReason(const" 25518]
[ebrowse-ms "isRegistered" () 0 () "  bool isRegistered(Var" 17840 1  () () 0]
[ebrowse-ms "nAssigns" () 4 () "  int nAssigns()" 26532 0  () "  int nAssigns()" 26532]
[ebrowse-ms "nClauses" () 4 () "  int nClauses()" 26662 0  () "  int nClauses()" 26662]
[ebrowse-ms "nLearnts" () 4 () "  int nLearnts()" 26779 0  () "  int nLearnts()" 26779]
[ebrowse-ms "nVars" () 4 () "  int nVars()" 26953 0  () "  int nVars()" 26953]
[ebrowse-ms "nextClauseID" () 0 () "  int nextClauseID()" 22923 0  () "  int nextClauseID()" 22923]
[ebrowse-ms "orderClause" () 4 () "  void orderClause(std" 18960 1  () () 0]
[ebrowse-ms "pop" () 0 () "  void pop()" 19779 1  () () 0]
[ebrowse-ms "popClauses" () 0 () "  void popClauses(const" 19804 1  () () 0]
[ebrowse-ms "popTheories" () 0 () "  void popTheories()" 24401 0  () () 0]
[ebrowse-ms "printDIMACS" () 4 () "  void printDIMACS()" 27620 0  () () 0]
[ebrowse-ms "printState" () 4 () "  void printState()" 27535 0  () () 0]
[ebrowse-ms "propLookahead" () 0 () "  void propLookahead(const" 15465 1  () () 0]
[ebrowse-ms "propagate" () 0 () "  void propagate()" 15304 1  () () 0]
[ebrowse-ms "protocolPropagation" () 4 () "  void protocolPropagation()" 21282 1  () () 0]
[ebrowse-ms "push" () 0 () "  void push()" 24274 0  () () 0]
[ebrowse-ms "reduceDB" () 0 () "  void reduceDB()" 23156 0  () () 0]
[ebrowse-ms "registerVar" () 0 () "  void registerVar(Var" 17733 1  () () 0]
[ebrowse-ms "remove" () 0 () "  void remove(Clause" 19092 1  () () 0]
[ebrowse-ms "removeWatch" () 0 () "  void removeWatch(std" 17546 1  () () 0]
[ebrowse-ms "requestPop" () 0 () "  void requestPop()" 24497 0  () () 0]
[ebrowse-ms "resolveTheoryImplication" () 0 () "  void resolveTheoryImplication(Lit" 16945 1  () () 0]
[ebrowse-ms "search" () 0 () "  CVC3::QueryResult search()" 23606 0  () () 0]
[ebrowse-ms "setLevel" () 0 () "  void setLevel(Lit" 25282 0  () "  void setLevel(Lit" 25282]
[ebrowse-ms "setLevel" () 0 () "  void setLevel(Var" 25219 0  () "  void setLevel(Var" 25219]
[ebrowse-ms "setPushID" () 0 () "  void setPushID(Var" 19497 1  () () 0]
[ebrowse-ms "simplifyClause" () 4 () "  bool simplifyClause(std" 18692 1  () () 0]
[ebrowse-ms "simplifyDB" () 0 () "  void simplifyDB()" 23110 0  () () 0]
[ebrowse-ms "toString" () 4 () "  std::string toString(const" 27422 0  () () 0]
[ebrowse-ms "toString" () 4 () "  std::string toString(Lit" 27099 0  () () 0]
[ebrowse-ms "updateConflict" () 0 () "  void updateConflict(Clause" 16279 1  () () 0]
[ebrowse-ms "varBumpActivity" () 0 () "  void varBumpActivity(Lit" 19908 1  () "  void varBumpActivity(Lit" 19908]
[ebrowse-ms "varDecayActivity" () 0 () "  void varDecayActivity ()" 20146 1  () "  void varDecayActivity ()" 20146]
[ebrowse-ms "varRescaleActivity" () 0 () "  void varRescaleActivity()" 20226 1  () () 0]
[ebrowse-ms "~Solver" () 0 () "  ~Solver()" 22160 0  () () 0]
)
([ebrowse-ms "d_rootLevel" () 0 () "  static const int d_rootLevel = 0;" 7423 1  () () 0]
)
([ebrowse-ms "createFrom" () 0 () "  static Solver* createFrom(const" 21874 0  () () 0]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "Solver" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" ]
()()
([ebrowse-ms "Solver" () 0 () () 0 0  () "	       bool logDerivation) :" 4693]
[ebrowse-ms "addClause" () 0 () () 0 0  () "void Solver::addClause(vector" 20886]
[ebrowse-ms "addClause" () 0 () () 0 0  () "void Solver::addClause(const" 15532]
[ebrowse-ms "addClause" () 0 () () 0 0  () "void Solver::addClause(Lit" 14831]
[ebrowse-ms "addFormula" () 0 () () 0 0  () "void Solver::addFormula(const" 16342]
[ebrowse-ms "allClausesSatisfied" () 0 () () 0 0  () "bool Solver::allClausesSatisfied()" 73619]
[ebrowse-ms "analyze" () 0 () () 0 0  () "Clause* Solver::analyze(int" 33637]
[ebrowse-ms "analyze_minimize" () 0 () () 0 0  () "void Solver::analyze_minimize(vector" 41151]
[ebrowse-ms "analyze_removable" () 0 () () 0 0  () "bool Solver::analyze_removable(Lit" 45119]
[ebrowse-ms "assume" () 0 () () 0 0  () "bool Solver::assume(Lit" 47657]
[ebrowse-ms "backtrack" () 0 () () 0 0  () "void Solver::backtrack(int" 47956]
[ebrowse-ms "checkClause" () 4 () () 0 0  () "void Solver::checkClause(const" 75568]
[ebrowse-ms "checkClauses" () 4 () () 0 0  () "void Solver::checkClauses()" 76444]
[ebrowse-ms "checkTrail" () 4 () () 0 0  () "void Solver::checkTrail()" 76690]
[ebrowse-ms "checkWatched" () 4 () () 0 0  () "void Solver::checkWatched()" 75311]
[ebrowse-ms "checkWatched" () 4 () () 0 0  () "void Solver::checkWatched(const" 74596]
[ebrowse-ms "claRescaleActivity" () 0 () () 0 0  () "void Solver::claRescaleActivity()" 73367]
[ebrowse-ms "createFrom" () 0 () () 0 0  () "Solver* Solver::createFrom(const" 8246]
[ebrowse-ms "curAssigns" () 0 () () 0 0  () "std::vector<SAT::Lit> Solver::curAssigns()" 11278]
[ebrowse-ms "curClauses" () 0 () () 0 0  () "tor<std::vector<SAT::Lit> > Solver::curClauses()" 11520]
[ebrowse-ms "cvcToMiniSat" () 0 () () 0 0  () "Clause* Solver::cvcToMiniSat(const" 4336]
[ebrowse-ms "doPops" () 0 () () 0 0  () "void Solver::doPops()" 82015]
[ebrowse-ms "enqueue" () 0 () () 0 0  () "bool Solver::enqueue(Lit" 51367]
[ebrowse-ms "getConflictLevel" () 4 () () 0 0  () "int Solver::getConflictLevel(const" 28521]
[ebrowse-ms "getImplicationLevel" () 4 () () 0 0  () "int Solver::getImplicationLevel(const" 27881]
[ebrowse-ms "getReason" () 0 () () 0 0  () "Clause* Solver::getReason(Lit" 28902]
[ebrowse-ms "insertClause" () 0 () () 0 0  () "void Solver::insertClause(Clause" 23426]
[ebrowse-ms "insertLemma" () 0 () () 0 0  () "void Solver::insertLemma(const" 5788]
[ebrowse-ms "isConflicting" () 4 () () 0 0  () "bool Solver::isConflicting()" 29521]
[ebrowse-ms "isImpliedAt" () 4 () () 0 0  () "bool Solver::isImpliedAt(Lit" 46793]
[ebrowse-ms "isPermSatisfied" () 4 () () 0 0  () "bool Solver::isPermSatisfied(Clause" 47356]
[ebrowse-ms "isRegistered" () 0 () () 0 0  () "bool Solver::isRegistered(Var" 13654]
[ebrowse-ms "orderClause" () 4 () () 0 0  () "void Solver::orderClause(vector" 18165]
[ebrowse-ms "pop" () 0 () () 0 0  () "void Solver::pop()" 82874]
[ebrowse-ms "popClauses" () 0 () () 0 0  () "void Solver::popClauses(const" 82291]
[ebrowse-ms "popTheories" () 0 () () 0 0  () "void Solver::popTheories()" 82172]
[ebrowse-ms "printDIMACS" () 4 () () 0 0  () "void Solver::printDIMACS()" 12577]
[ebrowse-ms "printState" () 4 () () 0 0  () "void Solver::printState()" 11914]
[ebrowse-ms "propLookahead" () 0 () () 0 0  () "void Solver::propLookahead(const" 63081]
[ebrowse-ms "propagate" () 0 () () 0 0  () "void Solver::propagate()" 55735]
[ebrowse-ms "protocolPropagation" () 4 () () 0 0  () "void Solver::protocolPropagation()" 62659]
[ebrowse-ms "push" () 0 () () 0 0  () "void Solver::push()" 78509]
[ebrowse-ms "reduceDB" () 0 () () 0 0  () "void Solver::reduceDB()" 58257]
[ebrowse-ms "registerVar" () 0 () () 0 0  () "void Solver::registerVar(Var" 13937]
[ebrowse-ms "remove" () 0 () () 0 0  () "void Solver::remove(Clause" 26577]
[ebrowse-ms "removeWatch" () 0 () () 0 0  () "void Solver::removeWatch(std" 27107]
[ebrowse-ms "requestPop" () 0 () () 0 0  () "void Solver::requestPop()" 81710]
[ebrowse-ms "resolveTheoryImplication" () 0 () () 0 0  () "void Solver::resolveTheoryImplication(Lit" 30273]
[ebrowse-ms "search" () 0 () () 0 0  () "CVC3::QueryResult Solver::search()" 64645]
[ebrowse-ms "setPushID" () 0 () () 0 0  () "void Solver::setPushID(Var" 78046]
[ebrowse-ms "simplifyClause" () 4 () () 0 0  () "bool Solver::simplifyClause(vector" 16932]
[ebrowse-ms "simplifyDB" () 0 () () 0 0  () "void Solver::simplifyDB()" 59483]
[ebrowse-ms "toString" () 4 () () 0 0  () "std::string Solver::toString(const" 11086]
[ebrowse-ms "toString" () 4 () () 0 0  () "std::string Solver::toString(Lit" 10503]
[ebrowse-ms "updateConflict" () 0 () () 0 0  () "void Solver::updateConflict(Clause" 29598]
[ebrowse-ms "varRescaleActivity" () 0 () () 0 0  () "void Solver::varRescaleActivity()" 73190]
[ebrowse-ms "~Solver" () 0 () () 0 0  () "Solver::~Solver()" 9948]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CompactClause" "CVC3" 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" ]
()()
([ebrowse-ms "toString" () 4 () () 0 0  () "string CompactClause::toString()" 5702]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CompactClause" "CVC3::Clause" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/clause.h" "  class CompactClause {" 9956"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/clause.h" ]
()([ebrowse-ms "d_clause" () 0 () "    Clause d_clause;" 9988 2  () () 0]
)
([ebrowse-ms "CompactClause" () 0 () "    CompactClause(const Clause& c):" 10022 0  () "    CompactClause(const Clause& c):" 10022]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 10156 0  () () 0]
)
()
()
([ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 10090 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
)
()
()()
][ebrowse-ts [ebrowse-cs "VCCmd" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vc_cmd.h" "class VCCmd {" 851() ]
()([ebrowse-ms "d_calledFromParser" () 0 () "  bool d_calledFromParser;" 1085 2  () () 0]
[ebrowse-ms "d_map" () 0 () "  CtxtMap d_map;" 1058 2  () () 0]
[ebrowse-ms "d_name_of_cur_ctxt" () 0 () "  std::string d_name_of_cur_ctxt;" 1041 2  () () 0]
[ebrowse-ms "d_parser" () 0 () "  Parser* d_parser;" 896 2  () () 0]
[ebrowse-ms "d_vc" () 0 () "  ValidityChecker* d_vc;" 876 2  () () 0]
)
([ebrowse-ms "VCCmd" () 0 () "c, Parser* parser, bool calledFromParser=false);" 1731 0  () () 0]
[ebrowse-ms "evaluateCommand" () 0 () "  bool evaluateCommand(const" 1251 2  () () 0]
[ebrowse-ms "evaluateNext" () 0 () "  bool evaluateNext()" 1451 2  () () 0]
[ebrowse-ms "findAxioms" () 0 () "  void findAxioms(const" 1476 2  () () 0]
[ebrowse-ms "printCounterExample" () 0 () "  void printCounterExample()" 1697 2  () () 0]
[ebrowse-ms "printModel" () 0 () "  void printModel()" 1667 2  () () 0]
[ebrowse-ms "printSymbols" () 0 () "  void printSymbols(Expr" 1155 2  () () 0]
[ebrowse-ms "processCommands" () 0 () "  void processCommands()" 1844 0  () () 0]
[ebrowse-ms "reportResult" () 0 () "  void reportResult(QueryResult" 1610 2  () () 0]
[ebrowse-ms "skolemizeAx" () 0 () "  Expr skolemizeAx(const" 1568 2  () () 0]
[ebrowse-ms "~VCCmd" () 0 () "  ~VCCmd()" 1793 0  () () 0]
)
()
()
()
([ebrowse-ms "CtxtMap" () 0 () "ef std::hash_map<const char*, Context*> CtxtMap;" 1007 2  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "VCCmd" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/vcl/vc_cmd.cpp" ]
()()
([ebrowse-ms "VCCmd" () 0 () () 0 0  () "* vc, Parser* parser, bool calledFromParser)
  :" 802]
[ebrowse-ms "evaluateCommand" () 0 () () 0 0  () "bool VCCmd::evaluateCommand(const" 6943]
[ebrowse-ms "evaluateNext" () 0 () () 0 0  () "bool VCCmd::evaluateNext()" 1860]
[ebrowse-ms "findAxioms" () 0 () () 0 0  () "void VCCmd::findAxioms(const" 1070]
[ebrowse-ms "printCounterExample" () 0 () () 0 0  () "void VCCmd::printCounterExample()" 5934]
[ebrowse-ms "printModel" () 0 () () 0 0  () "void VCCmd::printModel()" 4092]
[ebrowse-ms "printSymbols" () 0 () () 0 0  () "void VCCmd::printSymbols(Expr" 5038]
[ebrowse-ms "processCommands" () 0 () () 0 0  () "void VCCmd::processCommands()" 26627]
[ebrowse-ms "reportResult" () 0 () () 0 0  () "void VCCmd::reportResult(QueryResult" 2540]
[ebrowse-ms "skolemizeAx" () 0 () () 0 0  () "Expr VCCmd::skolemizeAx(const" 1561]
[ebrowse-ms "~VCCmd" () 0 () () 0 0  () "VCCmd::~VCCmd()" 1036]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ContextNotifyObj" "CVC3::ContextObjChain" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" "class ContextNotifyObj {" 13235"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" ]
()([ebrowse-ms "d_context" () 0 () "  Context* d_context;" 13292 1  () () 0]
)
([ebrowse-ms "ContextNotifyObj" () 0 () "  ContextNotifyObj(Context* context):" 13327 0  () "  ContextNotifyObj(Context* context):" 13327]
[ebrowse-ms "getMemory" () 1 () "  virtual unsigned long getMemory(int" 13797 0  () "  virtual unsigned long getMemory(int" 13797]
[ebrowse-ms "notify" () 1 () "  virtual void notify(void" 13755 0  () "  virtual void notify(void" 13755]
[ebrowse-ms "notifyPre" () 1 () "  virtual void notifyPre(void" 13724 0  () "  virtual void notifyPre(void" 13724]
[ebrowse-ms "~ContextNotifyObj" () 1 () "  virtual ~ContextNotifyObj()" 13424 0  () "  virtual ~ContextNotifyObj()" 13424]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ContextNotifyObj" "CVC3" 0() () 0() ]
([ebrowse-ts [ebrowse-cs "ConflictClauseManager" "CVC3::SearchEngineFast" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_fast.h" "    class ConflictClauseManager :" 5416"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_fast.h" ]
()([ebrowse-ms "d_restorePoints" () 0 () "      std::vector<int> d_restorePoints;" 5511 2  () () 0]
[ebrowse-ms "d_se" () 0 () "      SearchEngineFast* d_se;" 5471 2  () () 0]
)
([ebrowse-ms "ConflictClauseManager" () 0 () "        :" 5559 0  () "        :" 5559]
[ebrowse-ms "notify" () 0 () "      void notify()" 5690 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "earchEngineFast::ConflictClauseManager::notify()" 1485]
[ebrowse-ms "setRestorePoint" () 0 () "      void setRestorePoint()" 5669 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "neFast::ConflictClauseManager::setRestorePoint()" 1133]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CoreNotifyObj" "CVC3::TheoryCore" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_core.h" "  class CoreNotifyObj :" 4980"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_core.h" ]
()([ebrowse-ms "d_theoryCore" () 0 () "    TheoryCore* d_theoryCore;" 5035 2  () () 0]
)
([ebrowse-ms "CoreNotifyObj" () 0 () "      :" 5074 0  () "      :" 5074]
[ebrowse-ms "notify" () 0 () "    void notify()" 5170 0  () "    void notify()" 5170]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprManagerNotifyObj" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" "  class ExprManagerNotifyObj:" 15830"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" ]
()([ebrowse-ms "d_em" () 0 () "    ExprManager* d_em;" 15879 2  () () 0]
)
([ebrowse-ms "ExprManagerNotifyObj" () 0 () "      :" 15946 0  () "      :" 15946]
[ebrowse-ms "getMemory" () 0 () "    unsigned long getMemory(int" 16091 0  () "    unsigned long getMemory(int" 16091]
[ebrowse-ms "notify" () 0 () "    void notify(void" 16057 0  () () 0]
[ebrowse-ms "notifyPre" () 0 () "    void notifyPre(void" 16034 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "RefNotifyObj" "CVC3::SmartCDO<>::RefCDO<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smartcdo.h" "    class RefNotifyObj :" 1767"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smartcdo.h" ]
()([ebrowse-ms "d_ref" () 0 () "      RefCDO<U>* d_ref;" 1844 2  () () 0]
)
([ebrowse-ms "RefNotifyObj" () 0 () "efNotifyObj(RefCDO<U>* ref, Context* context)
	:" 1892 2  () "efNotifyObj(RefCDO<U>* ref, Context* context)
	:" 1892]
[ebrowse-ms "notify" () 0 () "      void notify()" 2034 2  () "      void notify()" 2034]
[ebrowse-ms "notifyPre" () 0 () "      void notifyPre()" 1987 2  () "      void notifyPre()" 1987]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Restorer" "CVC3::SearchSat" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "  class Restorer :" 4761"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" ]
()([ebrowse-ms "d_ss" () 0 () "    SearchSat* d_ss;" 4807 2  () () 0]
)
([ebrowse-ms "Restorer" () 0 () "        :" 4842 0  () "        :" 4842]
[ebrowse-ms "notify" () 0 () "    void notify()" 4979 0  () "    void notify()" 4979]
[ebrowse-ms "notifyPre" () 0 () "    void notifyPre()" 4937 0  () "    void notifyPre()" 4937]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "VariableManagerNotifyObj" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "  class VariableManagerNotifyObj:" 14561"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" ]
()([ebrowse-ms "d_vm" () 0 () "    VariableManager* d_vm;" 14614 2  () () 0]
)
([ebrowse-ms "VariableManagerNotifyObj" () 0 () "    :" 14687 0  () "    :" 14687]
[ebrowse-ms "notify" () 0 () "    void notify(void" 14823 0  () "    void notify(void" 14823]
[ebrowse-ms "notifyPre" () 0 () "    void notifyPre(void" 14777 0  () "    void notifyPre(void" 14777]
)
()
()
()
()
()()
])()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "true" "MiniSat" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "mplate <> struct STATIC_ASSERTION_FAILURE<true>{" 2497() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Variable" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "  class Variable {" 1119"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" ]
()([ebrowse-ms "d_val" () 0 () "    VariableValue* d_val;" 1156 2  () () 0]
)
([ebrowse-ms "Variable" () 0 () "    Variable(const Variable& l);" 1491 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::Variable(const Variable& l):" 1124]
[ebrowse-ms "Variable" () 0 () "   Variable(VariableManager* vm, const Expr& e);" 1427 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable(VariableManager* vm, const Expr& e)
  :" 1016]
[ebrowse-ms "Variable" () 0 () "    Variable():" 1281 0  () "    Variable():" 1281]
[ebrowse-ms "added" () 6 () "    bool added(bool" 3780 0  () "  inline bool Variable::added(bool" 11996]
[ebrowse-ms "added" () 2 () "    bool& added(bool" 3621 0  () "  inline bool& Variable::added(bool" 11678]
[ebrowse-ms "count" () 6 () "    unsigned count(bool" 3677 0  () "  inline unsigned Variable::count(bool" 11753]
[ebrowse-ms "count" () 2 () "    unsigned& count(bool" 3533 0  () "  inline unsigned& Variable::count(bool" 11450]
[ebrowse-ms "countPrev" () 6 () "    unsigned countPrev(bool" 3717 0  () "  inline unsigned Variable::countPrev(bool" 11837]
[ebrowse-ms "countPrev" () 2 () "    unsigned& countPrev(bool" 3568 0  () "  inline unsigned& Variable::countPrev(bool" 11529]
[ebrowse-ms "deriveTheorem" () 4 () "    Theorem deriveTheorem()" 3435 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::deriveTheorem()" 3776]
[ebrowse-ms "deriveThmRec" () 4 () "    Theorem deriveThmRec(bool" 1209 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::deriveThmRec(bool" 3854]
[ebrowse-ms "getAntecedent" () 4 () "    const Clause& getAntecedent()" 2262 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::getAntecedent()" 2256]
[ebrowse-ms "getAntecedentIdx" () 4 () "    int getAntecedentIdx()" 2436 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::getAntecedentIdx()" 2383]
[ebrowse-ms "getAssumpThm" () 4 () "    const Theorem& getAssumpThm()" 2642 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::getAssumpThm()" 2495]
[ebrowse-ms "getExpr" () 4 () "    const Expr& getExpr()" 1796 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::getExpr()" 1630]
[ebrowse-ms "getNegExpr" () 4 () "    const Expr& getNegExpr()" 1946 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::getNegExpr()" 1751]
[ebrowse-ms "getScope" () 4 () "    int getScope()" 2182 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::getScope()" 2022]
[ebrowse-ms "getTheorem" () 4 () "    const Theorem& getTheorem()" 2221 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::getTheorem()" 2124]
[ebrowse-ms "getValue" () 4 () "    int getValue()" 2048 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::getValue()" 1932]
[ebrowse-ms "isNull" () 4 () "    bool isNull()" 1621 0  () "    bool isNull()" 1621]
[ebrowse-ms "operator =" () 0 () "    Variable& operator=(const" 1588 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::operator=(const" 1377]
[ebrowse-ms "score" () 6 () "    int score(bool" 3748 0  () "  inline int Variable::score(bool" 11920]
[ebrowse-ms "score" () 2 () "    int& score(bool" 3594 0  () "  inline int& Variable::score(bool" 11607]
[ebrowse-ms "setAssumpThm" () 0 () "    void setAssumpThm(const" 3163 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::setAssumpThm(const" 3348]
[ebrowse-ms "setValue" () 0 () "    void setValue(const" 3104 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::setValue(const" 3177]
[ebrowse-ms "setValue" () 0 () "    void setValue(const" 3065 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::setValue(const" 3018]
[ebrowse-ms "setValue" () 0 () "    void setValue(int" 2832 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::setValue(int" 2766]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 4131 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::toString()" 5054]
[ebrowse-ms "wp" () 6 () "   std::vector<std::pair<Clause, int> >& wp(bool" 3870 0  () "ctor<std::pair<Clause, int> >& Variable::wp(bool" 12103]
[ebrowse-ms "~Variable" () 0 () "    ~Variable()" 1539 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Variable::~Variable()" 1233]
)
()
()
([ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 4070 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 0 () "    friend bool operator==(const" 3937 0  () "    friend bool operator==(const" 3937]
)
()
()()
][ebrowse-ts [ebrowse-cs "FreeConst" "CVC3::TheoryArith3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith3.h" "  class FreeConst {" 1003"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith3.h" ]
()([ebrowse-ms "d_r" () 0 () "    Rational d_r;" 1032 2  () () 0]
[ebrowse-ms "d_strict" () 0 () "    bool d_strict;" 1051 2  () () 0]
)
([ebrowse-ms "FreeConst" () 0 () "    FreeConst(const Rational& r, bool strict):" 1101 0  () "    FreeConst(const Rational& r, bool strict):" 1101]
[ebrowse-ms "FreeConst" () 0 () "    FreeConst() {" 1077 0  () "    FreeConst() {" 1077]
[ebrowse-ms "getConst" () 4 () "    const Rational& getConst()" 1188 0  () "    const Rational& getConst()" 1188]
[ebrowse-ms "strict" () 4 () "    bool strict()" 1228 0  () "    bool strict()" 1228]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "FreeConst" "CVC3::TheoryArithOld" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "  class FreeConst {" 1125"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" ]
()([ebrowse-ms "d_r" () 0 () "    Rational d_r;" 1154 2  () () 0]
[ebrowse-ms "d_strict" () 0 () "    bool d_strict;" 1173 2  () () 0]
)
([ebrowse-ms "FreeConst" () 0 () "    FreeConst(const Rational& r, bool strict):" 1223 0  () "    FreeConst(const Rational& r, bool strict):" 1223]
[ebrowse-ms "FreeConst" () 0 () "    FreeConst() {" 1199 0  () "    FreeConst() {" 1199]
[ebrowse-ms "getConst" () 4 () "    const Rational& getConst()" 1310 0  () "    const Rational& getConst()" 1310]
[ebrowse-ms "strict" () 4 () "    bool strict()" 1350 0  () "    bool strict()" 1350]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "FreeConst" "CVC3::TheoryArithNew" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  class FreeConst {" 1246"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" ]
()([ebrowse-ms "d_r" () 0 () "    Rational d_r;" 1275 2  () () 0]
[ebrowse-ms "d_strict" () 0 () "    bool d_strict;" 1294 2  () () 0]
)
([ebrowse-ms "FreeConst" () 0 () "    FreeConst(const Rational& r, bool strict):" 1344 0  () "    FreeConst(const Rational& r, bool strict):" 1344]
[ebrowse-ms "FreeConst" () 0 () "    FreeConst() {" 1320 0  () "    FreeConst() {" 1320]
[ebrowse-ms "getConst" () 4 () "    const Rational& getConst()" 1431 0  () "    const Rational& getConst()" 1431]
[ebrowse-ms "strict" () 4 () "    bool strict()" 1471 0  () "    bool strict()" 1471]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DPLLTBasic" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_basic.cpp" ]
()()
([ebrowse-ms "DPLLTBasic" () 0 () () 0 0  () "                       bool printStats)
  :" 6724]
[ebrowse-ms "addAssertion" () 0 () () 0 0  () "void DPLLTBasic::addAssertion(const" 10369]
[ebrowse-ms "addNewClause" () 0 () () 0 0  () "void DPLLTBasic::addNewClause(const" 7716]
[ebrowse-ms "addNewClauses" () 0 () () 0 0  () "void DPLLTBasic::addNewClauses(CNF_Formula_Impl" 8163]
[ebrowse-ms "checkSat" () 0 () () 0 0  () "QueryResult DPLLTBasic::checkSat(const" 10769]
[ebrowse-ms "continueCheck" () 0 () () 0 0  () "QueryResult DPLLTBasic::continueCheck(const" 12692]
[ebrowse-ms "createManager" () 0 () () 0 0  () "void DPLLTBasic::createManager()" 3498]
[ebrowse-ms "generate_CDB" () 0 () () 0 0  () "void DPLLTBasic::generate_CDB (CNF_Formula_Impl" 3801]
[ebrowse-ms "getCurAssignments" () 0 () () 0 0  () "vector<SAT::Lit> DPLLTBasic::getCurAssignments()" 10144]
[ebrowse-ms "getCurClauses" () 0 () () 0 0  () "::vector<SAT::Lit> > DPLLTBasic::getCurClauses()" 10263]
[ebrowse-ms "getSatProof" () 0 () () 0 0  () "CVC3::Proof  DPLLTBasic::getSatProof(CNF_Manager" 13977]
[ebrowse-ms "handle_result" () 0 () () 0 0  () "void DPLLTBasic::handle_result(SatSolver" 4491]
[ebrowse-ms "pop" () 0 () () 0 0  () "void DPLLTBasic::pop()" 9072]
[ebrowse-ms "push" () 0 () () 0 0  () "void DPLLTBasic::push()" 8876]
[ebrowse-ms "verify_solution" () 0 () () 0 0  () "void DPLLTBasic::verify_solution()" 5879]
[ebrowse-ms "~DPLLTBasic" () 0 () () 0 0  () "DPLLTBasic::~DPLLTBasic()" 7240]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "MemoryManager" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager.h" "class MemoryManager {" 1350"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager.h" ]
([ebrowse-ts [ebrowse-cs "ContextMemoryManager" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_context.h" "class ContextMemoryManager :" 1172"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_context.h" ]
()([ebrowse-ms "d_chunkList" () 0 () "  std::vector<char*> d_chunkList;" 1269 2  () () 0]
[ebrowse-ms "d_endChunk" () 0 () "  char* d_endChunk;" 1479 2  () () 0]
[ebrowse-ms "d_endChunkStack" () 0 () "  std::vector<char*> d_endChunkStack;" 1759 2  () () 0]
[ebrowse-ms "d_indexChunkList" () 0 () "  unsigned d_indexChunkList;" 1537 2  () () 0]
[ebrowse-ms "d_indexChunkListStack" () 0 () "  std::vector<unsigned> d_indexChunkListStack;" 1846 2  () () 0]
[ebrowse-ms "d_nextFree" () 0 () "  char* d_nextFree;" 1401 2  () () 0]
[ebrowse-ms "d_nextFreeStack" () 0 () "  std::vector<char*> d_nextFreeStack;" 1653 2  () () 0]
)
([ebrowse-ms "ContextMemoryManager" () 0 () "    :" 2465 0  () "    :" 2465]
[ebrowse-ms "deleteData" () 1 () "  void deleteData(void" 3323 0  () "  void deleteData(void" 3323]
[ebrowse-ms "getMemory" () 0 () "  unsigned getMemory(int" 4041 0  () "  unsigned getMemory(int" 4041]
[ebrowse-ms "newChunk" () 0 () "  void newChunk()" 1886 2  () "  void newChunk()" 1886]
[ebrowse-ms "newData" () 1 () "  void* newData(size_t" 3027 0  () "  void* newData(size_t" 3027]
[ebrowse-ms "pop" () 0 () "  void pop()" 3507 0  () "  void pop()" 3507]
[ebrowse-ms "push" () 0 () "  void push()" 3346 0  () "  void push()" 3346]
[ebrowse-ms "~ContextMemoryManager" () 0 () "  ~ContextMemoryManager()" 2878 0  () "  ~ContextMemoryManager()" 2878]
)
([ebrowse-ms "s_freePages" () 0 () "  static std::vector<char*> s_freePages;" 1235 2  () () 0]
)
([ebrowse-ms "garbageCollect" () 0 () "  static void garbageCollect(void" 3905 0  () "  static void garbageCollect(void" 3905]
[ebrowse-ms "getStaticMemory" () 0 () "  static unsigned getStaticMemory(int" 4601 0  () "  static unsigned getStaticMemory(int" 4601]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "MemoryManagerChunks" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_chunks.h" "class MemoryManagerChunks:" 1449"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_chunks.h" ]
()([ebrowse-ms "d_chunkList" () 0 () "  std::vector<char*> d_chunkList;" 1707 2  () () 0]
[ebrowse-ms "d_chunkSize" () 0 () "  unsigned d_chunkSize;" 1560 2  () () 0]
[ebrowse-ms "d_chunkSizeBytes" () 0 () "  unsigned d_chunkSizeBytes;" 1616 2  () () 0]
[ebrowse-ms "d_dataSize" () 0 () "  unsigned d_dataSize;" 1505 2  () () 0]
[ebrowse-ms "d_endChunk" () 0 () "  char* d_endChunk;" 1904 2  () () 0]
[ebrowse-ms "d_freeList" () 0 () "  std::vector<char*> d_freeList;" 1673 2  () () 0]
[ebrowse-ms "d_nextFree" () 0 () "  char* d_nextFree;" 1837 2  () () 0]
)
([ebrowse-ms "MemoryManagerChunks" () 0 () "    :" 2221 0  () "    :" 2221]
[ebrowse-ms "deleteData" () 1 () "  void deleteData(void" 3023 0  () "  void deleteData(void" 3023]
[ebrowse-ms "newChunk" () 0 () "  void newChunk()" 1944 2  () "  void newChunk()" 1944]
[ebrowse-ms "newData" () 1 () "  void* newData(size_t" 2574 0  () "  void* newData(size_t" 2574]
[ebrowse-ms "~MemoryManagerChunks" () 0 () "  ~MemoryManagerChunks()" 2440 0  () "  ~MemoryManagerChunks()" 2440]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "MemoryManagerMalloc" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_malloc.h" "class MemoryManagerMalloc:" 1239"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_malloc.h" ]
()()
([ebrowse-ms "MemoryManagerMalloc" () 0 () "  MemoryManagerMalloc() {" 1312 0  () "  MemoryManagerMalloc() {" 1312]
[ebrowse-ms "deleteData" () 1 () "  void deleteData(void" 1446 0  () "  void deleteData(void" 1446]
[ebrowse-ms "newData" () 1 () "  void* newData(size_t" 1385 0  () "  void* newData(size_t" 1385]
[ebrowse-ms "~MemoryManagerMalloc" () 0 () "  ~MemoryManagerMalloc()" 1357 0  () "  ~MemoryManagerMalloc()" 1357]
)
()
()
()
()
()()
])()
([ebrowse-ms "deleteData" () 9 () "  virtual void deleteData(void" 1481 0  () () 0]
[ebrowse-ms "newData" () 9 () "  virtual void* newData(size_t" 1438 0  () () 0]
[ebrowse-ms "~MemoryManager" () 1 () "  virtual ~MemoryManager()" 1402 0  () "  virtual ~MemoryManager()" 1402]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SatProofNode" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/sat_proof.h" "  class SatProofNode {" 1118"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/sat_proof.h" ]
()([ebrowse-ms "d_left" () 0 () "    SatProofNode* d_left;" 1184 2  () () 0]
[ebrowse-ms "d_lit" () 0 () "    SAT::Lit      d_lit;" 1236 2  () () 0]
[ebrowse-ms "d_proof" () 0 () "    CVC3::Proof   d_proof;" 1263 2  () () 0]
[ebrowse-ms "d_right" () 0 () "    SatProofNode* d_right;" 1211 2  () () 0]
[ebrowse-ms "d_theorem" () 0 () "    CVC3::Theorem d_theorem;" 1158 2  () () 0]
)
([ebrowse-ms "SatProofNode" () 0 () "Node* left, SatProofNode* right, SAT::Lit lit) :" 1732 0  () "Node* left, SatProofNode* right, SAT::Lit lit) :" 1732]
[ebrowse-ms "SatProofNode" () 0 () "    SatProofNode(CVC3::Theorem theorem) :" 1422 0  () "    SatProofNode(CVC3::Theorem theorem) :" 1422]
[ebrowse-ms "getLeaf" () 0 () "    CVC3::Theorem getLeaf()" 2039 0  () "    CVC3::Theorem getLeaf()" 2039]
[ebrowse-ms "getLeftParent" () 0 () "    SatProofNode* getLeftParent()" 2143 0  () "    SatProofNode* getLeftParent()" 2143]
[ebrowse-ms "getLit" () 0 () "    SAT::Lit getLit()" 2350 0  () "    SAT::Lit getLit()" 2350]
[ebrowse-ms "getNodeProof" () 0 () "    CVC3::Proof getNodeProof()" 2500 0  () "    CVC3::Proof getNodeProof()" 2500]
[ebrowse-ms "getRightParent" () 0 () "    SatProofNode* getRightParent()" 2252 0  () "    SatProofNode* getRightParent()" 2252]
[ebrowse-ms "hasNodeProof" () 0 () "    bool hasNodeProof()" 2440 0  () "    bool hasNodeProof()" 2440]
[ebrowse-ms "isLeaf" () 0 () "    bool isLeaf()" 1979 0  () "    bool isLeaf()" 1979]
[ebrowse-ms "setNodeProof" () 0 () "    void setNodeProof(CVC3" 2613 0  () "    void setNodeProof(CVC3" 2613]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ValidityChecker" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vc.h" "class CVC_DLL ValidityChecker {" 3025"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vc.h" ]
([ebrowse-ts [ebrowse-cs "VCL" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vcl.h" "class CVC_DLL VCL :" 1079"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vcl.h" ]
()([ebrowse-ms "d_batchedAssertions" () 0 () "  CDList<Expr>* d_batchedAssertions;" 2973 2  () () 0]
[ebrowse-ms "d_batchedAssertionsIdx" () 0 () "  CDO<unsigned>* d_batchedAssertionsIdx;" 3051 2  () () 0]
[ebrowse-ms "d_cm" () 0 () "  ContextManager* d_cm;" 1191 2  () () 0]
[ebrowse-ms "d_dump" () 0 () "  bool d_dump;" 3470 2  () () 0]
[ebrowse-ms "d_em" () 0 () "  ExprManager* d_em;" 1167 2  () () 0]
[ebrowse-ms "d_flags" () 0 () "  CLFlags *d_flags;" 1764 2  () () 0]
[ebrowse-ms "d_lastClosure" () 0 () "  Theorem3 d_lastClosure;" 3398 2  () () 0]
[ebrowse-ms "d_lastQuery" () 0 () "  Theorem3 d_lastQuery;" 3241 2  () () 0]
[ebrowse-ms "d_lastQueryTCC" () 0 () "  Theorem d_lastQueryTCC;" 3321 2  () () 0]
[ebrowse-ms "d_nextIdx" () 0 () "  size_t d_nextIdx;" 1944 2  () () 0]
[ebrowse-ms "d_se" () 0 () "  SearchEngine* d_se;" 1237 2  () () 0]
[ebrowse-ms "d_stackLevel" () 0 () "  CDO<int> *d_stackLevel;" 1832 2  () () 0]
[ebrowse-ms "d_statistics" () 0 () "  Statistics* d_statistics;" 1887 2  () () 0]
[ebrowse-ms "d_theories" () 0 () "  std::vector<Theory*> d_theories;" 1718 2  () () 0]
[ebrowse-ms "d_theoryArith" () 0 () "  TheoryArith* d_theoryArith;" 1347 2  () () 0]
[ebrowse-ms "d_theoryArray" () 0 () "  TheoryArray* d_theoryArray;" 1377 2  () () 0]
[ebrowse-ms "d_theoryBitvector" () 0 () "  TheoryBitvector* d_theoryBitvector;" 1515 2  () () 0]
[ebrowse-ms "d_theoryCore" () 0 () "  TheoryCore* d_theoryCore;" 1293 2  () () 0]
[ebrowse-ms "d_theoryDatatype" () 0 () "  TheoryDatatype* d_theoryDatatype;" 1551 2  () () 0]
[ebrowse-ms "d_theoryQuant" () 0 () "  TheoryQuant* d_theoryQuant;" 1407 2  () () 0]
[ebrowse-ms "d_theoryRecords" () 0 () "  TheoryRecords* d_theoryRecords;" 1441 2  () () 0]
[ebrowse-ms "d_theorySimulate" () 0 () "  TheorySimulate* d_theorySimulate;" 1477 2  () () 0]
[ebrowse-ms "d_theoryUF" () 0 () "  TheoryUF* d_theoryUF;" 1317 2  () () 0]
[ebrowse-ms "d_tm" () 0 () "  TheoremManager* d_tm;" 1215 2  () () 0]
[ebrowse-ms "d_translator" () 0 () "  Translator* d_translator;" 1579 2  () () 0]
[ebrowse-ms "d_userAssertions" () 0 () "  CDMap<Expr,UserAssertion>* d_userAssertions;" 2868 2  () () 0]
)
([ebrowse-ms "VCL" () 0 () "  VCL(const CLFlags& flags);" 4419 0  () () 0]
[ebrowse-ms "addPairToArithOrder" () 1 () "  bool addPairToArithOrder(const" 8730 0  () () 0]
[ebrowse-ms "andExpr" () 1 () "  Expr andExpr(const" 7860 0  () () 0]
[ebrowse-ms "andExpr" () 1 () "  Expr andExpr(const" 7807 0  () () 0]
[ebrowse-ms "arrayType" () 1 () "  Type arrayType(const" 6185 0  () () 0]
[ebrowse-ms "assertFormula" () 1 () "  void assertFormula(const" 13344 0  () () 0]
[ebrowse-ms "bitvecType" () 1 () "  Type bitvecType(int" 6247 0  () () 0]
[ebrowse-ms "boolType" () 1 () "  Type boolType()" 4610 0  () () 0]
[ebrowse-ms "boundVarExpr" () 1 () "  Expr boundVarExpr(const" 12652 0  () () 0]
[ebrowse-ms "checkContinue" () 1 () "  QueryResult checkContinue()" 13595 0  () () 0]
[ebrowse-ms "checkTCC" () 0 () "  Theorem checkTCC(const" 4100 2  () () 0]
[ebrowse-ms "checkUnsat" () 1 () "  QueryResult checkUnsat(const" 13555 0  () () 0]
[ebrowse-ms "computeBVConst" () 1 () "  Rational computeBVConst(const" 12179 0  () () 0]
[ebrowse-ms "core" () 0 () "  TheoryCore* core()" 4590 0  () () 0]
[ebrowse-ms "createOp" () 1 () "  Op createOp(const" 8370 0  () () 0]
[ebrowse-ms "createOp" () 1 () "  Op createOp(const" 8312 0  () () 0]
[ebrowse-ms "createType" () 1 () "  Type createType(const" 6452 0  () () 0]
[ebrowse-ms "createType" () 1 () "  Type createType(const" 6404 0  () () 0]
[ebrowse-ms "dataType" () 1 () "  void dataType(const" 5841 0  () () 0]
[ebrowse-ms "dataType" () 1 () "  Type dataType(const" 5602 0  () () 0]
[ebrowse-ms "datatypeConsExpr" () 1 () "  Expr datatypeConsExpr(const" 12400 0  () () 0]
[ebrowse-ms "datatypeSelExpr" () 1 () "  Expr datatypeSelExpr(const" 12511 0  () () 0]
[ebrowse-ms "datatypeTestExpr" () 1 () "  Expr datatypeTestExpr(const" 12582 0  () () 0]
[ebrowse-ms "deriveClosure" () 0 () "  Theorem3 deriveClosure(const" 3598 2  () () 0]
[ebrowse-ms "destroy" () 0 () "  void destroy(void" 4351 2  () () 0]
[ebrowse-ms "distinctExpr" () 1 () "  Expr distinctExpr(const" 8181 0  () () 0]
[ebrowse-ms "divideExpr" () 1 () "  Expr divideExpr(const" 9237 0  () () 0]
[ebrowse-ms "dumpTrace" () 0 () "    void dumpTrace(int" 4217 2  () () 0]
[ebrowse-ms "eqExpr" () 1 () "  Expr eqExpr(const" 8120 0  () () 0]
[ebrowse-ms "existsExpr" () 1 () "  Expr existsExpr(const" 12989 0  () () 0]
[ebrowse-ms "falseExpr" () 1 () "  Expr falseExpr()" 7750 0  () () 0]
[ebrowse-ms "forallExpr" () 1 () "  Expr forallExpr(const" 12812 0  () () 0]
[ebrowse-ms "forallExpr" () 1 () "  Expr forallExpr(const" 12744 0  () () 0]
[ebrowse-ms "funExpr" () 1 () "  Expr funExpr(const" 8562 0  () () 0]
[ebrowse-ms "funExpr" () 1 () "  Expr funExpr(const" 8495 0  () () 0]
[ebrowse-ms "funExpr" () 1 () "  Expr funExpr(const" 8652 0  () () 0]
[ebrowse-ms "funType" () 1 () "  Type funType(const" 6330 0  () () 0]
[ebrowse-ms "geExpr" () 1 () "  Expr geExpr(const" 9445 0  () () 0]
[ebrowse-ms "getAssumptions" () 1 () "  void getAssumptions(std" 13808 0  () () 0]
[ebrowse-ms "getAssumptions" () 0 () "  void getAssumptions(const" 4005 2  () () 0]
[ebrowse-ms "getAssumptionsRec" () 0 () "  void getAssumptionsRec(const" 3840 2  () () 0]
[ebrowse-ms "getAssumptionsTCC" () 1 () "  void getAssumptionsTCC(std" 14290 0  () () 0]
[ebrowse-ms "getAssumptionsUsed" () 1 () "  void getAssumptionsUsed(std" 13867 0  () () 0]
[ebrowse-ms "getBaseType" () 1 () "  Type getBaseType(const" 6863 0  () () 0]
[ebrowse-ms "getClosure" () 1 () "  Expr getClosure()" 14362 0  () () 0]
[ebrowse-ms "getConcreteModel" () 1 () "  void getConcreteModel(ExprMap" 14024 0  () () 0]
[ebrowse-ms "getCounterExample" () 1 () "  void getCounterExample(std" 13949 0  () () 0]
[ebrowse-ms "getCurrentContext" () 1 () "  Context* getCurrentContext()" 14595 0  () () 0]
[ebrowse-ms "getEM" () 1 () "  ExprManager* getEM()" 6565 0  () "  ExprManager* getEM()" 6565]
[ebrowse-ms "getFlags" () 5 () "  CLFlags& getFlags()" 4516 0  () "  CLFlags& getFlags()" 4516]
[ebrowse-ms "getImpliedLiteral" () 1 () "  Expr getImpliedLiteral()" 13417 0  () () 0]
[ebrowse-ms "getInternalAssumptions" () 1 () "  void getInternalAssumptions(std" 13753 0  () () 0]
[ebrowse-ms "getMemory" () 0 () "  unsigned long getMemory(int" 15038 0  () () 0]
[ebrowse-ms "getProof" () 1 () "  Proof getProof()" 14243 0  () () 0]
[ebrowse-ms "getProofClosure" () 1 () "  Proof getProofClosure()" 14389 0  () () 0]
[ebrowse-ms "getProofQuery" () 1 () "  Expr getProofQuery()" 13919 0  () () 0]
[ebrowse-ms "getProofTCC" () 1 () "  Proof getProofTCC()" 14341 0  () () 0]
[ebrowse-ms "getStatistics" () 1 () "  Statistics& getStatistics()" 14912 0  () "  Statistics& getStatistics()" 14912]
[ebrowse-ms "getTCC" () 1 () "  Expr getTCC()" 14260 0  () () 0]
[ebrowse-ms "getType" () 1 () "  Type getType(const" 6793 0  () () 0]
[ebrowse-ms "getTypePred" () 1 () "  Expr getTypePred(const" 6898 0  () () 0]
[ebrowse-ms "getUserAssumptions" () 1 () "  void getUserAssumptions(std" 13690 0  () () 0]
[ebrowse-ms "gtExpr" () 1 () "  Expr gtExpr(const" 9393 0  () () 0]
[ebrowse-ms "idExpr" () 1 () "  Expr idExpr(const" 6985 0  () () 0]
[ebrowse-ms "iffExpr" () 1 () "  Expr iffExpr(const" 8068 0  () () 0]
[ebrowse-ms "impliesExpr" () 1 () "  Expr impliesExpr(const" 8017 0  () () 0]
[ebrowse-ms "importExpr" () 1 () "  Expr importExpr(const" 7667 0  () () 0]
[ebrowse-ms "importType" () 1 () "  Type importType(const" 7701 0  () () 0]
[ebrowse-ms "incomplete" () 1 () "  bool incomplete(std" 14192 0  () () 0]
[ebrowse-ms "incomplete" () 1 () "  bool incomplete()" 14169 0  () () 0]
[ebrowse-ms "inconsistent" () 1 () "  bool inconsistent()" 14148 0  () () 0]
[ebrowse-ms "inconsistent" () 1 () "  bool inconsistent(std" 14097 0  () () 0]
[ebrowse-ms "init" () 0 () "  void init(void" 4291 2  () () 0]
[ebrowse-ms "intType" () 1 () "  Type intType()" 4647 0  () () 0]
[ebrowse-ms "iteExpr" () 1 () "  Expr iteExpr(const" 8232 0  () () 0]
[ebrowse-ms "lambdaExpr" () 1 () "  Op lambdaExpr(const" 13055 0  () () 0]
[ebrowse-ms "leExpr" () 1 () "  Expr leExpr(const" 9341 0  () () 0]
[ebrowse-ms "listExpr" () 1 () "  Expr listExpr(const" 7425 0  () () 0]
[ebrowse-ms "listExpr" () 1 () "  Expr listExpr(const" 7349 0  () () 0]
[ebrowse-ms "listExpr" () 1 () "  Expr listExpr(const" 7293 0  () () 0]
[ebrowse-ms "listExpr" () 1 () "  Expr listExpr(const" 7075 0  () () 0]
[ebrowse-ms "loadFile" () 1 () "  void loadFile(std" 14796 0  () () 0]
[ebrowse-ms "loadFile" () 1 () "  void loadFile(const" 14635 0  () () 0]
[ebrowse-ms "lookupType" () 1 () "  Type lookupType(const" 6517 0  () () 0]
[ebrowse-ms "lookupVar" () 1 () "  Expr lookupVar(const" 6740 0  () () 0]
[ebrowse-ms "ltExpr" () 1 () "  Expr ltExpr(const" 9289 0  () () 0]
[ebrowse-ms "minusExpr" () 1 () "  Expr minusExpr(const" 9081 0  () () 0]
[ebrowse-ms "multExpr" () 1 () "  Expr multExpr(const" 9135 0  () () 0]
[ebrowse-ms "newBVAndExpr" () 1 () "  Expr newBVAndExpr(const" 10662 0  () () 0]
[ebrowse-ms "newBVAndExpr" () 1 () "  Expr newBVAndExpr(const" 10609 0  () () 0]
[ebrowse-ms "newBVCompExpr" () 1 () "  Expr newBVCompExpr(const" 11137 0  () () 0]
[ebrowse-ms "newBVConstExpr" () 1 () "  Expr newBVConstExpr(const" 10305 0  () () 0]
[ebrowse-ms "newBVConstExpr" () 1 () "  Expr newBVConstExpr(const" 10359 0  () () 0]
[ebrowse-ms "newBVExtractExpr" () 1 () "  Expr newBVExtractExpr(const" 10519 0  () () 0]
[ebrowse-ms "newBVLEExpr" () 1 () "  Expr newBVLEExpr(const" 11241 0  () () 0]
[ebrowse-ms "newBVLTExpr" () 1 () "  Expr newBVLTExpr(const" 11189 0  () () 0]
[ebrowse-ms "newBVMultExpr" () 1 () "  Expr newBVMultExpr(int" 11665 0  () () 0]
[ebrowse-ms "newBVNandExpr" () 1 () "  Expr newBVNandExpr(const" 11030 0  () () 0]
[ebrowse-ms "newBVNegExpr" () 1 () "  Expr newBVNegExpr(const" 10572 0  () () 0]
[ebrowse-ms "newBVNorExpr" () 1 () "  Expr newBVNorExpr(const" 11083 0  () () 0]
[ebrowse-ms "newBVOrExpr" () 1 () "  Expr newBVOrExpr(const" 10765 0  () () 0]
[ebrowse-ms "newBVOrExpr" () 1 () "  Expr newBVOrExpr(const" 10713 0  () () 0]
[ebrowse-ms "newBVPlusExpr" () 1 () "  Expr newBVPlusExpr(int" 11598 0  () () 0]
[ebrowse-ms "newBVPlusExpr" () 1 () "  Expr newBVPlusExpr(int" 11535 0  () () 0]
[ebrowse-ms "newBVSDivExpr" () 1 () "  Expr newBVSDivExpr(const" 11842 0  () () 0]
[ebrowse-ms "newBVSLEExpr" () 1 () "  Expr newBVSLEExpr(const" 11347 0  () () 0]
[ebrowse-ms "newBVSLTExpr" () 1 () "  Expr newBVSLTExpr(const" 11294 0  () () 0]
[ebrowse-ms "newBVSModExpr" () 1 () "  Expr newBVSModExpr(const" 11950 0  () () 0]
[ebrowse-ms "newBVSRemExpr" () 1 () "  Expr newBVSRemExpr(const" 11896 0  () () 0]
[ebrowse-ms "newBVSubExpr" () 1 () "  Expr newBVSubExpr(const" 11483 0  () () 0]
[ebrowse-ms "newBVUDivExpr" () 1 () "  Expr newBVUDivExpr(const" 11734 0  () () 0]
[ebrowse-ms "newBVURemExpr" () 1 () "  Expr newBVURemExpr(const" 11788 0  () () 0]
[ebrowse-ms "newBVUminusExpr" () 1 () "  Expr newBVUminusExpr(const" 11446 0  () () 0]
[ebrowse-ms "newBVXnorExpr" () 1 () "  Expr newBVXnorExpr(const" 10977 0  () () 0]
[ebrowse-ms "newBVXnorExpr" () 1 () "  Expr newBVXnorExpr(const" 10923 0  () () 0]
[ebrowse-ms "newBVXorExpr" () 1 () "  Expr newBVXorExpr(const" 10870 0  () () 0]
[ebrowse-ms "newBVXorExpr" () 1 () "  Expr newBVXorExpr(const" 10817 0  () () 0]
[ebrowse-ms "newConcatExpr" () 1 () "  Expr newConcatExpr(const" 10463 0  () () 0]
[ebrowse-ms "newConcatExpr" () 1 () "  Expr newConcatExpr(const" 10409 0  () () 0]
[ebrowse-ms "newFixedConstWidthLeftShiftExpr" () 1 () "  Expr newFixedConstWidthLeftShiftExpr(const" 12075 0  () () 0]
[ebrowse-ms "newFixedLeftShiftExpr" () 1 () "  Expr newFixedLeftShiftExpr(const" 12012 0  () () 0]
[ebrowse-ms "newFixedRightShiftExpr" () 1 () "  Expr newFixedRightShiftExpr(const" 12129 0  () () 0]
[ebrowse-ms "newSXExpr" () 1 () "  Expr newSXExpr(const" 11397 0  () () 0]
[ebrowse-ms "notExpr" () 1 () "  Expr notExpr(const" 7772 0  () () 0]
[ebrowse-ms "orExpr" () 1 () "  Expr orExpr(const" 7962 0  () () 0]
[ebrowse-ms "orExpr" () 1 () "  Expr orExpr(const" 7910 0  () () 0]
[ebrowse-ms "parseExpr" () 1 () "  Expr parseExpr(const" 7600 0  () () 0]
[ebrowse-ms "parseType" () 1 () "  Type parseType(const" 7633 0  () () 0]
[ebrowse-ms "plusExpr" () 1 () "  Expr plusExpr(const" 9028 0  () () 0]
[ebrowse-ms "plusExpr" () 1 () "  Expr plusExpr(const" 8974 0  () () 0]
[ebrowse-ms "pop" () 1 () "  void pop()" 14439 0  () () 0]
[ebrowse-ms "popScope" () 1 () "  void popScope()" 14528 0  () () 0]
[ebrowse-ms "popto" () 1 () "  void popto(int" 14457 0  () () 0]
[ebrowse-ms "poptoScope" () 1 () "  void poptoScope(int" 14551 0  () () 0]
[ebrowse-ms "powExpr" () 1 () "  Expr powExpr(const" 9188 0  () () 0]
[ebrowse-ms "printExpr" () 1 () "  void printExpr(const" 7549 0  () () 0]
[ebrowse-ms "printExpr" () 1 () "  void printExpr(const" 7516 0  () () 0]
[ebrowse-ms "printStatistics" () 1 () "  void printStatistics()" 14963 0  () "  void printStatistics()" 14963]
[ebrowse-ms "push" () 1 () "  void push()" 14425 0  () () 0]
[ebrowse-ms "pushScope" () 1 () "  void pushScope()" 14509 0  () () 0]
[ebrowse-ms "query" () 1 () "  QueryResult query(const" 13514 0  () () 0]
[ebrowse-ms "ratExpr" () 1 () "  Expr ratExpr(const" 8887 0  () () 0]
[ebrowse-ms "ratExpr" () 1 () "  Expr ratExpr(const" 8817 0  () () 0]
[ebrowse-ms "ratExpr" () 1 () "  Expr ratExpr(int" 8785 0  () () 0]
[ebrowse-ms "readExpr" () 1 () "  Expr readExpr(const" 10110 0  () () 0]
[ebrowse-ms "realType" () 1 () "  Type realType()" 4629 0  () () 0]
[ebrowse-ms "recSelectExpr" () 1 () "  Expr recSelectExpr(const" 9949 0  () () 0]
[ebrowse-ms "recUpdateExpr" () 1 () "  Expr recUpdateExpr(const" 10017 0  () () 0]
[ebrowse-ms "recordExpr" () 1 () "  Expr recordExpr(const" 9682 0  () () 0]
[ebrowse-ms "recordExpr" () 1 () "  Expr recordExpr(const" 9565 0  () () 0]
[ebrowse-ms "recordExpr" () 1 () "  Expr recordExpr(const" 9851 0  () () 0]
[ebrowse-ms "recordType" () 1 () "  Type recordType(const" 5143 0  () () 0]
[ebrowse-ms "recordType" () 1 () "  Type recordType(const" 5026 0  () () 0]
[ebrowse-ms "recordType" () 1 () "  Type recordType(const" 5312 0  () () 0]
[ebrowse-ms "registerAtom" () 1 () "  void registerAtom(const" 13380 0  () () 0]
[ebrowse-ms "reprocessFlags" () 1 () "  void reprocessFlags()" 4567 0  () () 0]
[ebrowse-ms "reset" () 1 () "  void reset()" 14611 0  () () 0]
[ebrowse-ms "restart" () 1 () "  QueryResult restart(const" 13624 0  () () 0]
[ebrowse-ms "returnFromCheck" () 1 () "  void returnFromCheck()" 13659 0  () () 0]
[ebrowse-ms "scopeLevel" () 1 () "  int scopeLevel()" 14489 0  () () 0]
[ebrowse-ms "setResourceLimit" () 1 () "  void setResourceLimit(unsigned" 13272 0  () () 0]
[ebrowse-ms "setTimeLimit" () 1 () "  void setTimeLimit(unsigned" 13309 0  () () 0]
[ebrowse-ms "setTriggers" () 1 () "  void setTriggers(const" 12920 0  () () 0]
[ebrowse-ms "simplify" () 1 () "  Expr simplify(const" 13440 0  () () 0]
[ebrowse-ms "simplifyThm" () 0 () "  Theorem simplifyThm(const" 13478 0  () () 0]
[ebrowse-ms "simulateExpr" () 1 () "  Expr simulateExpr(const" 13158 0  () () 0]
[ebrowse-ms "stackLevel" () 1 () "  int stackLevel()" 14410 0  () () 0]
[ebrowse-ms "stringExpr" () 1 () "  Expr stringExpr(const" 6946 0  () () 0]
[ebrowse-ms "subrangeType" () 1 () "  Type subrangeType(const" 4674 0  () () 0]
[ebrowse-ms "subtypeType" () 1 () "  Type subtypeType(const" 4724 0  () () 0]
[ebrowse-ms "transClosure" () 1 () "  Op transClosure(const" 13123 0  () () 0]
[ebrowse-ms "trueExpr" () 1 () "  Expr trueExpr()" 7730 0  () () 0]
[ebrowse-ms "tupleExpr" () 1 () "  Expr tupleExpr(const" 12213 0  () () 0]
[ebrowse-ms "tupleSelectExpr" () 1 () "  Expr tupleSelectExpr(const" 12269 0  () () 0]
[ebrowse-ms "tupleType" () 1 () "  Type tupleType(const" 4912 0  () () 0]
[ebrowse-ms "tupleType" () 1 () "  Type tupleType(const" 4837 0  () () 0]
[ebrowse-ms "tupleType" () 1 () "  Type tupleType(const" 4781 0  () () 0]
[ebrowse-ms "tupleUpdateExpr" () 1 () "  Expr tupleUpdateExpr(const" 12323 0  () () 0]
[ebrowse-ms "uminusExpr" () 1 () "  Expr uminusExpr(const" 8938 0  () () 0]
[ebrowse-ms "value" () 1 () "  FormulaValue value(const" 14063 0  () () 0]
[ebrowse-ms "varExpr" () 1 () "  Expr varExpr(const" 6662 0  () () 0]
[ebrowse-ms "varExpr" () 1 () "  Expr varExpr(const" 6603 0  () () 0]
[ebrowse-ms "writeExpr" () 1 () "  Expr writeExpr(const" 10166 0  () () 0]
[ebrowse-ms "~VCL" () 0 () "  ~VCL()" 4445 0  () () 0]
)
()
()
()
()
()()
])()
([ebrowse-ms "ValidityChecker" () 0 () "  ValidityChecker() {" 3072 0  () "  ValidityChecker() {" 3072]
[ebrowse-ms "addPairToArithOrder" () 9 () "  virtual bool addPairToArithOrder(const" 17471 0  () () 0]
[ebrowse-ms "andExpr" () 9 () "  virtual Expr andExpr(const" 14209 0  () () 0]
[ebrowse-ms "andExpr" () 9 () "  virtual Expr andExpr(const" 14108 0  () () 0]
[ebrowse-ms "arrayType" () 9 () "  virtual Type arrayType(const" 8225 0  () () 0]
[ebrowse-ms "assertFormula" () 9 () "  virtual void assertFormula(const" 29613 0  () () 0]
[ebrowse-ms "bitvecType" () 9 () "  virtual Type bitvecType(int" 8342 0  () () 0]
[ebrowse-ms "boolType" () 9 () "  virtual Type boolType()" 4547 0  () () 0]
[ebrowse-ms "boundVarExpr" () 9 () "  virtual Expr boundVarExpr(const" 26895 0  () () 0]
[ebrowse-ms "checkContinue" () 9 () "  virtual QueryResult checkContinue()" 31110 0  () () 0]
[ebrowse-ms "checkUnsat" () 9 () "  virtual QueryResult checkUnsat(const" 30909 0  () () 0]
[ebrowse-ms "computeBVConst" () 9 () "  virtual Rational computeBVConst(const" 25415 0  () () 0]
[ebrowse-ms "createOp" () 9 () "  virtual Op createOp(const" 16093 0  () () 0]
[ebrowse-ms "createOp" () 9 () "  virtual Op createOp(const" 15961 0  () () 0]
[ebrowse-ms "createType" () 9 () "  virtual Type createType(const" 8822 0  () () 0]
[ebrowse-ms "createType" () 9 () "  virtual Type createType(const" 8692 0  () () 0]
[ebrowse-ms "dataType" () 9 () "  virtual void dataType(const" 7779 0  () () 0]
[ebrowse-ms "dataType" () 9 () "  virtual Type dataType(const" 7297 0  () () 0]
[ebrowse-ms "datatypeConsExpr" () 9 () "  virtual Expr datatypeConsExpr(const" 26224 0  () () 0]
[ebrowse-ms "datatypeSelExpr" () 9 () "  virtual Expr datatypeSelExpr(const" 26359 0  () () 0]
[ebrowse-ms "datatypeTestExpr" () 9 () "  virtual Expr datatypeTestExpr(const" 26476 0  () () 0]
[ebrowse-ms "distinctExpr" () 9 () "  virtual Expr distinctExpr(const" 15367 0  () () 0]
[ebrowse-ms "divideExpr" () 9 () "  virtual Expr divideExpr(const" 18977 0  () () 0]
[ebrowse-ms "eqExpr" () 9 () "  virtual Expr eqExpr(const" 14816 0  () () 0]
[ebrowse-ms "existsExpr" () 9 () "  virtual Expr existsExpr(const" 27807 0  () () 0]
[ebrowse-ms "falseExpr" () 9 () "  virtual Expr falseExpr()" 13968 0  () () 0]
[ebrowse-ms "forallExpr" () 9 () "  virtual Expr forallExpr(const" 27156 0  () () 0]
[ebrowse-ms "forallExpr" () 9 () "  virtual Expr forallExpr(const" 27035 0  () () 0]
[ebrowse-ms "funExpr" () 9 () "  virtual Expr funExpr(const" 16524 0  () () 0]
[ebrowse-ms "funExpr" () 9 () "  virtual Expr funExpr(const" 16379 0  () () 0]
[ebrowse-ms "funExpr" () 9 () "  virtual Expr funExpr(const" 16699 0  () () 0]
[ebrowse-ms "funType" () 9 () "  virtual Type funType(const" 8554 0  () () 0]
[ebrowse-ms "geExpr" () 9 () "  virtual Expr geExpr(const" 19362 0  () () 0]
[ebrowse-ms "getAssumptions" () 9 () "  virtual void getAssumptions(std" 32340 0  () () 0]
[ebrowse-ms "getAssumptionsTCC" () 9 () "  virtual void getAssumptionsTCC(std" 35382 0  () () 0]
[ebrowse-ms "getAssumptionsUsed" () 9 () "  virtual void getAssumptionsUsed(std" 32677 0  () () 0]
[ebrowse-ms "getBaseType" () 9 () "  virtual Type getBaseType(const" 10397 0  () () 0]
[ebrowse-ms "getClosure" () 9 () "  virtual Expr getClosure()" 35811 0  () () 0]
[ebrowse-ms "getConcreteModel" () 9 () "  virtual void getConcreteModel(ExprMap" 33542 0  () () 0]
[ebrowse-ms "getCounterExample" () 9 () "  virtual void getCounterExample(std" 33271 0  () () 0]
[ebrowse-ms "getCurrentContext" () 9 () "  virtual Context* getCurrentContext()" 38085 0  () () 0]
[ebrowse-ms "getEM" () 9 () "  virtual ExprManager* getEM()" 9367 0  () () 0]
[ebrowse-ms "getFlags" () 13 () "  virtual CLFlags& getFlags()" 3533 0  () () 0]
[ebrowse-ms "getImpliedLiteral" () 9 () "  virtual Expr getImpliedLiteral()" 30156 0  () () 0]
[ebrowse-ms "getInternalAssumptions" () 9 () "  virtual void getInternalAssumptions(std" 32150 0  () () 0]
[ebrowse-ms "getProof" () 9 () "  virtual Proof getProof()" 35118 0  () () 0]
[ebrowse-ms "getProofClosure" () 9 () "  virtual Proof getProofClosure()" 35961 0  () () 0]
[ebrowse-ms "getProofQuery" () 9 () "  virtual Expr getProofQuery()" 32742 0  () () 0]
[ebrowse-ms "getProofTCC" () 9 () "  virtual Proof getProofTCC()" 35576 0  () () 0]
[ebrowse-ms "getStatistics" () 9 () "  virtual Statistics& getStatistics()" 39300 0  () () 0]
[ebrowse-ms "getTCC" () 9 () "  virtual Expr getTCC()" 35269 0  () () 0]
[ebrowse-ms "getType" () 9 () "  virtual Type getType(const" 10211 0  () () 0]
[ebrowse-ms "getTypePred" () 9 () "  virtual Expr getTypePred(const" 10477 0  () () 0]
[ebrowse-ms "getUserAssumptions" () 9 () "  virtual void getUserAssumptions(std" 31879 0  () () 0]
[ebrowse-ms "gtExpr" () 9 () "  virtual Expr gtExpr(const" 19268 0  () () 0]
[ebrowse-ms "idExpr" () 9 () "  virtual Expr idExpr(const" 10641 0  () () 0]
[ebrowse-ms "iffExpr" () 9 () "  virtual Expr iffExpr(const" 14622 0  () () 0]
[ebrowse-ms "impliesExpr" () 9 () "  virtual Expr impliesExpr(const" 14508 0  () () 0]
[ebrowse-ms "importExpr" () 9 () "  virtual Expr importExpr(const" 13308 0  () () 0]
[ebrowse-ms "importType" () 9 () "  virtual Type importType(const" 13441 0  () () 0]
[ebrowse-ms "incomplete" () 9 () "  virtual bool incomplete(std" 34916 0  () () 0]
[ebrowse-ms "incomplete" () 9 () "  virtual bool incomplete()" 34651 0  () () 0]
[ebrowse-ms "inconsistent" () 9 () "  virtual bool inconsistent()" 34173 0  () () 0]
[ebrowse-ms "inconsistent" () 9 () "  virtual bool inconsistent(std" 34050 0  () () 0]
[ebrowse-ms "intType" () 9 () "  virtual Type intType()" 4657 0  () () 0]
[ebrowse-ms "iteExpr" () 9 () "  virtual Expr iteExpr(const" 15116 0  () () 0]
[ebrowse-ms "lambdaExpr" () 9 () "  virtual Op lambdaExpr(const" 27910 0  () () 0]
[ebrowse-ms "leExpr" () 9 () "  virtual Expr leExpr(const" 19175 0  () () 0]
[ebrowse-ms "listExpr" () 9 () "  virtual Expr listExpr(const" 12351 0  () () 0]
[ebrowse-ms "listExpr" () 9 () "  virtual Expr listExpr(const" 12185 0  () () 0]
[ebrowse-ms "listExpr" () 9 () "  virtual Expr listExpr(const" 12040 0  () () 0]
[ebrowse-ms "listExpr" () 9 () "  virtual Expr listExpr(const" 11501 0  () () 0]
[ebrowse-ms "loadFile" () 9 () "  virtual void loadFile(std" 38823 0  () () 0]
[ebrowse-ms "loadFile" () 9 () "  virtual void loadFile(const" 38589 0  () () 0]
[ebrowse-ms "lookupType" () 9 () "  virtual Type lookupType(const" 8981 0  () () 0]
[ebrowse-ms "lookupVar" () 9 () "  virtual Expr lookupVar(const" 10113 0  () () 0]
[ebrowse-ms "ltExpr" () 9 () "  virtual Expr ltExpr(const" 19081 0  () () 0]
[ebrowse-ms "minusExpr" () 9 () "  virtual Expr minusExpr(const" 18655 0  () () 0]
[ebrowse-ms "multExpr" () 9 () "  virtual Expr multExpr(const" 18760 0  () () 0]
[ebrowse-ms "newBVAndExpr" () 9 () "  virtual Expr newBVAndExpr(const" 23091 0  () () 0]
[ebrowse-ms "newBVAndExpr" () 9 () "  virtual Expr newBVAndExpr(const" 23026 0  () () 0]
[ebrowse-ms "newBVCompExpr" () 9 () "  virtual Expr newBVCompExpr(const" 23678 0  () () 0]
[ebrowse-ms "newBVConstExpr" () 9 () "  virtual Expr newBVConstExpr(const" 22457 0  () () 0]
[ebrowse-ms "newBVConstExpr" () 9 () "  virtual Expr newBVConstExpr(const" 22613 0  () () 0]
[ebrowse-ms "newBVExtractExpr" () 9 () "  virtual Expr newBVExtractExpr(const" 22838 0  () () 0]
[ebrowse-ms "newBVLEExpr" () 9 () "  virtual Expr newBVLEExpr(const" 23844 0  () () 0]
[ebrowse-ms "newBVLTExpr" () 9 () "  virtual Expr newBVLTExpr(const" 23780 0  () () 0]
[ebrowse-ms "newBVMultExpr" () 9 () "  virtual Expr newBVMultExpr(int" 24562 0  () () 0]
[ebrowse-ms "newBVNandExpr" () 9 () "  virtual Expr newBVNandExpr(const" 23547 0  () () 0]
[ebrowse-ms "newBVNegExpr" () 9 () "  virtual Expr newBVNegExpr(const" 22976 0  () () 0]
[ebrowse-ms "newBVNorExpr" () 9 () "  virtual Expr newBVNorExpr(const" 23612 0  () () 0]
[ebrowse-ms "newBVOrExpr" () 9 () "  virtual Expr newBVOrExpr(const" 23219 0  () () 0]
[ebrowse-ms "newBVOrExpr" () 9 () "  virtual Expr newBVOrExpr(const" 23155 0  () () 0]
[ebrowse-ms "newBVPlusExpr" () 9 () "  virtual Expr newBVPlusExpr(int" 24483 0  () () 0]
[ebrowse-ms "newBVPlusExpr" () 9 () "  virtual Expr newBVPlusExpr(int" 24408 0  () () 0]
[ebrowse-ms "newBVSDivExpr" () 9 () "  virtual Expr newBVSDivExpr(const" 24805 0  () () 0]
[ebrowse-ms "newBVSLEExpr" () 9 () "  virtual Expr newBVSLEExpr(const" 24010 0  () () 0]
[ebrowse-ms "newBVSLTExpr" () 9 () "  virtual Expr newBVSLTExpr(const" 23945 0  () () 0]
[ebrowse-ms "newBVSModExpr" () 9 () "  virtual Expr newBVSModExpr(const" 24937 0  () () 0]
[ebrowse-ms "newBVSRemExpr" () 9 () "  virtual Expr newBVSRemExpr(const" 24871 0  () () 0]
[ebrowse-ms "newBVSubExpr" () 9 () "  virtual Expr newBVSubExpr(const" 24292 0  () () 0]
[ebrowse-ms "newBVUDivExpr" () 9 () "  virtual Expr newBVUDivExpr(const" 24673 0  () () 0]
[ebrowse-ms "newBVURemExpr" () 9 () "  virtual Expr newBVURemExpr(const" 24739 0  () () 0]
[ebrowse-ms "newBVUminusExpr" () 9 () "  virtual Expr newBVUminusExpr(const" 24243 0  () () 0]
[ebrowse-ms "newBVXnorExpr" () 9 () "  virtual Expr newBVXnorExpr(const" 23481 0  () () 0]
[ebrowse-ms "newBVXnorExpr" () 9 () "  virtual Expr newBVXnorExpr(const" 23415 0  () () 0]
[ebrowse-ms "newBVXorExpr" () 9 () "  virtual Expr newBVXorExpr(const" 23349 0  () () 0]
[ebrowse-ms "newBVXorExpr" () 9 () "  virtual Expr newBVXorExpr(const" 23284 0  () () 0]
[ebrowse-ms "newConcatExpr" () 9 () "  virtual Expr newConcatExpr(const" 22770 0  () () 0]
[ebrowse-ms "newConcatExpr" () 9 () "  virtual Expr newConcatExpr(const" 22704 0  () () 0]
[ebrowse-ms "newFixedConstWidthLeftShiftExpr" () 9 () "rtual Expr newFixedConstWidthLeftShiftExpr(const" 25195 0  () () 0]
[ebrowse-ms "newFixedLeftShiftExpr" () 9 () "  virtual Expr newFixedLeftShiftExpr(const" 25067 0  () () 0]
[ebrowse-ms "newFixedRightShiftExpr" () 9 () "  virtual Expr newFixedRightShiftExpr(const" 25323 0  () () 0]
[ebrowse-ms "newSXExpr" () 9 () "  virtual Expr newSXExpr(const" 24116 0  () () 0]
[ebrowse-ms "notExpr" () 9 () "  virtual Expr notExpr(const" 14025 0  () () 0]
[ebrowse-ms "orExpr" () 9 () "  virtual Expr orExpr(const" 14407 0  () () 0]
[ebrowse-ms "orExpr" () 9 () "  virtual Expr orExpr(const" 14307 0  () () 0]
[ebrowse-ms "parseExpr" () 9 () "  virtual Expr parseExpr(const" 12697 0  () () 0]
[ebrowse-ms "parseType" () 9 () "  virtual Type parseType(const" 12804 0  () () 0]
[ebrowse-ms "plusExpr" () 9 () "  virtual Expr plusExpr(const" 18550 0  () () 0]
[ebrowse-ms "plusExpr" () 9 () "  virtual Expr plusExpr(const" 18456 0  () () 0]
[ebrowse-ms "pop" () 9 () "  virtual void pop()" 36979 0  () () 0]
[ebrowse-ms "popScope" () 9 () "  virtual void popScope()" 37707 0  () () 0]
[ebrowse-ms "popto" () 9 () "  virtual void popto(int" 37194 0  () () 0]
[ebrowse-ms "poptoScope" () 9 () "  virtual void poptoScope(int" 37998 0  () () 0]
[ebrowse-ms "powExpr" () 9 () "  virtual Expr powExpr(const" 18885 0  () () 0]
[ebrowse-ms "printExpr" () 9 () "  virtual void printExpr(const" 12576 0  () () 0]
[ebrowse-ms "printExpr" () 9 () "  virtual void printExpr(const" 12494 0  () () 0]
[ebrowse-ms "printStatistics" () 9 () "  virtual void printStatistics()" 39382 0  () () 0]
[ebrowse-ms "push" () 9 () "  virtual void push()" 36882 0  () () 0]
[ebrowse-ms "pushScope" () 9 () "  virtual void pushScope()" 37508 0  () () 0]
[ebrowse-ms "query" () 9 () "  virtual QueryResult query(const" 30759 0  () () 0]
[ebrowse-ms "ratExpr" () 9 () "  virtual Expr ratExpr(const" 18277 0  () () 0]
[ebrowse-ms "ratExpr" () 9 () "  virtual Expr ratExpr(const" 17938 0  () () 0]
[ebrowse-ms "ratExpr" () 9 () "  virtual Expr ratExpr(int" 17687 0  () () 0]
[ebrowse-ms "readExpr" () 9 () "  virtual Expr readExpr(const" 21738 0  () () 0]
[ebrowse-ms "realType" () 9 () "  virtual Type realType()" 4604 0  () () 0]
[ebrowse-ms "recSelectExpr" () 9 () "  virtual Expr recSelectExpr(const" 20898 0  () () 0]
[ebrowse-ms "recUpdateExpr" () 9 () "  virtual Expr recUpdateExpr(const" 21196 0  () () 0]
[ebrowse-ms "recordExpr" () 9 () "  virtual Expr recordExpr(const" 20283 0  () () 0]
[ebrowse-ms "recordExpr" () 9 () "  virtual Expr recordExpr(const" 20047 0  () () 0]
[ebrowse-ms "recordExpr" () 9 () "  virtual Expr recordExpr(const" 20655 0  () () 0]
[ebrowse-ms "recordType" () 9 () "  virtual Type recordType(const" 6198 0  () () 0]
[ebrowse-ms "recordType" () 9 () "  virtual Type recordType(const" 6002 0  () () 0]
[ebrowse-ms "recordType" () 9 () "  virtual Type recordType(const" 6491 0  () () 0]
[ebrowse-ms "registerAtom" () 9 () "  virtual void registerAtom(const" 29947 0  () () 0]
[ebrowse-ms "reprocessFlags" () 9 () "  virtual void reprocessFlags()" 3614 0  () () 0]
[ebrowse-ms "reset" () 9 () "  virtual void reset()" 38194 0  () () 0]
[ebrowse-ms "restart" () 9 () "  virtual QueryResult restart(const" 31346 0  () () 0]
[ebrowse-ms "returnFromCheck" () 9 () "  virtual void returnFromCheck()" 31539 0  () () 0]
[ebrowse-ms "scopeLevel" () 9 () "  virtual int scopeLevel()" 37312 0  () () 0]
[ebrowse-ms "setResourceLimit" () 9 () "  virtual void setResourceLimit(unsigned" 29143 0  () () 0]
[ebrowse-ms "setTimeLimit" () 9 () "  virtual void setTimeLimit(unsigned" 29430 0  () () 0]
[ebrowse-ms "setTriggers" () 9 () "  virtual void setTriggers(const" 27696 0  () () 0]
[ebrowse-ms "simplify" () 9 () "  virtual Expr simplify(const" 30245 0  () () 0]
[ebrowse-ms "simulateExpr" () 9 () "  virtual Expr simulateExpr(const" 28407 0  () () 0]
[ebrowse-ms "stackLevel" () 9 () "  virtual int stackLevel()" 36788 0  () () 0]
[ebrowse-ms "stringExpr" () 9 () "  virtual Expr stringExpr(const" 10565 0  () () 0]
[ebrowse-ms "subrangeType" () 9 () "  virtual Type subrangeType(const" 4851 0  () () 0]
[ebrowse-ms "subtypeType" () 9 () "  virtual Type subtypeType(const" 5415 0  () () 0]
[ebrowse-ms "transClosure" () 9 () "  virtual Op transClosure(const" 28038 0  () () 0]
[ebrowse-ms "trueExpr" () 9 () "  virtual Expr trueExpr()" 13911 0  () () 0]
[ebrowse-ms "tupleExpr" () 9 () "  virtual Expr tupleExpr(const" 25805 0  () () 0]
[ebrowse-ms "tupleSelectExpr" () 9 () "  virtual Expr tupleSelectExpr(const" 25954 0  () () 0]
[ebrowse-ms "tupleType" () 9 () "  virtual Type tupleType(const" 5753 0  () () 0]
[ebrowse-ms "tupleType" () 9 () "  virtual Type tupleType(const" 5615 0  () () 0]
[ebrowse-ms "tupleType" () 9 () "  virtual Type tupleType(const" 5524 0  () () 0]
[ebrowse-ms "tupleUpdateExpr" () 9 () "  virtual Expr tupleUpdateExpr(const" 26086 0  () () 0]
[ebrowse-ms "uminusExpr" () 9 () "  virtual Expr uminusExpr(const" 18365 0  () () 0]
[ebrowse-ms "value" () 9 () "  virtual FormulaValue value(const" 33804 0  () () 0]
[ebrowse-ms "varExpr" () 9 () "  virtual Expr varExpr(const" 9759 0  () () 0]
[ebrowse-ms "varExpr" () 9 () "  virtual Expr varExpr(const" 9628 0  () () 0]
[ebrowse-ms "writeExpr" () 9 () "  virtual Expr writeExpr(const" 21872 0  () () 0]
[ebrowse-ms "~ValidityChecker" () 1 () "  virtual ~ValidityChecker()" 3121 0  () "  virtual ~ValidityChecker()" 3121]
)
()
([ebrowse-ms "create" () 0 () "  static ValidityChecker* create()" 4225 0  () () 0]
[ebrowse-ms "create" () 0 () "  static ValidityChecker* create(const" 4102 0  () () 0]
[ebrowse-ms "createFlags" () 0 () "  static CLFlags createFlags()" 3956 0  () () 0]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "ValidityChecker" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/vcl/vcl.cpp" ]
()()
([ebrowse-ms "create" () 0 () () 0 0  () "ValidityChecker* ValidityChecker::create()" 13017]
[ebrowse-ms "create" () 0 () () 0 0  () "ValidityChecker* ValidityChecker::create(const" 1534]
[ebrowse-ms "createFlags" () 0 () () 0 0  () "CLFlags ValidityChecker::createFlags()" 1620]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ClauseOwner" "CVC3::Clause" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/clause.h" "  class ClauseOwner {" 8443"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/clause.h" ]
()([ebrowse-ms "d_clause" () 0 () "    Clause d_clause;" 8464 2  () () 0]
)
([ebrowse-ms "Clause" () 4 () "    operator const Clause& ()" 9747 0  () "    operator const Clause& ()" 9747]
[ebrowse-ms "Clause" () 0 () "    operator Clause& ()" 9642 0  () "    operator Clause& ()" 9642]
[ebrowse-ms "ClauseOwner" () 0 () "		int scope):" 8703 0  () "		int scope):" 8703]
[ebrowse-ms "ClauseOwner" () 0 () "    ClauseOwner(const ClauseOwner& c):" 8914 0  () "    ClauseOwner(const ClauseOwner& c):" 8914]
[ebrowse-ms "ClauseOwner" () 0 () "    ClauseOwner() {" 8518 2  () "    ClauseOwner() {" 8518]
[ebrowse-ms "operator =" () 0 () "    ClauseOwner& operator=(const" 9069 0  () "    ClauseOwner& operator=(const" 9069]
[ebrowse-ms "~ClauseOwner" () 0 () "    ~ClauseOwner()" 9421 0  () "    ~ClauseOwner()" 9421]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "reduceDB_lt" () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "struct reduceDB_lt {" 58102"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" ]
()()
([ebrowse-ms "operator ()" () 0 () "  bool operator () (Clause" 58129 0  () "  bool operator () (Clause" 58129]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Graph" "TheoryArithOld::DifferenceLogicGraph" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CDFlags" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/context/cdflags.cpp" ]
()()
([ebrowse-ms "update" () 0 () () 0 0  () "void CDFlags::update(unsigned" 715]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "EqLV" "CVC3::VariableManager" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "    class EqLV {" 13002"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "      bool operator()(const" 13042 0  () "      bool operator()(const" 13042]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "vector" "MiniSat::std" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "vector" () 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Scope" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/context/context.cpp" ]
()()
([ebrowse-ms "check" () 0 () () 0 0  () "void Scope::check(void" 1424]
[ebrowse-ms "finalize" () 0 () () 0 0  () "void Scope::finalize(void" 931]
[ebrowse-ms "getMemory" () 0 () () 0 0  () "unsigned long Scope::getMemory(int" 2044]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Scope" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" "class Scope {" 1592"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" ]
()([ebrowse-ms "d_cmm" () 0 () "  ContextMemoryManager* d_cmm;" 1803 2  () () 0]
[ebrowse-ms "d_context" () 0 () "  Context* d_context;" 1735 2  () () 0]
[ebrowse-ms "d_level" () 0 () "  int d_level;" 1897 2  () () 0]
[ebrowse-ms "d_prevScope" () 0 () "  Scope* d_prevScope;" 1863 2  () () 0]
[ebrowse-ms "d_restoreChain" () 0 () "  ContextObjChain* d_restoreChain;" 2066 2  () () 0]
)
([ebrowse-ms "Scope" () 0 () "    :" 2191 0  () "    :" 2191]
[ebrowse-ms "addToChain" () 0 () "  void addToChain(ContextObjChain" 2141 2  () () 0]
[ebrowse-ms "check" () 0 () "  void check(void" 3105 0  () () 0]
[ebrowse-ms "finalize" () 0 () "  void finalize(void" 3055 0  () () 0]
[ebrowse-ms "getCMM" () 4 () "  ContextMemoryManager* getCMM()" 2717 0  () "  ContextMemoryManager* getCMM()" 2717]
[ebrowse-ms "getContext" () 4 () "  Context* getContext()" 2656 0  () "  Context* getContext()" 2656]
[ebrowse-ms "getMemory" () 0 () "  unsigned long getMemory(int" 3164 0  () () 0]
[ebrowse-ms "isCurrent" () 4 () "  bool isCurrent(void" 2597 0  () () 0]
[ebrowse-ms "level" () 4 () "  int level(void" 2548 0  () "  int level(void" 2548]
[ebrowse-ms "prevScope" () 4 () "  Scope* prevScope()" 2501 0  () "  Scope* prevScope()" 2501]
[ebrowse-ms "restore" () 0 () "  void restore(void" 2999 0  () () 0]
[ebrowse-ms "topScope" () 4 () "  Scope* topScope()" 2625 0  () () 0]
[ebrowse-ms "~Scope" () 0 () "  ~Scope()" 2453 0  () "  ~Scope()" 2453]
)
()
([ebrowse-ms "delete" () 0 () "  void operator delete(void" 2943 0  () "  void operator delete(void" 2943]
[ebrowse-ms "delete" () 0 () "  void operator delete(void" 2857 0  () "  void operator delete(void" 2857]
[ebrowse-ms "new" () 0 () "  void* operator new(size_t" 2770 0  () "  void* operator new(size_t" 2770]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "lastToFirst_lt" () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "class lastToFirst_lt {" 40775"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" ]
()([ebrowse-ms "d_trail_pos" () 0 () "  const vector<MiniSat::size_type>& d_trail_pos;" 40915 2  () () 0]
)
([ebrowse-ms "lastToFirst_lt" () 0 () "t(const vector<MiniSat::size_type>& trail_pos) :" 40946 0  () "t(const vector<MiniSat::size_type>& trail_pos) :" 40946]
[ebrowse-ms "operator ()" () 0 () "  bool operator () (Lit" 41038 0  () "  bool operator () (Lit" 41038]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Exception" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/exception.h" "  class Exception {" 802"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/exception.h" ]
([ebrowse-ts [ebrowse-cs "ArithException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_exception.h" "  class ArithException:" 819"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_exception.h" ]
()()
([ebrowse-ms "ArithException" () 0 () "    ArithException(char* msg):" 1020 0  () "    ArithException(char* msg):" 1020]
[ebrowse-ms "ArithException" () 0 () "    ArithException() {" 929 0  () "    ArithException() {" 929]
[ebrowse-ms "toString" () 5 () "    virtual std::string toString()" 1133 0  () "    virtual std::string toString()" 1133]
[ebrowse-ms "~ArithException" () 1 () "    virtual ~ArithException()" 1094 0  () "    virtual ~ArithException()" 1094]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "BitvectorException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_exception.h" "  class BitvectorException:" 844"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_exception.h" ]
()()
([ebrowse-ms "BitvectorException" () 0 () "    BitvectorException(char* msg):" 1057 0  () "    BitvectorException(char* msg):" 1057]
[ebrowse-ms "BitvectorException" () 0 () "    BitvectorException() {" 958 0  () "    BitvectorException() {" 958]
[ebrowse-ms "toString" () 5 () "    virtual std::string toString()" 1174 0  () "    virtual std::string toString()" 1174]
[ebrowse-ms "~BitvectorException" () 1 () "    virtual ~BitvectorException()" 1135 0  () "    virtual ~BitvectorException()" 1135]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CLException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/command_line_exception.h" "class CLException:" 780"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/command_line_exception.h" ]
()()
([ebrowse-ms "CLException" () 0 () "  CLException(char* msg):" 922 0  () "  CLException(char* msg):" 922]
[ebrowse-ms "CLException" () 0 () "  CLException() {" 841 0  () "  CLException() {" 841]
[ebrowse-ms "toString" () 5 () "  virtual std::string toString()" 1052 0  () "  virtual std::string toString()" 1052]
[ebrowse-ms "~CLException" () 1 () "  virtual ~CLException()" 989 0  () "  virtual ~CLException()" 989]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DebugException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "class DebugException:" 15658"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" ]
()()
([ebrowse-ms "DebugException" () 0 () "    DebugException(const std::string& msg):" 2596 0  () "    DebugException(const std::string& msg):" 2596]
[ebrowse-ms "toString" () 5 () "    virtual std::string toString()" 2685 0  () "    virtual std::string toString()" 2685]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "EvalException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/eval_exception.h" "class EvalException:" 849"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/eval_exception.h" ]
()()
([ebrowse-ms "EvalException" () 0 () "  EvalException(const char* msg):" 998 0  () "  EvalException(const char* msg):" 998]
[ebrowse-ms "EvalException" () 0 () "  EvalException(const std::string& msg):" 938 0  () "  EvalException(const std::string& msg):" 938]
[ebrowse-ms "EvalException" () 0 () "  EvalException() {" 912 0  () "  EvalException() {" 912]
[ebrowse-ms "toString" () 5 () "  virtual std::string toString()" 1135 0  () "  virtual std::string toString()" 1135]
[ebrowse-ms "~EvalException" () 1 () "  virtual ~EvalException()" 1072 0  () "  virtual ~EvalException()" 1072]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ParserException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/parser_exception.h" "  class ParserException:" 768"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/parser_exception.h" ]
()()
([ebrowse-ms "ParserException" () 0 () "    ParserException(const char* msg):" 933 0  () "    ParserException(const char* msg):" 933]
[ebrowse-ms "ParserException" () 0 () "    ParserException(const std::string& msg):" 869 0  () "    ParserException(const std::string& msg):" 869]
[ebrowse-ms "ParserException" () 0 () "    ParserException() {" 839 0  () "    ParserException() {" 839]
[ebrowse-ms "toString" () 5 () "    virtual std::string toString()" 1052 0  () "    virtual std::string toString()" 1052]
[ebrowse-ms "~ParserException" () 1 () "    virtual ~ParserException()" 1013 0  () "    virtual ~ParserException()" 1013]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ResetException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/eval_exception.h" "class ResetException:" 1233"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/eval_exception.h" ]
()()
([ebrowse-ms "ResetException" () 0 () "  ResetException():" 1297 0  () "  ResetException():" 1297]
[ebrowse-ms "~ResetException" () 1 () "  virtual ~ResetException()" 1375 0  () "  virtual ~ResetException()" 1375]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SmtlibException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smtlib_exception.h" "  class SmtlibException:" 788"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smtlib_exception.h" ]
()()
([ebrowse-ms "SmtlibException" () 0 () "    SmtlibException(const char* msg):" 953 0  () "    SmtlibException(const char* msg):" 953]
[ebrowse-ms "SmtlibException" () 0 () "    SmtlibException(const std::string& msg):" 889 0  () "    SmtlibException(const std::string& msg):" 889]
[ebrowse-ms "SmtlibException" () 0 () "    SmtlibException() {" 859 0  () "    SmtlibException() {" 859]
[ebrowse-ms "toString" () 5 () "    virtual std::string toString()" 1072 0  () "    virtual std::string toString()" 1072]
[ebrowse-ms "~SmtlibException" () 1 () "    virtual ~SmtlibException()" 1033 0  () "    virtual ~SmtlibException()" 1033]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "SoundException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sound_exception.h" "  class SoundException:" 804"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sound_exception.h" ]
()()
([ebrowse-ms "SoundException" () 0 () "    SoundException(char* msg):" 965 0  () "    SoundException(char* msg):" 965]
[ebrowse-ms "SoundException" () 0 () "    SoundException() {" 874 0  () "    SoundException() {" 874]
[ebrowse-ms "toString" () 5 () "    virtual std::string toString()" 1078 0  () "    virtual std::string toString()" 1078]
[ebrowse-ms "~SoundException" () 1 () "    virtual ~SoundException()" 1039 0  () "    virtual ~SoundException()" 1039]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TypecheckException" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/typecheck_exception.h" "  class TypecheckException:" 791"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/typecheck_exception.h" ]
()()
([ebrowse-ms "TypecheckException" () 0 () "    TypecheckException(const char* msg):" 965 0  () "    TypecheckException(const char* msg):" 965]
[ebrowse-ms "TypecheckException" () 0 () "    TypecheckException(const std::string& msg):" 898 0  () "    TypecheckException(const std::string& msg):" 898]
[ebrowse-ms "TypecheckException" () 0 () "    TypecheckException() {" 865 0  () "    TypecheckException() {" 865]
[ebrowse-ms "toString" () 5 () "    virtual std::string toString()" 1087 0  () "    virtual std::string toString()" 1087]
[ebrowse-ms "~TypecheckException" () 1 () "    virtual ~TypecheckException()" 1048 0  () "    virtual ~TypecheckException()" 1048]
)
()
()
()
()
()()
])([ebrowse-ms "d_msg" () 0 () "    std::string d_msg;" 838 1  () () 0]
)
([ebrowse-ms "Exception" () 0 () "    Exception(const char* msg):" 990 0  () "    Exception(const char* msg):" 990]
[ebrowse-ms "Exception" () 0 () "    Exception(const std::string& msg):" 936 0  () "    Exception(const std::string& msg):" 936]
[ebrowse-ms "Exception" () 0 () "    Exception():" 884 0  () "    Exception():" 884]
[ebrowse-ms "setMessage" () 0 () "    void setMessage(const" 1160 0  () "    void setMessage(const" 1160]
[ebrowse-ms "toString" () 5 () "    virtual std::string toString()" 1401 0  () "    virtual std::string toString()" 1401]
[ebrowse-ms "~Exception" () 1 () "    virtual ~Exception()" 1060 0  () "    virtual ~Exception()" 1060]
)
()
()
([ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 1529 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
)
()
()()
][ebrowse-ts [ebrowse-cs "RefCDO" "CVC3::SmartCDO<>" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smartcdo.h" "  class RefCDO {" 1614"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smartcdo.h" ]
()([ebrowse-ms "d_cdo" () 0 () "    CDO<U> d_cdo;" 1684 2  () () 0]
[ebrowse-ms "d_delay" () 0 () "    bool d_delay;" 1702 2  () () 0]
[ebrowse-ms "d_notifyObj" () 0 () "    RefNotifyObj* d_notifyObj;" 2124 2  () () 0]
[ebrowse-ms "d_refCount" () 0 () "    unsigned d_refCount;" 1666 2  () () 0]
)
([ebrowse-ms "RefCDO" () 0 () "      :" 2308 2  () "      :" 2308]
[ebrowse-ms "RefCDO" () 0 () "    RefCDO(Context* context):" 2176 2  () "    RefCDO(Context* context):" 2176]
[ebrowse-ms "kill" () 0 () "    void kill()" 2597 2  () "    void kill()" 2597]
[ebrowse-ms "~RefCDO" () 0 () "    ~RefCDO()" 2484 2  () "    ~RefCDO()" 2484]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "EqEV" "CVC3::ExprManager" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" "    class EqEV {" 3810"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" ]
()()
([ebrowse-ms "operator ()" () 6 () "      bool operator()(const" 3850 0  () "inline bool ExprManager::EqEV::operator()(const" 19115]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Parser" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/parser.h" "  class Parser {" 1190"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" ]
()([ebrowse-ms "d_data" () 0 () "    ParserData* d_data;" 1225 2  () () 0]
)
([ebrowse-ms "Parser" () 0 () "	   bool interactive = false);" 1585 0  () "    :" 3490]
[ebrowse-ms "Parser" () 0 () "	   const std::string& fileName = \"\");" 1404 0  () "    :" 2764]
[ebrowse-ms "deleteParser" () 0 () "    void deleteParser()" 1346 2  () "  void Parser::deleteParser()" 4602]
[ebrowse-ms "done" () 4 () "    bool done()" 1817 0  () "  bool Parser::done()" 6284]
[ebrowse-ms "initParser" () 0 () "    void initParser()" 1321 2  () "  void Parser::initParser()" 4027]
[ebrowse-ms "next" () 0 () "    Expr next()" 1740 0  () "  Expr Parser::next()" 4966]
[ebrowse-ms "printLocation" () 4 () "    void printLocation(std" 1984 0  () "  void Parser::printLocation(ostream" 6358]
[ebrowse-ms "reset" () 0 () "    void reset()" 2085 0  () "  void Parser::reset()" 6470]
[ebrowse-ms "~Parser" () 0 () "    ~Parser()" 1691 0  () "  Parser::~Parser()" 3836]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DebugTimer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  class CVC_DLL DebugTimer {" 8375"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" ]
()([ebrowse-ms "d_clean_time" () 0 () "    bool d_clean_time;" 8452 2  () () 0]
[ebrowse-ms "d_time" () 0 () "    DebugTime* d_time;" 8409 2  () () 0]
)
([ebrowse-ms "DebugTimer" () 0 () "      :" 8709 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "      :" 8709]
[ebrowse-ms "DebugTimer" () 0 () "    DebugTimer(const DebugTimer& timer);" 9242 0  () "ebugTimer::DebugTimer(const DebugTimer& timer) {" 4302]
[ebrowse-ms "operator +" () 0 () "    DebugTimer operator+(const" 9651 0  () "DebugTimer DebugTimer::operator+(const" 5668]
[ebrowse-ms "operator +=" () 0 () "    DebugTimer& operator+=(const" 9510 0  () "DebugTimer& DebugTimer::operator+=(const" 5401]
[ebrowse-ms "operator -" () 0 () "    DebugTimer operator-(const" 9739 0  () "DebugTimer DebugTimer::operator-(const" 5837]
[ebrowse-ms "operator -=" () 0 () "    DebugTimer& operator-=(const" 9563 0  () "DebugTimer& DebugTimer::operator-=(const" 5514]
[ebrowse-ms "operator =" () 0 () "    DebugTimer& operator=(const" 9357 0  () "DebugTimer& DebugTimer::operator=(const" 4746]
[ebrowse-ms "reset" () 0 () "    void reset()" 9476 0  () "void DebugTimer::reset()" 5336]
[ebrowse-ms "~DebugTimer" () 0 () "    ~DebugTimer()" 9415 0  () "DebugTimer::~DebugTimer()" 3495]
)
()
()
([ebrowse-ms "operator !=" () 0 () "    friend bool operator!=(const" 9927 0  () () 0]
[ebrowse-ms "operator <" () 2 () "    friend bool operator<(const" 9998 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "inline bool operator<(const" 10630]
[ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 10325 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator <=" () 2 () "    friend bool operator<=(const" 10141 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator<=(const" 14830]
[ebrowse-ms "operator ==" () 2 () "    friend bool operator==(const" 9855 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
[ebrowse-ms "operator >" () 2 () "    friend bool operator>(const" 10069 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>(const" 14929]
[ebrowse-ms "operator >=" () 2 () "    friend bool operator>=(const" 10213 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>=(const" 15028]
)
()
()()
][ebrowse-ts [ebrowse-cs "RecordsProofRules" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_proof_rules.h" "  class RecordsProofRules {" 706"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_proof_rules.h" ]
([ebrowse-ts [ebrowse-cs "RecordsTheoremProducer" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_theorem_producer.h" "  class RecordsTheoremProducer:" 787"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_theorem_producer.h" ]
()([ebrowse-ms "d_theoryRecords" () 0 () "      TheoryRecords* d_theoryRecords;" 880 2  () () 0]
)
([ebrowse-ms "RecordsTheoremProducer" () 0 () "mProducer(TheoremManager* tm, TheoryRecords* t):" 956 0  () "mProducer(TheoremManager* tm, TheoryRecords* t):" 956]
[ebrowse-ms "expandEq" () 1 () "      Theorem expandEq(const" 1198 0  () () 0]
[ebrowse-ms "expandNeq" () 1 () "      Theorem expandNeq(const" 1246 0  () () 0]
[ebrowse-ms "expandRecord" () 1 () "      Theorem expandRecord(const" 1298 0  () () 0]
[ebrowse-ms "expandTuple" () 1 () "      Theorem expandTuple(const" 1340 0  () () 0]
[ebrowse-ms "getField" () 0 () "      const std::string& getField(const" 3646 0  () "      const std::string& getField(const" 3646]
[ebrowse-ms "getField" () 0 () "      const std::string& getField(const" 3212 0  () "      const std::string& getField(const" 3212]
[ebrowse-ms "getFieldIndex" () 0 () "      int getFieldIndex(const" 3442 0  () "      int getFieldIndex(const" 3442]
[ebrowse-ms "getFields" () 0 () "      const std::vector<Expr>& getFields(const" 3054 0  () "      const std::vector<Expr>& getFields(const" 3054]
[ebrowse-ms "getIndex" () 0 () "      int getIndex(const" 4539 0  () "      int getIndex(const" 4539]
[ebrowse-ms "isRecordAccess" () 0 () "      bool isRecordAccess(const" 1739 0  () "      bool isRecordAccess(const" 1739]
[ebrowse-ms "isRecordType" () 0 () "      bool isRecordType(const" 1589 0  () "      bool isRecordType(const" 1589]
[ebrowse-ms "isTupleAccess" () 0 () "      bool isTupleAccess(const" 4683 0  () "      bool isTupleAccess(const" 4683]
[ebrowse-ms "recordExpr" () 0 () "      Expr recordExpr(const" 2048 0  () "      Expr recordExpr(const" 2048]
[ebrowse-ms "recordSelect" () 0 () "      Expr recordSelect(const" 2671 0  () "      Expr recordSelect(const" 2671]
[ebrowse-ms "recordType" () 0 () "      Type recordType(const" 2461 0  () "      Type recordType(const" 2461]
[ebrowse-ms "recordUpdate" () 0 () "      Expr recordUpdate(const" 2839 0  () "      Expr recordUpdate(const" 2839]
[ebrowse-ms "rewriteLitSelect" () 1 () "      Theorem rewriteLitSelect(const" 1062 0  () () 0]
[ebrowse-ms "rewriteLitUpdate" () 1 () "      Theorem rewriteLitUpdate(const" 1159 0  () () 0]
[ebrowse-ms "rewriteUpdateSelect" () 1 () "      Theorem rewriteUpdateSelect(const" 1112 0  () () 0]
[ebrowse-ms "tupleExpr" () 0 () "      Expr tupleExpr(const" 3757 0  () "      Expr tupleExpr(const" 3757]
[ebrowse-ms "tupleSelect" () 0 () "      Expr tupleSelect(const" 4209 0  () "      Expr tupleSelect(const" 4209]
[ebrowse-ms "tupleType" () 0 () "      Type tupleType(const" 4056 0  () "      Type tupleType(const" 4056]
[ebrowse-ms "tupleUpdate" () 0 () "      Expr tupleUpdate(const" 4355 0  () "      Expr tupleUpdate(const" 4355]
)
()
()
()
()
()()
])()
([ebrowse-ms "expandEq" () 9 () "    virtual Theorem expandEq(const" 1285 0  () () 0]
[ebrowse-ms "expandNeq" () 9 () "    virtual Theorem expandNeq(const" 1411 0  () () 0]
[ebrowse-ms "expandRecord" () 9 () "    virtual Theorem expandRecord(const" 1550 0  () () 0]
[ebrowse-ms "expandTuple" () 9 () "    virtual Theorem expandTuple(const" 1666 0  () () 0]
[ebrowse-ms "rewriteLitSelect" () 9 () "    virtual Theorem rewriteLitSelect(const" 879 0  () () 0]
[ebrowse-ms "rewriteLitUpdate" () 9 () "    virtual Theorem rewriteLitUpdate(const" 1174 0  () () 0]
[ebrowse-ms "rewriteUpdateSelect" () 9 () "    virtual Theorem rewriteUpdateSelect(const" 999 0  () () 0]
[ebrowse-ms "~RecordsProofRules" () 1 () "    virtual ~RecordsProofRules()" 769 0  () "    virtual ~RecordsProofRules()" 769]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Ineq" "CVC3::TheoryArith3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith3.h" "  class Ineq {" 1435"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith3.h" ]
()([ebrowse-ms "d_const" () 0 () "    const FreeConst* d_const;" 1564 2  () () 0]
[ebrowse-ms "d_ineq" () 0 () "    Theorem d_ineq;" 1466 2  () () 0]
[ebrowse-ms "d_rhs" () 0 () "    bool d_rhs;" 1502 2  () () 0]
)
([ebrowse-ms "Ineq" () 0 () "eorem& ineq, bool varOnRHS, const FreeConst& c):" 1763 0  () "eorem& ineq, bool varOnRHS, const FreeConst& c):" 1763]
[ebrowse-ms "Ineq" () 0 () "    Ineq() {" 1660 2  () "    Ineq() {" 1660]
[ebrowse-ms "Theorem" () 4 () "    operator Theorem()" 2274 0  () "    operator Theorem()" 2274]
[ebrowse-ms "getConst" () 4 () "    const FreeConst& getConst()" 2010 0  () "    const FreeConst& getConst()" 2010]
[ebrowse-ms "ineq" () 4 () "    const Theorem& ineq()" 1920 0  () "    const Theorem& ineq()" 1920]
[ebrowse-ms "varOnLHS" () 4 () "    bool varOnLHS()" 2197 0  () "    bool varOnLHS()" 2197]
[ebrowse-ms "varOnRHS" () 4 () "    bool varOnRHS()" 2105 0  () "    bool varOnRHS()" 2105]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Ineq" "CVC3::TheoryArithOld" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "  class Ineq {" 1557"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" ]
()([ebrowse-ms "d_const" () 0 () "    const FreeConst* d_const;" 1686 2  () () 0]
[ebrowse-ms "d_ineq" () 0 () "    Theorem d_ineq;" 1588 2  () () 0]
[ebrowse-ms "d_rhs" () 0 () "    bool d_rhs;" 1624 2  () () 0]
)
([ebrowse-ms "Ineq" () 0 () "eorem& ineq, bool varOnRHS, const FreeConst& c):" 1885 0  () "eorem& ineq, bool varOnRHS, const FreeConst& c):" 1885]
[ebrowse-ms "Ineq" () 0 () "    Ineq() {" 1782 2  () "    Ineq() {" 1782]
[ebrowse-ms "Theorem" () 4 () "    operator Theorem()" 2395 0  () "    operator Theorem()" 2395]
[ebrowse-ms "getConst" () 4 () "    const FreeConst& getConst()" 2131 0  () "    const FreeConst& getConst()" 2131]
[ebrowse-ms "ineq" () 4 () "    const Theorem ineq()" 2041 0  () "    const Theorem ineq()" 2041]
[ebrowse-ms "varOnLHS" () 4 () "    bool varOnLHS()" 2318 0  () "    bool varOnLHS()" 2318]
[ebrowse-ms "varOnRHS" () 4 () "    bool varOnRHS()" 2226 0  () "    bool varOnRHS()" 2226]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Ineq" "CVC3::TheoryArithNew" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  class Ineq {" 1677"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" ]
()([ebrowse-ms "d_const" () 0 () "    const FreeConst* d_const;" 1806 2  () () 0]
[ebrowse-ms "d_ineq" () 0 () "    Theorem d_ineq;" 1708 2  () () 0]
[ebrowse-ms "d_rhs" () 0 () "    bool d_rhs;" 1744 2  () () 0]
)
([ebrowse-ms "Ineq" () 0 () "eorem& ineq, bool varOnRHS, const FreeConst& c):" 2005 0  () "eorem& ineq, bool varOnRHS, const FreeConst& c):" 2005]
[ebrowse-ms "Ineq" () 0 () "    Ineq() {" 1902 2  () "    Ineq() {" 1902]
[ebrowse-ms "Theorem" () 4 () "    operator Theorem()" 2516 0  () "    operator Theorem()" 2516]
[ebrowse-ms "getConst" () 4 () "    const FreeConst& getConst()" 2252 0  () "    const FreeConst& getConst()" 2252]
[ebrowse-ms "ineq" () 4 () "    const Theorem& ineq()" 2162 0  () "    const Theorem& ineq()" 2162]
[ebrowse-ms "varOnLHS" () 4 () "    bool varOnLHS()" 2439 0  () "    bool varOnLHS()" 2439]
[ebrowse-ms "varOnRHS" () 4 () "    bool varOnRHS()" 2347 0  () "    bool varOnRHS()" 2347]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DPLLT" "CVC3" 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DPLLT" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt.h" "class DPLLT {" 495"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt.h" ]
([ebrowse-ts [ebrowse-cs "DPLLTBasic" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt_basic.h" "class DPLLTBasic :" 795"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt_basic.h" ]
()([ebrowse-ms "d_assertions" () 0 () "  CD_CNF_Formula* d_assertions;" 936 2  () () 0]
[ebrowse-ms "d_assertionsStack" () 0 () " std::vector<CD_CNF_Formula*> d_assertionsStack;" 1070 2  () () 0]
[ebrowse-ms "d_cm" () 0 () "  CVC3::ContextManager* d_cm;" 840 2  () () 0]
[ebrowse-ms "d_cnf" () 0 () "  CNF_Formula_Impl* d_cnf;" 904 2  () () 0]
[ebrowse-ms "d_cnfStack" () 0 () "  std::vector<CNF_Formula_Impl*> d_cnfStack;" 1020 2  () () 0]
[ebrowse-ms "d_mng" () 0 () "  SatSolver* d_mng;" 877 2  () () 0]
[ebrowse-ms "d_mngStack" () 0 () "  std::vector<SatSolver*> d_mngStack;" 975 2  () () 0]
[ebrowse-ms "d_prevAStackSize" () 0 () "  CVC3::CDO<unsigned> d_prevAStackSize;" 1239 2  () () 0]
[ebrowse-ms "d_prevStackSize" () 0 () "  CVC3::CDO<unsigned> d_prevStackSize;" 1199 2  () () 0]
[ebrowse-ms "d_printStats" () 0 () "  bool d_printStats;" 1091 2  () () 0]
[ebrowse-ms "d_pushLevel" () 0 () "  CVC3::CDO<unsigned> d_pushLevel;" 1127 2  () () 0]
[ebrowse-ms "d_ready" () 0 () "  bool d_ready;" 857 2  () () 0]
[ebrowse-ms "d_readyPrev" () 0 () "  CVC3::CDO<bool> d_readyPrev;" 1158 2  () () 0]
)
([ebrowse-ms "DPLLTBasic" () 0 () "	     bool printStats = false);" 1419 0  () () 0]
[ebrowse-ms "SAT2cvc" () 0 () "  Lit SAT2cvc(SatSolver" 1792 0  () "  Lit SAT2cvc(SatSolver" 1792]
[ebrowse-ms "addAssertion" () 1 () "  void addAssertion(const" 2114 0  () () 0]
[ebrowse-ms "addNewClause" () 0 () "  void addNewClause(const" 1559 0  () () 0]
[ebrowse-ms "addNewClauses" () 0 () "  void addNewClauses(CNF_Formula_Impl" 1609 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  CVC3::QueryResult checkSat(const" 2286 0  () () 0]
[ebrowse-ms "continueCheck" () 1 () "  CVC3::QueryResult continueCheck(const" 2345 0  () () 0]
[ebrowse-ms "createManager" () 0 () "  void createManager()" 1263 2  () () 0]
[ebrowse-ms "cvc2SAT" () 0 () "  SatSolver::Lit cvc2SAT(Lit" 1646 0  () "  SatSolver::Lit cvc2SAT(Lit" 1646]
[ebrowse-ms "generate_CDB" () 0 () "  void generate_CDB (CNF_Formula_Impl" 1302 2  () () 0]
[ebrowse-ms "getCurAssignments" () 1 () "irtual std::vector<SAT::Lit> getCurAssignments()" 2185 0  () () 0]
[ebrowse-ms "getCurClauses" () 1 () "::vector<std::vector<SAT::Lit> > getCurClauses()" 2249 0  () () 0]
[ebrowse-ms "getSatProof" () 1 () "  CVC3::Proof getSatProof(CNF_Manager" 2496 0  () () 0]
[ebrowse-ms "getValue" () 1 () "  Var::Val getValue(Var" 2388 0  () "  Var::Val getValue(Var" 2388]
[ebrowse-ms "handle_result" () 0 () "  void handle_result(SatSolver" 1340 2  () () 0]
[ebrowse-ms "pop" () 1 () "  void pop()" 2087 0  () () 0]
[ebrowse-ms "push" () 1 () "  void push()" 2073 0  () () 0]
[ebrowse-ms "satSolver" () 0 () "  SatSolver* satSolver()" 1994 0  () "  SatSolver* satSolver()" 1994]
[ebrowse-ms "verify_solution" () 0 () "  void verify_solution()" 1386 2  () () 0]
[ebrowse-ms "~DPLLTBasic" () 1 () "  virtual ~DPLLTBasic()" 1531 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DPLLTMiniSat" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt_minisat.h" "class DPLLTMiniSat :" 975"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt_minisat.h" ]
()([ebrowse-ms "d_createProof" () 0 () "  bool d_createProof;" 1330 1  () () 0]
[ebrowse-ms "d_printStats" () 0 () "  bool d_printStats;" 1180 1  () () 0]
[ebrowse-ms "d_proof" () 0 () "  SatProof* d_proof;" 1423 1  () () 0]
[ebrowse-ms "d_solvers" () 0 () "  std::stack<MiniSat::Solver*> d_solvers;" 1748 1  () () 0]
)
([ebrowse-ms "DPLLTMiniSat" () 0 () "l printStats = false, bool createProof = false);" 2253 0  () () 0]
[ebrowse-ms "addAssertion" () 1 () "  virtual void addAssertion(const" 2623 0  () () 0]
[ebrowse-ms "checkSat" () 1 () "  virtual CVC3::QueryResult checkSat(const" 2458 0  () () 0]
[ebrowse-ms "continueCheck" () 1 () "  virtual CVC3::QueryResult continueCheck(const" 2525 0  () () 0]
[ebrowse-ms "getActiveSolver" () 0 () "  MiniSat::Solver* getActiveSolver()" 1939 1  () () 0]
[ebrowse-ms "getCurAssignments" () 1 () "irtual std::vector<SAT::Lit> getCurAssignments()" 2694 0  () () 0]
[ebrowse-ms "getCurClauses" () 1 () "::vector<std::vector<SAT::Lit> > getCurClauses()" 2758 0  () () 0]
[ebrowse-ms "getProof" () 0 () "  SatProof* getProof()" 3002 0  () "  SatProof* getProof()" 3002]
[ebrowse-ms "getSatProof" () 1 () "  CVC3::Proof getSatProof(CNF_Manager" 3128 0  () () 0]
[ebrowse-ms "getValue" () 1 () "  virtual Var::Val getValue(Var" 2791 0  () () 0]
[ebrowse-ms "pop" () 1 () "  virtual void pop()" 2588 0  () () 0]
[ebrowse-ms "push" () 1 () "  virtual void push()" 2566 0  () () 0]
[ebrowse-ms "pushSolver" () 0 () "  void pushSolver()" 2099 1  () () 0]
[ebrowse-ms "search" () 0 () "  CVC3::QueryResult search()" 2216 1  () () 0]
[ebrowse-ms "~DPLLTMiniSat" () 1 () "  virtual ~DPLLTMiniSat()" 2369 0  () () 0]
)
()
()
()
()
()()
])([ebrowse-ms "d_decider" () 0 () "  Decider* d_decider;" 3823 1  () () 0]
[ebrowse-ms "d_theoryAPI" () 0 () "  TheoryAPI* d_theoryAPI;" 3801 1  () () 0]
)
([ebrowse-ms "DPLLT" () 0 () "    :" 4097 0  () "    :" 4097]
[ebrowse-ms "addAssertion" () 9 () "  virtual void addAssertion(const" 5155 0  () () 0]
[ebrowse-ms "checkSat" () 9 () "  virtual CVC3::QueryResult checkSat(const" 5849 0  () () 0]
[ebrowse-ms "continueCheck" () 9 () "  virtual CVC3::QueryResult continueCheck(const" 6532 0  () () 0]
[ebrowse-ms "decider" () 0 () "  Decider* decider()" 4272 0  () "  Decider* decider()" 4272]
[ebrowse-ms "getCurAssignments" () 9 () "irtual std::vector<SAT::Lit> getCurAssignments()" 5231 0  () () 0]
[ebrowse-ms "getCurClauses" () 9 () "::vector<std::vector<SAT::Lit> > getCurClauses()" 5298 0  () () 0]
[ebrowse-ms "getSatProof" () 9 () "  virtual CVC3::Proof getSatProof(CNF_Manager" 6737 0  () () 0]
[ebrowse-ms "getValue" () 9 () "  virtual Var::Val getValue(Var" 6644 0  () () 0]
[ebrowse-ms "pop" () 9 () "  virtual void pop()" 4978 0  () () 0]
[ebrowse-ms "push" () 9 () "  virtual void push()" 4561 0  () () 0]
[ebrowse-ms "setDecider" () 0 () "  void setDecider(Decider" 4321 0  () "  void setDecider(Decider" 4321]
[ebrowse-ms "theoryAPI" () 0 () "  TheoryAPI* theoryAPI()" 4227 0  () "  TheoryAPI* theoryAPI()" 4227]
[ebrowse-ms "~DPLLT" () 1 () "  virtual ~DPLLT()" 4198 0  () "  virtual ~DPLLT()" 4198]
)
()
()
()
([ebrowse-ms "ConsistentResult" () 0 () "  enum ConsistentResult {" 530 0  () "  enum ConsistentResult {" 530]
)
()()
][ebrowse-ts [ebrowse-cs "Expr" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_hash.h" "template<> struct hash<CVC3::Expr>
{" 927"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_hash.h" ]
()()
([ebrowse-ms "operator ()" () 4 () "  size_t operator()(const" 953 0  () "  size_t operator()(const" 953]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Expr" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "class CVC_DLL Expr {" 3981"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr.cpp" ]
()([ebrowse-ms "DynamicFlagsEnum" () 0 () "  } DynamicFlagsEnum;" 5867 2  () () 0]
[ebrowse-ms "StaticFlagsEnum" () 0 () "  } StaticFlagsEnum;" 5286 2  () () 0]
[ebrowse-ms "d_expr" () 0 () "  ExprValue* d_expr;" 6241 2  () () 0]
[ebrowse-ms "s_null" () 0 () () 0 0  () "Expr Expr::s_null;" 746]
)
([ebrowse-ms "Expr" () 2 () "       ExprManager* em = NULL);" 10078 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "                  ExprManager* em) {" 29303]
[ebrowse-ms "Expr" () 2 () "       const Expr& child2, const Expr& child3);" 9969 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "       const Expr& child2, const Expr& child3) {" 28614]
[ebrowse-ms "Expr" () 2 () "       const Expr& child2);" 9880 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "                  const Expr& child2) {" 28001]
[ebrowse-ms "Expr" () 2 () "Op& op, const Expr& child0, const Expr& child1);" 9818 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "p& op, const Expr& child0, const Expr& child1) {" 27482]
[ebrowse-ms "Expr" () 2 () "  Expr(const Op& op, const Expr& child);" 9777 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "ne Expr::Expr(const Op& op, const Expr& child) {" 27043]
[ebrowse-ms "Expr" () 2 () "  Expr(const Expr& e);" 9501 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr::Expr(const Expr& e) :" 26580]
[ebrowse-ms "Expr" () 0 () "  Expr():" 9369 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  Expr():" 9369]
[ebrowse-ms "Expr" () 2 () "  Expr(ExprValue* expr);" 6559 2  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr::Expr(ExprValue* expr) :" 26506]
[ebrowse-ms "addToNotify" () 4 () "  void addToNotify(Theory" 22510 0  () "void Expr::addToNotify(Theory" 13248]
[ebrowse-ms "andExpr" () 6 () "  Expr andExpr(const" 10355 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::andExpr(const" 30166]
[ebrowse-ms "arity" () 6 () "  int arity()" 17156 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline int Expr::arity()" 37154]
[ebrowse-ms "begin" () 6 () "  iterator begin()" 17449 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr::iterator Expr::begin()" 37396]
[ebrowse-ms "clearFlags" () 6 () "  void clearFlags()" 20657 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::clearFlags()" 42520]
[ebrowse-ms "clearRewriteNormal" () 6 () "  void clearRewriteNormal()" 23058 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::clearRewriteNormal()" 47407]
[ebrowse-ms "computeTransClosure" () 6 () "  bool computeTransClosure()" 19631 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::computeTransClosure()" 40815]
[ebrowse-ms "containsBoundVar" () 6 () "  bool containsBoundVar()" 19700 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::containsBoundVar()" 40923]
[ebrowse-ms "containsTermITE" () 4 () "  bool containsTermITE()" 14567 0  () "bool Expr::containsTermITE()" 13495]
[ebrowse-ms "end" () 6 () "  iterator end()" 17493 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr::iterator Expr::end()" 37600]
[ebrowse-ms "eqExpr" () 6 () "  Expr eqExpr(const" 10241 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::eqExpr(const" 29924]
[ebrowse-ms "getBody" () 6 () "  const Expr& getBody()" 15882 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Expr& Expr::getBody()" 34280]
[ebrowse-ms "getBoundIndex" () 6 () "  int getBoundIndex()" 15811 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline int Expr::getBoundIndex()" 35092]
[ebrowse-ms "getEM" () 6 () "  ExprManager *getEM()" 16355 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline ExprManager* Expr::getEM()" 35884]
[ebrowse-ms "getEqNext" () 6 () "  const Theorem& getEqNext()" 18138 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Theorem& Expr::getEqNext()" 38482]
[ebrowse-ms "getExistential" () 6 () "  const Expr& getExistential()" 15713 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Expr& Expr::getExistential()" 34919]
[ebrowse-ms "getExprValue" () 6 () "  const ExprValue* getExprValue()" 12913 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const ExprValue* Expr::getExprValue()" 31878]
[ebrowse-ms "getFind" () 6 () "  const Theorem& getFind()" 18074 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Theorem& Expr::getFind()" 38185]
[ebrowse-ms "getFindLevel" () 6 () "  int getFindLevel()" 18102 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline int  Expr::getFindLevel()" 38329]
[ebrowse-ms "getFlag" () 6 () "  bool getFlag()" 20537 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::getFlag()" 42235]
[ebrowse-ms "getIndex" () 6 () "  ExprIndex getIndex()" 16557 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline ExprIndex Expr::getIndex()" 36392]
[ebrowse-ms "getIsAtomicFlag" () 6 () "  bool getIsAtomicFlag()" 19305 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::getIsAtomicFlag()" 40325]
[ebrowse-ms "getKids" () 6 () "  const std::vector<Expr>& getKids()" 16445 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const std::vector<Expr>& Expr::getKids()" 36063]
[ebrowse-ms "getKind" () 6 () "  int getKind()" 16501 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline int Expr::getKind()" 36244]
[ebrowse-ms "getMMIndex" () 6 () "  size_t getMMIndex()" 17734 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline size_t Expr::getMMIndex()" 37897]
[ebrowse-ms "getName" () 6 () "  const std::string& getName()" 15388 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const std::string& Expr::getName()" 33742]
[ebrowse-ms "getNotify" () 6 () "  NotifyList* getNotify()" 18200 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline NotifyList* Expr::getNotify()" 38755]
[ebrowse-ms "getOp" () 6 () "  Op getOp()" 16758 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Op Expr::getOp()" 36652]
[ebrowse-ms "getOpExpr" () 6 () "  Expr getOpExpr()" 16841 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::getOpExpr()" 36915]
[ebrowse-ms "getOpKind" () 6 () "  int getOpKind()" 16917 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline int Expr::getOpKind()" 37044]
[ebrowse-ms "getRational" () 6 () "  const Rational& getRational()" 16184 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Rational& Expr::getRational()" 35275]
[ebrowse-ms "getRep" () 6 () "  const Theorem& getRep()" 25120 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Theorem& Expr::getRep()" 48094]
[ebrowse-ms "getSig" () 6 () "  const Theorem& getSig()" 25087 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Theorem& Expr::getSig()" 47869]
[ebrowse-ms "getSimpCache" () 6 () "  const Theorem& getSimpCache()" 18945 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Theorem& Expr::getSimpCache()" 39938]
[ebrowse-ms "getSize" () 6 () "  inline Unsigned getSize()" 24558 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Unsigned Expr::getSize()" 33081]
[ebrowse-ms "getString" () 6 () "  const std::string& getString()" 15522 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const std::string& Expr::getString()" 33883]
[ebrowse-ms "getTerminalsConstFlag" () 6 () "  bool getTerminalsConstFlag()" 19377 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::getTerminalsConstFlag()" 40426]
[ebrowse-ms "getTheorem" () 6 () "  const Theorem& getTheorem()" 16257 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Theorem& Expr::getTheorem()" 35481]
[ebrowse-ms "getTrigs" () 6 () "  const std::vector<Expr>& getTrigs()" 16082 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const std::vector<Expr>& Expr::getTrigs()" 34711]
[ebrowse-ms "getType" () 6 () "  Type getType()" 18279 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Type Expr::getType()" 38858]
[ebrowse-ms "getUid" () 6 () "  const std::string& getUid()" 15458 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const std::string& Expr::getUid()" 35683]
[ebrowse-ms "getVars" () 6 () "  const std::vector<Expr>& getVars()" 15612 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const std::vector<Expr>& Expr::getVars()" 34089]
[ebrowse-ms "hasFind" () 6 () "  bool hasFind()" 17851 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::hasFind()" 38015]
[ebrowse-ms "hasLastIndex" () 6 () "  bool hasLastIndex()" 16645 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::hasLastIndex()" 36460]
[ebrowse-ms "hasRep" () 6 () "  bool hasRep()" 25054 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::hasRep()" 47712]
[ebrowse-ms "hasSig" () 6 () "  bool hasSig()" 25031 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::hasSig()" 47565]
[ebrowse-ms "hash" () 6 () "  size_t hash()" 12014 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline size_t Expr::hash()" 31793]
[ebrowse-ms "iffExpr" () 6 () "  Expr iffExpr(const" 10502 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::iffExpr(const" 30844]
[ebrowse-ms "impExpr" () 6 () "  Expr impExpr(const" 10543 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::impExpr(const" 30934]
[ebrowse-ms "inUserAssumption" () 6 () "  bool inUserAssumption()" 20025 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::inUserAssumption()" 41428]
[ebrowse-ms "indent" () 0 () "  Expr& indent(int" 21989 0  () "Expr& Expr::indent(int" 13082]
[ebrowse-ms "isAbsAtomicFormula" () 4 () "  bool isAbsAtomicFormula()" 13680 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isAbsAtomicFormula()" 13680]
[ebrowse-ms "isAbsLiteral" () 4 () "  bool isAbsLiteral()" 14014 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isAbsLiteral()" 14014]
[ebrowse-ms "isAnd" () 4 () "  bool isAnd()" 14689 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isAnd()" 14689]
[ebrowse-ms "isApply" () 6 () "  bool isApply()" 12434 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isApply()" 32373]
[ebrowse-ms "isAtomic" () 4 () "  bool isAtomic()" 13208 0  () "bool Expr::isAtomic()" 13950]
[ebrowse-ms "isAtomicFormula" () 4 () "  bool isAtomicFormula()" 13568 0  () "bool Expr::isAtomicFormula()" 14286]
[ebrowse-ms "isBoolConnective" () 6 () "  bool isBoolConnective()" 14213 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isBoolConnective()" 32860]
[ebrowse-ms "isBoolConst" () 4 () "  bool isBoolConst()" 12189 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isBoolConst()" 12189]
[ebrowse-ms "isBoundVar" () 4 () "  bool isBoundVar()" 12271 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isBoundVar()" 12271]
[ebrowse-ms "isClosure" () 6 () "  bool isClosure()" 12356 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isClosure()" 32106]
[ebrowse-ms "isConstant" () 4 () "  bool isConstant()" 12513 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isConstant()" 12513]
[ebrowse-ms "isEq" () 4 () "  bool isEq()" 14590 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isEq()" 14590]
[ebrowse-ms "isExists" () 4 () "  bool isExists()" 15051 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isExists()" 15051]
[ebrowse-ms "isFalse" () 4 () "  bool isFalse()" 12069 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isFalse()" 12069]
[ebrowse-ms "isFinite" () 6 () "  bool isFinite()" 19495 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isFinite()" 40620]
[ebrowse-ms "isForall" () 4 () "  bool isForall()" 14995 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isForall()" 14995]
[ebrowse-ms "isITE" () 4 () "  bool isITE()" 14787 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isITE()" 14787]
[ebrowse-ms "isIff" () 4 () "  bool isIff()" 14837 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isIff()" 14837]
[ebrowse-ms "isImpl" () 4 () "  bool isImpl()" 14888 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isImpl()" 14888]
[ebrowse-ms "isImpliedLiteral" () 6 () "  bool isImpliedLiteral()" 19889 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isImpliedLiteral()" 41221]
[ebrowse-ms "isInitialized" () 4 () "  bool isInitialized()" 17606 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isInitialized()" 17606]
[ebrowse-ms "isIntAssumption" () 6 () "  bool isIntAssumption()" 20090 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isIntAssumption()" 41532]
[ebrowse-ms "isJustified" () 6 () "  bool isJustified()" 20147 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isJustified()" 41631]
[ebrowse-ms "isLambda" () 6 () "  bool isLambda()" 12410 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isLambda()" 32288]
[ebrowse-ms "isLiteral" () 4 () "  bool isLiteral()" 13868 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isLiteral()" 13868]
[ebrowse-ms "isNot" () 4 () "  bool isNot()" 14639 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isNot()" 14639]
[ebrowse-ms "isNull" () 6 () "  bool isNull()" 17544 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isNull()" 37793]
[ebrowse-ms "isOr" () 4 () "  bool isOr()" 14738 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isOr()" 14738]
[ebrowse-ms "isPropAtom" () 4 () "  bool isPropAtom()" 14285 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isPropAtom()" 14285]
[ebrowse-ms "isPropLiteral" () 4 () "  bool isPropLiteral()" 14398 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isPropLiteral()" 14398]
[ebrowse-ms "isQuantifier" () 6 () "  bool isQuantifier()" 12385 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isQuantifier()" 32177]
[ebrowse-ms "isRational" () 4 () "  bool isRational()" 15110 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isRational()" 15110]
[ebrowse-ms "isRegisteredAtom" () 6 () "  bool isRegisteredAtom()" 20348 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isRegisteredAtom()" 41940]
[ebrowse-ms "isRewriteNormal" () 6 () "  bool isRewriteNormal()" 19442 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isRewriteNormal()" 40527]
[ebrowse-ms "isSelected" () 6 () "  bool isSelected()" 20403 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isSelected()" 42039]
[ebrowse-ms "isSkolem" () 4 () "  bool isSkolem()" 15173 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isSkolem()" 15173]
[ebrowse-ms "isStoredPredicate" () 6 () "  bool isStoredPredicate()" 20473 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isStoredPredicate()" 42138]
[ebrowse-ms "isString" () 6 () "  bool isString()" 12330 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isString()" 32039]
[ebrowse-ms "isSymbol" () 6 () "  bool isSymbol()" 12459 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isSymbol()" 32575]
[ebrowse-ms "isTerm" () 6 () "  bool isTerm()" 12999 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isTerm()" 32785]
[ebrowse-ms "isTheorem" () 6 () "  bool isTheorem()" 12485 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isTheorem()" 32642]
[ebrowse-ms "isTranslated" () 6 () "  bool isTranslated()" 20206 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isTranslated()" 41726]
[ebrowse-ms "isTrue" () 4 () "  bool isTrue()" 12127 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isTrue()" 12127]
[ebrowse-ms "isType" () 6 () "  bool isType()" 12602 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isType()" 32707]
[ebrowse-ms "isUserAssumption" () 6 () "  bool isUserAssumption()" 19956 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isUserAssumption()" 41323]
[ebrowse-ms "isUserRegisteredAtom" () 6 () "  bool isUserRegisteredAtom()" 20281 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isUserRegisteredAtom()" 41830]
[ebrowse-ms "isValidType" () 6 () "  bool isValidType()" 19026 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isValidType()" 40011]
[ebrowse-ms "isVar" () 6 () "  bool isVar()" 12244 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isVar()" 31976]
[ebrowse-ms "isWellFounded" () 6 () "  bool isWellFounded()" 19556 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::isWellFounded()" 40713]
[ebrowse-ms "isXor" () 4 () "  bool isXor()" 14942 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  bool isXor()" 14942]
[ebrowse-ms "iteExpr" () 6 () "  Expr iteExpr(const" 10436 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::iteExpr(const" 30716]
[ebrowse-ms "lookupType" () 6 () "  Type lookupType()" 18384 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Type Expr::lookupType()" 39016]
[ebrowse-ms "mkOp" () 6 () "  Op mkOp()" 16702 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Op Expr::mkOp()" 36542]
[ebrowse-ms "negate" () 6 () "  Expr negate()" 10301 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::negate()" 30074]
[ebrowse-ms "notArrayNormalized" () 6 () "  bool notArrayNormalized()" 19822 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::notArrayNormalized()" 41114]
[ebrowse-ms "notExpr" () 6 () "  Expr notExpr()" 10278 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::notExpr()" 30009]
[ebrowse-ms "operator !" () 4 () "  Expr operator!()" 11310 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  Expr operator!()" 11310]
[ebrowse-ms "operator &&" () 4 () "  Expr operator&&(const" 11362 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  Expr operator&&(const" 11362]
[ebrowse-ms "operator =" () 2 () "  Expr& operator=(const" 9598 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr& Expr::operator=(const" 26693]
[ebrowse-ms "operator []" () 6 () "  const Expr& operator[](int" 17293 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline const Expr& Expr::operator[](int" 37261]
[ebrowse-ms "operator ||" () 4 () "  Expr operator||(const" 11432 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  Expr operator||(const" 11432]
[ebrowse-ms "orExpr" () 6 () "  Expr orExpr(const" 10395 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::orExpr(const" 30442]
[ebrowse-ms "pprint" () 4 () "  void pprint()" 21219 0  () "void Expr::pprint()" 9050]
[ebrowse-ms "pprintnodag" () 4 () "  void pprintnodag()" 21284 0  () "void Expr::pprintnodag()" 9193]
[ebrowse-ms "print" () 4 () "  void print()" 21062 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  void print()" 21062]
[ebrowse-ms "print" () 4 () "  ExprStream& print(ExprStream" 21518 0  () "ExprStream& Expr::print(ExprStream" 11173]
[ebrowse-ms "print" () 4 () "  void print(InputLanguage" 20960 0  () "void Expr::print(InputLanguage" 8854]
[ebrowse-ms "printAST" () 4 () "  ExprStream& printAST(ExprStream" 21760 0  () "ExprStream& Expr::printAST(ExprStream" 9432]
[ebrowse-ms "printnodag" () 4 () "  void printnodag()" 21161 0  () "void Expr::printnodag()" 9356]
[ebrowse-ms "rebuild" () 6 () "  Expr rebuild(ExprManager" 10870 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::rebuild(ExprManager" 31214]
[ebrowse-ms "recursiveQuantSubst" () 4 () "  Expr recursiveQuantSubst(ExprHashMap" 6719 2  () "Expr Expr::recursiveQuantSubst(ExprHashMap" 6558]
[ebrowse-ms "recursiveSubst" () 4 () "  Expr recursiveSubst(const" 6596 2  () "Expr Expr::recursiveSubst(const" 997]
[ebrowse-ms "setComputeTransClosure" () 6 () "  void setComputeTransClosure()" 23252 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setComputeTransClosure()" 45048]
[ebrowse-ms "setContainsBoundVar" () 6 () "  void setContainsBoundVar()" 23324 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setContainsBoundVar()" 45228]
[ebrowse-ms "setEqNext" () 6 () "  void setEqNext(const" 22410 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setEqNext(const" 43035]
[ebrowse-ms "setFind" () 6 () "  void setFind(const" 22331 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setFind(const" 42649]
[ebrowse-ms "setFinite" () 6 () "  void setFinite()" 23112 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setFinite()" 44732]
[ebrowse-ms "setFlag" () 6 () "  void setFlag()" 20588 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setFlag()" 42381]
[ebrowse-ms "setImpliedLiteral" () 6 () "  void setImpliedLiteral()" 23534 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setImpliedLiteral()" 45718]
[ebrowse-ms "setInUserAssumption" () 6 () "  void setInUserAssumption(int" 23721 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setInUserAssumption(int" 46069]
[ebrowse-ms "setIntAssumption" () 6 () "  void setIntAssumption()" 23819 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setIntAssumption()" 46251]
[ebrowse-ms "setIsAtomicFlag" () 6 () "  void setIsAtomicFlag(bool" 22845 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setIsAtomicFlag(bool" 43927]
[ebrowse-ms "setJustified" () 6 () "  void setJustified()" 23891 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setJustified()" 46411]
[ebrowse-ms "setNotArrayNormalized" () 6 () "  void setNotArrayNormalized()" 23452 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setNotArrayNormalized()" 45547]
[ebrowse-ms "setRegisteredAtom" () 6 () "  void setRegisteredAtom()" 24154 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setRegisteredAtom()" 46917]
[ebrowse-ms "setRep" () 6 () "  void setRep(const" 25186 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setRep(const" 48674]
[ebrowse-ms "setRewriteNormal" () 6 () "  void setRewriteNormal()" 23023 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setRewriteNormal()" 44513]
[ebrowse-ms "setSelected" () 6 () "  void setSelected()" 24225 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setSelected()" 47082]
[ebrowse-ms "setSig" () 6 () "  void setSig(const" 25147 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setSig(const" 48313]
[ebrowse-ms "setSimpCache" () 6 () "  void setSimpCache(const" 22684 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setSimpCache(const" 43568]
[ebrowse-ms "setStoredPredicate" () 6 () "  void setStoredPredicate()" 24311 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setStoredPredicate()" 47237]
[ebrowse-ms "setTerminalsConstFlag" () 6 () "  void setTerminalsConstFlag(bool" 22941 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setTerminalsConstFlag(bool" 44212]
[ebrowse-ms "setTranslated" () 6 () "  void setTranslated(int" 23968 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setTranslated(int" 46565]
[ebrowse-ms "setTriggers" () 6 () "  void setTriggers(const" 15957 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setTriggers(const" 34472]
[ebrowse-ms "setType" () 6 () "  void setType(const" 22584 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setType(const" 43431]
[ebrowse-ms "setUserAssumption" () 6 () "  void setUserAssumption(int" 23619 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setUserAssumption(int" 45884]
[ebrowse-ms "setUserRegisteredAtom" () 6 () "  void setUserRegisteredAtom()" 24071 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setUserRegisteredAtom()" 46741]
[ebrowse-ms "setUsesCC" () 6 () "  void setUsesCC()" 23376 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setUsesCC()" 45392]
[ebrowse-ms "setValidType" () 6 () "  void setValidType()" 22769 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setValidType()" 43769]
[ebrowse-ms "setWellFounded" () 6 () "  void setWellFounded()" 23174 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline void Expr::setWellFounded()" 44882]
[ebrowse-ms "skolemExpr" () 6 () "  Expr skolemExpr(int" 10705 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::skolemExpr(int" 31119]
[ebrowse-ms "subExprOf" () 4 () "  bool subExprOf(const" 24406 0  () "Expr::subExprOf(const" 4066]
[ebrowse-ms "substExpr" () 4 () "  Expr substExpr(const" 11090 0  () "Expr Expr::substExpr(const" 4883]
[ebrowse-ms "substExpr" () 4 () "  Expr substExpr(const" 10979 0  () "Expr Expr::substExpr(const" 4287]
[ebrowse-ms "substExprQuant" () 4 () "  Expr substExprQuant(const" 11210 0  () "Expr Expr::substExprQuant(const" 5443]
[ebrowse-ms "toString" () 4 () "  std::string toString(InputLanguage" 20869 0  () "string Expr::toString(InputLanguage" 8664]
[ebrowse-ms "toString" () 4 () "  std::string toString()" 20754 0  () "string Expr::toString()" 8481]
[ebrowse-ms "typeCard" () 6 () "  Cardinality typeCard()" 18449 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Cardinality Expr::typeCard()" 39119]
[ebrowse-ms "typeEnumerateFinite" () 6 () "  Expr typeEnumerateFinite(Unsigned" 18615 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::typeEnumerateFinite(Unsigned" 39320]
[ebrowse-ms "typeSizeFinite" () 6 () "  Unsigned typeSizeFinite()" 18728 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Unsigned Expr::typeSizeFinite()" 39575]
[ebrowse-ms "unnegate" () 4 () "  const Expr& unnegate()" 17361 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  const Expr& unnegate()" 17361]
[ebrowse-ms "usesCC" () 6 () "  bool usesCC()" 19749 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::usesCC()" 41018]
[ebrowse-ms "validIsAtomicFlag" () 6 () "  bool validIsAtomicFlag()" 19130 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::validIsAtomicFlag()" 40109]
[ebrowse-ms "validSimpCache" () 6 () "  bool validSimpCache()" 18862 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::validSimpCache()" 39821]
[ebrowse-ms "validTerminalsConstFlag" () 6 () "  bool validTerminalsConstFlag()" 19245 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline bool Expr::validTerminalsConstFlag()" 40218]
[ebrowse-ms "xorExpr" () 6 () "  Expr xorExpr(const" 10584 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr Expr::xorExpr(const" 31028]
[ebrowse-ms "~Expr" () 2 () "  ~Expr()" 10181 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr::~Expr()" 31280]
)
([ebrowse-ms "s_null" () 0 () "  static Expr s_null;" 5917 2  () () 0]
)
([ebrowse-ms "hash" () 2 () "  static size_t hash(const" 11746 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline size_t Expr::hash(const" 31490]
)
([ebrowse-ms "compare" () 0 () "  friend int compare(const" 25789 0  () () 0]
[ebrowse-ms "operator !=" () 2 () "  friend bool operator!=(const" 25906 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(const" 7313]
[ebrowse-ms "operator <" () 2 () "  friend bool operator<(const" 25964 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "inline bool operator<(const" 10630]
[ebrowse-ms "operator <<" () 0 () "  friend CVC_DLL std::ostream& operator<<(std" 25493 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator <=" () 2 () "  friend bool operator<=(const" 26022 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator<=(const" 14830]
[ebrowse-ms "operator ==" () 2 () "  friend bool operator==(const" 25848 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
[ebrowse-ms "operator >" () 2 () "  friend bool operator>(const" 26079 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>(const" 14929]
[ebrowse-ms "operator >=" () 2 () "  friend bool operator>=(const" 26137 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>=(const" 15028]
)
()
()()
][ebrowse-ts [ebrowse-cs "Expr" () 0() () 0() ]
()()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ArithTheoremProducer3" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer3.cpp" ]
()()
([ebrowse-ms "IsIntegerElim" () 0 () () 0 0  () "eorem ArithTheoremProducer3::IsIntegerElim(const" 75626]
[ebrowse-ms "addInequalities" () 0 () () 0 0  () "rem ArithTheoremProducer3::addInequalities(const" 95272]
[ebrowse-ms "addInequalities" () 0 () () 0 0  () "rem ArithTheoremProducer3::addInequalities(const" 85804]
[ebrowse-ms "canonCombineLikeTerms" () 0 () () 0 0  () "ithTheoremProducer3::canonCombineLikeTerms(const" 13044]
[ebrowse-ms "canonComboLikeTerms" () 0 () () 0 0  () "ArithTheoremProducer3::canonComboLikeTerms(const" 32010]
[ebrowse-ms "canonDivide" () 0 () () 0 0  () "ArithTheoremProducer3::canonDivide(const" 26408]
[ebrowse-ms "canonDivideConst" () 0 () () 0 0  () "em ArithTheoremProducer3::canonDivideConst(const" 2745]
[ebrowse-ms "canonDivideMult" () 0 () () 0 0  () "rem ArithTheoremProducer3::canonDivideMult(const" 3472]
[ebrowse-ms "canonDividePlus" () 0 () () 0 0  () "rem ArithTheoremProducer3::canonDividePlus(const" 4558]
[ebrowse-ms "canonDivideVar" () 0 () () 0 0  () "orem ArithTheoremProducer3::canonDivideVar(const" 5467]
[ebrowse-ms "canonFlattenSum" () 0 () () 0 0  () "ArithTheoremProducer3::canonFlattenSum(const" 31254]
[ebrowse-ms "canonInvert" () 0 () () 0 0  () "ArithTheoremProducer3::canonInvert(const" 24418]
[ebrowse-ms "canonInvertConst" () 0 () () 0 0  () "ArithTheoremProducer3::canonInvertConst(const" 22630]
[ebrowse-ms "canonInvertLeaf" () 0 () () 0 0  () "ArithTheoremProducer3::canonInvertLeaf(const" 23003]
[ebrowse-ms "canonInvertMult" () 0 () () 0 0  () "ArithTheoremProducer3::canonInvertMult(const" 23749]
[ebrowse-ms "canonInvertPow" () 0 () () 0 0  () "ArithTheoremProducer3::canonInvertPow(const" 23236]
[ebrowse-ms "canonMult" () 0 () () 0 0  () "ArithTheoremProducer3::canonMult(const" 22210]
[ebrowse-ms "canonMultConstConst" () 0 () () 0 0  () "ArithTheoremProducer3::canonMultConstConst(const" 28333]
[ebrowse-ms "canonMultConstMult" () 0 () () 0 0  () " ArithTheoremProducer3::canonMultConstMult(const" 6961]
[ebrowse-ms "canonMultConstPlus" () 0 () () 0 0  () " ArithTheoremProducer3::canonMultConstPlus(const" 7762]
[ebrowse-ms "canonMultConstSum" () 0 () () 0 0  () "ArithTheoremProducer3::canonMultConstSum(const" 29737]
[ebrowse-ms "canonMultConstTerm" () 0 () () 0 0  () "ArithTheoremProducer3::canonMultConstTerm(const" 28996]
[ebrowse-ms "canonMultLeafLeaf" () 0 () () 0 0  () "r ArithTheoremProducer3::canonMultLeafLeaf(const" 10245]
[ebrowse-ms "canonMultLeafOrPowMult" () 0 () () 0 0  () "thTheoremProducer3::canonMultLeafOrPowMult(const" 10891]
[ebrowse-ms "canonMultLeafOrPowOrMultPlus" () 0 () () 0 0  () "remProducer3::canonMultLeafOrPowOrMultPlus(const" 15223]
[ebrowse-ms "canonMultMtermMterm" () 0 () () 0 0  () "ArithTheoremProducer3::canonMultMtermMterm(const" 16575]
[ebrowse-ms "canonMultOne" () 0 () () 0 0  () "heorem ArithTheoremProducer3::canonMultOne(const" 28063]
[ebrowse-ms "canonMultPlusPlus" () 0 () () 0 0  () "r ArithTheoremProducer3::canonMultPlusPlus(const" 15851]
[ebrowse-ms "canonMultPowLeaf" () 0 () () 0 0  () "pr ArithTheoremProducer3::canonMultPowLeaf(const" 9376]
[ebrowse-ms "canonMultPowPow" () 0 () () 0 0  () "xpr ArithTheoremProducer3::canonMultPowPow(const" 8388]
[ebrowse-ms "canonMultTerm1Term2" () 0 () () 0 0  () "ArithTheoremProducer3::canonMultTerm1Term2(const" 27365]
[ebrowse-ms "canonMultTermConst" () 0 () () 0 0  () "ArithTheoremProducer3::canonMultTermConst(const" 26876]
[ebrowse-ms "canonMultZero" () 0 () () 0 0  () "eorem ArithTheoremProducer3::canonMultZero(const" 27810]
[ebrowse-ms "canonPlus" () 0 () () 0 0  () "ArithTheoremProducer3::canonPlus(const" 21471]
[ebrowse-ms "canonPowConst" () 0 () () 0 0  () "ArithTheoremProducer3::canonPowConst(const" 30508]
[ebrowse-ms "canonUMinusToDivide" () 0 () () 0 0  () "ArithTheoremProducer3::canonUMinusToDivide(const" 2440]
[ebrowse-ms "clashingBounds" () 0 () () 0 0  () "orem ArithTheoremProducer3::clashingBounds(const" 84051]
[ebrowse-ms "compactNonLinearTerm" () 0 () () 0 0  () "rithTheoremProducer3::compactNonLinearTerm(const" 94747]
[ebrowse-ms "constPredicate" () 0 () () 0 0  () "orem ArithTheoremProducer3::constPredicate(const" 38401]
[ebrowse-ms "constRHSGrayShadow" () 0 () () 0 0  () " ArithTheoremProducer3::constRHSGrayShadow(const" 62660]
[ebrowse-ms "create_t" () 0 () () 0 0  () "ArithTheoremProducer3::create_t(const" 67083]
[ebrowse-ms "create_t2" () 0 () () 0 0  () "ArithTheoremProducer3::create_t2(const" 67626]
[ebrowse-ms "create_t3" () 0 () () 0 0  () "ArithTheoremProducer3::create_t3(const" 68190]
[ebrowse-ms "cycleConflict" () 0 () () 0 0  () "eorem ArithTheoremProducer3::cycleConflict(const" 96013]
[ebrowse-ms "darkGrayShadow2ab" () 0 () () 0 0  () "m ArithTheoremProducer3::darkGrayShadow2ab(const" 49872]
[ebrowse-ms "darkGrayShadow2ba" () 0 () () 0 0  () "m ArithTheoremProducer3::darkGrayShadow2ba(const" 52980]
[ebrowse-ms "diseqToIneq" () 0 () () 0 0  () "ArithTheoremProducer3::diseqToIneq(const" 82853]
[ebrowse-ms "divideEqnNonConst" () 0 () () 0 0  () "m ArithTheoremProducer3::divideEqnNonConst(const" 41718]
[ebrowse-ms "dummyTheorem" () 0 () () 0 0  () "heorem ArithTheoremProducer3::dummyTheorem(const" 83325]
[ebrowse-ms "elimPower" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::elimPower(const" 35079]
[ebrowse-ms "elimPowerConst" () 0 () () 0 0  () "orem ArithTheoremProducer3::elimPowerConst(const" 35880]
[ebrowse-ms "eqElimIntRule" () 0 () () 0 0  () "ArithTheoremProducer3::eqElimIntRule(const" 76230]
[ebrowse-ms "eqToIneq" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::eqToIneq(const" 43012]
[ebrowse-ms "equalLeaves1" () 0 () () 0 0  () "ArithTheoremProducer3::equalLeaves1(const" 79915]
[ebrowse-ms "equalLeaves2" () 0 () () 0 0  () "ArithTheoremProducer3::equalLeaves2(const" 80650]
[ebrowse-ms "equalLeaves3" () 0 () () 0 0  () "ArithTheoremProducer3::equalLeaves3(const" 81385]
[ebrowse-ms "equalLeaves4" () 0 () () 0 0  () "ArithTheoremProducer3::equalLeaves4(const" 82120]
[ebrowse-ms "evenPowerEqNegConst" () 0 () () 0 0  () "ArithTheoremProducer3::evenPowerEqNegConst(const" 36703]
[ebrowse-ms "expandDarkShadow" () 0 () () 0 0  () "em ArithTheoremProducer3::expandDarkShadow(const" 56023]
[ebrowse-ms "expandGrayShadow" () 0 () () 0 0  () "em ArithTheoremProducer3::expandGrayShadow(const" 58450]
[ebrowse-ms "expandGrayShadow0" () 0 () () 0 0  () "m ArithTheoremProducer3::expandGrayShadow0(const" 56566]
[ebrowse-ms "expandGrayShadowConst" () 0 () () 0 0  () "ithTheoremProducer3::expandGrayShadowConst(const" 59351]
[ebrowse-ms "expandGrayShadowRewrite" () 0 () () 0 0  () "hTheoremProducer3::expandGrayShadowRewrite(const" 94605]
[ebrowse-ms "f" () 0 () () 0 0  () "ArithTheoremProducer3::f(const" 69089]
[ebrowse-ms "finiteInterval" () 0 () () 0 0  () "ArithTheoremProducer3::finiteInterval(const" 47517]
[ebrowse-ms "flipInequality" () 0 () () 0 0  () "orem ArithTheoremProducer3::flipInequality(const" 43632]
[ebrowse-ms "grayShadowConst" () 0 () () 0 0  () "ArithTheoremProducer3::grayShadowConst(const" 61426]
[ebrowse-ms "greaterthan" () 0 () () 0 0  () "bool ArithTheoremProducer3::greaterthan(const" 72706]
[ebrowse-ms "implyDiffLogicBothBounds" () 0 () () 0 0  () "TheoremProducer3::implyDiffLogicBothBounds(const" 95038]
[ebrowse-ms "implyEqualities" () 0 () () 0 0  () "rem ArithTheoremProducer3::implyEqualities(const" 96165]
[ebrowse-ms "implyNegatedInequality" () 0 () () 0 0  () "thTheoremProducer3::implyNegatedInequality(const" 89495]
[ebrowse-ms "implyNegatedInequalityDiffLogic" () 0 () () 0 0  () "Producer3::implyNegatedInequalityDiffLogic(const" 94418]
[ebrowse-ms "implyWeakerInequality" () 0 () () 0 0  () "ithTheoremProducer3::implyWeakerInequality(const" 87300]
[ebrowse-ms "implyWeakerInequalityDiffLogic" () 0 () () 0 0  () "mProducer3::implyWeakerInequalityDiffLogic(const" 94223]
[ebrowse-ms "intEqIrrational" () 0 () () 0 0  () "rem ArithTheoremProducer3::intEqIrrational(const" 37341]
[ebrowse-ms "intEqualityRationalConstant" () 0 () () 0 0  () "oremProducer3::intEqualityRationalConstant(const" 95850]
[ebrowse-ms "intVarEqnConst" () 0 () () 0 0  () "ArithTheoremProducer3::intVarEqnConst(const" 64865]
[ebrowse-ms "integerSplit" () 0 () () 0 0  () "heorem ArithTheoremProducer3::integerSplit(const" 91632]
[ebrowse-ms "isIntConst" () 0 () () 0 0  () "ArithTheoremProducer3::isIntConst(const" 79493]
[ebrowse-ms "leftMinusRight" () 0 () () 0 0  () "orem ArithTheoremProducer3::leftMinusRight(const" 40022]
[ebrowse-ms "lessThanToLE" () 0 () () 0 0  () "heorem ArithTheoremProducer3::lessThanToLE(const" 63185]
[ebrowse-ms "lessThanToLERewrite" () 0 () () 0 0  () "ArithTheoremProducer3::lessThanToLERewrite(const" 96484]
[ebrowse-ms "minusToPlus" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::minusToPlus(const" 2090]
[ebrowse-ms "modEq" () 0 () () 0 0  () "ArithTheoremProducer3::modEq(const" 68778]
[ebrowse-ms "monomialModM" () 0 () () 0 0  () "ArithTheoremProducer3::monomialModM(const" 69971]
[ebrowse-ms "monomialMulF" () 0 () () 0 0  () "ArithTheoremProducer3::monomialMulF(const" 71502]
[ebrowse-ms "moveSumConstantRight" () 0 () () 0 0  () "rithTheoremProducer3::moveSumConstantRight(const" 24852]
[ebrowse-ms "multEqZero" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::multEqZero(const" 33665]
[ebrowse-ms "multEqn" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::multEqn(const" 41208]
[ebrowse-ms "multIneqn" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::multIneqn(const" 42276]
[ebrowse-ms "negatedInequality" () 0 () () 0 0  () "m ArithTheoremProducer3::negatedInequality(const" 44223]
[ebrowse-ms "nonLinearIneqSignSplit" () 0 () () 0 0  () "thTheoremProducer3::nonLinearIneqSignSplit(const" 94891]
[ebrowse-ms "oneElimination" () 0 () () 0 0  () "orem ArithTheoremProducer3::oneElimination(const" 83477]
[ebrowse-ms "plusPredicate" () 0 () () 0 0  () "eorem ArithTheoremProducer3::plusPredicate(const" 40551]
[ebrowse-ms "powEqZero" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::powEqZero(const" 34348]
[ebrowse-ms "powerOfOne" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::powerOfOne(const" 95410]
[ebrowse-ms "rafineStrictInteger" () 0 () () 0 0  () "ArithTheoremProducer3::rafineStrictInteger(const" 92256]
[ebrowse-ms "realShadow" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::realShadow(const" 45121]
[ebrowse-ms "realShadowEq" () 0 () () 0 0  () "heorem ArithTheoremProducer3::realShadowEq(const" 46342]
[ebrowse-ms "rightMinusLeft" () 0 () () 0 0  () "orem ArithTheoremProducer3::rightMinusLeft(const" 39484]
[ebrowse-ms "simpleIneqInt" () 0 () () 0 0  () "eorem ArithTheoremProducer3::simpleIneqInt(const" 95609]
[ebrowse-ms "simplifiedMultExpr" () 0 () () 0 0  () "pr ArithTheoremProducer3::simplifiedMultExpr(std" 6636]
[ebrowse-ms "splitGrayShadow" () 0 () () 0 0  () "rem ArithTheoremProducer3::splitGrayShadow(const" 57457]
[ebrowse-ms "splitGrayShadowSmall" () 0 () () 0 0  () "rithTheoremProducer3::splitGrayShadowSmall(const" 94073]
[ebrowse-ms "substitute" () 0 () () 0 0  () "ArithTheoremProducer3::substitute(const" 72115]
[ebrowse-ms "sumModM" () 0 () () 0 0  () "ArithTheoremProducer3::sumModM(vector" 69301]
[ebrowse-ms "sumMulF" () 0 () () 0 0  () "ArithTheoremProducer3::sumMulF(vector" 70836]
[ebrowse-ms "trustedRewrite" () 0 () () 0 0  () "orem ArithTheoremProducer3::trustedRewrite(const" 91273]
[ebrowse-ms "uMinusToMult" () 0 () () 0 0  () "heorem ArithTheoremProducer3::uMinusToMult(const" 1859]
[ebrowse-ms "varToMult" () 0 () () 0 0  () "Theorem ArithTheoremProducer3::varToMult(const" 1622]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Heap" "MiniSat" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_heap.h" "class Heap {" 2318"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_heap.h" ]
()([ebrowse-ms "comp" () 0 () "  C        comp;" 2343 0  () () 0]
[ebrowse-ms "heap" () 0 () "  vec<int> heap;" 2360 0  () () 0]
[ebrowse-ms "indices" () 0 () "  vec<int> indices;" 2400 0  () () 0]
)
([ebrowse-ms "Heap" () 0 () "  Heap(C c) :" 3169 0  () "  Heap(C c) :" 3169]
[ebrowse-ms "empty" () 0 () "  bool empty     ()" 3612 0  () "  bool empty     ()" 3612]
[ebrowse-ms "getMin" () 0 () "  int getMin()" 3938 0  () "  int getMin()" 3938]
[ebrowse-ms "heapProperty" () 0 () "  bool heapProperty(int" 4287 0  () "  bool heapProperty(int" 4287]
[ebrowse-ms "heapProperty" () 0 () "  bool heapProperty()" 4228 0  () "  bool heapProperty()" 4228]
[ebrowse-ms "inHeap" () 0 () "  bool inHeap    (int" 3334 0  () "  bool inHeap    (int" 3334]
[ebrowse-ms "increase" () 0 () "  void increase  (int" 3436 0  () "  void increase  (int" 3436]
[ebrowse-ms "insert" () 0 () "  void insert(int" 3670 0  () "  void insert(int" 3670]
[ebrowse-ms "ok" () 0 () "  bool ok(int" 3102 0  () "  bool ok(int" 3102]
[ebrowse-ms "percolateDown" () 2 () "  inline void percolateDown(int" 2732 0  () "  inline void percolateDown(int" 2732]
[ebrowse-ms "percolateUp" () 2 () "  inline void percolateUp(int" 2458 0  () "  inline void percolateUp(int" 2458]
[ebrowse-ms "setBounds" () 0 () "  void setBounds (int" 3226 0  () "  void setBounds (int" 3226]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DecisionEngineDFS" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_dfs.cpp" ]
()()
([ebrowse-ms "DecisionEngineDFS" () 0 () () 0 0  () "ineDFS(TheoryCore* core, SearchImplBase* se)
  :" 1146]
[ebrowse-ms "findSplitter" () 0 () () 0 0  () "Expr DecisionEngineDFS::findSplitter(const" 1634]
[ebrowse-ms "goalSatisfied" () 0 () () 0 0  () "void DecisionEngineDFS::goalSatisfied()" 2291]
[ebrowse-ms "isBetter" () 0 () () 0 0  () "bool DecisionEngineDFS::isBetter(const" 746]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "streambuf" "std::std" 0() () 0() ]
([ebrowse-ts [ebrowse-cs "fdinbuf" "std" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/fdstream.h" "class fdinbuf :" 2492"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/fdstream.h" ]
()([ebrowse-ms "buffer" () 0 () "    char buffer[bufSize+pbSize];" 2886 1  () () 0]
[ebrowse-ms "fd" () 0 () "    int fd;" 2541 1  () () 0]
)
([ebrowse-ms "fdinbuf" () 0 () "    fdinbuf (int _fd) :" 3090 0  () "    fdinbuf (int _fd) :" 3090]
[ebrowse-ms "underflow" () 1 () "    virtual int_type underflow ()" 3367 1  () "    virtual int_type underflow ()" 3367]
)
([ebrowse-ms "bufSize" () 0 () "    static const int bufSize = 1024;" 2823 1  () () 0]
[ebrowse-ms "pbSize" () 0 () "    static const int pbSize = 4;" 2755 1  () () 0]
)
()
()
()
()()
][ebrowse-ts [ebrowse-cs "fdoutbuf" "std" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/fdstream.h" "class fdoutbuf :" 1553"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/fdstream.h" ]
()([ebrowse-ms "fd" () 0 () "    int fd;" 1602 1  () () 0]
)
([ebrowse-ms "fdoutbuf" () 0 () "    fdoutbuf (int _fd) :" 1671 0  () "    fdoutbuf (int _fd) :" 1671]
[ebrowse-ms "overflow" () 1 () "    virtual int_type overflow (int_type" 1774 1  () "    virtual int_type overflow (int_type" 1774]
[ebrowse-ms "xsputn" () 1 () "    std::streamsize xsputn (const" 2024 1  () "    std::streamsize xsputn (const" 2024]
)
()
()
()
()
()()
])()
()
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Impl" "CVC3::Rational" 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" ]
()()
([ebrowse-ms "Impl" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "unsigned int /* dummy arg, to disambiguate */) {" 7247]
[ebrowse-ms "Impl" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "  Rational::Impl::Impl(long int n, long int d) {" 6976]
[ebrowse-ms "Impl" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "pl(const string &n, const string& d, int base) {" 7653]
[ebrowse-ms "Impl" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "ational::Impl::Impl(const string &n, int base) {" 7478]
[ebrowse-ms "canonicalize" () 0 () () 0 0  () "  void Rational::Impl::canonicalize()" 7473]
[ebrowse-ms "ceil" () 4 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "  Rational::Impl Rational::Impl::ceil()" 8133]
[ebrowse-ms "floor" () 4 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "  Rational::Impl Rational::Impl::floor()" 7940]
[ebrowse-ms "isInteger" () 4 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "  bool Rational::Impl::isInteger()" 8321]
[ebrowse-ms "operator -" () 4 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-gmp.cpp" "  Rational::Impl Rational::Impl::operator-()" 7829]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "UserAssertion" "CVC3::VCL" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vcl.h" "  class UserAssertion {" 2038"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vcl.h" ]
()([ebrowse-ms "d_idx" () 0 () "    size_t d_idx;" 2056 2  () () 0]
[ebrowse-ms "d_tcc" () 0 () "    Theorem d_tcc;" 2136 2  () () 0]
[ebrowse-ms "d_thm" () 0 () "    Theorem d_thm;" 2075 2  () () 0]
)
([ebrowse-ms "Theorem" () 0 () "    operator Theorem()" 2566 0  () "    operator Theorem()" 2566]
[ebrowse-ms "UserAssertion" () 0 () "      :" 2267 0  () "      :" 2267]
[ebrowse-ms "UserAssertion" () 0 () "    UserAssertion() {" 2219 0  () "    UserAssertion() {" 2219]
[ebrowse-ms "tcc" () 4 () "    const Theorem& tcc()" 2484 0  () "    const Theorem& tcc()" 2484]
[ebrowse-ms "thm" () 4 () "    const Theorem& thm()" 2412 0  () "    const Theorem& thm()" 2412]
)
()
()
([ebrowse-ms "operator <" () 2 () "    friend bool operator<(const" 2685 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "inline bool operator<(const" 10630]
)
()
()()
][ebrowse-ts [ebrowse-cs "EdgeInfo" "TheoryArithOld::DifferenceLogicGraph" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "			struct EdgeInfo {" 24465"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" ]
()([ebrowse-ms "explanation" () 0 () "				Theorem explanation;" 24776 0  () () 0]
[ebrowse-ms "in_path_vertex" () 0 () "				Expr in_path_vertex;" 24682 0  () () 0]
[ebrowse-ms "length" () 0 () "				EpsRational length;" 24524 0  () () 0]
[ebrowse-ms "path_length_in_edges" () 0 () "				int path_length_in_edges;" 24598 0  () () 0]
)
([ebrowse-ms "EdgeInfo" () 0 () "				EdgeInfo():" 24926 0  () "				EdgeInfo():" 24926]
[ebrowse-ms "isDefined" () 4 () "				bool isDefined()" 24866 0  () "				bool isDefined()" 24866]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "dynTrig" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" ]
()()
([ebrowse-ms "dynTrig" () 0 () () 0 0  () "nTrig(Trigger t, ExprMap<Expr> b, size_t id)
  :" 2589]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "BucketNode" "Hash::hash_table<>" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "    struct BucketNode {" 4821"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" ]
()([ebrowse-ms "d_next" () 0 () "      BucketNode* d_next;" 4950 0  () () 0]
[ebrowse-ms "d_value" () 0 () "      value_type d_value;" 4976 0  () () 0]
)
([ebrowse-ms "BucketNode" () 0 () "de(BucketNode* next, const value_type& value)
	:" 4849 0  () "de(BucketNode* next, const value_type& value)
	:" 4849]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "MemoryTracker" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "class MemoryTracker {" 3172"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" ]
()()
()
()
([ebrowse-ms "getString" () 0 () "  static unsigned long getString(int" 4527 0  () "  static unsigned long getString(int" 4527]
[ebrowse-ms "getVec" () 32 () "  static unsigned long getVec(int" 3565 0  () "  static unsigned long getVec(int" 3565]
[ebrowse-ms "getVecAndData" () 32 () "  static unsigned long getVecAndData(int" 3826 0  () "  static unsigned long getVecAndData(int" 3826]
[ebrowse-ms "getVecAndDataP" () 32 () "  static unsigned long getVecAndDataP(int" 4189 0  () "  static unsigned long getVecAndDataP(int" 4189]
[ebrowse-ms "print" () 0 () "  static void print(std" 3204 0  () "  static void print(std" 3204]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "VarOrderGraph" "TheoryArithOld" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "  class VarOrderGraph {" 5153"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith_old.cpp" ]
()([ebrowse-ms "d_cache" () 0 () "    ExprMap<bool> d_cache;" 5221 2  () () 0]
[ebrowse-ms "d_edges" () 0 () "    ExprMap<std::vector<Expr> > d_edges;" 5194 2  () () 0]
)
([ebrowse-ms "addEdge" () 0 () "    void addEdge(const" 5362 0  () "oid TheoryArithOld::VarOrderGraph::addEdge(const" 71896]
[ebrowse-ms "dfs" () 0 () "    void dfs(const" 5286 2  () "void TheoryArithOld::VarOrderGraph::dfs(const" 73004]
[ebrowse-ms "dfs" () 0 () "    bool dfs(const" 5240 2  () "bool TheoryArithOld::VarOrderGraph::dfs(const" 72527]
[ebrowse-ms "getVerticesTopological" () 0 () "    void getVerticesTopological(std" 5959 0  () "ld::VarOrderGraph::getVerticesTopological(vector" 73610]
[ebrowse-ms "lessThan" () 0 () "    bool lessThan(const" 5461 0  () "ol TheoryArithOld::VarOrderGraph::lessThan(const" 72270]
[ebrowse-ms "selectLargest" () 0 () "    void selectLargest(const" 5617 0  () "eoryArithOld::VarOrderGraph::selectLargest(const" 74680]
[ebrowse-ms "selectSmallest" () 0 () "    void selectSmallest( std" 5820 0  () "ryArithOld::VarOrderGraph::selectSmallest(vector" 74064]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "VarOrderGraph" "TheoryArithNew" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "  class VarOrderGraph {" 4314"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith_new.cpp" ]
()([ebrowse-ms "d_cache" () 0 () "    ExprMap<bool> d_cache;" 4382 2  () () 0]
[ebrowse-ms "d_edges" () 0 () "    ExprMap<std::vector<Expr> > d_edges;" 4355 2  () () 0]
)
([ebrowse-ms "addEdge" () 0 () "    void addEdge(const" 4461 0  () () 0]
[ebrowse-ms "dfs" () 0 () "    bool dfs(const" 4401 2  () "bool TheoryArithNew::VarOrderGraph::dfs(const" 32228]
[ebrowse-ms "lessThan" () 0 () "    bool lessThan(const" 4560 0  () "ol TheoryArithNew::VarOrderGraph::lessThan(const" 31970]
[ebrowse-ms "selectLargest" () 0 () "    void selectLargest(const" 4716 0  () "eoryArithNew::VarOrderGraph::selectLargest(const" 33337]
[ebrowse-ms "selectSmallest" () 0 () "    void selectSmallest( std" 4920 0  () "ryArithNew::VarOrderGraph::selectSmallest(vector" 32718]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "VarOrderGraph" "TheoryArith3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith3.h" "  class VarOrderGraph {" 4084"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/theory_arith3.cpp" ]
()([ebrowse-ms "d_cache" () 0 () "    ExprMap<bool> d_cache;" 4152 2  () () 0]
[ebrowse-ms "d_edges" () 0 () "    ExprMap<std::vector<Expr> > d_edges;" 4125 2  () () 0]
)
([ebrowse-ms "addEdge" () 0 () "    void addEdge(const" 4231 0  () "void TheoryArith3::VarOrderGraph::addEdge(const" 57869]
[ebrowse-ms "dfs" () 0 () "    bool dfs(const" 4171 2  () "bool TheoryArith3::VarOrderGraph::dfs(const" 58494]
[ebrowse-ms "lessThan" () 0 () "    bool lessThan(const" 4330 0  () "bool TheoryArith3::VarOrderGraph::lessThan(const" 58239]
[ebrowse-ms "selectLargest" () 0 () "    void selectLargest(const" 4486 0  () "TheoryArith3::VarOrderGraph::selectLargest(const" 59596]
[ebrowse-ms "selectSmallest" () 0 () "    void selectSmallest( std" 4690 0  () "eoryArith3::VarOrderGraph::selectSmallest(vector" 58982]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "hash_table" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "  class hash_table {" 4249"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" ]
()([ebrowse-ms "d_data" () 0 () "    Data d_data;" 5742 1  () () 0]
[ebrowse-ms "d_equal" () 0 () "    key_equal d_equal;" 5521 1  () () 0]
[ebrowse-ms "d_extractKey" () 0 () "    _ExtractKey d_extractKey;" 5587 1  () () 0]
[ebrowse-ms "d_hash" () 0 () "    hasher d_hash;" 5455 1  () () 0]
[ebrowse-ms "d_size" () 0 () "    size_type d_size;" 5680 1  () () 0]
)
([ebrowse-ms "assignTable" () 0 () "    void assignTable(const" 9832 0  () "    void assignTable(const" 9832]
[ebrowse-ms "begin" () 4 () "    const_iterator begin()" 16120 0  () "    const_iterator begin()" 16120]
[ebrowse-ms "begin" () 0 () "    iterator begin()" 15843 0  () "    iterator begin()" 15843]
[ebrowse-ms "bucket_count" () 4 () "    size_type bucket_count()" 15542 0  () "    size_type bucket_count()" 15542]
[ebrowse-ms "clear" () 0 () "    void clear()" 11213 0  () "    void clear()" 11213]
[ebrowse-ms "contains" () 4 () "    bool contains(const" 15002 0  () "    bool contains(const" 15002]
[ebrowse-ms "count" () 4 () "    size_type count(const" 15163 0  () "    size_type count(const" 15163]
[ebrowse-ms "empty" () 4 () "    bool empty()" 15318 0  () "    bool empty()" 15318]
[ebrowse-ms "end" () 4 () "    const_iterator end()" 16501 0  () "    const_iterator end()" 16501]
[ebrowse-ms "end" () 0 () "    iterator end()" 16400 0  () "    iterator end()" 16400]
[ebrowse-ms "equal" () 4 () "    bool equal(const" 5973 1  () "    bool equal(const" 5973]
[ebrowse-ms "erase" () 0 () "    const_iterator erase(const" 14271 0  () "    const_iterator erase(const" 14271]
[ebrowse-ms "extractKey" () 4 () "    const key_type& extractKey(const" 6124 1  () "    const key_type& extractKey(const" 6124]
[ebrowse-ms "find" () 4 () "    const_iterator find(const" 11838 0  () "    const_iterator find(const" 11838]
[ebrowse-ms "find" () 0 () "    iterator find(const" 11552 0  () "    iterator find(const" 11552]
[ebrowse-ms "find_or_insert" () 0 () "    value_type& find_or_insert(const" 12938 0  () "    value_type& find_or_insert(const" 12938]
[ebrowse-ms "getBucketByIndex" () 4 () "    const Bucket* getBucketByIndex(const" 6889 1  () "    const Bucket* getBucketByIndex(const" 6889]
[ebrowse-ms "getBucketByIndex" () 0 () "    Bucket* getBucketByIndex(const" 6718 1  () "    Bucket* getBucketByIndex(const" 6718]
[ebrowse-ms "getBucketByKey" () 4 () "    const Bucket* getBucketByKey(const" 6601 1  () "    const Bucket* getBucketByKey(const" 6601]
[ebrowse-ms "getBucketByKey" () 0 () "    Bucket* getBucketByKey(const" 6482 1  () "    Bucket* getBucketByKey(const" 6482]
[ebrowse-ms "getBucketIndex" () 4 () "    size_type getBucketIndex(const" 6377 1  () "    size_type getBucketIndex(const" 6377]
[ebrowse-ms "hash" () 4 () "    size_type hash(const" 5867 1  () "    size_type hash(const" 5867]
[ebrowse-ms "hash_table" () 0 () "    hash_table(const hash_table& other) :" 9213 0  () "    hash_table(const hash_table& other) :" 9213]
[ebrowse-ms "hash_table" () 0 () " const _HashFcn& hash, const _EqualKey& equal) :" 8961 0  () " const _HashFcn& hash, const _EqualKey& equal) :" 8961]
[ebrowse-ms "hash_table" () 0 () "e_type initial_capacity, const _HashFcn& hash) :" 8685 0  () "e_type initial_capacity, const _HashFcn& hash) :" 8685]
[ebrowse-ms "hash_table" () 0 () "    hash_table(size_type initial_capacity) :" 8432 0  () "    hash_table(size_type initial_capacity) :" 8432]
[ebrowse-ms "hash_table" () 0 () "    hash_table() :" 8207 0  () "    hash_table() :" 8207]
[ebrowse-ms "init" () 0 () "    void init()" 11081 0  () "    void init()" 11081]
[ebrowse-ms "insert" () 0 () "    std::pair<iterator, bool> insert(const" 12224 0  () "    std::pair<iterator, bool> insert(const" 12224]
[ebrowse-ms "load_factor" () 4 () "    float load_factor()" 15666 0  () "    float load_factor()" 15666]
[ebrowse-ms "operator =" () 0 () "    hash_table& operator=(const" 9504 0  () "    hash_table& operator=(const" 9504]
[ebrowse-ms "resize" () 0 () "    void resize()" 7149 1  () "    void resize()" 7149]
[ebrowse-ms "size" () 4 () "    size_type size()" 15430 0  () "    size_type size()" 15430]
[ebrowse-ms "swap" () 0 () "    void swap(hash_table" 10813 0  () "    void swap(hash_table" 10813]
[ebrowse-ms "~hash_table" () 0 () "    ~hash_table()" 9423 0  () "    ~hash_table()" 9423]
)
()
()
()
([ebrowse-ms "Bucket" () 0 () "    typedef BucketNode Bucket;" 5014 1  () () 0]
[ebrowse-ms "Data" () 0 () "    typedef std::vector<Bucket*> Data;" 5098 1  () () 0]
[ebrowse-ms "data_const_iter" () 0 () "f typename Data::const_iterator data_const_iter;" 5204 1  () () 0]
[ebrowse-ms "data_iter" () 0 () "    typedef typename Data::iterator data_iter;" 5145 1  () () 0]
[ebrowse-ms "hasher" () 0 () "    typedef _HashFcn hasher;" 4425 0  () () 0]
[ebrowse-ms "key_equal" () 0 () "    typedef _EqualKey key_equal;" 4458 0  () () 0]
[ebrowse-ms "key_type" () 0 () "    typedef _Key key_type;" 4365 0  () () 0]
[ebrowse-ms "size_type" () 0 () "    typedef Hash::size_type size_type;" 4338 0  () () 0]
[ebrowse-ms "value_type" () 0 () "    typedef _Value value_type;" 4396 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "PrettyPrinter" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/pretty_printer.h" "  class PrettyPrinter {" 892"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/pretty_printer.h" ]
([ebrowse-ts [ebrowse-cs "PrettyPrinterCore" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" "  class PrettyPrinterCore:" 1164"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" ]
()([ebrowse-ms "d_core" () 0 () "    TheoryCore *d_core;" 1222 2  () () 0]
)
([ebrowse-ms "PrettyPrinterCore" () 0 () "    PrettyPrinterCore(TheoryCore* core):" 1353 0  () "    PrettyPrinterCore(TheoryCore* core):" 1353]
[ebrowse-ms "PrettyPrinterCore" () 0 () "    PrettyPrinterCore() {" 1286 2  () "    PrettyPrinterCore() {" 1286]
[ebrowse-ms "print" () 1 () "    ExprStream& print(ExprStream" 1411 0  () "    ExprStream& print(ExprStream" 1411]
)
()
()
()
()
()()
])()
([ebrowse-ms "PrettyPrinter" () 0 () "    PrettyPrinter() {" 950 0  () "    PrettyPrinter() {" 950]
[ebrowse-ms "print" () 9 () "    virtual ExprStream& print(ExprStream" 1114 0  () () 0]
[ebrowse-ms "~PrettyPrinter" () 1 () "    virtual ~PrettyPrinter()" 1010 0  () "    virtual ~PrettyPrinter()" 1010]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNF_Formula_Impl" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf.cpp" ]
()()
([ebrowse-ms "newClause" () 0 () () 0 0  () "void CNF_Formula_Impl::newClause()" 3298]
[ebrowse-ms "registerUnit" () 0 () () 0 0  () "void CNF_Formula_Impl::registerUnit()" 3417]
[ebrowse-ms "reset" () 0 () () 0 0  () "void CNF_Formula_Impl::reset()" 4116]
[ebrowse-ms "simplify" () 0 () () 0 0  () "void CNF_Formula_Impl::simplify()" 3602]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "DebugTime" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "class DebugTime {" 1596"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" ]
()([ebrowse-ms "d_clock" () 0 () "  clock_t d_clock;" 1623 0  () () 0]
)
([ebrowse-ms "DebugTime" () 0 () "  DebugTime(const clock_t& clock):" 1697 0  () "  DebugTime(const clock_t& clock):" 1697]
[ebrowse-ms "DebugTime" () 0 () "  DebugTime() {" 1656 0  () "  DebugTime() {" 1656]
[ebrowse-ms "operator +=" () 0 () "  DebugTime& operator+=(const" 1854 0  () "  DebugTime& operator+=(const" 1854]
[ebrowse-ms "operator -=" () 0 () "  DebugTime& operator-=(const" 1948 0  () "  DebugTime& operator-=(const" 1948]
[ebrowse-ms "reset" () 0 () "  void reset()" 1771 0  () "  void reset()" 1771]
)
()
()
([ebrowse-ms "operator !=" () 34 () "  friend bool operator!=(const" 2112 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(const" 7313]
[ebrowse-ms "operator <" () 2 () "  friend bool operator<(const" 2180 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "inline bool operator<(const" 10630]
[ebrowse-ms "operator <<" () 0 () "  friend ostream& operator<<(ostream" 2458 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator <=" () 34 () "  friend bool operator<=(const" 2315 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator<=(const" 14830]
[ebrowse-ms "operator ==" () 2 () "  friend bool operator==(const" 2044 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
[ebrowse-ms "operator >" () 34 () "  friend bool operator>(const" 2247 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>(const" 14929]
[ebrowse-ms "operator >=" () 34 () "  friend bool operator>=(const" 2383 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>=(const" 15028]
)
()
()()
][ebrowse-ts [ebrowse-cs "Proof" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  class Proof {" 966"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" ]
()([ebrowse-ms "d_proof" () 0 () "    Expr d_proof;" 995 2  () () 0]
)
([ebrowse-ms "Proof" () 0 () "    Proof() :" 1244 0  () "    Proof() :" 1244]
[ebrowse-ms "Proof" () 0 () "    Proof(const Proof& p) :" 1177 0  () "    Proof(const Proof& p) :" 1177]
[ebrowse-ms "getExpr" () 4 () "    Expr getExpr()" 1305 0  () "    Expr getExpr()" 1305]
[ebrowse-ms "isNull" () 4 () "    bool isNull()" 1376 0  () "    bool isNull()" 1376]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 1526 0  () "    std::string toString()" 1526]
)
()
()
([ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 1467 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
)
()
()()
][ebrowse-ts [ebrowse-cs "Literal" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "  class Literal {" 4187"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" ]
()([ebrowse-ms "d_negative" () 0 () "    bool d_negative;" 4239 2  () () 0]
[ebrowse-ms "d_var" () 0 () "    Variable d_var;" 4218 2  () () 0]
)
([ebrowse-ms "Literal" () 0 () "      :" 4571 0  () "      :" 4571]
[ebrowse-ms "Literal" () 0 () "    Literal():" 4424 0  () "    Literal():" 4424]
[ebrowse-ms "Literal" () 0 () "      :" 4304 0  () "      :" 4304]
[ebrowse-ms "added" () 4 () "    bool added()" 6504 0  () "    bool added()" 6504]
[ebrowse-ms "added" () 0 () "    bool& added()" 6233 0  () "    bool& added()" 6233]
[ebrowse-ms "count" () 4 () "    unsigned count()" 6316 0  () "    unsigned count()" 6316]
[ebrowse-ms "count" () 0 () "    unsigned& count()" 6060 0  () "    unsigned& count()" 6060]
[ebrowse-ms "countPrev" () 4 () "    unsigned countPrev()" 6383 0  () "    unsigned countPrev()" 6383]
[ebrowse-ms "countPrev" () 0 () "    unsigned& countPrev()" 6122 0  () "    unsigned& countPrev()" 6122]
[ebrowse-ms "deriveTheorem" () 4 () "    Theorem deriveTheorem()" 5933 0  () "    Theorem deriveTheorem()" 5933]
[ebrowse-ms "getExpr" () 4 () "    const Expr& getExpr()" 4959 0  () "    const Expr& getExpr()" 4959]
[ebrowse-ms "getScope" () 4 () "    int getScope()" 5193 0  () "    int getScope()" 5193]
[ebrowse-ms "getTheorem" () 4 () "    const Theorem& getTheorem()" 5603 0  () "    const Theorem& getTheorem()" 5603]
[ebrowse-ms "getValue" () 4 () "    int getValue()" 5075 0  () "    int getValue()" 5075]
[ebrowse-ms "getVar" () 4 () "    const Variable& getVar()" 4729 0  () "    const Variable& getVar()" 4729]
[ebrowse-ms "getVar" () 0 () "    Variable& getVar()" 4682 0  () "    Variable& getVar()" 4682]
[ebrowse-ms "isNegative" () 4 () "    bool isNegative()" 4827 0  () "    bool isNegative()" 4827]
[ebrowse-ms "isNull" () 4 () "    bool isNull()" 4874 0  () "    bool isNull()" 4874]
[ebrowse-ms "isPositive" () 4 () "    bool isPositive()" 4775 0  () "    bool isPositive()" 4775]
[ebrowse-ms "score" () 4 () "    int score()" 6445 0  () "    int score()" 6445]
[ebrowse-ms "score" () 0 () "    int& score()" 6179 0  () "    int& score()" 6179]
[ebrowse-ms "setValue" () 0 () "    void setValue(const" 5504 0  () "    void setValue(const" 5504]
[ebrowse-ms "setValue" () 0 () "    void setValue(const" 5415 0  () "    void setValue(const" 5415]
[ebrowse-ms "toString" () 4 () "    std::string toString()" 6782 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/variable.cpp" "Literal::toString()" 5418]
[ebrowse-ms "wp" () 4 () "    std::vector<std::pair<Clause, int> >& wp()" 6621 0  () "    std::vector<std::pair<Clause, int> >& wp()" 6621]
)
()
()
([ebrowse-ms "operator <<" () 0 () "    friend std::ostream& operator<<(std" 6722 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator ==" () 0 () "    friend bool operator==(const" 6838 0  () "    friend bool operator==(const" 6838]
)
()
()()
][ebrowse-ts [ebrowse-cs "BVConstExpr" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" ]
()()
([ebrowse-ms "BVConstExpr" () 0 () () 0 0  () "              size_t mmIndex, ExprIndex idx)
  :" 175203]
[ebrowse-ms "BVConstExpr" () 0 () () 0 0  () "			 size_t mmIndex, ExprIndex idx)
  :" 174463]
[ebrowse-ms "computeHash" () 4 () () 0 0  () "size_t BVConstExpr::computeHash()" 175537]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoremManager" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem_manager.h" "  class TheoremManager {" 931"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem_manager.h" ]
()([ebrowse-ms "d_active" () 0 () "    bool d_active;" 1194 2  () () 0]
[ebrowse-ms "d_cachedValues" () 0 () "    std::hash_map<long, int> d_cachedValues;" 1371 2  () () 0]
[ebrowse-ms "d_cm" () 0 () "    ContextManager* d_cm;" 968 2  () () 0]
[ebrowse-ms "d_em" () 0 () "    ExprManager* d_em;" 991 2  () () 0]
[ebrowse-ms "d_expandFlags" () 0 () "    std::hash_map<long, bool> d_expandFlags;" 1416 2  () () 0]
[ebrowse-ms "d_flag" () 0 () "    unsigned d_flag;" 1137 2  () () 0]
[ebrowse-ms "d_flags" () 0 () "    const CLFlags& d_flags;" 1019 2  () () 0]
[ebrowse-ms "d_litFlags" () 0 () "    std::hash_map<long, bool> d_litFlags;" 1458 2  () () 0]
[ebrowse-ms "d_mm" () 0 () "    MemoryManager* d_mm;" 1044 2  () () 0]
[ebrowse-ms "d_reflFlags" () 0 () "    std::hash_map<long, bool> d_reflFlags;" 1326 2  () () 0]
[ebrowse-ms "d_rules" () 0 () "    CommonProofRules* d_rules;" 1282 2  () () 0]
[ebrowse-ms "d_rwmm" () 0 () "    MemoryManager* d_rwmm;" 1071 2  () () 0]
[ebrowse-ms "d_withAssump" () 0 () "    bool d_withAssump;" 1116 2  () () 0]
[ebrowse-ms "d_withProof" () 0 () "    bool d_withProof;" 1093 2  () () 0]
)
([ebrowse-ms "TheoremManager" () 0 () "                   const CLFlags& flags);" 1566 0  () () 0]
[ebrowse-ms "clear" () 0 () "    void clear()" 1960 0  () () 0]
[ebrowse-ms "clearAllFlags" () 0 () "    void clearAllFlags()" 2466 0  () "    void clearAllFlags()" 2466]
[ebrowse-ms "createProofRules" () 0 () "    CommonProofRules* createProofRules()" 1500 2  () () 0]
[ebrowse-ms "getCM" () 4 () "    ContextManager* getCM()" 2087 0  () "    ContextManager* getCM()" 2087]
[ebrowse-ms "getCachedValue" () 0 () "    int getCachedValue(long" 2930 0  () "    int getCachedValue(long" 2930]
[ebrowse-ms "getEM" () 4 () "    ExprManager* getEM()" 2135 0  () "    ExprManager* getEM()" 2135]
[ebrowse-ms "getExpandFlag" () 0 () "    bool getExpandFlag(long" 3203 0  () "    bool getExpandFlag(long" 3203]
[ebrowse-ms "getFlag" () 4 () "    unsigned getFlag()" 2401 0  () "    unsigned getFlag()" 2401]
[ebrowse-ms "getFlags" () 4 () "    const CLFlags& getFlags()" 2188 0  () "    const CLFlags& getFlags()" 2188]
[ebrowse-ms "getLitFlag" () 0 () "    bool getLitFlag(long" 3470 0  () "    bool getLitFlag(long" 3470]
[ebrowse-ms "getMM" () 4 () "    MemoryManager* getMM()" 2241 0  () "    MemoryManager* getMM()" 2241]
[ebrowse-ms "getRWMM" () 4 () "    MemoryManager* getRWMM()" 2293 0  () "    MemoryManager* getRWMM()" 2293]
[ebrowse-ms "getRules" () 4 () "    CommonProofRules* getRules()" 2351 0  () "    CommonProofRules* getRules()" 2351]
[ebrowse-ms "isActive" () 0 () "    bool isActive()" 2037 0  () "    bool isActive()" 2037]
[ebrowse-ms "isFlagged" () 0 () "    bool isFlagged(long" 2780 0  () "    bool isFlagged(long" 2780]
[ebrowse-ms "setCachedValue" () 0 () "    void setCachedValue(long" 2853 0  () "    void setCachedValue(long" 2853]
[ebrowse-ms "setExpandFlag" () 0 () "    void setExpandFlag(long" 3126 0  () "    void setExpandFlag(long" 3126]
[ebrowse-ms "setFlag" () 0 () "    void setFlag(long" 2722 0  () "    void setFlag(long" 2722]
[ebrowse-ms "setLitFlag" () 0 () "    void setLitFlag(long" 3399 0  () "    void setLitFlag(long" 3399]
[ebrowse-ms "withAssumptions" () 0 () "    bool withAssumptions()" 2639 0  () "    bool withAssumptions()" 2639]
[ebrowse-ms "withProof" () 0 () "    bool withProof()" 2578 0  () "    bool withProof()" 2578]
[ebrowse-ms "~TheoremManager" () 0 () "    ~TheoremManager()" 1690 0  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "TheoremManager" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem_manager.cpp" ]
()()
([ebrowse-ms "TheoremManager" () 0 () () 0 0  () "                       const CLFlags& flags)
  :" 1277]
[ebrowse-ms "clear" () 0 () () 0 0  () "void TheoremManager::clear()" 2103]
[ebrowse-ms "createProofRules" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/common_theorem_producer.cpp" "onProofRules* TheoremManager::createProofRules()" 864]
[ebrowse-ms "~TheoremManager" () 0 () () 0 0  () "TheoremManager::~TheoremManager()" 2036]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNF_Formula" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "class CNF_Formula {" 3413"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" ]
([ebrowse-ts [ebrowse-cs "CD_CNF_Formula" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "class CD_CNF_Formula :" 5270"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" ]
()([ebrowse-ms "d_formula" () 0 () "  CVC3::CDList<Clause> d_formula;" 5324 2  () () 0]
[ebrowse-ms "d_numVars" () 0 () "  CVC3::CDO<unsigned> d_numVars;" 5357 2  () () 0]
)
([ebrowse-ms "CD_CNF_Formula" () 0 () "    :" 5457 0  () "    :" 5457]
[ebrowse-ms "begin" () 5 () "  const_iterator begin()" 5710 0  () "  const_iterator begin()" 5710]
[ebrowse-ms "deleteLast" () 0 () "  void deleteLast()" 5937 0  () "  void deleteLast()" 5937]
[ebrowse-ms "empty" () 5 () "  bool empty()" 5584 0  () "  bool empty()" 5584]
[ebrowse-ms "end" () 5 () "  const_iterator end()" 5769 0  () "  const_iterator end()" 5769]
[ebrowse-ms "newClause" () 1 () "  void newClause()" 5983 0  () () 0]
[ebrowse-ms "numClauses" () 5 () "  unsigned numClauses()" 5882 0  () "  unsigned numClauses()" 5882]
[ebrowse-ms "numVars" () 5 () "  unsigned numVars()" 5824 0  () "  unsigned numVars()" 5824]
[ebrowse-ms "operator []" () 5 () "  const Clause& operator[](int" 5651 0  () "  const Clause& operator[](int" 5651]
[ebrowse-ms "registerUnit" () 1 () "  void registerUnit()" 6006 0  () () 0]
[ebrowse-ms "setNumVars" () 1 () "  void setNumVars(unsigned" 5393 2  () "  void setNumVars(unsigned" 5393]
[ebrowse-ms "~CD_CNF_Formula" () 0 () "  ~CD_CNF_Formula()" 5565 0  () "  ~CD_CNF_Formula()" 5565]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CNF_Formula_Impl" "SAT" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "class CNF_Formula_Impl :" 4385"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" ]
()([ebrowse-ms "d_formula" () 0 () "  std::deque<Clause> d_formula;" 4472 2  () () 0]
[ebrowse-ms "d_lits" () 0 () "  std::hash_map<int, bool> d_lits;" 4440 2  () () 0]
[ebrowse-ms "d_numVars" () 0 () "  unsigned d_numVars;" 4494 2  () () 0]
)
([ebrowse-ms "CNF_Formula_Impl" () 0 () "  CNF_Formula_Impl(const CNF_Formula& cnf) :" 4651 0  () "  CNF_Formula_Impl(const CNF_Formula& cnf) :" 4651]
[ebrowse-ms "CNF_Formula_Impl" () 0 () "  CNF_Formula_Impl() :" 4593 0  () "  CNF_Formula_Impl() :" 4593]
[ebrowse-ms "begin" () 5 () "  const_iterator begin()" 4868 0  () "  const_iterator begin()" 4868]
[ebrowse-ms "deleteLast" () 0 () "  void deleteLast()" 5089 0  () "  void deleteLast()" 5089]
[ebrowse-ms "empty" () 5 () "  bool empty()" 4742 0  () "  bool empty()" 4742]
[ebrowse-ms "end" () 5 () "  const_iterator end()" 4927 0  () "  const_iterator end()" 4927]
[ebrowse-ms "newClause" () 1 () "  void newClause()" 5182 0  () () 0]
[ebrowse-ms "numClauses" () 5 () "  unsigned numClauses()" 5034 0  () "  unsigned numClauses()" 5034]
[ebrowse-ms "numVars" () 5 () "  unsigned numVars()" 4982 0  () "  unsigned numVars()" 4982]
[ebrowse-ms "operator []" () 5 () "  const Clause& operator[](int" 4809 0  () "  const Clause& operator[](int" 4809]
[ebrowse-ms "registerUnit" () 1 () "  void registerUnit()" 5205 0  () () 0]
[ebrowse-ms "reset" () 0 () "  void reset()" 5241 0  () () 0]
[ebrowse-ms "setNumVars" () 1 () "  void setNumVars(unsigned" 4530 2  () "  void setNumVars(unsigned" 4530]
[ebrowse-ms "simplify" () 0 () "  void simplify()" 5225 0  () () 0]
[ebrowse-ms "~CNF_Formula_Impl" () 0 () "  ~CNF_Formula_Impl()" 4722 0  () "  ~CNF_Formula_Impl()" 4722]
)
()
()
()
()
()()
])([ebrowse-ms "d_current" () 0 () "  Clause* d_current;" 3445 1  () () 0]
)
([ebrowse-ms "CNF_Formula" () 0 () "  CNF_Formula() :" 3557 0  () "  CNF_Formula() :" 3557]
[ebrowse-ms "addLiteral" () 0 () "  void addLiteral(Lit" 4015 0  () "  void addLiteral(Lit" 4015]
[ebrowse-ms "begin" () 13 () "  virtual const_iterator begin()" 3789 0  () () 0]
[ebrowse-ms "copy" () 0 () "  void copy(const" 3513 1  () () 0]
[ebrowse-ms "empty" () 13 () "  virtual bool empty()" 3692 0  () () 0]
[ebrowse-ms "end" () 13 () "  virtual const_iterator end()" 3831 0  () () 0]
[ebrowse-ms "getCurrentClause" () 0 () "  Clause& getCurrentClause()" 4203 0  () "  Clause& getCurrentClause()" 4203]
[ebrowse-ms "newClause" () 9 () "  virtual void newClause()" 3952 0  () () 0]
[ebrowse-ms "numClauses" () 13 () "  virtual unsigned numClauses()" 3914 0  () () 0]
[ebrowse-ms "numVars" () 13 () "  virtual unsigned numVars()" 3871 0  () () 0]
[ebrowse-ms "operator +=" () 0 () "  const CNF_Formula& operator+=(const" 4343 0  () () 0]
[ebrowse-ms "operator []" () 13 () "  virtual const Clause& operator[](int" 3742 0  () () 0]
[ebrowse-ms "print" () 4 () "  void print()" 4241 0  () () 0]
[ebrowse-ms "registerUnit" () 9 () "  virtual void registerUnit()" 3987 0  () () 0]
[ebrowse-ms "setNumVars" () 9 () "  virtual void setNumVars(unsigned" 3481 1  () () 0]
[ebrowse-ms "~CNF_Formula" () 1 () "  virtual ~CNF_Formula()" 3603 0  () "  virtual ~CNF_Formula()" 3603]
)
()
()
()
([ebrowse-ms "const_iterator" () 0 () "d::deque<Clause>::const_iterator const_iterator;" 3668 0  () () 0]
)
()()
][ebrowse-ts [ebrowse-cs "CNF_Formula" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf.cpp" ]
()()
([ebrowse-ms "copy" () 0 () () 0 0  () "void CNF_Formula::copy(const" 1407]
[ebrowse-ms "operator +=" () 0 () () 0 0  () "const CNF_Formula& CNF_Formula::operator+=(const" 2872]
[ebrowse-ms "print" () 4 () () 0 0  () "void CNF_Formula::print()" 2109]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Proxy" "CVC3::ExprMap<>::const_iterator" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" "      class Proxy {" 8390"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" ]
()([ebrowse-ms "d_pair" () 0 () "	const std::pair<const Expr,Data>& d_pair;" 8433 2  () () 0]
)
([ebrowse-ms "Proxy" () 0 () "	Proxy(const std::pair<Expr,Data>& pair) :" 8460 0  () "	Proxy(const std::pair<Expr,Data>& pair) :" 8460]
[ebrowse-ms "operator *" () 0 () "	std::pair<const Expr,Data> operator*()" 8547 0  () "	std::pair<const Expr,Data> operator*()" 8547]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Proxy" "CVC3::CDMap<>::orderedIterator" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "      class Proxy {" 9688"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" ]
()([ebrowse-ms "d_pair" () 0 () "	const std::pair<const Key, Data>* d_pair;" 9731 2  () () 0]
)
([ebrowse-ms "Proxy" () 0 () "	Proxy(const std::pair<const Key, Data>& p):" 9758 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "	Proxy(const std::pair<const Key, Data>& p):" 9758]
[ebrowse-ms "operator *" () 0 () "	std::pair<const Key, Data>& operator*()" 9846 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "	std::pair<const Key, Data>& operator*()" 9846]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "Proxy" "CVC3::Expr::iterator" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "      class Proxy {" 8186"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" ]
()([ebrowse-ms "d_e" () 0 () "      const Expr* d_e;" 8599 2  () () 0]
[ebrowse-ms "d_pair" () 0 () "	const std::pair<const Key, Data>* d_pair;" 8229 2  () () 0]
[ebrowse-ms "d_t" () 0 () "	const Theorem* d_t;" 4618 2  () () 0]
)
([ebrowse-ms "Proxy" () 0 () "	Proxy(std::pair<const Expr,Data>& pair) :" 9958 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" "	Proxy(std::pair<const Expr,Data>& pair) :" 9958]
[ebrowse-ms "Proxy" () 0 () "	Proxy(const std::pair<const Key, Data>& p):" 8256 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "	Proxy(const std::pair<const Key, Data>& p):" 8256]
[ebrowse-ms "Proxy" () 0 () "	Proxy(const Theorem& t) :" 4645 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/assumptions.h" "	Proxy(const Theorem& t) :" 4645]
[ebrowse-ms "operator *" () 0 () "	std::pair<const Key, Data>& operator*()" 8344 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "	std::pair<const Key, Data>& operator*()" 8344]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CompleteInstPreProcessor" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_quant.h" " class CompleteInstPreProcessor {" 2200() ]
()([ebrowse-ms "d_allIndex" () 0 () "   std::set<Expr> d_allIndex;" 2331 2  () () 0]
[ebrowse-ms "d_all_good" () 0 () "   bool d_all_good ;" 2966 2  () () 0]
[ebrowse-ms "d_expr_pol" () 0 () "   ExprMap<Polarity> d_expr_pol ;" 2393 2  () () 0]
[ebrowse-ms "d_gnd_cache" () 0 () "   std::vector<Expr> d_gnd_cache;" 2531 2  () () 0]
[ebrowse-ms "d_is_macro_def" () 0 () "   ExprMap<bool> d_is_macro_def;" 2682 2  () () 0]
[ebrowse-ms "d_macro_def" () 0 () "   ExprMap<Expr> d_macro_def;" 2808 2  () () 0]
[ebrowse-ms "d_macro_lhs" () 0 () "   ExprMap<Expr> d_macro_lhs;" 2869 2  () () 0]
[ebrowse-ms "d_macro_quant" () 0 () "   ExprMap<Expr> d_macro_quant;" 2744 2  () () 0]
[ebrowse-ms "d_quant_equiv_map" () 0 () "   ExprMap<Expr> d_quant_equiv_map ;" 2459 2  () () 0]
[ebrowse-ms "d_quant_rules" () 0 () "   QuantProofRules* d_quant_rules;" 2300 2  () () 0]
[ebrowse-ms "d_theoryCore" () 0 () "   TheoryCore* d_theoryCore;" 2231 2  () () 0]
)
([ebrowse-ms "CompleteInstPreProcessor" () 0 () "stPreProcessor(TheoryCore * , QuantProofRules*);" 4021 0  () () 0]
[ebrowse-ms "addIndex" () 0 () "   void addIndex(const" 3189 2  () () 0]
[ebrowse-ms "collectHeads" () 0 () "   void collectHeads(const" 3528 2  () () 0]
[ebrowse-ms "collectIndex" () 0 () "   void collectIndex(const" 4200 0  () () 0]
[ebrowse-ms "collect_forall_index" () 0 () "   void collect_forall_index(const" 3284 2  () () 0]
[ebrowse-ms "collect_shield_index" () 0 () "   void collect_shield_index(const" 3238 2  () () 0]
[ebrowse-ms "hasMacros" () 0 () "   bool hasMacros(const" 4349 0  () () 0]
[ebrowse-ms "inst" () 0 () "   Expr inst(const" 4286 0  () () 0]
[ebrowse-ms "instMacros" () 0 () "   Expr instMacros(const" 4440 0  () () 0]
[ebrowse-ms "isGood" () 0 () "   bool isGood(const" 4123 0  () () 0]
[ebrowse-ms "isGoodQuant" () 0 () "   bool isGoodQuant(const" 3387 2  () () 0]
[ebrowse-ms "isMacro" () 0 () "   bool isMacro(const" 3631 2  () () 0]
[ebrowse-ms "isShield" () 0 () "   bool isShield(const" 3132 2  () () 0]
[ebrowse-ms "minusOne" () 0 () "   Expr minusOne(const" 3490 2  () () 0]
[ebrowse-ms "plusOne" () 0 () "   Expr plusOne(const" 3438 2  () () 0]
[ebrowse-ms "pullVarOut" () 0 () "   Expr pullVarOut(const" 3962 2  () () 0]
[ebrowse-ms "recInstMacros" () 0 () "   Expr recInstMacros(const" 3675 2  () () 0]
[ebrowse-ms "recRewriteNot" () 0 () "   Expr recRewriteNot(const" 3753 2  () () 0]
[ebrowse-ms "recSkolemize" () 0 () "   Expr recSkolemize(const" 3907 2  () () 0]
[ebrowse-ms "rewriteNot" () 0 () "   Expr rewriteNot(const" 3867 2  () () 0]
[ebrowse-ms "simplifyEq" () 0 () "   Expr simplifyEq(const" 4516 0  () () 0]
[ebrowse-ms "simplifyQuant" () 0 () "   Expr simplifyQuant(const" 4626 0  () () 0]
[ebrowse-ms "substMacro" () 0 () "   Expr substMacro(const" 3716 2  () () 0]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "CompleteInstPreProcessor" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" ]
()()
([ebrowse-ms "CompleteInstPreProcessor" () 0 () () 0 0  () "TheoryCore * core, QuantProofRules* quant_rule):" 38191]
[ebrowse-ms "addIndex" () 0 () () 0 0  () "void CompleteInstPreProcessor::addIndex(const" 49710]
[ebrowse-ms "collectHeads" () 0 () () 0 0  () "oid CompleteInstPreProcessor::collectHeads(const" 38382]
[ebrowse-ms "collectIndex" () 0 () () 0 0  () "oid CompleteInstPreProcessor::collectIndex(const" 53722]
[ebrowse-ms "collect_forall_index" () 0 () () 0 0  () "leteInstPreProcessor::collect_forall_index(const" 50749]
[ebrowse-ms "collect_shield_index" () 0 () () 0 0  () "leteInstPreProcessor::collect_shield_index(const" 50111]
[ebrowse-ms "hasMacros" () 0 () () 0 0  () "bool CompleteInstPreProcessor::hasMacros(const" 40214]
[ebrowse-ms "inst" () 0 () () 0 0  () "Expr CompleteInstPreProcessor::inst(const" 59145]
[ebrowse-ms "instMacros" () 0 () () 0 0  () "Expr CompleteInstPreProcessor::instMacros(const" 43537]
[ebrowse-ms "isGood" () 0 () () 0 0  () "bool CompleteInstPreProcessor::isGood(const" 55186]
[ebrowse-ms "isGoodQuant" () 0 () () 0 0  () "bool CompleteInstPreProcessor::isGoodQuant(const" 57224]
[ebrowse-ms "isMacro" () 0 () () 0 0  () "bool CompleteInstPreProcessor::isMacro(const" 38945]
[ebrowse-ms "isShield" () 0 () () 0 0  () "bool CompleteInstPreProcessor::isShield(const" 43823]
[ebrowse-ms "minusOne" () 0 () () 0 0  () "Expr CompleteInstPreProcessor::minusOne(const" 49959]
[ebrowse-ms "plusOne" () 0 () () 0 0  () "Expr CompleteInstPreProcessor::plusOne(const" 49820]
[ebrowse-ms "pullVarOut" () 0 () () 0 0  () "Expr CompleteInstPreProcessor::pullVarOut(const" 35435]
[ebrowse-ms "recInstMacros" () 0 () () 0 0  () "pr CompleteInstPreProcessor::recInstMacros(const" 42346]
[ebrowse-ms "recRewriteNot" () 0 () () 0 0  () "pr CompleteInstPreProcessor::recRewriteNot(const" 48296]
[ebrowse-ms "recSkolemize" () 0 () () 0 0  () "xpr CompleteInstPreProcessor::recSkolemize(const" 46590]
[ebrowse-ms "rewriteNot" () 0 () () 0 0  () "Expr CompleteInstPreProcessor::rewriteNot(const" 48073]
[ebrowse-ms "simplifyEq" () 0 () () 0 0  () "Expr CompleteInstPreProcessor::simplifyEq(const" 41342]
[ebrowse-ms "simplifyQuant" () 0 () () 0 0  () "pr CompleteInstPreProcessor::simplifyQuant(const" 47609]
[ebrowse-ms "substMacro" () 0 () () 0 0  () "Expr CompleteInstPreProcessor::substMacro(const" 40451]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "*Globals*" () 0() () 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/theory_uf.cpp" ]
()([ebrowse-ms "ArithKinds" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "  } ArithKinds;" 1090]
[ebrowse-ms "ArithLang" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/translator.h" "} ArithLang;" 1212]
[ebrowse-ms "ArrayKinds" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" " } ArrayKinds;" 894]
[ebrowse-ms "BVKinds" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_bitvector.h" "  } BVKinds;" 1502]
[ebrowse-ms "CLFlagType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/command_line_flags.h" "  } CLFlagType;" 967]
[ebrowse-ms "CVC3" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/theory_simulate.cpp" "using namespace CVC3;" 846]
[ebrowse-ms "Cardinality" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  } Cardinality;" 1860]
[ebrowse-ms "DatatypeKinds" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "  } DatatypeKinds;" 885]
[ebrowse-ms "ExprValueType" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  } ExprValueType;" 1736]
[ebrowse-ms "FOUND_FALSE" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "const int FOUND_FALSE = 1;" 1252]
[ebrowse-ms "FormulaValue" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/formula_value.h" "} FormulaValue;" 978]
[ebrowse-ms "Hash" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/compat_hash_map.h" "  using namespace Hash;" 1146]
[ebrowse-ms "InputLanguage" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/lang.h" "  } InputLanguage;" 1211]
[ebrowse-ms "Int" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/PL.y" "		|       Int
		;" 30951]
[ebrowse-ms "Kind" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/kinds.h" "} Kind;" 6953]
[ebrowse-ms "LIMIT" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/bryant.cpp" "const int LIMIT = 55;" 199]
[ebrowse-ms "Lisp_flex_debug" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lisp_flex_debug = 0;" 16621]
[ebrowse-ms "Lisp_inputLine" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "extern int Lisp_inputLine;" 17708]
[ebrowse-ms "Lispin" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "FILE *Lispin = (FILE *) 0," 10856]
[ebrowse-ms "Lispleng" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lispleng;" 8877]
[ebrowse-ms "Lisplineno" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lisplineno = 1;" 10952]
[ebrowse-ms "Lisplval" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp_defs.h" "extern YYSTYPE Lisplval;" 2497]
[ebrowse-ms "Lispout" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "ILE *Lispin = (FILE *) 0, *Lispout = (FILE *) 0;" 10879]
[ebrowse-ms "Lisptext" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "extern char *Lisptext;" 17731]
[ebrowse-ms "MiniSat" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_derivation.cpp" "using namespace MiniSat;" 725]
[ebrowse-ms "PLlval" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "extern YYSTYPE PLlval;" 8935]
[ebrowse-ms "Polarity" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_quant.h" " typedef enum{ Ukn, Pos, Neg, PosNeg} Polarity;" 1196]
[ebrowse-ms "QueryResult" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/queryresult.h" "} QueryResult;" 1096]
[ebrowse-ms "RecordKinds" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_records.h" " } RecordKinds;" 841]
[ebrowse-ms "SAT" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" "using namespace SAT;" 1021]
[ebrowse-ms "UFKinds" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_uf.h" " } UFKinds;" 865]
[ebrowse-ms "c_interface_error_flag" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "int c_interface_error_flag = 1;" 1048]
[ebrowse-ms "c_interface_error_message" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "ption Occured: System in a compromised state.\";" 1172]
[ebrowse-ms "c_interface_error_string" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "string c_interface_error_string;" 1205]
[ebrowse-ms "chunkSizeBytes" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_context.h" "  const unsigned chunkSizeBytes = 16384;" 789]
[ebrowse-ms "clause_mem_base" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "    + sizeof (CVC3::Theorem);" 886]
[ebrowse-ms "debug_full" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "const bool debug_full = false;" 3783]
[ebrowse-ms "debug_skolem" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/vcl/vc_cmd.cpp" "bool debug_skolem = false;" 5898]
[ebrowse-ms "debug_write" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/theory_array.cpp" "bool debug_write = false;" 30922]
[ebrowse-ms "debugger" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  extern CVC_DLL Debug debugger;" 15279]
[ebrowse-ms "defer_theory_propagation" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "const bool defer_theory_propagation = true;" 2514]
[ebrowse-ms "eager_explanation" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "const bool eager_explanation = true;" 2674]
[ebrowse-ms "error_int" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "const int error_int = -100;" 1076]
[ebrowse-ms "keep_lazy_explanation" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "const bool keep_lazy_explanation = true;" 2883]
[ebrowse-ms "l_False" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "const lbool l_False = toLbool(-1);" 8095]
[ebrowse-ms "l_True" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "const lbool l_True  = toLbool( 1);" 8060]
[ebrowse-ms "l_Undef" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "const lbool l_Undef = toLbool( 0);" 8130]
[ebrowse-ms "num_primes" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "  const size_type num_primes = 28;" 2642]
[ebrowse-ms "parserTemp" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "  ParserTemp* parserTemp;" 2303]
[ebrowse-ms "prop_lookahead" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "const vector<Var>::size_type prop_lookahead = 1;" 3625]
[ebrowse-ms "protocol" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "const bool protocol = false;" 3680]
[ebrowse-ms "push_theory_clause" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "const bool push_theory_clause = true;" 3516]
[ebrowse-ms "push_theory_implication" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "const bool push_theory_implication = true;" 3358]
[ebrowse-ms "push_theory_propagation" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "const bool push_theory_propagation = true;" 3216]
[ebrowse-ms "smtlib_flex_debug" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlib_flex_debug = 0;" 22149]
[ebrowse-ms "smtlib_inputLine" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "extern int smtlib_inputLine;" 23228]
[ebrowse-ms "smtlibin" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "FILE *smtlibin = (FILE *) 0," 10984]
[ebrowse-ms "smtlibleng" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlibleng;" 8949]
[ebrowse-ms "smtliblineno" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtliblineno = 1;" 11086]
[ebrowse-ms "smtliblval" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "extern YYSTYPE smtliblval;" 4366]
[ebrowse-ms "smtlibout" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "*smtlibin = (FILE *) 0, *smtlibout = (FILE *) 0;" 11009]
[ebrowse-ms "smtlibtext" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "extern char *smtlibtext;" 23253]
[ebrowse-ms "std" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/theory_simulate.cpp" "using namespace std;" 824]
[ebrowse-ms "top" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "    yytype_int16 *top;" 22693]
[ebrowse-ms "var_Undef" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" "  const int var_Undef = -1;" 2390]
[ebrowse-ms "yychar" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "int yychar;" 31268]
[ebrowse-ms "yydebug" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "int yydebug;" 24094]
[ebrowse-ms "yylval" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "YYSTYPE yylval;" 31337]
[ebrowse-ms "yynerrs" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "int yynerrs;" 31390]
[ebrowse-ms "yyrule" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "    int yyrule;" 23383]
[ebrowse-ms "yysrc" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "    const char *yysrc;" 25687]
[ebrowse-ms "yytype" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "    int yytype;" 30683]
[ebrowse-ms "yyvaluep" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "    YYSTYPE *yyvaluep;" 30706]
)
([ebrowse-ms "Clause_new" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" "  Clause* Clause_new(const" 6713 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  Clause* Clause_new(const" 1060]
[ebrowse-ms "IF_DEBUG" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "IF_DEBUG(static" 11357 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "IF_DEBUG(static" 11357]
[ebrowse-ms "IF_DEBUG" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "IF_DEBUG(static" 1130 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "IF_DEBUG(static" 1130]
[ebrowse-ms "IF_DEBUG" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" "static" 109716 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" "static" 109716]
[ebrowse-ms "IF_DEBUG" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/vcl/vcl.cpp" "void" 16053 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/vcl/vcl.cpp" "void" 16053]
[ebrowse-ms "Lemma_new" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" "  Clause* Lemma_new(const" 6793 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  Clause* Lemma_new(const" 1233]
[ebrowse-ms "LispBufState" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern void *LispBufState()" 1311 0  () () 0]
[ebrowse-ms "Lisp_bufSize" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lisp_bufSize()" 18978 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lisp_bufSize()" 18978]
[ebrowse-ms "Lisp_bufState" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void *Lisp_bufState()" 19481 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void *Lisp_bufState()" 19481]
[ebrowse-ms "Lisp_buf_state" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_BUFFER_STATE Lisp_buf_state()" 19035 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_BUFFER_STATE Lisp_buf_state()" 19035]
[ebrowse-ms "Lisp_createBuffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void *Lisp_createBuffer(int" 19193 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void *Lisp_createBuffer(int" 19193]
[ebrowse-ms "Lisp_create_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_BUFFER_STATE Lisp_create_buffer (FILE" 9385 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    YY_BUFFER_STATE Lisp_create_buffer  (FILE" 42568]
[ebrowse-ms "Lisp_deleteBuffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisp_deleteBuffer(void" 19276 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisp_deleteBuffer(void" 19276]
[ebrowse-ms "Lisp_delete_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisp_delete_buffer (YY_BUFFER_STATE" 9445 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    void Lisp_delete_buffer (YY_BUFFER_STATE" 43272]
[ebrowse-ms "Lisp_flush_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisp_flush_buffer (YY_BUFFER_STATE" 9491 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    void Lisp_flush_buffer (YY_BUFFER_STATE" 44545]
[ebrowse-ms "Lisp_scan_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_BUFFER_STATE Lisp_scan_buffer (char" 9847 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_BUFFER_STATE Lisp_scan_buffer  (char" 48033]
[ebrowse-ms "Lisp_scan_bytes" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_BUFFER_STATE Lisp_scan_bytes (yyconst" 9972 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_BUFFER_STATE Lisp_scan_bytes  (yyconst" 49543]
[ebrowse-ms "Lisp_scan_string" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_BUFFER_STATE Lisp_scan_string (yyconst" 9914 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_BUFFER_STATE Lisp_scan_string (yyconst" 49120]
[ebrowse-ms "Lisp_setInteractive" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisp_setInteractive(bool" 19551 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisp_setInteractive(bool" 19551]
[ebrowse-ms "Lisp_switchToBuffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisp_switchToBuffer(void" 19381 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisp_switchToBuffer(void" 19381]
[ebrowse-ms "Lisp_switch_to_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisp_switch_to_buffer (YY_BUFFER_STATE" 9329 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    void Lisp_switch_to_buffer  (YY_BUFFER_STATE" 41237]
[ebrowse-ms "Lispalloc" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void *Lispalloc (yy_size_t" 10024 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void *Lispalloc (yy_size_t" 53591]
[ebrowse-ms "Lisperror" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "extern int Lisperror (const" 17760 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "int Lisperror(const" 4322]
[ebrowse-ms "Lispfree" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispfree (void" 10088 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispfree (void" 54115]
[ebrowse-ms "Lispget_debug" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lispget_debug (void" 20544 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lispget_debug  (void" 51821]
[ebrowse-ms "Lispget_extra" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "YY_EXTRA_TYPE Lispget_extra (void" 20622 0  () () 0]
[ebrowse-ms "Lispget_in" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "FILE *Lispget_in (void" 20701 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "FILE *Lispget_in  (void" 51052]
[ebrowse-ms "Lispget_leng" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lispget_leng (void" 20832 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lispget_leng  (void" 51244]
[ebrowse-ms "Lispget_lineno" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lispget_lineno (void" 20890 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lispget_lineno  (void" 50956]
[ebrowse-ms "Lispget_out" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "FILE *Lispget_out (void" 20766 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "FILE *Lispget_out  (void" 51141]
[ebrowse-ms "Lispget_text" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "char *Lispget_text (void" 20861 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "char *Lispget_text  (void" 51337]
[ebrowse-ms "Lisplex" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "extern int Lisplex (void" 23493 0  () () 0]
[ebrowse-ms "Lisplex_destroy" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lisplex_destroy (void" 20516 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "int Lisplex_destroy  (void" 52749]
[ebrowse-ms "Lispparse" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern int Lispparse()" 1137 0  () () 0]
[ebrowse-ms "Lisppop_buffer_state" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisppop_buffer_state (void" 9588 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisppop_buffer_state (void" 45998]
[ebrowse-ms "Lisppush_buffer_state" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisppush_buffer_state (YY_BUFFER_STATE" 9541 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisppush_buffer_state (YY_BUFFER_STATE" 45235]
[ebrowse-ms "Lisprealloc" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void *Lisprealloc (void" 10052 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void *Lisprealloc  (void" 53662]
[ebrowse-ms "Lisprestart" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lisprestart (FILE" 9269 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    void Lisprestart  (FILE" 40843]
[ebrowse-ms "Lispset_debug" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispset_debug (int" 20572 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispset_debug (int" 51883]
[ebrowse-ms "Lispset_extra" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispset_extra (YY_EXTRA_TYPE" 20660 0  () () 0]
[ebrowse-ms "Lispset_in" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispset_in  (FILE" 20728 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispset_in (FILE" 51684]
[ebrowse-ms "Lispset_lineno" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispset_lineno (int" 20919 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispset_lineno (int" 51456]
[ebrowse-ms "Lispset_out" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispset_out  (FILE" 20794 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "void Lispset_out (FILE" 51750]
[ebrowse-ms "Lispwrap" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "extern \"C\" int Lispwrap (void" 21099 0  () () 0]
[ebrowse-ms "PL_bufSize" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern int PL_bufSize()" 1011 0  () () 0]
[ebrowse-ms "PL_bufState" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern void *PL_bufState()" 1039 0  () () 0]
[ebrowse-ms "PL_createBuffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern void *PL_createBuffer(int" 909 0  () () 0]
[ebrowse-ms "PL_deleteBuffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern void PL_deleteBuffer(void" 944 0  () () 0]
[ebrowse-ms "PL_setInteractive" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "void PL_setInteractive(bool" 1068 0  () () 0]
[ebrowse-ms "PL_switchToBuffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern void PL_switchToBuffer(void" 983 0  () () 0]
[ebrowse-ms "PLparse" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern int PLparse()" 874 0  () () 0]
[ebrowse-ms "TheoremEq" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "inline bool TheoremEq(const" 38065 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "inline bool TheoremEq(const" 38065]
[ebrowse-ms "__stl_hash_string" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" "  inline size_t __stl_hash_string(const" 2018 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" "  inline size_t __stl_hash_string(const" 2018]
[ebrowse-ms "abs" () 32 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "T abs(T" 1249 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "T abs(T" 1249]
[ebrowse-ms "abs" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  Rational abs(const" 12799 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational abs(const" 5895]
[ebrowse-ms "andExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr andExpr(const" 30250 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr andExpr(const" 30250]
[ebrowse-ms "arrayLiteral" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/theory_array.cpp" "Expr arrayLiteral(const" 36865 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/theory_array.cpp" "Expr arrayLiteral(const" 36865]
[ebrowse-ms "arrayType" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline Type arrayType(const" 3502 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline Type arrayType(const" 3502]
[ebrowse-ms "canGetHead" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool canGetHead(const" 9371 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool canGetHead(const" 9371]
[ebrowse-ms "ceil" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  Rational ceil(const" 13235 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational ceil(const" 6168]
[ebrowse-ms "cmpExpr" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool cmpExpr( Expr" 139977 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool cmpExpr( Expr" 139977]
[ebrowse-ms "compare" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem.cpp" "  int compare(const" 1233 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr.cpp" "int compare(const" 15092]
[ebrowse-ms "compareByPtr" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem.cpp" "  int compareByPtr(const" 2295 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem.cpp" "  int compareByPtr(const" 2295]
[ebrowse-ms "cvcToMiniSat" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "  inline Var cvcToMiniSat(const" 5278 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "  inline Lit cvcToMiniSat(const" 5435]
[ebrowse-ms "cvcToMiniSat" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "bool MiniSat::cvcToMiniSat(const" 3881 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.cpp" "bool MiniSat::cvcToMiniSat(const" 3881]
[ebrowse-ms "debugError" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "CVC_DLL void debugError(const" 1368 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "CVC_DLL void debugError(const" 1368]
[ebrowse-ms "divideExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr divideExpr(const" 7615 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr divideExpr(const" 7615]
[ebrowse-ms "endl" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  CVC3::ExprStream& endl(CVC3" 10357 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  CVC3::ExprStream& endl(CVC3" 10357]
[ebrowse-ms "exprScore" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "int exprScore(const" 31185 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "int exprScore(const" 31185]
[ebrowse-ms "fatalError" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "CVC_DLL void fatalError(const" 892 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "CVC_DLL void fatalError(const" 892]
[ebrowse-ms "findAtom" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/theory_array.cpp" "Expr findAtom(Expr" 4503 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/theory_array.cpp" "Expr findAtom(Expr" 4503]
[ebrowse-ms "findPolarity" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "void findPolarity(const" 33411 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "void findPolarity(const" 33411]
[ebrowse-ms "findPolarityAtomic" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "void findPolarityAtomic(const" 44918 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "void findPolarityAtomic(const" 44918]
[ebrowse-ms "flatAnds" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "void flatAnds(const" 61691 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "void flatAnds(const" 61691]
[ebrowse-ms "floor" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  Rational floor(const" 12956 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational floor(const" 5988]
[ebrowse-ms "free" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "void free (void" 11400 0  () () 0]
[ebrowse-ms "gcd" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  Rational gcd(const" 11878 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational gcd(const" 4934]
[ebrowse-ms "gcd" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  Rational gcd(const" 11677 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational gcd(const" 4676]
[ebrowse-ms "geExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr geExpr(const" 7987 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr geExpr(const" 7987]
[ebrowse-ms "generateSatProof" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_minisat.cpp" "CVC3::Proof generateSatProof(SAT" 8282 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_minisat.cpp" "CVC3::Proof generateSatProof(SAT" 8282]
[ebrowse-ms "getBoundVars" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "std::set<Expr>  getBoundVars(const" 32854 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "std::set<Expr>  getBoundVars(const" 32854]
[ebrowse-ms "getConstructor" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline Expr getConstructor(const" 4883 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline Expr getConstructor(const" 4883]
[ebrowse-ms "getLanguage" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/lang.h" "  inline InputLanguage getLanguage(const" 1255 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/lang.h" "  inline InputLanguage getLanguage(const" 1255]
[ebrowse-ms "getLeft" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "Expr getLeft(const" 97094 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "Expr getLeft(const" 97094]
[ebrowse-ms "getPartTriggers" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "std::vector<Expr> getPartTriggers(const" 68018 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "std::vector<Expr> getPartTriggers(const" 68018]
[ebrowse-ms "getRight" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "Expr getRight(const" 97707 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "Expr getRight(const" 97707]
[ebrowse-ms "getSubTrig" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "std::vector<Expr> getSubTrig(const" 17826 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "std::vector<Expr> getSubTrig(const" 17826]
[ebrowse-ms "goodMultiTriggers" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool goodMultiTriggers(const" 75394 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool goodMultiTriggers(const" 75394]
[ebrowse-ms "gtExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr gtExpr(const" 7895 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr gtExpr(const" 7895]
[ebrowse-ms "hasMoreBVs" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "int hasMoreBVs(const" 92086 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "int hasMoreBVs(const" 92086]
[ebrowse-ms "int2string" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "inline std::string int2string(int" 1160 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "inline std::string int2string(int" 1160]
[ebrowse-ms "intRoot" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  Rational intRoot(const" 13742 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational intRoot(const" 6609]
[ebrowse-ms "isArray" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline bool isArray(const" 3161 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline bool isArray(const" 3161]
[ebrowse-ms "isArrayLiteral" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline bool isArrayLiteral(const" 3380 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline bool isArrayLiteral(const" 3380]
[ebrowse-ms "isConstructor" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline bool isConstructor(const" 4527 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline bool isConstructor(const" 4527]
[ebrowse-ms "isDarkShadow" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isDarkShadow(const" 6413 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isDarkShadow(const" 6413]
[ebrowse-ms "isDatatype" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline bool isDatatype(const" 4437 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline bool isDatatype(const" 4437]
[ebrowse-ms "isDivide" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isDivide(const" 6027 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isDivide(const" 6027]
[ebrowse-ms "isGE" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isGE(const" 6343 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isGE(const" 6343]
[ebrowse-ms "isGT" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isGT(const" 6281 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isGT(const" 6281]
[ebrowse-ms "isGoodFullTrigger" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGoodFullTrigger(const" 65464 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGoodFullTrigger(const" 65464]
[ebrowse-ms "isGoodMultiTrigger" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGoodMultiTrigger(const" 65852 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGoodMultiTrigger(const" 65852]
[ebrowse-ms "isGoodPartTrigger" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGoodPartTrigger(const" 66540 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGoodPartTrigger(const" 66540]
[ebrowse-ms "isGoodSysPredTrigger" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGoodSysPredTrigger(const" 65310 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGoodSysPredTrigger(const" 65310]
[ebrowse-ms "isGrayShadow" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isGrayShadow(const" 6491 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isGrayShadow(const" 6491]
[ebrowse-ms "isGround" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGround(const" 35136 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isGround(const" 35136]
[ebrowse-ms "isIneq" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isIneq(const" 6563 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isIneq(const" 6563]
[ebrowse-ms "isInt" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isInt(Type" 5494 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isInt(Type" 5494]
[ebrowse-ms "isIntPred" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isIntPred(const" 6655 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isIntPred(const" 6655]
[ebrowse-ms "isIntegerConst" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isIntegerConst(const" 5661 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isIntegerConst(const" 5661]
[ebrowse-ms "isIntx" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isIntx(const" 96961 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isIntx(const" 96961]
[ebrowse-ms "isLE" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isLE(const" 6219 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isLE(const" 6219]
[ebrowse-ms "isLT" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isLT(const" 6157 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isLT(const" 6157]
[ebrowse-ms "isMinus" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isMinus(const" 5892 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isMinus(const" 5892]
[ebrowse-ms "isMult" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isMult(const" 5959 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isMult(const" 5959]
[ebrowse-ms "isPlus" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isPlus(const" 5825 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isPlus(const" 5825]
[ebrowse-ms "isPow" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isPow(const" 6094 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isPow(const" 6094]
[ebrowse-ms "isRational" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isRational(const" 5592 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isRational(const" 5592]
[ebrowse-ms "isRead" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline bool isRead(const" 3238 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline bool isRead(const" 3238]
[ebrowse-ms "isReal" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isReal(Type" 5426 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isReal(Type" 5426]
[ebrowse-ms "isSelector" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline bool isSelector(const" 4695 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline bool isSelector(const" 4695]
[ebrowse-ms "isSimpleTrig" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isSimpleTrig(const" 9668 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isSimpleTrig(const" 9668]
[ebrowse-ms "isSuperSimpleTrig" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isSuperSimpleTrig(const" 9985 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isSuperSimpleTrig(const" 9985]
[ebrowse-ms "isSysPred" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isSysPred(const" 9270 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isSysPred(const" 9270]
[ebrowse-ms "isTester" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline bool isTester(const" 4787 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "inline bool isTester(const" 4787]
[ebrowse-ms "isUMinus" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isUMinus(const" 5757 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline bool isUMinus(const" 5757]
[ebrowse-ms "isUniterpFunc" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isUniterpFunc(const" 34912 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool isUniterpFunc(const" 34912]
[ebrowse-ms "isWrite" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline bool isWrite(const" 3305 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "inline bool isWrite(const" 3305]
[ebrowse-ms "isatty" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "extern int isatty (int" 51738 0  () () 0]
[ebrowse-ms "lcm" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  Rational lcm(const" 12530 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational lcm(const" 5598]
[ebrowse-ms "lcm" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  Rational lcm(const" 12302 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational lcm(const" 5340]
[ebrowse-ms "leExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr leExpr(const" 7803 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr leExpr(const" 7803]
[ebrowse-ms "lit_Error" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" "  const Lit lit_Error(var_Undef" 3662 0  () () 0]
[ebrowse-ms "lit_Undef" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" "  const Lit lit_Undef(var_Undef" 3588 0  () () 0]
[ebrowse-ms "locVar" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "inline size_t locVar(const" 76118 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "inline size_t locVar(const" 76118]
[ebrowse-ms "ltExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr ltExpr(const" 7711 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr ltExpr(const" 7711]
[ebrowse-ms "main" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "int main(int" 1767 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "int main(int" 1767]
[ebrowse-ms "malloc" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "void *malloc (YYSIZE_T" 11146 0  () () 0]
[ebrowse-ms "malloc_clause" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  void* malloc_clause(const" 915 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.cpp" "  void* malloc_clause(const" 915]
[ebrowse-ms "max" () 32 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "T max(T" 1306 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "T max(T" 1306]
[ebrowse-ms "miniSatToCVC" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "  inline SAT::Lit miniSatToCVC(Lit" 5577 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "  inline SAT::Lit miniSatToCVC(Lit" 5577]
[ebrowse-ms "miniSatToCVC" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "  inline SAT::Var miniSatToCVC(Var" 5364 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "  inline SAT::Var miniSatToCVC(Var" 5364]
[ebrowse-ms "minusExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr minusExpr(const" 7073 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr minusExpr(const" 7073]
[ebrowse-ms "mod" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  Rational mod(const" 13521 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  Rational mod(const" 6347]
[ebrowse-ms "multExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr multExpr(const" 7325 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr multExpr(const" 7325]
[ebrowse-ms "multExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr multExpr(const" 7170 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr multExpr(const" 7170]
[ebrowse-ms "newRational" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(const" 6896 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(const" 6896]
[ebrowse-ms "newRational" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(const" 6784 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(const" 6784]
[ebrowse-ms "newRational" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(const" 6683 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(const" 6683]
[ebrowse-ms "newRational" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(const" 6589 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(const" 6589]
[ebrowse-ms "newRational" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(int" 6512 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational newRational(int" 6512]
[ebrowse-ms "next_prime" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "  inline size_type next_prime(size_type" 3132 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "  inline size_type next_prime(size_type" 3132]
[ebrowse-ms "nodag" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& nodag(ExprStream" 9893 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& nodag(ExprStream" 9893]
[ebrowse-ms "operator !" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "  inline Literal operator!(const" 7068 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "  inline Literal operator!(const" 7151]
[ebrowse-ms "operator !=" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "  inline bool operator!=(const" 5060 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(const" 7730]
[ebrowse-ms "operator !=" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "  inline bool operator!=(int" 4866 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(int" 7534]
[ebrowse-ms "operator !=" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "bool operator!=(const" 2837 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator!=(const" 7313]
[ebrowse-ms "operator %" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "    Rational operator%(const" 17121 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "    Rational operator%(const" 9389]
[ebrowse-ms "operator *" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "    Rational operator*(const" 16857 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator*(const" 8347]
[ebrowse-ms "operator +" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "DebugTime operator+(const" 2514 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator+(const" 8156]
[ebrowse-ms "operator -" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator-(const" 8083 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator-(const" 8083]
[ebrowse-ms "operator -" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "DebugTime operator-(const" 2628 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator-(const" 8251]
[ebrowse-ms "operator /" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "    Rational operator/(const" 16991 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr operator/(const" 8442]
[ebrowse-ms "operator <" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "bool operator<(const" 2921 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "inline bool operator<(const" 10630]
[ebrowse-ms "operator <<" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& operator<<(ExprStream" 8156 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& operator<<(ExprStream" 8156]
[ebrowse-ms "operator <<" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& operator<<(ExprStream" 7899 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& operator<<(ExprStream" 7899]
[ebrowse-ms "operator <<" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& operator<<(ExprStream" 4589 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& operator<<(ExprStream" 8011]
[ebrowse-ms "operator <<" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& operator<<(ExprStream" 4460 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& operator<<(ExprStream" 4460]
[ebrowse-ms "operator <<" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "ostream& operator<<(ostream" 6640 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "ostream& operator<<(std" 5115]
[ebrowse-ms "operator <=" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "bool operator<=(const" 3114 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator<=(const" 14830]
[ebrowse-ms "operator ==" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "  inline bool operator==(const" 4964 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator==(const" 7633]
[ebrowse-ms "operator ==" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "  inline bool operator==(int" 4770 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "  inline bool operator==(int" 7437]
[ebrowse-ms "operator ==" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "bool operator==(const" 2739 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "  inline bool operator==(const" 1796]
[ebrowse-ms "operator >" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "bool operator>(const" 3017 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>(const" 14929]
[ebrowse-ms "operator >=" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/debug.cpp" "bool operator>=(const" 3212 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "  inline bool operator>=(const" 15028]
[ebrowse-ms "orExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr orExpr(const" 30524 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "inline Expr orExpr(const" 30524]
[ebrowse-ms "parse_args" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "void parse_args(int" 6543 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "void parse_args(int" 6543]
[ebrowse-ms "plusExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr plusExpr(const" 6931 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr plusExpr(const" 6931]
[ebrowse-ms "plusExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr plusExpr(const" 6835 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr plusExpr(const" 6835]
[ebrowse-ms "pop" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& pop(ExprStream" 8547 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& pop(ExprStream" 8547]
[ebrowse-ms "popSave" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& popSave(ExprStream" 8862 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& popSave(ExprStream" 8862]
[ebrowse-ms "popdag" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& popdag(ExprStream" 10043 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& popdag(ExprStream" 10043]
[ebrowse-ms "pow" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational pow(Rational" 5582 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational pow(Rational" 5582]
[ebrowse-ms "powExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr powExpr(const" 7508 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr powExpr(const" 7508]
[ebrowse-ms "printRational" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  void printRational(const" 7048 0  () () 0]
[ebrowse-ms "printSatProof" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_minisat.cpp" "void printSatProof(SAT" 10558 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_minisat.cpp" "void printSatProof(SAT" 10558]
[ebrowse-ms "printUsage" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "void printUsage(const" 4654 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "void printUsage(const" 4654]
[ebrowse-ms "push" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& push(ExprStream" 8450 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& push(ExprStream" 8450]
[ebrowse-ms "pushRestore" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& pushRestore(ExprStream" 9235 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& pushRestore(ExprStream" 9235]
[ebrowse-ms "pushdag" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& pushdag(ExprStream" 9976 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& pushdag(ExprStream" 9976]
[ebrowse-ms "ratRoot" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational ratRoot(const" 6046 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  inline Rational ratRoot(const" 6046]
[ebrowse-ms "recursiveExprScore" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "int recursiveExprScore(const" 30889 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "int recursiveExprScore(const" 30889]
[ebrowse-ms "reset" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& reset(ExprStream" 9384 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& reset(ExprStream" 9384]
[ebrowse-ms "signal_error" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "void signal_error(const" 1374 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "void signal_error(const" 1374]
[ebrowse-ms "smtlibBufState" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern void *smtlibBufState()" 1877 0  () () 0]
[ebrowse-ms "smtlib_bufSize" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlib_bufSize()" 24510 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlib_bufSize()" 24510]
[ebrowse-ms "smtlib_bufState" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void *smtlib_bufState()" 25029 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void *smtlib_bufState()" 25029]
[ebrowse-ms "smtlib_buf_state" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_BUFFER_STATE smtlib_buf_state()" 24569 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_BUFFER_STATE smtlib_buf_state()" 24569]
[ebrowse-ms "smtlib_createBuffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void *smtlib_createBuffer(int" 24729 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void *smtlib_createBuffer(int" 24729]
[ebrowse-ms "smtlib_create_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_BUFFER_STATE smtlib_create_buffer (FILE" 9467 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "    YY_BUFFER_STATE smtlib_create_buffer  (FILE" 50724]
[ebrowse-ms "smtlib_deleteBuffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlib_deleteBuffer(void" 24816 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlib_deleteBuffer(void" 24816]
[ebrowse-ms "smtlib_delete_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlib_delete_buffer (YY_BUFFER_STATE" 9529 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "    void smtlib_delete_buffer (YY_BUFFER_STATE" 51442]
[ebrowse-ms "smtlib_flush_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlib_flush_buffer (YY_BUFFER_STATE" 9577 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "    void smtlib_flush_buffer (YY_BUFFER_STATE" 52731]
[ebrowse-ms "smtlib_scan_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_BUFFER_STATE smtlib_scan_buffer (char" 9947 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_BUFFER_STATE smtlib_scan_buffer  (char" 56249]
[ebrowse-ms "smtlib_scan_bytes" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_BUFFER_STATE smtlib_scan_bytes (yyconst" 10076 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_BUFFER_STATE smtlib_scan_bytes  (yyconst" 57777]
[ebrowse-ms "smtlib_scan_string" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_BUFFER_STATE smtlib_scan_string (yyconst" 10016 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_BUFFER_STATE smtlib_scan_string (yyconst" 57348]
[ebrowse-ms "smtlib_setInteractive" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlib_setInteractive(bool" 25103 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlib_setInteractive(bool" 25103]
[ebrowse-ms "smtlib_switchToBuffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlib_switchToBuffer(void" 24925 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlib_switchToBuffer(void" 24925]
[ebrowse-ms "smtlib_switch_to_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlib_switch_to_buffer (YY_BUFFER_STATE" 9409 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "  void smtlib_switch_to_buffer  (YY_BUFFER_STATE" 49375]
[ebrowse-ms "smtliballoc" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void *smtliballoc (yy_size_t" 10130 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void *smtliballoc (yy_size_t" 61915]
[ebrowse-ms "smtliberror" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "extern int smtliberror (const" 23284 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "int smtliberror(const" 6258]
[ebrowse-ms "smtlibfree" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibfree (void" 10198 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibfree (void" 62443]
[ebrowse-ms "smtlibget_debug" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlibget_debug (void" 26144 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlibget_debug  (void" 60109]
[ebrowse-ms "smtlibget_extra" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "YY_EXTRA_TYPE smtlibget_extra (void" 26226 0  () () 0]
[ebrowse-ms "smtlibget_in" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "FILE *smtlibget_in (void" 26309 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "FILE *smtlibget_in  (void" 59310]
[ebrowse-ms "smtlibget_leng" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlibget_leng (void" 26448 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlibget_leng  (void" 59510]
[ebrowse-ms "smtlibget_lineno" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlibget_lineno (void" 26510 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtlibget_lineno  (void" 59210]
[ebrowse-ms "smtlibget_out" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "FILE *smtlibget_out (void" 26378 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "FILE *smtlibget_out  (void" 59403]
[ebrowse-ms "smtlibget_text" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "char *smtlibget_text (void" 26479 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "char *smtlibget_text  (void" 59607]
[ebrowse-ms "smtliblex" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "extern int smtliblex (void" 29137 0  () () 0]
[ebrowse-ms "smtliblex_destroy" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtliblex_destroy (void" 26114 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "int smtliblex_destroy  (void" 61063]
[ebrowse-ms "smtlibparse" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser.cpp" "extern int smtlibparse()" 1693 0  () () 0]
[ebrowse-ms "smtlibpop_buffer_state" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibpop_buffer_state (void" 9678 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibpop_buffer_state (void" 54198]
[ebrowse-ms "smtlibpush_buffer_state" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibpush_buffer_state (YY_BUFFER_STATE" 9629 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibpush_buffer_state (YY_BUFFER_STATE" 53425]
[ebrowse-ms "smtlibrealloc" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void *smtlibrealloc (void" 10160 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void *smtlibrealloc  (void" 61988]
[ebrowse-ms "smtlibrestart" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibrestart (FILE" 9347 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "    void smtlibrestart  (FILE" 48969]
[ebrowse-ms "smtlibset_debug" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibset_debug (int" 26174 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibset_debug (int" 60175]
[ebrowse-ms "smtlibset_extra" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibset_extra (YY_EXTRA_TYPE" 26266 0  () () 0]
[ebrowse-ms "smtlibset_in" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibset_in  (FILE" 26338 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibset_in (FILE" 59964]
[ebrowse-ms "smtlibset_lineno" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibset_lineno (int" 26541 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibset_lineno (int" 59730]
[ebrowse-ms "smtlibset_out" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibset_out  (FILE" 26408 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "void smtlibset_out (FILE" 60034]
[ebrowse-ms "smtlibwrap" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "extern \"C\" int smtlibwrap (void" 26723 0  () () 0]
[ebrowse-ms "sort2" () 32 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "void sort2(std" 1917 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "void sort2(std" 1917]
[ebrowse-ms "space" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& space(ExprStream" 9734 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  ExprStream& space(ExprStream" 9734]
[ebrowse-ms "strPair" () 32 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "std::pair<std::string,T> strPair(const" 1710 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "std::pair<std::string,T> strPair(const" 1710]
[ebrowse-ms "thread_timeout" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "DWORD WINAPI thread_timeout(PVOID" 1647 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "DWORD WINAPI thread_timeout(PVOID" 1647]
[ebrowse-ms "toInt" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "inline int   toInt  (lbool" 7947 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "inline int   toInt  (lbool" 7947]
[ebrowse-ms "toLbool" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "inline lbool toLbool(int" 7997 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "inline lbool toLbool(int" 7997]
[ebrowse-ms "to_lower" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "inline std::string to_lower(const" 941 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "inline std::string to_lower(const" 941]
[ebrowse-ms "to_upper" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "inline std::string to_upper(const" 722 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "inline std::string to_upper(const" 722]
[ebrowse-ms "trigInitScore" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "int trigInitScore(const" 68165 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "int trigInitScore(const" 68165]
[ebrowse-ms "uminusExpr" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr uminusExpr(const" 6761 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "inline Expr uminusExpr(const" 6761]
[ebrowse-ms "usefulInMatch" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool usefulInMatch(const" 10315 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "bool usefulInMatch(const" 10315]
[ebrowse-ms "vc_andExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_andExpr(VC" 23207 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_andExpr(VC" 23207]
[ebrowse-ms "vc_andExprN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_andExprN(VC" 23498 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_andExprN(VC" 23498]
[ebrowse-ms "vc_arity" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_arity(Expr" 67738 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_arity(Expr" 67738]
[ebrowse-ms "vc_arrayType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_arrayType(VC" 14091 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_arrayType(VC" 14091]
[ebrowse-ms "vc_assertFormula" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_assertFormula(VC" 55775 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_assertFormula(VC" 55775]
[ebrowse-ms "vc_boolType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_boolType(VC" 7195 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_boolType(VC" 7195]
[ebrowse-ms "vc_boundVarExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_boundVarExpr(VC" 53324 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_boundVarExpr(VC" 53324]
[ebrowse-ms "vc_bv32ConstExprFromInt" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32ConstExprFromInt(VC" 35103 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32ConstExprFromInt(VC" 35103]
[ebrowse-ms "vc_bv32LeftShiftExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32LeftShiftExpr(VC" 44784 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32LeftShiftExpr(VC" 44784]
[ebrowse-ms "vc_bv32MinusExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32MinusExpr(VC" 42030 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32MinusExpr(VC" 42030]
[ebrowse-ms "vc_bv32MultExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32MultExpr(VC" 42466 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32MultExpr(VC" 42466]
[ebrowse-ms "vc_bv32PlusExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32PlusExpr(VC" 41528 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32PlusExpr(VC" 41528]
[ebrowse-ms "vc_bv32RightShiftExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32RightShiftExpr(VC" 44999 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bv32RightShiftExpr(VC" 44999]
[ebrowse-ms "vc_bv32Type" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_bv32Type(VC" 34526 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_bv32Type(VC" 34526]
[ebrowse-ms "vc_bvAndExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvAndExpr(VC" 37082 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvAndExpr(VC" 37082]
[ebrowse-ms "vc_bvBoolExtract" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvBoolExtract(VC" 36443 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvBoolExtract(VC" 36443]
[ebrowse-ms "vc_bvConcatExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConcatExpr(VC" 35383 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConcatExpr(VC" 35383]
[ebrowse-ms "vc_bvConcatExprN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConcatExprN(VC" 35691 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConcatExprN(VC" 35691]
[ebrowse-ms "vc_bvConstExprFromInt" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConstExprFromInt(VC" 34933 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConstExprFromInt(VC" 34933]
[ebrowse-ms "vc_bvConstExprFromLL" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConstExprFromLL(VC" 35220 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConstExprFromLL(VC" 35220]
[ebrowse-ms "vc_bvConstExprFromStr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConstExprFromStr(VC" 34605 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvConstExprFromStr(VC" 34605]
[ebrowse-ms "vc_bvCreateMemoryArray" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvCreateMemoryArray(VC" 47233 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvCreateMemoryArray(VC" 47233]
[ebrowse-ms "vc_bvExtract" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvExtract(VC" 36105 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvExtract(VC" 36105]
[ebrowse-ms "vc_bvGeExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvGeExpr(VC" 38914 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvGeExpr(VC" 38914]
[ebrowse-ms "vc_bvGtExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvGtExpr(VC" 38567 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvGtExpr(VC" 38567]
[ebrowse-ms "vc_bvLeExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvLeExpr(VC" 38271 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvLeExpr(VC" 38271]
[ebrowse-ms "vc_bvLeftShiftExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvLeftShiftExpr(VC" 42582 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvLeftShiftExpr(VC" 42582]
[ebrowse-ms "vc_bvLtExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvLtExpr(VC" 37975 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvLtExpr(VC" 37975]
[ebrowse-ms "vc_bvMinusExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvMinusExpr(VC" 41640 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvMinusExpr(VC" 41640]
[ebrowse-ms "vc_bvMultExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvMultExpr(VC" 42142 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvMultExpr(VC" 42142]
[ebrowse-ms "vc_bvNotExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvNotExpr(VC" 36810 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvNotExpr(VC" 36810]
[ebrowse-ms "vc_bvOrExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvOrExpr(VC" 37380 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvOrExpr(VC" 37380]
[ebrowse-ms "vc_bvPlusExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvPlusExpr(VC" 41135 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvPlusExpr(VC" 41135]
[ebrowse-ms "vc_bvReadMemoryArray" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvReadMemoryArray(VC" 49578 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvReadMemoryArray(VC" 49578]
[ebrowse-ms "vc_bvRightShiftExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvRightShiftExpr(VC" 42896 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvRightShiftExpr(VC" 42896]
[ebrowse-ms "vc_bvSDivExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSDivExpr(VC" 43807 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSDivExpr(VC" 43807]
[ebrowse-ms "vc_bvSGeExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSGeExpr(VC" 40210 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSGeExpr(VC" 40210]
[ebrowse-ms "vc_bvSGtExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSGtExpr(VC" 39860 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSGtExpr(VC" 39860]
[ebrowse-ms "vc_bvSLeExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSLeExpr(VC" 39561 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSLeExpr(VC" 39561]
[ebrowse-ms "vc_bvSLtExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSLtExpr(VC" 39262 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSLtExpr(VC" 39262]
[ebrowse-ms "vc_bvSModExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSModExpr(VC" 44409 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSModExpr(VC" 44409]
[ebrowse-ms "vc_bvSRemExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSRemExpr(VC" 44108 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSRemExpr(VC" 44108]
[ebrowse-ms "vc_bvSignExtend" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSignExtend(VC" 40563 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvSignExtend(VC" 40563]
[ebrowse-ms "vc_bvType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_bvType(VC" 14400 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_bvType(VC" 14400]
[ebrowse-ms "vc_bvUDivExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvUDivExpr(VC" 43205 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvUDivExpr(VC" 43205]
[ebrowse-ms "vc_bvUMinusExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvUMinusExpr(VC" 40856 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvUMinusExpr(VC" 40856]
[ebrowse-ms "vc_bvURemExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvURemExpr(VC" 43506 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvURemExpr(VC" 43506]
[ebrowse-ms "vc_bvVar32DivByPowOfTwoExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvVar32DivByPowOfTwoExpr(VC" 45850 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvVar32DivByPowOfTwoExpr(VC" 45850]
[ebrowse-ms "vc_bvVar32LeftShiftExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvVar32LeftShiftExpr(VC" 45149 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvVar32LeftShiftExpr(VC" 45149]
[ebrowse-ms "vc_bvVar32RightShiftExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvVar32RightShiftExpr(VC" 46508 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvVar32RightShiftExpr(VC" 46508]
[ebrowse-ms "vc_bvWriteToMemoryArray" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvWriteToMemoryArray(VC" 50194 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvWriteToMemoryArray(VC" 50194]
[ebrowse-ms "vc_bvXorExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvXorExpr(VC" 37677 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_bvXorExpr(VC" 37677]
[ebrowse-ms "vc_checkContinue" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_checkContinue(VC" 57037 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_checkContinue(VC" 57037]
[ebrowse-ms "vc_compare_exprs" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_compare_exprs(Expr" 66316 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_compare_exprs(Expr" 66316]
[ebrowse-ms "vc_createFlags" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Flags vc_createFlags()" 5038 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Flags vc_createFlags()" 5038]
[ebrowse-ms "vc_createOp" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Op vc_createOp(VC" 25517 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Op vc_createOp(VC" 25517]
[ebrowse-ms "vc_createOpDef" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Op vc_createOpDef(VC" 25802 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Op vc_createOpDef(VC" 25802]
[ebrowse-ms "vc_createType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_createType(VC" 16192 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_createType(VC" 16192]
[ebrowse-ms "vc_createValidityChecker" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" VC vc_createValidityChecker(Flags" 4715 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" VC vc_createValidityChecker(Flags" 4715]
[ebrowse-ms "vc_dataType1" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_dataType1(VC" 11274 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_dataType1(VC" 11274]
[ebrowse-ms "vc_dataTypeMN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type* vc_dataTypeMN(VC" 12754 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type* vc_dataTypeMN(VC" 12754]
[ebrowse-ms "vc_dataTypeN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_dataTypeN(VC" 11914 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_dataTypeN(VC" 11914]
[ebrowse-ms "vc_datatypeConsExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_datatypeConsExpr(VC" 52224 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_datatypeConsExpr(VC" 52224]
[ebrowse-ms "vc_datatypeSelExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_datatypeSelExpr(VC" 52700 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_datatypeSelExpr(VC" 52700]
[ebrowse-ms "vc_datatypeTestExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_datatypeTestExpr(VC" 53010 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_datatypeTestExpr(VC" 53010]
[ebrowse-ms "vc_deleteExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteExpr(Expr" 5662 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteExpr(Expr" 5662]
[ebrowse-ms "vc_deleteFlags" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteFlags(Flags" 5488 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteFlags(Flags" 5488]
[ebrowse-ms "vc_deleteOp" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteOp(Op" 5886 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteOp(Op" 5886]
[ebrowse-ms "vc_deleteString" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteString(char" 20767 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteString(char" 20767]
[ebrowse-ms "vc_deleteType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteType(Type" 5826 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteType(Type" 5826]
[ebrowse-ms "vc_deleteTypeVector" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteTypeVector(Type" 6129 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteTypeVector(Type" 6129]
[ebrowse-ms "vc_deleteVector" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteVector(Expr" 5954 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_deleteVector(Expr" 5954]
[ebrowse-ms "vc_destroyValidityChecker" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_destroyValidityChecker(VC" 5264 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_destroyValidityChecker(VC" 5264]
[ebrowse-ms "vc_distinctExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_distinctExpr(VC" 22056 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_distinctExpr(VC" 22056]
[ebrowse-ms "vc_divideExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_divideExpr(VC" 30161 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_divideExpr(VC" 30161]
[ebrowse-ms "vc_eqExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_eqExpr(VC" 21758 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_eqExpr(VC" 21758]
[ebrowse-ms "vc_existsExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_existsExpr(VC" 54448 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_existsExpr(VC" 54448]
[ebrowse-ms "vc_exprString" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" const char* vc_exprString(Expr" 66540 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" const char* vc_exprString(Expr" 66540]
[ebrowse-ms "vc_falseExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_falseExpr(VC" 22704 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_falseExpr(VC" 22704]
[ebrowse-ms "vc_forallExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_forallExpr(VC" 53625 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_forallExpr(VC" 53625]
[ebrowse-ms "vc_funExpr1" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_funExpr1(VC" 26114 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_funExpr1(VC" 26114]
[ebrowse-ms "vc_funExpr2" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_funExpr2(VC" 26398 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_funExpr2(VC" 26398]
[ebrowse-ms "vc_funExpr3" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_funExpr3(VC" 26709 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_funExpr3(VC" 26709]
[ebrowse-ms "vc_funExprN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_funExprN(VC" 27072 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_funExprN(VC" 27072]
[ebrowse-ms "vc_funType1" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_funType1(VC" 14648 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_funType1(VC" 14648]
[ebrowse-ms "vc_funType2" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_funType2(VC" 14954 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_funType2(VC" 14954]
[ebrowse-ms "vc_funType3" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_funType3(VC" 15348 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_funType3(VC" 15348]
[ebrowse-ms "vc_funTypeN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_funTypeN(VC" 15787 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_funTypeN(VC" 15787]
[ebrowse-ms "vc_geExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_geExpr(VC" 31339 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_geExpr(VC" 31339]
[ebrowse-ms "vc_getAssumptions" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getAssumptions(VC" 58841 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getAssumptions(VC" 58841]
[ebrowse-ms "vc_getAssumptionsTCC" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getAssumptionsTCC(VC" 63859 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getAssumptionsTCC(VC" 63859]
[ebrowse-ms "vc_getAssumptionsUsed" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getAssumptionsUsed(VC" 60046 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getAssumptionsUsed(VC" 60046]
[ebrowse-ms "vc_getBVInt" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getBVInt(VC" 70392 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getBVInt(VC" 70392]
[ebrowse-ms "vc_getBVUnsigned" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" unsigned int vc_getBVUnsigned(VC" 70672 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" unsigned int vc_getBVUnsigned(VC" 70672]
[ebrowse-ms "vc_getBaseType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_getBaseType(VC" 18378 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_getBaseType(VC" 18378]
[ebrowse-ms "vc_getBaseTypeOfType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_getBaseTypeOfType(VC" 18651 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_getBaseTypeOfType(VC" 18651]
[ebrowse-ms "vc_getBody" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getBody(Expr" 68838 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getBody(Expr" 68838]
[ebrowse-ms "vc_getChild" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getChild(Expr" 68106 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getChild(Expr" 68106]
[ebrowse-ms "vc_getClosure" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getClosure(VC" 64631 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getClosure(VC" 64631]
[ebrowse-ms "vc_getConcreteModel" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getConcreteModel(VC" 61091 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getConcreteModel(VC" 61091]
[ebrowse-ms "vc_getCounterExample" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getCounterExample(VC" 60570 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getCounterExample(VC" 60570]
[ebrowse-ms "vc_getCurrentContext" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Context vc_getCurrentContext(VC" 66000 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Context vc_getCurrentContext(VC" 66000]
[ebrowse-ms "vc_getEM" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" ExprManager vc_getEM(VC" 16968 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" ExprManager vc_getEM(VC" 16968]
[ebrowse-ms "vc_getExistential" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getExistential(Expr" 69033 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getExistential(Expr" 69033]
[ebrowse-ms "vc_getFun" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getFun(VC" 69233 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getFun(VC" 69233]
[ebrowse-ms "vc_getImpliedLiteral" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getImpliedLiteral(VC" 56262 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getImpliedLiteral(VC" 56262]
[ebrowse-ms "vc_getInt" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getInt(Expr" 70196 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getInt(Expr" 70196]
[ebrowse-ms "vc_getInternalAssumptions" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getInternalAssumptions(VC" 58312 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getInternalAssumptions(VC" 58312]
[ebrowse-ms "vc_getKind" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getKind(Expr" 67919 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getKind(Expr" 67919]
[ebrowse-ms "vc_getKindInt" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getKindInt(VC" 69922 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getKindInt(VC" 69922]
[ebrowse-ms "vc_getKindString" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" const char* vc_getKindString(VC" 69623 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" const char* vc_getKindString(VC" 69623]
[ebrowse-ms "vc_getNumVars" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getNumVars(Expr" 68300 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_getNumVars(Expr" 68300]
[ebrowse-ms "vc_getProof" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProof(VC" 62836 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProof(VC" 62836]
[ebrowse-ms "vc_getProofAssumptions" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofAssumptions(VC" 59398 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofAssumptions(VC" 59398]
[ebrowse-ms "vc_getProofClosure" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofClosure(VC" 64881 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofClosure(VC" 64881]
[ebrowse-ms "vc_getProofOfFile" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofOfFile(VC" 63091 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofOfFile(VC" 63091]
[ebrowse-ms "vc_getProofQuery" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofQuery(VC" 59786 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofQuery(VC" 59786]
[ebrowse-ms "vc_getProofTCC" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofTCC(VC" 64374 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getProofTCC(VC" 64374]
[ebrowse-ms "vc_getTCC" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getTCC(VC" 63614 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getTCC(VC" 63614]
[ebrowse-ms "vc_getType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_getType(VC" 18119 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_getType(VC" 18119]
[ebrowse-ms "vc_getTypePred" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getTypePred(VC" 18924 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getTypePred(VC" 18924]
[ebrowse-ms "vc_getUserAssumptions" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getUserAssumptions(VC" 57783 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr* vc_getUserAssumptions(VC" 57783]
[ebrowse-ms "vc_getVar" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getVar(Expr" 68495 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_getVar(Expr" 68495]
[ebrowse-ms "vc_get_error_status" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_get_error_status()" 1708 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_get_error_status()" 1708]
[ebrowse-ms "vc_get_error_string" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" char* vc_get_error_string()" 1891 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" char* vc_get_error_string()" 1891]
[ebrowse-ms "vc_gtExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_gtExpr(VC" 31052 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_gtExpr(VC" 31052]
[ebrowse-ms "vc_idExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_idExpr(VC" 19466 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_idExpr(VC" 19466]
[ebrowse-ms "vc_iffExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_iffExpr(VC" 24885 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_iffExpr(VC" 24885]
[ebrowse-ms "vc_impliesExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_impliesExpr(VC" 24591 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_impliesExpr(VC" 24591]
[ebrowse-ms "vc_importExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_importExpr(VC" 21234 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_importExpr(VC" 21234]
[ebrowse-ms "vc_importType" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface.h" "Type vc_importType(Type" 8134 0  () () 0]
[ebrowse-ms "vc_importType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_importType(VC" 21498 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_importType(VC" 21498]
[ebrowse-ms "vc_incomplete" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" char* vc_incomplete(VC" 62252 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" char* vc_incomplete(VC" 62252]
[ebrowse-ms "vc_inconsistent" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_inconsistent(VC" 61696 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_inconsistent(VC" 61696]
[ebrowse-ms "vc_intType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_intType(VC" 7679 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_intType(VC" 7679]
[ebrowse-ms "vc_isClosure" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" bool vc_isClosure(Expr" 66997 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" bool vc_isClosure(Expr" 66997]
[ebrowse-ms "vc_isLambda" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" bool vc_isLambda(Expr" 67381 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" bool vc_isLambda(Expr" 67381]
[ebrowse-ms "vc_isQuantifier" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" bool vc_isQuantifier(Expr" 67188 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" bool vc_isQuantifier(Expr" 67188]
[ebrowse-ms "vc_isVar" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" bool vc_isVar(Expr" 67563 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" bool vc_isVar(Expr" 67563]
[ebrowse-ms "vc_iteExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_iteExpr(VC" 25175 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_iteExpr(VC" 25175]
[ebrowse-ms "vc_lambdaExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Op vc_lambdaExpr(VC" 54864 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Op vc_lambdaExpr(VC" 54864]
[ebrowse-ms "vc_leExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_leExpr(VC" 30765 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_leExpr(VC" 30765]
[ebrowse-ms "vc_listExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_listExpr(VC" 19715 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_listExpr(VC" 19715]
[ebrowse-ms "vc_lookupType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_lookupType(VC" 16461 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_lookupType(VC" 16461]
[ebrowse-ms "vc_lookupVar" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_lookupVar(VC" 17796 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_lookupVar(VC" 17796]
[ebrowse-ms "vc_ltExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_ltExpr(VC" 30478 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_ltExpr(VC" 30478]
[ebrowse-ms "vc_minusExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_minusExpr(VC" 29285 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_minusExpr(VC" 29285]
[ebrowse-ms "vc_multExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_multExpr(VC" 29580 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_multExpr(VC" 29580]
[ebrowse-ms "vc_notExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_notExpr(VC" 22944 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_notExpr(VC" 22944]
[ebrowse-ms "vc_orExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_orExpr(VC" 23899 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_orExpr(VC" 23899]
[ebrowse-ms "vc_orExprN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_orExprN(VC" 24187 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_orExprN(VC" 24187]
[ebrowse-ms "vc_plusExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_plusExpr(VC" 28586 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_plusExpr(VC" 28586]
[ebrowse-ms "vc_plusExprN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_plusExprN(VC" 28879 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_plusExprN(VC" 28879]
[ebrowse-ms "vc_pop" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_pop(VC" 65567 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_pop(VC" 65567]
[ebrowse-ms "vc_popto" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_popto(VC" 65761 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_popto(VC" 65761]
[ebrowse-ms "vc_powExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_powExpr(VC" 29872 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_powExpr(VC" 29872]
[ebrowse-ms "vc_printExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_printExpr(VC" 20091 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_printExpr(VC" 20091]
[ebrowse-ms "vc_printExprFile" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_printExprFile(VC" 20841 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_printExprFile(VC" 20841]
[ebrowse-ms "vc_printExprString" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" char* vc_printExprString(VC" 20327 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" char* vc_printExprString(VC" 20327]
[ebrowse-ms "vc_print_statistics" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_print_statistics(VC" 70957 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_print_statistics(VC" 70957]
[ebrowse-ms "vc_push" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_push(VC" 65373 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_push(VC" 65373]
[ebrowse-ms "vc_query" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_query(VC" 56779 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_query(VC" 56779]
[ebrowse-ms "vc_ratExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_ratExpr(VC" 27493 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_ratExpr(VC" 27493]
[ebrowse-ms "vc_ratExprFromStr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_ratExprFromStr(VC" 27754 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_ratExprFromStr(VC" 27754]
[ebrowse-ms "vc_ratExprFromStr1" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_ratExprFromStr1(VC" 28043 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_ratExprFromStr1(VC" 28043]
[ebrowse-ms "vc_readExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_readExpr(VC" 33888 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_readExpr(VC" 33888]
[ebrowse-ms "vc_realType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_realType(VC" 7440 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_realType(VC" 7440]
[ebrowse-ms "vc_recSelectExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recSelectExpr(VC" 33240 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recSelectExpr(VC" 33240]
[ebrowse-ms "vc_recUpdateExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recUpdateExpr(VC" 33543 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recUpdateExpr(VC" 33543]
[ebrowse-ms "vc_recordExpr1" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recordExpr1(VC" 31631 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recordExpr1(VC" 31631]
[ebrowse-ms "vc_recordExpr2" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recordExpr2(VC" 31923 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recordExpr2(VC" 31923]
[ebrowse-ms "vc_recordExpr3" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recordExpr3(VC" 32291 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recordExpr3(VC" 32291]
[ebrowse-ms "vc_recordExprN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recordExprN(VC" 32731 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_recordExprN(VC" 32731]
[ebrowse-ms "vc_recordType1" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_recordType1(VC" 9627 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_recordType1(VC" 9627]
[ebrowse-ms "vc_recordType2" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_recordType2(VC" 9919 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_recordType2(VC" 9919]
[ebrowse-ms "vc_recordType3" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_recordType3(VC" 10308 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_recordType3(VC" 10308]
[ebrowse-ms "vc_recordTypeN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_recordTypeN(VC" 10769 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_recordTypeN(VC" 10769]
[ebrowse-ms "vc_registerAtom" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_registerAtom(VC" 56015 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_registerAtom(VC" 56015]
[ebrowse-ms "vc_reset_error_status" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_reset_error_status()" 1785 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_reset_error_status()" 1785]
[ebrowse-ms "vc_restart" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_restart(VC" 57286 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_restart(VC" 57286]
[ebrowse-ms "vc_returnFromCheck" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_returnFromCheck(VC" 57551 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_returnFromCheck(VC" 57551]
[ebrowse-ms "vc_setBoolFlag" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setBoolFlag(Flags" 6198 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setBoolFlag(Flags" 6198]
[ebrowse-ms "vc_setIntFlag" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setIntFlag(Flags" 6436 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setIntFlag(Flags" 6436]
[ebrowse-ms "vc_setResourceLimit" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setResourceLimit(VC" 55526 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setResourceLimit(VC" 55526]
[ebrowse-ms "vc_setStrSeqFlag" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setStrSeqFlag(Flags" 6919 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setStrSeqFlag(Flags" 6919]
[ebrowse-ms "vc_setStringFlag" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setStringFlag(Flags" 6671 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setStringFlag(Flags" 6671]
[ebrowse-ms "vc_setTriggers" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setTriggers(VC" 54044 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" void vc_setTriggers(VC" 54044]
[ebrowse-ms "vc_simplify" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_simplify(VC" 56525 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_simplify(VC" 56525]
[ebrowse-ms "vc_stackLevel" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_stackLevel(VC" 65145 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" int vc_stackLevel(VC" 65145]
[ebrowse-ms "vc_stringExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_stringExpr(VC" 19211 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_stringExpr(VC" 19211]
[ebrowse-ms "vc_subRangeType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_subRangeType(VC" 7921 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_subRangeType(VC" 7921]
[ebrowse-ms "vc_subTypeType" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_subTypeType(VC" 8281 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_subTypeType(VC" 8281]
[ebrowse-ms "vc_subtypeType" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface.h" "Type vc_subtypeType(VC" 2389 0  () () 0]
[ebrowse-ms "vc_toExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_toExpr(Type" 69436 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_toExpr(Type" 69436]
[ebrowse-ms "vc_trueExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_trueExpr(VC" 22464 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_trueExpr(VC" 22464]
[ebrowse-ms "vc_tupleExprN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_tupleExprN(VC" 51127 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_tupleExprN(VC" 51127]
[ebrowse-ms "vc_tupleSelectExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_tupleSelectExpr(VC" 51541 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_tupleSelectExpr(VC" 51541]
[ebrowse-ms "vc_tupleType2" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_tupleType2(VC" 8588 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_tupleType2(VC" 8588]
[ebrowse-ms "vc_tupleType3" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_tupleType3(VC" 8889 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_tupleType3(VC" 8889]
[ebrowse-ms "vc_tupleTypeN" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_tupleTypeN(VC" 9229 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Type vc_tupleTypeN(VC" 9229]
[ebrowse-ms "vc_tupleUpdateExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_tupleUpdateExpr(VC" 51846 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_tupleUpdateExpr(VC" 51846]
[ebrowse-ms "vc_typeString" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" const char* vc_typeString(Type" 66772 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" const char* vc_typeString(Type" 66772]
[ebrowse-ms "vc_uminusExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_uminusExpr(VC" 28316 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_uminusExpr(VC" 28316]
[ebrowse-ms "vc_varExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_varExpr(VC" 17205 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_varExpr(VC" 17205]
[ebrowse-ms "vc_varExprDef" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_varExprDef(VC" 17487 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_varExprDef(VC" 17487]
[ebrowse-ms "vc_writeExpr" () 256 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_writeExpr(VC" 34184 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "extern \"C\" Expr vc_writeExpr(VC" 34184]
[ebrowse-ms "vectorExpr2string" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "std::string vectorExpr2string(const" 8503 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "std::string vectorExpr2string(const" 8503]
[ebrowse-ms "yyparse" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "int yyparse ()" 51097 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "yyparse (void" 31799]
[ebrowse-ms "yyparse" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "int yyparse (void" 51059 0  () () 0]
)
([ebrowse-ms "_string_lit" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static std::string _string_lit;" 19702]
[ebrowse-ms "boundVarCount" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory.cpp" "static int boundVarCount = 0;" 18697]
[ebrowse-ms "bvdump" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" "static bool bvdump = false;" 82565]
[ebrowse-ms "null_expr" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "static const Expr null_expr;" 1225]
[ebrowse-ms "prime_list" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "  };" 3089]
[ebrowse-ms "programName" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "static string programName;" 1078]
[ebrowse-ms "tmpString" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static string tmpString;" 1349]
[ebrowse-ms "vc" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "static ValidityChecker* vc = NULL;" 1114]
[ebrowse-ms "yy_accept" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    } ;" 12081]
[ebrowse-ms "yy_base" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    } ;" 14438]
[ebrowse-ms "yy_buffer_stack" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static YY_BUFFER_STATE * yy_buffer_stack = 0;" 8104]
[ebrowse-ms "yy_buffer_stack_max" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static size_t yy_buffer_stack_max = 0;" 8031]
[ebrowse-ms "yy_buffer_stack_top" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static size_t yy_buffer_stack_top = 0;" 7961]
[ebrowse-ms "yy_c_buf_p" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static char *yy_c_buf_p = (char *) 0;" 8961]
[ebrowse-ms "yy_chk" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    } ;" 16252]
[ebrowse-ms "yy_def" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    } ;" 14840]
[ebrowse-ms "yy_did_buffer_switch_on_eof" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static int yy_did_buffer_switch_on_eof;" 9245]
[ebrowse-ms "yy_ec" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    } ;" 13803]
[ebrowse-ms "yy_hold_char" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static char yy_hold_char;" 8792]
[ebrowse-ms "yy_init" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static int yy_init = 0;" 8985]
[ebrowse-ms "yy_last_accepting_cpos" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static char *yy_last_accepting_cpos;" 16567]
[ebrowse-ms "yy_last_accepting_state" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static yy_state_type yy_last_accepting_state;" 16530]
[ebrowse-ms "yy_meta" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    } ;" 14035]
[ebrowse-ms "yy_n_chars" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static int yy_n_chars;" 8815]
[ebrowse-ms "yy_nxt" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    } ;" 15546]
[ebrowse-ms "yy_rule_can_match_eol" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,     };" 16483]
[ebrowse-ms "yy_start" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static int yy_start = 0;" 9047]
[ebrowse-ms "yycheck" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "  7,     8,     9,     8,     8,     0,    17
};" 17406]
[ebrowse-ms "yydefact" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "      16
};" 16207]
[ebrowse-ms "yydefgoto" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "  9,    10,    11,    12,    13,    14,    17
};" 16346]
[ebrowse-ms "yypact" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "      -4
};" 16651]
[ebrowse-ms "yypgoto" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "  1,    -4,    -4,    -4,    -4,    -4,    -4
};" 16786]
[ebrowse-ms "yyprhs" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" " 21,    23,    25,    27,    30,    33,    34
};" 14052]
[ebrowse-ms "yyr1" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" " 14,    15,    16,    17,    18,    19,    19
};" 15593]
[ebrowse-ms "yyr2" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "  1,     1,     1,     2,     2,     0,     2
};" 15835]
[ebrowse-ms "yyrhs" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "  4,     8,    -1,    -1,    19,    13,    -1
};" 14420]
[ebrowse-ms "yyrline" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "115,   122,   128,   135,   142,   150,   153
};" 14658]
[ebrowse-ms "yystos" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "      13
};" 17701]
[ebrowse-ms "yytable" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "  5,     6,     7,    15,    16,    18,    20
};" 17224]
[ebrowse-ms "yytname" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "\"Numeral\", \"Binary\", \"Hex\", \"Exprs\", 0
};" 15113]
[ebrowse-ms "yytoknum" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "      41
};" 15353]
[ebrowse-ms "yytranslate" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "       5,     6,     7,     8
};" 13789]
)
([ebrowse-ms "Lisp_init_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static void Lisp_init_buffer (YY_BUFFER_STATE" 9727 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "  static void Lisp_init_buffer  (YY_BUFFER_STATE" 43811]
[ebrowse-ms "Lisp_load_buffer_state" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static void Lisp_load_buffer_state (void" 9678 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static void Lisp_load_buffer_state  (void" 42087]
[ebrowse-ms "Lispensure_buffer_stack" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static void Lispensure_buffer_stack (void" 9634 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static void Lispensure_buffer_stack (void" 46409]
[ebrowse-ms "Lispinput" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static int Lispinput(std" 17798 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static int Lispinput(std" 17798]
[ebrowse-ms "SATAssignmentHook" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_basic.cpp" "static void SATAssignmentHook(void" 2404 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_basic.cpp" "static void SATAssignmentHook(void" 2404]
[ebrowse-ms "SATDLevelHook" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_basic.cpp" "static void SATDLevelHook(void" 815 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_basic.cpp" "static void SATDLevelHook(void" 815]
[ebrowse-ms "SATDecisionHook" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_basic.cpp" "static SatSolver::Lit SATDecisionHook(void" 1199 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_basic.cpp" "static SatSolver::Lit SATDecisionHook(void" 1199]
[ebrowse-ms "SATDeductionHook" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_basic.cpp" "static void SATDeductionHook(void" 3022 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/dpllt_basic.cpp" "static void SATDeductionHook(void" 3022]
[ebrowse-ms "YYID" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "YYID (int" 9040 0  () () 0]
[ebrowse-ms "boundedModulo" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.cpp" "static Rational boundedModulo(const" 129308 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.cpp" "static Rational boundedModulo(const" 129308]
[ebrowse-ms "checkAssump" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "static void checkAssump(const" 4866 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "static void checkAssump(const" 4866]
[ebrowse-ms "checkAssumpDebug" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "checkAssumpDebug(const" 5707 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "checkAssumpDebug(const" 5707]
[ebrowse-ms "checkInt" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static void checkInt(const" 11332 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational.cpp" "  static void checkInt(const" 4331]
[ebrowse-ms "compareLits" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "static inline bool compareLits(const" 11256 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "static inline bool compareLits(const" 11256]
[ebrowse-ms "constantKids" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" "static void constantKids(const" 25141 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" "static void constantKids(const" 25141]
[ebrowse-ms "constantKids" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" "static bool constantKids(const" 24877 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.cpp" "static bool constantKids(const" 68486]
[ebrowse-ms "drand" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "static inline double drand(double" 3456 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "static inline double drand(double" 3456]
[ebrowse-ms "escapeChar" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" " static char escapeChar(char" 25284 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" " static char escapeChar(char" 19732]
[ebrowse-ms "findAtom" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" "static Expr findAtom(const" 80609 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" "static Expr findAtom(const" 80609]
[ebrowse-ms "fromExpr" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static CVC3::Expr fromExpr(Expr" 3658 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static CVC3::Expr fromExpr(Expr" 3658]
[ebrowse-ms "fromOp" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static CVC3::Op fromOp(Op" 3797 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static CVC3::Op fromOp(Op" 3797]
[ebrowse-ms "fromType" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static CVC3::Type fromType(Type" 3513 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static CVC3::Type fromType(Type" 3513]
[ebrowse-ms "gcd" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int gcd(long" 1933 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int gcd(long" 1933]
[ebrowse-ms "hasBoundVarRec" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" "static bool hasBoundVarRec(const" 109442 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/theory_core.cpp" "static bool hasBoundVarRec(const" 109442]
[ebrowse-ms "input" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static int input (void" 27035 0  () () 0]
[ebrowse-ms "irand" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "static inline int irand(double" 3689 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "static inline int irand(double" 3689]
[ebrowse-ms "isTrivialExpr" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  static bool isTrivialExpr(const" 1395 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_stream.cpp" "  static bool isTrivialExpr(const" 1395]
[ebrowse-ms "lcm" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int lcm(long" 2369 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int lcm(long" 2369]
[ebrowse-ms "left" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_heap.h" "static inline int left  (int" 2164 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_heap.h" "static inline int left  (int" 2164]
[ebrowse-ms "max" () 34 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "template<class T> static inline T max(T" 2360 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "template<class T> static inline T max(T" 2360]
[ebrowse-ms "min" () 34 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "template<class T> static inline T min(T" 2284 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "template<class T> static inline T min(T" 2284]
[ebrowse-ms "mult" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int mult(long" 1671 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int mult(long" 1671]
[ebrowse-ms "operator !=" () 34 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" " <class T> static inline bool operator != (const" 8468 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" " <class T> static inline bool operator != (const" 8468]
[ebrowse-ms "operator <=" () 34 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" " <class T> static inline bool operator <= (const" 8662 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" " <class T> static inline bool operator <= (const" 8662]
[ebrowse-ms "operator >" () 34 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" " <class T> static inline bool operator >  (const" 8565 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" " <class T> static inline bool operator >  (const" 8565]
[ebrowse-ms "operator >=" () 34 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" " <class T> static inline bool operator >= (const" 8759 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" " <class T> static inline bool operator >= (const" 8759]
[ebrowse-ms "parent" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_heap.h" "static inline int parent(int" 2264 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_heap.h" "static inline int parent(int" 2264]
[ebrowse-ms "parse_args" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "static void parse_args(int" 904 0  () () 0]
[ebrowse-ms "plus" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int plus(long" 1194 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int plus(long" 1194]
[ebrowse-ms "printLit" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "  static void printLit(ostream" 4910 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/clause.cpp" "  static void printLit(ostream" 4910]
[ebrowse-ms "printUsage" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "static void printUsage(const" 996 0  () () 0]
[ebrowse-ms "processNode" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "static void processNode(const" 38432 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "static void processNode(const" 38432]
[ebrowse-ms "recGetSubTerms" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "static void recGetSubTerms(const" 18072 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "static void recGetSubTerms(const" 18072]
[ebrowse-ms "recursiveGetBoundVars" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "static bool recursiveGetBoundVars(const" 32239 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "static bool recursiveGetBoundVars(const" 32239]
[ebrowse-ms "recursiveGetPartTriggers" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "static bool recursiveGetPartTriggers(const" 67251 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "static bool recursiveGetPartTriggers(const" 67251]
[ebrowse-ms "recursiveGetSubTrig" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "static void recursiveGetSubTrig(const" 17349 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/theory_quant.cpp" "static void recursiveGetSubTrig(const" 17349]
[ebrowse-ms "registerKinds" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_manager.cpp" "static void registerKinds(ExprManager" 900 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_manager.cpp" "static void registerKinds(ExprManager" 15231]
[ebrowse-ms "right" () 2 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_heap.h" "static inline int right (int" 2212 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_heap.h" "static inline int right (int" 2212]
[ebrowse-ms "setRecursiveInUserAssumption" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" "static void setRecursiveInUserAssumption(const" 31494 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_sat.cpp" "static void setRecursiveInUserAssumption(const" 31494]
[ebrowse-ms "smtlib_init_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static void smtlib_init_buffer (YY_BUFFER_STATE" 9823 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static void smtlib_init_buffer  (YY_BUFFER_STATE" 51989]
[ebrowse-ms "smtlib_load_buffer_state" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static void smtlib_load_buffer_state (void" 9772 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static void smtlib_load_buffer_state  (void" 50239]
[ebrowse-ms "smtlibensure_buffer_stack" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static void smtlibensure_buffer_stack (void" 9726 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static void smtlibensure_buffer_stack (void" 54615]
[ebrowse-ms "smtlibinput" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static int smtlibinput(std" 23324 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static int smtlibinput(std" 23324]
[ebrowse-ms "subExprRec" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr.cpp" "static bool subExprRec(const" 3705 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr.cpp" "static bool subExprRec(const" 3705]
[ebrowse-ms "toExpr" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static Expr toExpr(const" 3722 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static Expr toExpr(const" 3722]
[ebrowse-ms "toOp" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static Op toOp(VC" 3854 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static Op toOp(VC" 3854]
[ebrowse-ms "toType" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static Type toType(const" 3577 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static Type toType(const" 3577]
[ebrowse-ms "uminus" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int uminus(long" 1463 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "  static long int uminus(long" 1463]
[ebrowse-ms "val_to_binary_str" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static char *val_to_binary_str(unsigned" 4132 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/c_interface/c_interface.cpp" "static char *val_to_binary_str(unsigned" 4132]
[ebrowse-ms "xfree" () 34 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "template<class T> static inline void xfree(T" 3190 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "template<class T> static inline void xfree(T" 3190]
[ebrowse-ms "xmalloc" () 34 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "emplate<class T> static inline T* xmalloc(size_t" 2786 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "emplate<class T> static inline T* xmalloc(size_t" 2786]
[ebrowse-ms "xrealloc" () 34 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "template<class T> static inline T* xrealloc(T" 2975 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "template<class T> static inline T* xrealloc(T" 2975]
[ebrowse-ms "yy_fatal_error" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static void yy_fatal_error (yyconst" 58546 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static void yy_fatal_error (yyconst" 50304]
[ebrowse-ms "yy_fatal_error" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static void yy_fatal_error (yyconst" 11341 0  () () 0]
[ebrowse-ms "yy_flex_strlen" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static int yy_flex_strlen (yyconst" 26920 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static int yy_flex_strlen (yyconst" 53482]
[ebrowse-ms "yy_flex_strncpy" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static void yy_flex_strncpy (char" 26831 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static void yy_flex_strncpy (char" 53320]
[ebrowse-ms "yy_get_next_buffer" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static int yy_get_next_buffer (void" 11302 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static int yy_get_next_buffer (void" 33830]
[ebrowse-ms "yy_get_previous_state" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static yy_state_type yy_get_previous_state (void" 11192 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static yy_state_type yy_get_previous_state (void" 37444]
[ebrowse-ms "yy_init_globals" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static int yy_init_globals (void" 25977 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "static int yy_init_globals (void" 51966]
[ebrowse-ms "yy_reduce_print" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "yy_reduce_print (YYSTYPE" 43309 0  () () 0]
[ebrowse-ms "yy_stack_print" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "yy_stack_print (yytype_int16" 42601 0  () () 0]
[ebrowse-ms "yy_symbol_print" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "yy_symbol_print (FILE" 41748 0  () () 0]
[ebrowse-ms "yy_symbol_value_print" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "yy_symbol_value_print (FILE" 41086 0  () () 0]
[ebrowse-ms "yy_try_NUL_trans" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "ic yy_state_type yy_try_NUL_trans (yy_state_type" 11248 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "c yy_state_type yy_try_NUL_trans  (yy_state_type" 38350]
[ebrowse-ms "yydestruct" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "yydestruct (const" 50577 0  () () 0]
[ebrowse-ms "yyinput" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "static int yyinput (void" 27003 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    static int yyinput (void" 39030]
[ebrowse-ms "yystpcpy" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "yystpcpy (char" 45605 0  () () 0]
[ebrowse-ms "yystrlen" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "yystrlen (const" 45075 0  () () 0]
[ebrowse-ms "yysyntax_error" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "yysyntax_error (char" 47411 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "yysyntax_error (char" 27379]
[ebrowse-ms "yytnamerr" () 0 "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib.cpp" "yytnamerr (char" 46347 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "yytnamerr (char" 26315]
)
([ebrowse-ms "AND_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define AND_TOK " 5221]
[ebrowse-ms "ARITH_VAR_ORDER_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ARITH_VAR_ORDER_TOK " 7305]
[ebrowse-ms "ARRAYSENABLED" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/smtlib.y" "#define ARRAYSENABLED " 949]
[ebrowse-ms "ARRAY_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ARRAY_TOK " 5243]
[ebrowse-ms "ARROW_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ARROW_TOK " 6706]
[ebrowse-ms "AR_SYMB" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define AR_SYMB " 2924]
[ebrowse-ms "ASSERTIONS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ASSERTIONS_TOK " 7966]
[ebrowse-ms "ASSERT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ASSERT_TOK " 7328]
[ebrowse-ms "ASSIGN_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ASSIGN_TOK " 5948]
[ebrowse-ms "ASSUMPTIONS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ASSUMPTIONS_TOK " 7994]
[ebrowse-ms "ASSUMPTION_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define ASSUMPTION_TOK " 3586]
[ebrowse-ms "BEGIN" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define BEGIN " 3472]
[ebrowse-ms "BENCHMARK_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define BENCHMARK_TOK " 3659]
[ebrowse-ms "BINARY_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BINARY_TOK " 8530]
[ebrowse-ms "BITVECTOR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BITVECTOR_TOK " 5730]
[ebrowse-ms "BOOLEAN_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BOOLEAN_TOK " 5267]
[ebrowse-ms "BOOLEXTRACT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BOOLEXTRACT_TOK " 6982]
[ebrowse-ms "BOOST_FDSTREAM_HPP" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/fdstream.h" "#define BOOST_FDSTREAM_HPP
" 955]
[ebrowse-ms "BVAND_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVAND_TOK " 6750]
[ebrowse-ms "BVASHR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVASHR_TOK " 6515]
[ebrowse-ms "BVCOMP_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVCOMP_TOK " 6860]
[ebrowse-ms "BVENABLED" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/smtlib.y" "#define BVENABLED " 995]
[ebrowse-ms "BVGE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVGE_TOK " 7066]
[ebrowse-ms "BVGT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVGT_TOK " 7024]
[ebrowse-ms "BVLE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVLE_TOK " 7045]
[ebrowse-ms "BVLSHR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVLSHR_TOK " 6538]
[ebrowse-ms "BVLT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVLT_TOK " 7003]
[ebrowse-ms "BVMULT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVMULT_TOK " 6586]
[ebrowse-ms "BVNAND_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVNAND_TOK " 6815]
[ebrowse-ms "BVNEG_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVNEG_TOK " 6728]
[ebrowse-ms "BVNOR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVNOR_TOK " 6837]
[ebrowse-ms "BVPLUS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVPLUS_TOK " 6333]
[ebrowse-ms "BVREPEAT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVREPEAT_TOK " 7139]
[ebrowse-ms "BVROTL_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVROTL_TOK " 7162]
[ebrowse-ms "BVROTR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVROTR_TOK " 7185]
[ebrowse-ms "BVSDIV_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVSDIV_TOK " 6401]
[ebrowse-ms "BVSGE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVSGE_TOK " 7273]
[ebrowse-ms "BVSGT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVSGT_TOK " 7229]
[ebrowse-ms "BVSHL_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVSHL_TOK " 6492]
[ebrowse-ms "BVSIZE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/smtlib.y" "#define BVSIZE " 1037]
[ebrowse-ms "BVSLE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVSLE_TOK " 7251]
[ebrowse-ms "BVSLT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVSLT_TOK " 7207]
[ebrowse-ms "BVSMOD_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVSMOD_TOK " 6470]
[ebrowse-ms "BVSREM_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVSREM_TOK " 6447]
[ebrowse-ms "BVSUB_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVSUB_TOK " 6355]
[ebrowse-ms "BVTOINT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVTOINT_TOK " 6930]
[ebrowse-ms "BVUDIV_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVUDIV_TOK " 6378]
[ebrowse-ms "BVUMINUS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVUMINUS_TOK " 6563]
[ebrowse-ms "BVUREM_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVUREM_TOK " 6424]
[ebrowse-ms "BVXNOR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVXNOR_TOK " 6883]
[ebrowse-ms "BVXOR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVXOR_TOK " 6792]
[ebrowse-ms "BVZEROEXTEND_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define BVZEROEXTEND_TOK " 7114]
[ebrowse-ms "CALL_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define CALL_TOK " 7630]
[ebrowse-ms "CHECKSAT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define CHECKSAT_TOK " 7375]
[ebrowse-ms "CHECK_PROOFS" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem_producer.h" "#define CHECK_PROOFS " 3387]
[ebrowse-ms "CHECK_SOUND" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem_producer.h" "#define CHECK_SOUND(" 3249]
[ebrowse-ms "CHECK_TYPE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define CHECK_TYPE_TOK " 8319]
[ebrowse-ms "CLASS_NAME" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/array_theorem_producer.cpp" "#define CLASS_NAME " 1450]
[ebrowse-ms "COLON_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define COLON_TOK " 3345]
[ebrowse-ms "COMMENT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define COMMENT " 20001]
[ebrowse-ms "CONCAT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define CONCAT_TOK " 6906]
[ebrowse-ms "CONTEXT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define CONTEXT_TOK " 8244]
[ebrowse-ms "CONTINUE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define CONTINUE_TOK " 7400]
[ebrowse-ms "COUNTEREXAMPLE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define COUNTEREXAMPLE_TOK " 8025]
[ebrowse-ms "COUNTERMODEL_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define COUNTERMODEL_TOK " 8054]
[ebrowse-ms "CVC_COMMAND_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define CVC_COMMAND_TOK " 3301]
[ebrowse-ms "CVC_DLL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "#define CVC_DLL
" 1095]
[ebrowse-ms "DATATYPE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DATATYPE_TOK " 5292]
[ebrowse-ms "DBG_PRINT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "#define DBG_PRINT(" 15469]
[ebrowse-ms "DBG_PRINT_MSG" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "#define DBG_PRINT_MSG(" 15546]
[ebrowse-ms "DBG_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DBG_TOK " 7465]
[ebrowse-ms "DISTINCT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DISTINCT_TOK " 5201]
[ebrowse-ms "DIV_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DIV_TOK " 6116]
[ebrowse-ms "DOLLAR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define DOLLAR_TOK " 3762]
[ebrowse-ms "DONE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DONE_TOK " 5902]
[ebrowse-ms "DOTDOT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DOTDOT_TOK " 5925]
[ebrowse-ms "DUMP_ASSUMPTIONS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DUMP_ASSUMPTIONS_TOK " 7735]
[ebrowse-ms "DUMP_CLOSURE_PROOF_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DUMP_CLOSURE_PROOF_TOK " 7917]
[ebrowse-ms "DUMP_CLOSURE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DUMP_CLOSURE_TOK " 7882]
[ebrowse-ms "DUMP_PROOF_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DUMP_PROOF_TOK " 7702]
[ebrowse-ms "DUMP_SIG_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DUMP_SIG_TOK " 7760]
[ebrowse-ms "DUMP_TCC_ASSUMPTIONS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DUMP_TCC_ASSUMPTIONS_TOK " 7822]
[ebrowse-ms "DUMP_TCC_PROOF_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DUMP_TCC_PROOF_TOK " 7853]
[ebrowse-ms "DUMP_TCC_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define DUMP_TCC_TOK " 7785]
[ebrowse-ms "DebugAssert" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "#define DebugAssert(" 2371]
[ebrowse-ms "ECHO" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define ECHO " 21857]
[ebrowse-ms "ECHO_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ECHO_TOK " 7651]
[ebrowse-ms "ELSE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ELSE_TOK " 5313]
[ebrowse-ms "ELSIF_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ELSIF_TOK " 5335]
[ebrowse-ms "ENDIF_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ENDIF_TOK " 5377]
[ebrowse-ms "END_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define END_TOK " 5355]
[ebrowse-ms "EOB_ACT_CONTINUE_SCAN" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define EOB_ACT_CONTINUE_SCAN " 4675]
[ebrowse-ms "EOB_ACT_END_OF_FILE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define EOB_ACT_END_OF_FILE " 4705]
[ebrowse-ms "EOB_ACT_LAST_MATCH" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define EOB_ACT_LAST_MATCH " 4734]
[ebrowse-ms "EOF_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define EOF_TOK " 3832]
[ebrowse-ms "EXISTS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define EXISTS_TOK " 5400]
[ebrowse-ms "EXPR" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/PL.y" "#define EXPR " 953]
[ebrowse-ms "EXTRAFUNS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define EXTRAFUNS_TOK " 3712]
[ebrowse-ms "EXTRAPREDS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define EXTRAPREDS_TOK " 3739]
[ebrowse-ms "EXTRASORTS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define EXTRASORTS_TOK " 3686]
[ebrowse-ms "FALSELIT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define FALSELIT_TOK " 5425]
[ebrowse-ms "FALSE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define FALSE_TOK " 2992]
[ebrowse-ms "FLET_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define FLET_TOK " 3251]
[ebrowse-ms "FLEXINT_H" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define FLEXINT_H
" 1179]
[ebrowse-ms "FLEX_BETA" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define FLEX_BETA
" 881]
[ebrowse-ms "FLEX_SCANNER" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define FLEX_SCANNER
" 730]
[ebrowse-ms "FLOOR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define FLOOR_TOK " 6257]
[ebrowse-ms "FORALL_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define FORALL_TOK " 5448]
[ebrowse-ms "FORGET_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define FORGET_TOK " 8267]
[ebrowse-ms "FORMULA_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define FORMULA_TOK " 3610]
[ebrowse-ms "FatalAssert" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "#define FatalAssert(" 999]
[ebrowse-ms "GET_CHILD_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define GET_CHILD_TOK " 8345]
[ebrowse-ms "GET_OP_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define GET_OP_TOK " 8368]
[ebrowse-ms "GET_TYPE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define GET_TYPE_TOK " 8292]
[ebrowse-ms "GE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define GE_TOK " 6235]
[ebrowse-ms "GT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define GT_TOK " 6216]
[ebrowse-ms "HASHPAREN_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define HASHPAREN_TOK " 6684]
[ebrowse-ms "HASHSQ_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define HASHSQ_TOK " 6632]
[ebrowse-ms "HASH_VALUE_ONE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" "#define HASH_VALUE_ONE " 864]
[ebrowse-ms "HASH_VALUE_ZERO" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/theory_bitvector.cpp" "#define HASH_VALUE_ZERO " 837]
[ebrowse-ms "HELP_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define HELP_TOK " 7445]
[ebrowse-ms "HEX_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define HEX_TOK " 8507]
[ebrowse-ms "ID_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define ID_TOK " 8437]
[ebrowse-ms "IFF_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define IFF_TOK " 6012]
[ebrowse-ms "IF_DEBUG" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "#define IF_DEBUG(" 15412]
[ebrowse-ms "IF_THEN_ELSE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define IF_THEN_ELSE_TOK " 3085]
[ebrowse-ms "IF_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define IF_TOK " 5486]
[ebrowse-ms "IMPLIES_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define IMPLIES_TOK " 5992]
[ebrowse-ms "INCLUDE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define INCLUDE_TOK " 7675]
[ebrowse-ms "INITIAL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define INITIAL " 19983]
[ebrowse-ms "INT16_MAX" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define INT16_MAX " 2257]
[ebrowse-ms "INT16_MIN" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define INT16_MIN " 2057]
[ebrowse-ms "INT32_MAX" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define INT32_MAX " 2321]
[ebrowse-ms "INT32_MIN" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define INT32_MIN " 2124]
[ebrowse-ms "INT8_MAX" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define INT8_MAX " 2194]
[ebrowse-ms "INT8_MIN" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define INT8_MIN " 1993]
[ebrowse-ms "INTDIV_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define INTDIV_TOK " 6159]
[ebrowse-ms "INTTOBV_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define INTTOBV_TOK " 6954]
[ebrowse-ms "INT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define INT_TOK " 5680]
[ebrowse-ms "IN_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define IN_TOK " 5467]
[ebrowse-ms "IS_INTEGER_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define IS_INTEGER_TOK " 5601]
[ebrowse-ms "ITE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define ITE_TOK " 3012]
[ebrowse-ms "LAMBDA_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define LAMBDA_TOK " 5509]
[ebrowse-ms "LBRACKET_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define LBRACKET_TOK " 3370]
[ebrowse-ms "LCURBRACK_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define LCURBRACK_TOK " 3421]
[ebrowse-ms "LEFTSHIFT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define LEFTSHIFT_TOK " 6283]
[ebrowse-ms "LET_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define LET_TOK " 5554]
[ebrowse-ms "LE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define LE_TOK " 6197]
[ebrowse-ms "LOGIC_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define LOGIC_TOK " 3323]
[ebrowse-ms "LPAREN_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define LPAREN_TOK " 3470]
[ebrowse-ms "LT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define LT_TOK " 6178]
[ebrowse-ms "Lispwrap" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define Lispwrap(" 10769]
[ebrowse-ms "MID_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define MID_TOK " 6770]
[ebrowse-ms "MINUS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define MINUS_TOK " 6055]
[ebrowse-ms "MOD_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define MOD_TOK " 6136]
[ebrowse-ms "MULT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define MULT_TOK " 6076]
[ebrowse-ms "NEQ_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define NEQ_TOK " 5968]
[ebrowse-ms "NOTES_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define NOTES_TOK " 3273]
[ebrowse-ms "NOT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define NOT_TOK " 5574]
[ebrowse-ms "NUMERAL_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define NUMERAL_TOK " 8487]
[ebrowse-ms "OF_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define OF_TOK " 5620]
[ebrowse-ms "OPTION_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define OPTION_TOK " 7534]
[ebrowse-ms "OR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define OR_TOK " 5639]
[ebrowse-ms "OVERFLOW_MSG" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/util/rational-native.cpp" "#define OVERFLOW_MSG " 871]
[ebrowse-ms "PARENHASH_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define PARENHASH_TOK " 6658]
[ebrowse-ms "PATTERN_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define PATTERN_TOK " 5881]
[ebrowse-ms "PAT_MODE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "#define PAT_MODE " 25622]
[ebrowse-ms "PAT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define PAT_TOK " 3852]
[ebrowse-ms "PLUS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define PLUS_TOK " 6033]
[ebrowse-ms "POPTO_SCOPE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define POPTO_SCOPE_TOK " 8198]
[ebrowse-ms "POPTO_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define POPTO_TOK " 8117]
[ebrowse-ms "POP_SCOPE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define POP_SCOPE_TOK " 8170]
[ebrowse-ms "POP_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define POP_TOK " 8095]
[ebrowse-ms "POW_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define POW_TOK " 6096]
[ebrowse-ms "PRIME" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "#define PRIME " 1685]
[ebrowse-ms "PRINT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define PRINT_TOK " 7582]
[ebrowse-ms "PRINT_TYPE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define PRINT_TYPE_TOK " 7609]
[ebrowse-ms "PUSH_SCOPE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define PUSH_SCOPE_TOK " 8144]
[ebrowse-ms "PUSH_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define PUSH_TOK " 8075]
[ebrowse-ms "QUERYPARSED" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/smtlib.y" "#define QUERYPARSED " 1125]
[ebrowse-ms "QUERY_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define QUERY_TOK " 7350]
[ebrowse-ms "QUESTION_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define QUESTION_TOK " 3787]
[ebrowse-ms "RAT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/PL.y" "#define RAT(" 1022]
[ebrowse-ms "RBRACKET_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define RBRACKET_TOK " 3395]
[ebrowse-ms "RCURBRACK_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define RCURBRACK_TOK " 3447]
[ebrowse-ms "REAL_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define REAL_TOK " 5660]
[ebrowse-ms "REG" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_manager.cpp" "#define REG(" 15128]
[ebrowse-ms "REG_TYPE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr_manager.cpp" "#define REG_TYPE(" 15166]
[ebrowse-ms "REJECT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define REJECT " 16740]
[ebrowse-ms "RESET_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define RESET_TOK " 8220]
[ebrowse-ms "RESTART_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define RESTART_TOK " 7424]
[ebrowse-ms "RIGHTSHIFT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define RIGHTSHIFT_TOK " 6310]
[ebrowse-ms "RPAREN_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define RPAREN_TOK " 3493]
[ebrowse-ms "SAT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define SAT_TOK " 3513]
[ebrowse-ms "SIMULATE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define SIMULATE_TOK " 5534]
[ebrowse-ms "SQHASH_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define SQHASH_TOK " 6609]
[ebrowse-ms "STATUS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define STATUS_TOK " 3633]
[ebrowse-ms "STRINGLIT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define STRINGLIT_TOK " 8463]
[ebrowse-ms "STRING_LITERAL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define STRING_LITERAL " 20026]
[ebrowse-ms "STRING_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define STRING_TOK " 2904]
[ebrowse-ms "SUBSTITUTE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define SUBSTITUTE_TOK " 8395]
[ebrowse-ms "SUBTYPE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define SUBTYPE_TOK " 5704]
[ebrowse-ms "SX_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define SX_TOK " 7085]
[ebrowse-ms "SYM_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define SYM_TOK " 2881]
[ebrowse-ms "TCC_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define TCC_TOK " 5857]
[ebrowse-ms "TEMPLATE_FAIL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "#define TEMPLATE_FAIL " 2522]
[ebrowse-ms "THEN_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define THEN_TOK " 5751]
[ebrowse-ms "TMP" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/PL.y" "#define TMP " 923]
[ebrowse-ms "TRACE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "#define TRACE(" 15503]
[ebrowse-ms "TRACE_MSG" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "#define TRACE_MSG(" 15575]
[ebrowse-ms "TRACE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define TRACE_TOK " 7487]
[ebrowse-ms "TRANSFORM_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define TRANSFORM_TOK " 7560]
[ebrowse-ms "TRUELIT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define TRUELIT_TOK " 5775]
[ebrowse-ms "TRUE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define TRUE_TOK " 2970]
[ebrowse-ms "TYPE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define TYPE_TOK " 5796]
[ebrowse-ms "UINT16_MAX" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define UINT16_MAX " 2455]
[ebrowse-ms "UINT32_MAX" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define UINT32_MAX " 2521]
[ebrowse-ms "UINT8_MAX" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define UINT8_MAX " 2390]
[ebrowse-ms "UMINUS_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define UMINUS_TOK " 8418]
[ebrowse-ms "UNKNOWN_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define UNKNOWN_TOK " 3559]
[ebrowse-ms "UNSAT_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define UNSAT_TOK " 3535]
[ebrowse-ms "UNTRACE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define UNTRACE_TOK " 7511]
[ebrowse-ms "USER_VALUE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "#define USER_VALUE " 25603]
[ebrowse-ms "USER_VAL_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsesmtlib_defs.h" "#define USER_VAL_TOK " 2949]
[ebrowse-ms "VC" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/PL.y" "#define VC " 987]
[ebrowse-ms "VERSION" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/cvc3/main.cpp" "#define VERSION " 3239]
[ebrowse-ms "WHERE_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define WHERE_TOK " 7939]
[ebrowse-ms "WITH_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define WITH_TOK " 5817]
[ebrowse-ms "XOR_TOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "#define XOR_TOK " 5837]
[ebrowse-ms "YYABORT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYABORT	" 17865]
[ebrowse-ms "YYACCEPT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYACCEPT	" 17832]
[ebrowse-ms "YYBACKUP" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYBACKUP(" 18209]
[ebrowse-ms "YYBISON" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYBISON " 2157]
[ebrowse-ms "YYBISON_VERSION" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYBISON_VERSION " 2206]
[ebrowse-ms "YYCOPY" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#   define YYCOPY(" 10328]
[ebrowse-ms "YYDEBUG" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYDEBUG " 4613]
[ebrowse-ms "YYDPRINTF" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYDPRINTF(" 24135]
[ebrowse-ms "YYEMPTY" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYEMPTY	" 17791]
[ebrowse-ms "YYEOF" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYEOF	" 17811]
[ebrowse-ms "YYERRCODE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYERRCODE	" 18657]
[ebrowse-ms "YYERROR" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYERROR	" 17898]
[ebrowse-ms "YYERROR_VERBOSE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/PL.y" "#define YYERROR_VERBOSE " 5668]
[ebrowse-ms "YYFAIL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYFAIL	" 18135]
[ebrowse-ms "YYFINAL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYFINAL " 11215]
[ebrowse-ms "YYFPRINTF" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#  define YYFPRINTF " 20361]
[ebrowse-ms "YYFREE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#   define YYFREE " 9196]
[ebrowse-ms "YYID" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYID(" 6867]
[ebrowse-ms "YYINITDEPTH" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYINITDEPTH " 24388]
[ebrowse-ms "YYLAST" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYLAST " 11274]
[ebrowse-ms "YYLEX" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYLEX " 20198]
[ebrowse-ms "YYLLOC_DEFAULT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYLLOC_DEFAULT(" 18928]
[ebrowse-ms "YYLSP_NEEDED" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYLSP_NEEDED " 2353]
[ebrowse-ms "YYLTYPE_IS_TRIVIAL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/PL.y" "#define YYLTYPE_IS_TRIVIAL " 5534]
[ebrowse-ms "YYMALLOC" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#   define YYMALLOC " 8931]
[ebrowse-ms "YYMAXDEPTH" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/PL.y" "#define YYMAXDEPTH " 5555]
[ebrowse-ms "YYMAXUTOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYMAXUTOK " 11632]
[ebrowse-ms "YYNNTS" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYNNTS " 11399]
[ebrowse-ms "YYNRULES" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYNRULES " 11455]
[ebrowse-ms "YYNSTATES" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYNSTATES " 11514]
[ebrowse-ms "YYNTOKENS" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYNTOKENS " 11339]
[ebrowse-ms "YYPACT_NINF" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYPACT_NINF " 16453]
[ebrowse-ms "YYPOPSTACK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYPOPSTACK(" 32732]
[ebrowse-ms "YYPURE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYPURE " 2305]
[ebrowse-ms "YYRECOVERING" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYRECOVERING(" 18172]
[ebrowse-ms "YYRHSLOC" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYRHSLOC(" 18862]
[ebrowse-ms "YYSIZE_MAXIMUM" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYSIZE_MAXIMUM " 6340]
[ebrowse-ms "YYSIZE_T" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#  define YYSIZE_T " 6288]
[ebrowse-ms "YYSKELETON_NAME" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYSKELETON_NAME " 2259]
[ebrowse-ms "YYSTACK_ALLOC" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#  define YYSTACK_ALLOC " 8494]
[ebrowse-ms "YYSTACK_ALLOC_MAXIMUM" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#   define YYSTACK_ALLOC_MAXIMUM " 8598]
[ebrowse-ms "YYSTACK_BYTES" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYSTACK_BYTES(" 9966]
[ebrowse-ms "YYSTACK_FREE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#  define YYSTACK_FREE " 8526]
[ebrowse-ms "YYSTACK_GAP_MAXIMUM" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYSTACK_GAP_MAXIMUM " 9824]
[ebrowse-ms "YYSTACK_RELOCATE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYSTACK_RELOCATE(" 10827]
[ebrowse-ms "YYSTATE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YYSTATE " 3713]
[ebrowse-ms "YYSTYPE_IS_DECLARED" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "# define YYSTYPE_IS_DECLARED " 8873]
[ebrowse-ms "YYSTYPE_IS_TRIVIAL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "# define YYSTYPE_IS_TRIVIAL " 8903]
[ebrowse-ms "YYTABLES_NAME" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YYTABLES_NAME " 54216]
[ebrowse-ms "YYTABLE_NINF" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYTABLE_NINF " 17041]
[ebrowse-ms "YYTERROR" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYTERROR	" 18637]
[ebrowse-ms "YYTOKENTYPE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "# define YYTOKENTYPE
" 1674]
[ebrowse-ms "YYTOKEN_TABLE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYTOKEN_TABLE " 4856]
[ebrowse-ms "YYTRANSLATE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYTRANSLATE(" 11659]
[ebrowse-ms "YYUNDEFTOK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define YYUNDEFTOK " 11611]
[ebrowse-ms "YYUSE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YYUSE(" 6738]
[ebrowse-ms "YY_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#  define YY_(" 6563]
[ebrowse-ms "YY_AT_BOL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_AT_BOL(" 10687]
[ebrowse-ms "YY_BREAK" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_BREAK " 23789]
[ebrowse-ms "YY_BUFFER_EOF_PENDING" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_BUFFER_EOF_PENDING " 7845]
[ebrowse-ms "YY_BUFFER_NEW" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_BUFFER_NEW " 7311]
[ebrowse-ms "YY_BUFFER_NORMAL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_BUFFER_NORMAL " 7338]
[ebrowse-ms "YY_BUF_SIZE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_BUF_SIZE " 4261]
[ebrowse-ms "YY_CURRENT_BUFFER" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_CURRENT_BUFFER " 8353]
[ebrowse-ms "YY_CURRENT_BUFFER_LVALUE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_CURRENT_BUFFER_LVALUE " 8656]
[ebrowse-ms "YY_DECL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_DECL " 23513]
[ebrowse-ms "YY_DECL_IS_OURS" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_DECL_IS_OURS " 23466]
[ebrowse-ms "YY_DO_BEFORE_ACTION" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_DO_BEFORE_ACTION " 11362]
[ebrowse-ms "YY_END_OF_BUFFER" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_END_OF_BUFFER " 11548]
[ebrowse-ms "YY_END_OF_BUFFER_CHAR" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_END_OF_BUFFER_CHAR " 3973]
[ebrowse-ms "YY_EXIT_FAILURE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_EXIT_FAILURE " 50259]
[ebrowse-ms "YY_EXTRA_TYPE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_EXTRA_TYPE " 20334]
[ebrowse-ms "YY_FATAL_ERROR" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_FATAL_ERROR(" 23232]
[ebrowse-ms "YY_FLEX_MAJOR_VERSION" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_FLEX_MAJOR_VERSION " 760]
[ebrowse-ms "YY_FLEX_MINOR_VERSION" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_FLEX_MINOR_VERSION " 792]
[ebrowse-ms "YY_FLEX_SUBMINOR_VERSION" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_FLEX_SUBMINOR_VERSION " 827]
[ebrowse-ms "YY_FLUSH_BUFFER" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_FLUSH_BUFFER " 9770]
[ebrowse-ms "YY_INPUT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_INPUT(" 22077]
[ebrowse-ms "YY_INT_ALIGNED" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define  YY_INT_ALIGNED " 70]
[ebrowse-ms "YY_LESS_LINENO" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "    #define  YY_LESS_LINENO(" 5271]
[ebrowse-ms "YY_LOCATION_PRINT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#  define YY_LOCATION_PRINT(" 20025]
[ebrowse-ms "YY_MORE_ADJ" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_MORE_ADJ " 16835]
[ebrowse-ms "YY_NEW_FILE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_NEW_FILE " 3920]
[ebrowse-ms "YY_NULL" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_NULL " 2996]
[ebrowse-ms "YY_NUM_RULES" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_NUM_RULES " 11520]
[ebrowse-ms "YY_READ_BUF_SIZE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_READ_BUF_SIZE " 21629]
[ebrowse-ms "YY_REDUCE_PRINT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YY_REDUCE_PRINT(" 24258]
[ebrowse-ms "YY_RESTORE_YY_MORE_OFFSET" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_RESTORE_YY_MORE_OFFSET
" 16871]
[ebrowse-ms "YY_RULE_SETUP" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_RULE_SETUP " 23826]
[ebrowse-ms "YY_SC_TO_UI" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_SC_TO_UI(" 3247]
[ebrowse-ms "YY_SKIP_YYWRAP" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_SKIP_YYWRAP
" 10797]
[ebrowse-ms "YY_STACK_PRINT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YY_STACK_PRINT(" 24220]
[ebrowse-ms "YY_START" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_START " 3674]
[ebrowse-ms "YY_START_STACK_INCR" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_START_STACK_INCR " 23147]
[ebrowse-ms "YY_STATE_BUF_SIZE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_STATE_BUF_SIZE " 4417]
[ebrowse-ms "YY_STATE_EOF" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_STATE_EOF(" 3801]
[ebrowse-ms "YY_STRUCT_YY_BUFFER_STATE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_STRUCT_YY_BUFFER_STATE
" 6138]
[ebrowse-ms "YY_SYMBOL_PRINT" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "# define YY_SYMBOL_PRINT(" 24166]
[ebrowse-ms "YY_TYPEDEF_YY_BUFFER_STATE" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_TYPEDEF_YY_BUFFER_STATE
" 4534]
[ebrowse-ms "YY_TYPEDEF_YY_SIZE_T" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_TYPEDEF_YY_SIZE_T
" 6036]
[ebrowse-ms "YY_USER_ACTION" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_USER_ACTION
" 23702]
[ebrowse-ms "YY_USE_CONST" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define YY_USE_CONST
" 2814]
[ebrowse-ms "_CVC3_TRUSTED_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_theorem_producer.cpp" "#define _CVC3_TRUSTED_
" 681]
[ebrowse-ms "_SAT_API_H_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sat_api.h" "#define _SAT_API_H_
" 608]
[ebrowse-ms "_STDLIB_H" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#    define _STDLIB_H " 8871]
[ebrowse-ms "__SGI_STL_INTERNAL_RELOPS" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "#define __SGI_STL_INTERNAL_RELOPS
" 8412]
[ebrowse-ms "__STDC_LIMIT_MACROS" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define __STDC_LIMIT_MACROS " 1500]
[ebrowse-ms "_core_utilities_compat_hash_set_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/compat_hash_set.h" "#define _core_utilities_compat_hash_set_h_
" 1101]
[ebrowse-ms "_cvc3__arith_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_proof_rules.h" "#define _cvc3__arith_proof_rules_h_
" 671]
[ebrowse-ms "_cvc3__arith_theorem_producer3_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer3.h" "#define _cvc3__arith_theorem_producer3_h_
" 716]
[ebrowse-ms "_cvc3__arith_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.h" "#define _cvc3__arith_theorem_producer_h_
" 713]
[ebrowse-ms "_cvc3__arith_theorem_producer_old_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer_old.h" "#define _cvc3__arith_theorem_producer_old_h_
" 721]
[ebrowse-ms "_cvc3__assumptions_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/assumptions.h" "#define _cvc3__assumptions_h_
" 1179]
[ebrowse-ms "_cvc3__bitvector_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_proof_rules.h" "#define _cvc3__bitvector_proof_rules_h_
" 668]
[ebrowse-ms "_cvc3__bitvector_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_theorem_producer.h" "#define _cvc3__bitvector_theorem_producer_h_
" 708]
[ebrowse-ms "_cvc3__command_line_exception_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/command_line_exception.h" "#define _cvc3__command_line_exception_h_
" 720]
[ebrowse-ms "_cvc3__command_line_flags_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/command_line_flags.h" "#define _cvc3__command_line_flags_h_
" 624]
[ebrowse-ms "_cvc3__common_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/common_proof_rules.h" "#define _cvc3__common_proof_rules_h_
" 1209]
[ebrowse-ms "_cvc3__common_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/common_theorem_producer.h" "#define _cvc3__common_theorem_producer_h_
" 945]
[ebrowse-ms "_cvc3__core_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_proof_rules.h" "#define _cvc3__core_proof_rules_h_
" 659]
[ebrowse-ms "_cvc3__core_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_core/core_theorem_producer.h" "#define _cvc3__core_theorem_producer_h_
" 937]
[ebrowse-ms "_cvc3__cvc_util_h" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "#define _cvc3__cvc_util_h
" 670]
[ebrowse-ms "_cvc3__debug_h" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/debug.h" "#define _cvc3__debug_h
" 652]
[ebrowse-ms "_cvc3__eval_exception_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/eval_exception.h" "#define _cvc3__eval_exception_h_
" 787]
[ebrowse-ms "_cvc3__exception_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/exception.h" "#define _cvc3__exception_h_
" 725]
[ebrowse-ms "_cvc3__expr_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "#define _cvc3__expr_h_
" 665]
[ebrowse-ms "_cvc3__expr_map_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" "#define _cvc3__expr_map_h_
" 1919]
[ebrowse-ms "_cvc3__expr_op_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_op.h" "#define _cvc3__expr_op_h_
" 814]
[ebrowse-ms "_cvc3__expr_stream_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_stream.h" "#define _cvc3__expr_stream_h_
" 1139]
[ebrowse-ms "_cvc3__expr_value_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_value.h" "#define _cvc3__expr_value_h_
" 1559]
[ebrowse-ms "_cvc3__hash__hash_fun_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_fun.h" "#define _cvc3__hash__hash_fun_h_
" 1857]
[ebrowse-ms "_cvc3__hash__hash_map_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_map.h" "#define _cvc3__hash__hash_map_h_
" 1862]
[ebrowse-ms "_cvc3__hash__hash_set_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_set.h" "#define _cvc3__hash__hash_set_h_
" 1862]
[ebrowse-ms "_cvc3__hash__hash_table_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "#define _cvc3__hash__hash_table_h_
" 1871]
[ebrowse-ms "_cvc3__include__c_interface__defs_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface_defs.h" "#define _cvc3__include__c_interface__defs_h_
" 640]
[ebrowse-ms "_cvc3__include__c_interface_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface.h" "#define _cvc3__include__c_interface_h_
" 648]
[ebrowse-ms "_cvc3__include__cdflags_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdflags.h" "#define _cvc3__include__cdflags_h_
" 652]
[ebrowse-ms "_cvc3__include__cdlist_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdlist.h" "#define _cvc3__include__cdlist_h_
" 609]
[ebrowse-ms "_cvc3__include__cdmap_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap.h" "#define _cvc3__include__cdmap_h_
" 603]
[ebrowse-ms "_cvc3__include__cdmap_ordered_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdmap_ordered.h" "#define _cvc3__include__cdmap_ordered_h_
" 631]
[ebrowse-ms "_cvc3__include__cdo_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cdo.h" "#define _cvc3__include__cdo_h_
" 600]
[ebrowse-ms "_cvc3__include__circuit_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/circuit.h" "#define _cvc3__include__circuit_h_
" 567]
[ebrowse-ms "_cvc3__include__clause_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/clause.h" "#define _cvc3__include__clause_h_
" 1089]
[ebrowse-ms "_cvc3__include__cnf_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf.h" "#define _cvc3__include__cnf_h_
" 652]
[ebrowse-ms "_cvc3__include__cnf_manager_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cnf_manager.h" "#define _cvc3__include__cnf_manager_h_
" 682]
[ebrowse-ms "_cvc3__include__compat_hash_map_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/compat_hash_map.h" "#define _cvc3__include__compat_hash_map_h_
" 1084]
[ebrowse-ms "_cvc3__include__context_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/context.h" "#define _cvc3__include__context_h_
" 609]
[ebrowse-ms "_cvc3__include__dpllt_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt.h" "#define _cvc3__include__dpllt_h_
" 351]
[ebrowse-ms "_cvc3__include__expr_hash_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_hash.h" "#define _cvc3__include__expr_hash_h_
" 850]
[ebrowse-ms "_cvc3__include__expr_manager_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_manager.h" "#define _cvc3__include__expr_manager_h_
" 808]
[ebrowse-ms "_cvc3__include__expr_transform_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_transform.h" "#define _cvc3__include__expr_transform_h_
" 683]
[ebrowse-ms "_cvc3__include__formula_value_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/formula_value.h" "#define _cvc3__include__formula_value_h_
" 672]
[ebrowse-ms "_cvc3__include__kinds_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/kinds.h" "#define _cvc3__include__kinds_h_
" 602]
[ebrowse-ms "_cvc3__include__memory_manager_context_h" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_context.h" "define _cvc3__include__memory_manager_context_h
" 683]
[ebrowse-ms "_cvc3__include__notifylist_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/notifylist.h" "#define _cvc3__include__notifylist_h_ " 622]
[ebrowse-ms "_cvc3__include__queryresult_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/queryresult.h" "#define _cvc3__include__queryresult_h_
" 664]
[ebrowse-ms "_cvc3__include__search_fast_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_fast.h" "#define _cvc3__include__search_fast_h_
" 678]
[ebrowse-ms "_cvc3__include__search_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search.h" "#define _cvc3__include__search_h_
" 705]
[ebrowse-ms "_cvc3__include__search_impl_base_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_impl_base.h" "#define _cvc3__include__search_impl_base_h_
" 735]
[ebrowse-ms "_cvc3__include__search_sat_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_sat.h" "#define _cvc3__include__search_sat_h_
" 672]
[ebrowse-ms "_cvc3__include__search_simple_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/search_simple.h" "#define _cvc3__include__search_simple_h_
" 630]
[ebrowse-ms "_cvc3__include__smartcdo_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smartcdo.h" "#define _cvc3__include__smartcdo_h_
" 660]
[ebrowse-ms "_cvc3__include__theory_arith3_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith3.h" "#define _cvc3__include__theory_arith3_h_
" 630]
[ebrowse-ms "_cvc3__include__theory_arith_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith.h" "#define _cvc3__include__theory_arith_h_
" 623]
[ebrowse-ms "_cvc3__include__theory_arith_new_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_new.h" "#define _cvc3__include__theory_arith_new_h_
" 640]
[ebrowse-ms "_cvc3__include__theory_arith_old_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_arith_old.h" "#define _cvc3__include__theory_arith_old_h_
" 635]
[ebrowse-ms "_cvc3__include__theory_array_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_array.h" "#define _cvc3__include__theory_array_h_
" 627]
[ebrowse-ms "_cvc3__include__theory_bitvector_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_bitvector.h" "#define _cvc3__include__theory_bitvector_h_
" 638]
[ebrowse-ms "_cvc3__include__theory_core_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_core.h" "#define _cvc3__include__theory_core_h_
" 620]
[ebrowse-ms "_cvc3__include__theory_datatype_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype.h" "#define _cvc3__include__theory_datatype_h_
" 631]
[ebrowse-ms "_cvc3__include__theory_datatype_lazy_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_datatype_lazy.h" "#define _cvc3__include__theory_datatype_lazy_h_
" 648]
[ebrowse-ms "_cvc3__include__theory_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory.h" "#define _cvc3__include__theory_h_
" 683]
[ebrowse-ms "_cvc3__include__theory_quant_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_quant.h" "#define _cvc3__include__theory_quant_h_
" 708]
[ebrowse-ms "_cvc3__include__theory_records_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_records.h" "#define _cvc3__include__theory_records_h_
" 614]
[ebrowse-ms "_cvc3__include__theory_simulate_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_simulate.h" "#define _cvc3__include__theory_simulate_h_
" 682]
[ebrowse-ms "_cvc3__include__theory_uf_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theory_uf.h" "#define _cvc3__include__theory_uf_h_
" 618]
[ebrowse-ms "_cvc3__include__type_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "#define _cvc3__include__type_h_
" 769]
[ebrowse-ms "_cvc3__include__vc_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vc.h" "#define _cvc3__include__vc_h_
" 638]
[ebrowse-ms "_cvc3__include__vcl_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vcl.h" "#define _cvc3__include__vcl_h_
" 655]
[ebrowse-ms "_cvc3__lang_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/lang.h" "#define _cvc3__lang_h_
" 644]
[ebrowse-ms "_cvc3__memory_manager_chunks_h" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_chunks.h" "#define _cvc3__memory_manager_chunks_h
" 1357]
[ebrowse-ms "_cvc3__memory_manager_h" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager.h" "#define _cvc3__memory_manager_h
" 1310]
[ebrowse-ms "_cvc3__memory_manager_malloc_h" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/memory_manager_malloc.h" "#define _cvc3__memory_manager_malloc_h
" 1165]
[ebrowse-ms "_cvc3__minisat__global_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_global.h" "#define _cvc3__minisat__global_h_
" 1936]
[ebrowse-ms "_cvc3__minisat__heap_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_heap.h" "#define _cvc3__minisat__heap_h_
" 1942]
[ebrowse-ms "_cvc3__minisat__types_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" "#define _cvc3__minisat__types_h_
" 1931]
[ebrowse-ms "_cvc3__minisat__varorder_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_varorder.h" "#define _cvc3__minisat__varorder_h_
" 1945]
[ebrowse-ms "_cvc3__minisat_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_solver.h" "#define _cvc3__minisat_h_
" 1928]
[ebrowse-ms "_cvc3__parser_exception_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/parser_exception.h" "#define _cvc3__parser_exception_h_
" 663]
[ebrowse-ms "_cvc3__parser_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/parser.h" "#define _cvc3__parser_h_
" 1008]
[ebrowse-ms "_cvc3__parser_temp_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parser_temp.h" "#define _cvc3__parser_temp_h_
" 689]
[ebrowse-ms "_cvc3__pretty_printer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/pretty_printer.h" "#define _cvc3__pretty_printer_h_
" 735]
[ebrowse-ms "_cvc3__proof_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/proof.h" "#define _cvc3__proof_h_
" 932]
[ebrowse-ms "_cvc3__quant_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_proof_rules.h" "#define _cvc3__quant_proof_rules_h_
" 622]
[ebrowse-ms "_cvc3__quant_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_quant/quant_theorem_producer.h" "#define _cvc3__quant_theorem_producer_h_
" 637]
[ebrowse-ms "_cvc3__rational_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "#define _cvc3__rational_h_
" 1002]
[ebrowse-ms "_cvc3__records_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_proof_rules.h" "#define _cvc3__records_proof_rules_h_
" 628]
[ebrowse-ms "_cvc3__records_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_records/records_theorem_producer.h" "#define _cvc3__records_theorem_producer_h_
" 643]
[ebrowse-ms "_cvc3__sat__cnf_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_rules.h" "#define _cvc3__sat__cnf_rules_h_
" 660]
[ebrowse-ms "_cvc3__sat__cnf_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/cnf_theorem_producer.h" "#define _cvc3__sat__cnf_theorem_producer_h_
" 681]
[ebrowse-ms "_cvc3__sat__dpllt_basic_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt_basic.h" "#define _cvc3__sat__dpllt_basic_h_
" 655]
[ebrowse-ms "_cvc3__sat__dpllt_minisat_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/dpllt_minisat.h" "#define _cvc3__sat__dpllt_minisat_h_
" 674]
[ebrowse-ms "_cvc3__sat__minisat_derivation_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_derivation.h" "#define _cvc3__sat__minisat_derivation_h_
" 663]
[ebrowse-ms "_cvc3__sat__proof_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/sat_proof.h" "#define _cvc3__sat__proof_h_
" 642]
[ebrowse-ms "_cvc3__search__decision_engine_caching_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_caching.h" "efine _cvc3__search__decision_engine_caching_h_
" 589]
[ebrowse-ms "_cvc3__search__decision_engine_dfs_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_dfs.h" "#define _cvc3__search__decision_engine_dfs_h_
" 646]
[ebrowse-ms "_cvc3__search__decision_engine_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine.h" "#define _cvc3__search__decision_engine_h_
" 634]
[ebrowse-ms "_cvc3__search__decision_engine_mbtf_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/decision_engine_mbtf.h" "#define _cvc3__search__decision_engine_mbtf_h_
" 580]
[ebrowse-ms "_cvc3__search__search_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_rules.h" "#define _cvc3__search__search_rules_h_
" 695]
[ebrowse-ms "_cvc3__search__search_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_theorem_producer.h" "efine _cvc3__search__search_theorem_producer_h_
" 732]
[ebrowse-ms "_cvc3__smtlib_exception_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/smtlib_exception.h" "#define _cvc3__smtlib_exception_h_
" 683]
[ebrowse-ms "_cvc3__sound_exception_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/sound_exception.h" "#define _cvc3__sound_exception_h_
" 700]
[ebrowse-ms "_cvc3__statistics_h" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/statistics.h" "#define _cvc3__statistics_h
" 680]
[ebrowse-ms "_cvc3__theorem_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" "#define _cvc3__theorem_h_
" 1677]
[ebrowse-ms "_cvc3__theorem_manager_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem_manager.h" "#define _cvc3__theorem_manager_h_
" 725]
[ebrowse-ms "_cvc3__theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem_producer.h" "#define _cvc3__theorem_producer_h_
" 2899]
[ebrowse-ms "_cvc3__theorem_value_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theorem/theorem_value.h" "#define _cvc3__theorem_value_h_
" 1575]
[ebrowse-ms "_cvc3__theory_arith__arith_exception_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_exception.h" "#define _cvc3__theory_arith__arith_exception_h_
" 715]
[ebrowse-ms "_cvc3__theory_array__array_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/array_proof_rules.h" "efine _cvc3__theory_array__array_proof_rules_h_
" 731]
[ebrowse-ms "_cvc3__theory_array__array_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_array/array_theorem_producer.h" " _cvc3__theory_array__array_theorem_producer_h_
" 873]
[ebrowse-ms "_cvc3__theory_bitvector__bitvector_exception_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_exception.h" "_cvc3__theory_bitvector__bitvector_exception_h_
" 736]
[ebrowse-ms "_cvc3__theory_bitvector__bitvector_expr_value_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_bitvector/bitvector_expr_value.h" "cvc3__theory_bitvector__bitvector_expr_value_h_
" 741]
[ebrowse-ms "_cvc3__theory_datatype__datatype_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_proof_rules.h" "_cvc3__theory_datatype__datatype_proof_rules_h_
" 760]
[ebrowse-ms "_cvc3__theory_datatype__datatype_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_datatype/datatype_theorem_producer.h" "__theory_datatype__datatype_theorem_producer_h_
" 782]
[ebrowse-ms "_cvc3__theory_simulate__simulate_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_proof_rules.h" "_cvc3__theory_simulate__simulate_proof_rules_h_
" 732]
[ebrowse-ms "_cvc3__theory_simulate__simulate_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_simulate/simulate_theorem_producer.h" "__theory_simulate__simulate_theorem_producer_h_
" 742]
[ebrowse-ms "_cvc3__theory_uf__uf_proof_rules_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_proof_rules.h" "#define _cvc3__theory_uf__uf_proof_rules_h_
" 738]
[ebrowse-ms "_cvc3__theory_uf__uf_theorem_producer_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_uf/uf_theorem_producer.h" "define _cvc3__theory_uf__uf_theorem_producer_h_
" 760]
[ebrowse-ms "_cvc3__translator_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/translator.h" "#define _cvc3__translator_h_
" 665]
[ebrowse-ms "_cvc3__typecheck_exception_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/typecheck_exception.h" "#define _cvc3__typecheck_exception_h_
" 683]
[ebrowse-ms "_cvc3__variable_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/variable.h" "#define _cvc3__variable_h_
" 935]
[ebrowse-ms "_cvc3__vc_cvc__vc_cmd_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/vc_cmd.h" "#define _cvc3__vc_cvc__vc_cmd_h_
" 607]
[ebrowse-ms "_cvc3__windows_h_" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "#define _cvc3__windows_h_
" 643]
[ebrowse-ms "alloca" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#    define alloca " 7563]
[ebrowse-ms "followChaff" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/search_fast.cpp" "#define followChaff " 1062]
[ebrowse-ms "isatty" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "#define isatty " 1370]
[ebrowse-ms "smtlibwrap" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexsmtlib.cpp" "#define smtlibwrap(" 10895]
[ebrowse-ms "unput" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define unput(" 5946]
[ebrowse-ms "vals3" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/circuit.cpp" "#define vals3(" 1029]
[ebrowse-ms "vals4" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/search/circuit.cpp" "#define vals4(" 1094]
[ebrowse-ms "yy_create_buffer" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_create_buffer " 149]
[ebrowse-ms "yy_delete_buffer" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_delete_buffer " 193]
[ebrowse-ms "yy_flex_debug" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_flex_debug " 234]
[ebrowse-ms "yy_flush_buffer" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_flush_buffer " 314]
[ebrowse-ms "yy_init_buffer" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_init_buffer " 273]
[ebrowse-ms "yy_load_buffer_state" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_load_buffer_state " 361]
[ebrowse-ms "yy_new_buffer" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_new_buffer " 10118]
[ebrowse-ms "yy_set_bol" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_set_bol(" 10439]
[ebrowse-ms "yy_set_interactive" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_set_interactive(" 10165]
[ebrowse-ms "yy_switch_to_buffer" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yy_switch_to_buffer " 412]
[ebrowse-ms "yyalloc" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyalloc " 644]
[ebrowse-ms "yychar" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define yychar " 2523]
[ebrowse-ms "yyclearin" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define yyclearin	" 17756]
[ebrowse-ms "yyconst" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyconst
" 2939]
[ebrowse-ms "yydebug" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define yydebug " 2549]
[ebrowse-ms "yyerrok" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define yyerrok	" 17719]
[ebrowse-ms "yyerror" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define yyerror " 2473]
[ebrowse-ms "yyfree" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyfree " 699]
[ebrowse-ms "yyin" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyin " 447]
[ebrowse-ms "yyleng" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyleng " 469]
[ebrowse-ms "yyless" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyless(" 50477]
[ebrowse-ms "yylex" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define yylex " 2447]
[ebrowse-ms "yylineno" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yylineno " 517]
[ebrowse-ms "yylval" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define yylval " 2498]
[ebrowse-ms "yymore" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yymore(" 16784]
[ebrowse-ms "yynerrs" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define yynerrs " 2575]
[ebrowse-ms "yyout" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyout " 542]
[ebrowse-ms "yyparse" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#define yyparse " 2423]
[ebrowse-ms "yyrealloc" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyrealloc " 672]
[ebrowse-ms "yyrestart" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyrestart " 568]
[ebrowse-ms "yystpcpy" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#   define yystpcpy " 25343]
[ebrowse-ms "yystrlen" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "#   define yystrlen " 24864]
[ebrowse-ms "yystype" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "# define yystype " 8799]
[ebrowse-ms "yyterminate" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yyterminate(" 23004]
[ebrowse-ms "yytext" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yytext " 595]
[ebrowse-ms "yytext_ptr" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yytext_ptr " 10996]
[ebrowse-ms "yywrap" () 512 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "#define yywrap " 619]
)
([ebrowse-ms "Context" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface_defs.h" "        typedef void* Context;" 1086]
[ebrowse-ms "Expr" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface_defs.h" "        typedef void* Expr;" 1179]
[ebrowse-ms "ExprIndex" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr.h" "  typedef long unsigned ExprIndex;" 1924]
[ebrowse-ms "ExprManager" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface_defs.h" "        typedef void* ExprManager;" 1121]
[ebrowse-ms "Flags" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface_defs.h" "        typedef void* Flags;" 1150]
[ebrowse-ms "FormulaValue" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/formula_value.h" "typedef enum FormulaValue {" 922]
[ebrowse-ms "MonomMap" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/theory_arith/arith_theorem_producer.cpp" "ypedef map<Expr,Rational,MonomialLess> MonomMap;" 13710]
[ebrowse-ms "Op" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface_defs.h" "        typedef void* Op;" 1205]
[ebrowse-ms "Proof" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface_defs.h" "        typedef void* Proof;" 1262]
[ebrowse-ms "QueryResult" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/queryresult.h" "typedef enum QueryResult {" 994]
[ebrowse-ms "StrPair" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/cvc_util.h" "edef std::pair<std::string,std::string> StrPair;" 1836]
[ebrowse-ms "TheoremMap" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/theorem.h" " std::map<Theorem,bool, TheoremLess> TheoremMap;" 14114]
[ebrowse-ms "Type" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface_defs.h" "        typedef void* Type;" 1233]
[ebrowse-ms "Unsigned" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/rational.h" "  typedef unsigned long Unsigned;" 7132]
[ebrowse-ms "VC" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/c_interface_defs.h" "        typedef void* VC;" 1055]
[ebrowse-ms "Var" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/sat/minisat_types.h" "  typedef int Var;" 2362]
[ebrowse-ms "YY_CHAR" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "typedef unsigned char YY_CHAR;" 10828]
[ebrowse-ms "flex_int16_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "typedef short int flex_int16_t;" 1784]
[ebrowse-ms "flex_int32_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "typedef int flex_int32_t;" 1810]
[ebrowse-ms "flex_int8_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "typedef signed char flex_int8_t;" 1752]
[ebrowse-ms "flex_uint16_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "typedef unsigned short int flex_uint16_t;" 1889]
[ebrowse-ms "flex_uint32_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "typedef unsigned int flex_uint32_t;" 1925]
[ebrowse-ms "flex_uint8_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "typedef unsigned char flex_uint8_t;" 1846]
[ebrowse-ms "int16_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "typedef signed __int16       int16_t;" 1478]
[ebrowse-ms "int32_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "typedef signed __int32       int32_t;" 1516]
[ebrowse-ms "int64_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "typedef signed __int64       int64_t;" 1554]
[ebrowse-ms "int8_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "typedef signed __int8        int8_t;" 1440]
[ebrowse-ms "size_type" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/hash_table.h" "  typedef size_t size_type;" 2492]
[ebrowse-ms "uint16_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "typedef unsigned __int16     uint16_t;" 1631]
[ebrowse-ms "uint32_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "typedef unsigned __int32     uint32_t;" 1670]
[ebrowse-ms "uint64_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "typedef unsigned __int64     uint64_t;" 1709]
[ebrowse-ms "uint8_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/os.h" "typedef unsigned __int8      uint8_t;" 1592]
[ebrowse-ms "yy_size_t" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "typedef size_t yy_size_t;" 6061]
[ebrowse-ms "yy_state_type" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/lexLisp.cpp" "typedef int yy_state_type;" 10907]
[ebrowse-ms "yytokentype" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parsePL_defs.h" "   enum yytokentype {" 1798]
[ebrowse-ms "yytype_int16" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "typedef short int yytype_int16;" 5927]
[ebrowse-ms "yytype_int8" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "typedef short int yytype_int8;" 5712]
[ebrowse-ms "yytype_uint16" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "typedef unsigned short int yytype_uint16;" 5826]
[ebrowse-ms "yytype_uint8" () 0 () () 0 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/parser/parseLisp.cpp" "typedef unsigned char yytype_uint8;" 5482]
)
()()
][ebrowse-ts [ebrowse-cs "Type" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "class CVC_DLL Type {" 1384"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/expr/expr.cpp" ]
()([ebrowse-ms "d_expr" () 0 () "  Expr d_expr;" 1399 2  () () 0]
)
([ebrowse-ms "Type" () 0 () "  Type(Expr expr, bool dummy) :" 1591 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  Type(Expr expr, bool dummy) :" 1591]
[ebrowse-ms "Type" () 0 () "  Type(const Type& type) :" 1543 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  Type(const Type& type) :" 1543]
[ebrowse-ms "Type" () 0 () "  Type() {" 1417 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  Type() {" 1417]
[ebrowse-ms "Type" () 0 () "  Type(Expr expr);" 1432 0  () "Type::Type(Expr expr) :" 15981]
[ebrowse-ms "arity" () 4 () "  int arity()" 1720 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  int arity()" 1720]
[ebrowse-ms "card" () 4 () "  Cardinality card()" 2126 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  Cardinality card()" 2126]
[ebrowse-ms "enumerateFinite" () 4 () "  Expr enumerateFinite(Unsigned" 2317 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  Expr enumerateFinite(Unsigned" 2317]
[ebrowse-ms "funType" () 4 () "  Type funType(const" 2794 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  Type funType(const" 2794]
[ebrowse-ms "funType" () 0 () () 0 0  () "Type Type::funType(const" 16095]
[ebrowse-ms "getExpr" () 4 () "  const Expr& getExpr()" 1650 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  const Expr& getExpr()" 1650]
[ebrowse-ms "isBool" () 4 () "  bool isBool()" 1897 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  bool isBool()" 1897]
[ebrowse-ms "isFunction" () 4 () "  bool isFunction()" 2028 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  bool isFunction()" 2028]
[ebrowse-ms "isNull" () 4 () "  bool isNull()" 1847 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  bool isNull()" 1847]
[ebrowse-ms "isSubtype" () 4 () "  bool isSubtype()" 1962 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  bool isSubtype()" 1962]
[ebrowse-ms "operator []" () 4 () "  Type operator[](int" 1775 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  Type operator[](int" 1775]
[ebrowse-ms "sizeFinite" () 4 () "  Unsigned sizeFinite()" 2467 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  Unsigned sizeFinite()" 2467]
[ebrowse-ms "toString" () 4 () "  std::string toString()" 2911 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  std::string toString()" 2911]
)
()
([ebrowse-ms "anyType" () 0 () "  static Type anyType(ExprManager" 2646 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  static Type anyType(ExprManager" 2646]
[ebrowse-ms "funType" () 0 () "  static Type funType(const" 2723 0  () () 0]
[ebrowse-ms "typeBool" () 0 () "  static Type typeBool(ExprManager" 2568 0  "/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/type.h" "  static Type typeBool(ExprManager" 2568]
)
()
()
()()
][ebrowse-ts [ebrowse-cs "CLFlag" "CVC3" 0"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/command_line_flags.h" "class CLFlag {" 1195"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/command_line_flags.h" ]
()([ebrowse-ms "d_data" () 0 () "  } d_data;" 1386 2  () () 0]
[ebrowse-ms "d_display" () 0 () "  bool d_display;" 1592 2  () () 0]
[ebrowse-ms "d_help" () 0 () "  std::string d_help;" 1513 2  () () 0]
[ebrowse-ms "d_modified" () 0 () "  bool d_modified;" 1473 2  () () 0]
[ebrowse-ms "d_tp" () 0 () "  CLFlagType d_tp;" 1251 2  () () 0]
)
([ebrowse-ms "CLFlag" () 0 () "    :" 2910 0  () "    :" 2910]
[ebrowse-ms "CLFlag" () 0 () "  CLFlag():" 2790 0  () "  CLFlag():" 2790]
[ebrowse-ms "CLFlag" () 0 () "    :" 2510 0  () "    :" 2510]
[ebrowse-ms "CLFlag" () 0 () "    :" 2281 0  () "    :" 2281]
[ebrowse-ms "CLFlag" () 0 () "    :" 2041 0  () "    :" 2041]
[ebrowse-ms "CLFlag" () 0 () "    :" 1847 0  () "    :" 1847]
[ebrowse-ms "CLFlag" () 0 () "    :" 1652 0  () "    :" 1652]
[ebrowse-ms "display" () 4 () "  bool display()" 6282 0  () "  bool display()" 6282]
[ebrowse-ms "getBool" () 4 () "  const bool& getBool()" 6629 0  () "  const bool& getBool()" 6629]
[ebrowse-ms "getHelp" () 4 () "  const std::string& getHelp()" 7241 0  () "  const std::string& getHelp()" 7241]
[ebrowse-ms "getInt" () 4 () "  const int& getInt()" 6762 0  () "  const int& getInt()" 6762]
[ebrowse-ms "getStrVec" () 4 () "ector<std::pair<std::string,bool> >& getStrVec()" 7085 0  () "ector<std::pair<std::string,bool> >& getStrVec()" 7085]
[ebrowse-ms "getString" () 4 () "  const std::string& getString()" 6905 0  () "  const std::string& getString()" 6905]
[ebrowse-ms "getType" () 4 () "  CLFlagType getType()" 6022 0  () "  CLFlagType getType()" 6022]
[ebrowse-ms "modified" () 4 () "  bool modified()" 6174 0  () "  bool modified()" 6174]
[ebrowse-ms "operator =" () 0 () "  CLFlag& operator=(const" 5784 0  () "  CLFlag& operator=(const" 5784]
[ebrowse-ms "operator =" () 0 () "  CLFlag& operator=(const" 5190 0  () "  CLFlag& operator=(const" 5190]
[ebrowse-ms "operator =" () 0 () "  CLFlag& operator=(int" 4719 0  () "  CLFlag& operator=(int" 4719]
[ebrowse-ms "operator =" () 0 () "  CLFlag& operator=(bool" 4497 0  () "  CLFlag& operator=(bool" 4497]
[ebrowse-ms "operator =" () 0 () "  CLFlag& operator=(const" 4940 0  () "  CLFlag& operator=(const" 4940]
[ebrowse-ms "~CLFlag" () 0 () "  ~CLFlag()" 3288 0  () "  ~CLFlag()" 3288]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "string" "Hash" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_hash.h" "template<> class hash<std::string> {" 1036"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_hash.h" ]
()([ebrowse-ms "h" () 0 () "  hash<const char*> h;" 1071 2  () () 0]
)
([ebrowse-ms "operator ()" () 4 () "  size_t operator()(const" 1106 0  () "  size_t operator()(const" 1106]
)
()
()
()
()
()()
][ebrowse-ts [ebrowse-cs "ExprMap" "CVC3" 32"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" "  class ExprMap {" 2002"/home/jcharles/workspaces/Mobius/mobius.cvc3/cvc3-20090730/src/include/expr_map.h" ]
()([ebrowse-ms "d_map" () 0 () "    ExprMapType d_map;" 2106 2  () () 0]
)
([ebrowse-ms "ExprMap" () 0 () "    ExprMap(const ExprMap& map):" 5873 0  () "    ExprMap(const ExprMap& map):" 5873]
[ebrowse-ms "ExprMap" () 0 () "    ExprMap() {" 5827 0  () "    ExprMap() {" 5827]
[ebrowse-ms "begin" () 4 () "    const_iterator begin()" 6704 0  () "    const_iterator begin()" 6704]
[ebrowse-ms "begin" () 0 () "    iterator begin()" 6588 0  () "    iterator begin()" 6588]
[ebrowse-ms "clear" () 0 () "    void clear()" 6169 0  () "    void clear()" 6169]
[ebrowse-ms "count" () 4 () "    size_t count(const" 6053 0  () "    size_t count(const" 6053]
[ebrowse-ms "empty" () 4 () "    bool empty()" 5948 0  () "    bool empty()" 5948]
[ebrowse-ms "end" () 4 () "    const_iterator end()" 6777 0  () "    const_iterator end()" 6777]
[ebrowse-ms "end" () 0 () "    iterator end()" 6643 0  () "    iterator end()" 6643]
[ebrowse-ms "erase" () 32 () "      void erase(InputIterator" 6479 0  () "      void erase(InputIterator" 6479]
[ebrowse-ms "erase" () 0 () "    void erase(const" 6274 0  () "    void erase(const" 6274]
[ebrowse-ms "find" () 4 () "    const_iterator find(const" 6922 0  () "    const_iterator find(const" 6922]
[ebrowse-ms "find" () 0 () "    iterator find(const" 6847 0  () "    iterator find(const" 6847]
[ebrowse-ms "insert" () 32 () "      void insert(InputIterator" 6370 0  () "      void insert(InputIterator" 6370]
[ebrowse-ms "insert" () 0 () "    void insert(const" 6211 0  () "    void insert(const" 6211]
[ebrowse-ms "operator []" () 0 () "    Data& operator[](const" 6122 0  () "    Data& operator[](const" 6122]
[ebrowse-ms "size" () 4 () "    size_t size()" 5998 0  () "    size_t size()" 5998]
)
()
()
([ebrowse-ms "operator !=" () 0 () "    friend bool operator!=(const" 7121 0  () "    friend bool operator!=(const" 7121]
[ebrowse-ms "operator ==" () 0 () "    friend bool operator==(const" 7013 0  () "    friend bool operator==(const" 7013]
)
([ebrowse-ms "ExprMapType" () 0 () "    typedef std::map<Expr, Data> ExprMapType;" 2060 2  () () 0]
)
()()
]