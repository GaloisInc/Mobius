/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cvc3_Expr */

#ifndef _Included_cvc3_Expr
#define _Included_cvc3_Expr
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cvc3_Expr
 * Method:    jniEquals
 * Signature: (Ljava/lang/Object;Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniEquals
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniToString
 * Signature: (Ljava/lang/Object;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc3_Expr_jniToString
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniPrint
 * Signature: (Ljava/lang/Object;Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_cvc3_Expr_jniPrint
  (JNIEnv *, jclass, jobject, jstring, jboolean);

/*
 * Class:     cvc3_Expr
 * Method:    jniHash
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cvc3_Expr_jniHash
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsFalse
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsFalse
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsTrue
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsTrue
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsBoolConst
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsBoolConst
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsVar
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsVar
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsBoundVar
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsBoundVar
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsString
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsString
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsClosure
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsClosure
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsQuantifier
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsQuantifier
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsLambda
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsLambda
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsApply
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsApply
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsSymbol
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsSymbol
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsTheorem
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsTheorem
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsType
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsType
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsTerm
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsTerm
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsAtomic
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsAtomic
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsAtomicFormula
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsAtomicFormula
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsAbsAtomicFormula
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsAbsAtomicFormula
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsLiteral
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsLiteral
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsAbsLiteral
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsAbsLiteral
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsBoolConnective
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsBoolConnective
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsPropAtom
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsPropAtom
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsPropLiteral
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsPropLiteral
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsEq
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsEq
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsNot
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsNot
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsAnd
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsAnd
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsOr
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsOr
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsITE
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsITE
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsIff
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsIff
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsImpl
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsImpl
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsXor
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsXor
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsForall
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsForall
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsExists
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsExists
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsRational
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsRational
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsUminus
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsUminus
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsPlus
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsPlus
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsMinus
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsMinus
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsMult
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsMult
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsPow
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsPow
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsDivide
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsDivide
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsLt
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsLt
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsLe
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsLe
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsGt
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsGt
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsGe
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsGe
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsSkolem
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsSkolem
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsRead
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsRead
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsWrite
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsWrite
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetName
 * Signature: (Ljava/lang/Object;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc3_Expr_jniGetName
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetUid
 * Signature: (Ljava/lang/Object;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc3_Expr_jniGetUid
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetString
 * Signature: (Ljava/lang/Object;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_cvc3_Expr_jniGetString
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetVars
 * Signature: (Ljava/lang/Object;)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_cvc3_Expr_jniGetVars
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetExistential
 * Signature: (Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cvc3_Expr_jniGetExistential
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetBoundIndex
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cvc3_Expr_jniGetBoundIndex
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetBody
 * Signature: (Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cvc3_Expr_jniGetBody
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetRational
 * Signature: (Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cvc3_Expr_jniGetRational
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetTheorem
 * Signature: (Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cvc3_Expr_jniGetTheorem
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetType
 * Signature: (Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cvc3_Expr_jniGetType
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniMkOp
 * Signature: (Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cvc3_Expr_jniMkOp
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetOp
 * Signature: (Ljava/lang/Object;)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cvc3_Expr_jniGetOp
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniIsNull
 * Signature: (Ljava/lang/Object;)Z
 */
JNIEXPORT jboolean JNICALL Java_cvc3_Expr_jniIsNull
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniArity
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cvc3_Expr_jniArity
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cvc3_Expr
 * Method:    jniGetChild
 * Signature: (Ljava/lang/Object;I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cvc3_Expr_jniGetChild
  (JNIEnv *, jclass, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
