
BONSourceFile = List<SpecificationElement>! bonSpecification, Indexing indexing;
SpecificationElement :> InformalChart, ClassDictionary, StaticDiagram, DynamicDiagram, NotationalTuning;

Indexing = List<IndexClause>! indexes;
IndexClause = String! id, List<String>! indexTerms;

InformalChart :> SystemChart, ClassChart, EventChart, ScenarioChart, CreationChart;

ClassDictionary = String! systemName, List<DictionaryEntry> entries, Indexing indexing, String explanation, String part; 
DictionaryEntry = String! name, List<String>! clusters, String! description;

SystemChart = String! name, List<ClusterEntry>! clusters, Indexing indexing, String explanation, String part;
ClusterChart = String! name, List<ClassEntry>! classes, List<ClusterEntry>! clusters, Indexing indexing, String explanation, String part;
ClassChart = String! name, List<String>! inherits, List<String>! queries, List<String>! commands, List<String>! constraints, Indexing indexing, String explanation, String part;

ClusterEntry = String! name, String! description;
ClassEntry = String! name, String! description;
 

EventChart = String! systemName, Boolean! incoming, Boolean! outgoing, List<EventEntry>! entries, Indexing indexing, String explanation, String part; 
EventEntry = String! name, List<String>! involved;

ScenarioChart = String! systemName, List<ScenarioEntry>! entries, Indexing indexing, String explanation, String part;
ScenarioEntry = String! name, String! description;

CreationChart = String! name, List<CreationEntry>! entries, Indexing indexing, String explanation, String part;
CreationEntry = String! name, List<String>! types;

StaticDiagram = List<StaticComponent>! components, String extendedID, String comment;

StaticComponent :> Cluster, Clazz, StaticRelation;
Cluster = String! name, List<StaticComponent>! components, Boolean! reused, String comment; 
//Can root, deferred, effective be an enum? Similarly reused, persistent, interfaced?
Clazz = Boolean! root, Boolean! deferred, Boolean! effective, Boolean! reused, Boolean! persistent, Boolean! interfaced, ClassInterface interface, FormalGenerics generics, String comment;
StaticRelation :> InheritanceRelation, ClientRelation;

InheritanceRelation = StaticRef! child, StaticRef! parent, Multiplicity multiplicity, SemanticLabel label;
ClientRelation = StaticRef! client, StaticRef! supplier, ClientEntityExpression clientEntities, TypeMark typeMark, SemanticLabel semanticLabel;
ClientEntityExpression :> ClientEntityList, Multiplicity multiplicity;
ClientEntityList = List<ClientEntity>! entities;

ClientEntity :> Infix, Prefix, SupplierIndirection, ParentIndirection;
SupplierIndirection = IndirectionFeaturePart indirectionFeaturePart, GenericIndirection! genericIndirection;
IndirectionFeaturePart :> FeatureName, IndirectionFeatureList;
IndirectionFeatureList = List<FeatureName> featureNames;
ParentIndirection = GenericIndirection! genericIndirection;
GenericIndirection = String! indirectionElement;

//NamedIndirection = 

Type = String! identifier, List<BONType> actualGenerics, String! fullString;


