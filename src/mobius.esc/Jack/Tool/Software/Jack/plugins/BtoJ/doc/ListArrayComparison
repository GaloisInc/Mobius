
1. Modifies 



hyps: 

1. local(1) = Binc.ListArray.list(local(0))[(local(2)_at_instruction_22)] && 


2. ( ! Binc.ListArray.list(local(0)) = NULL) && 


3. _length(Binc.ListArray.list(local(0))) > (local(2)_at_instruction_22) && 


4. (local(2)_at_instruction_22) \geq 0 && 


5. ( ! local(0) = NULL) && 



6. (local(2)_at_instruction_22) < _length(Binc.ListArray.list(local(0))) && 



7. (local(2)_at_instruction_22) \leq _length(Binc.ListArray.list(local(0))) && 


8. (local(2)_at_instruction_22) \geq 0 && 


9. (forall  var(0)  )0 \leq var(0) &&  var(0) < (local(2)_at_instruction_22) ==> 
           ( ! Binc.ListArray.list(local(0))[var(0)] = local(1)) && 

10. 1 \geq 0 && 


11. typeof(local(0)) <: LBinc/ListArray; 


Goal modifies :  
(forall  var(120)  )typeof(var(120)) <: LBinc/ListArray; ==> Binc.ListArray.list(var(120)) = Binc.ListArray.list(var(120))






=====================================================================================================================



2. Ensures for the case when the return value is true



Hyp:


1. local(1) = Binc.ListArray.list(local(0))[(local(2)_at_instruction_22)] && 


2. ( ! Binc.ListArray.list(local(0)) = NULL) &&


3.  _length(Binc.ListArray.list(local(0))) > (local(2)_at_instruction_22) && 


4. (local(2)_at_instruction_22) \geq 0 && 


5. ( ! local(0) = NULL) && 



6. (local(2)_at_instruction_22) < _length(Binc.ListArray.list(local(0))) && 



7.  (local(2)_at_instruction_22) \leq _length(Binc.ListArray.list(local(0))) && 



8.  (local(2)_at_instruction_22) \geq 0 &&


9.  (forall  var(0)  )0 \leq var(0) && var(0) < (local(2)_at_instruction_22) ==> ( ! Binc.ListArray.list(local(0))[var(0)] = local(1)) &&



10.  1 \geq 0 &&


11. typeof(local(0)) <: LBinc/ListArray; ==> 


Goal : ensures


 (exists  var(0)  )0 \leq var(0) && var(0) < _length(Binc.ListArray.list(local(0))) && Binc.ListArray.list(local(0))[var(0)] = local(1)









======================================================================================================================================

3. Ensures for the case when the return value is false


(local(2)_at_instruction_22) \geq _length(Binc.ListArray.list(local(0))) && 


( ! Binc.ListArray.list(local(0)) = NULL) && 


( ! local(0) = NULL) &&


 (local(2)_at_instruction_22) \leq _length(Binc.ListArray.list(local(0))) && 

(local(2)_at_instruction_22) \geq 0 &&


 (forall  var(0)  )0 \leq var(0) && var(0) < (local(2)_at_instruction_22) ==> 
                      ( ! Binc.ListArray.list(local(0))[var(0)] = local(1)) &&


 1 \geq 0 && 



typeof(local(0)) <: LBinc/ListArray; ==>

 (forall  var(0)  )0 \leq var(0) && var(0) < _length(Binc.ListArray.list(local(0))) ==> ( ! Binc.ListArray.list(local(0))[var(0)] = local(1)) 










====================================================================================================================================

4. exsures ArrayOutOfBoundException



Hyp :


_length(Binc.ListArray.list(local(0))) \leq (local(2)_at_instruction_22) || (local(2)_at_instruction_22) < 0 && 


( ! local(0) = NULL) && 


(local(2)_at_instruction_22) < _length(Binc.ListArray.list(local(0))) &&


 ( ! Binc.ListArray.list(local(0)) = NULL) && 


(local(2)_at_instruction_22) \leq _length(Binc.ListArray.list(local(0))) && 



(local(2)_at_instruction_22) \geq 0 && 


(forall  var(0)  )0 \leq var(0) && var(0) < (local(2)_at_instruction_22) ==> 
                 ( ! Binc.ListArray.list(local(0))[var(0)] = local(1)) && 


1 \geq 0 && 


typeof(local(0)) <: LBinc/ListArray; 





Goal exsures ArrayOutOfBoundException:

FALSE


===========================================================================================================================

5. Invariant init:

Hyp:


1. ! Binc.ListArray.list(local(0)) = NULL) && 



2. ( ! local(0) = NULL) && 



3. typeof(local(0)) <: LBinc/ListArray; ==> 




Goal invariant init:

0 \leq _length(Binc.ListArray.list(local(0))) && 


0 \geq 0 &&


 (forall  var(0)  ) 0 <=  var(0) &&
                  var(0) < 0 ==> ( ! Binc.ListArray.list(local(0))[var(0)] = local(1))




=================================================================================================================================



6. Loop preservation



Hyp:


1. ( ! local(1) = Binc.ListArray.list(local(0))[(local(2)_at_instruction_22)]) && 



2. ( ! Binc.ListArray.list(local(0)) = NULL) && 


3. _length(Binc.ListArray.list(local(0))) > (local(2)_at_instruction_22) && 



4. (local(2)_at_instruction_22) \geq 0 &&



5. ( ! local(0) = NULL) &&



6. (local(2)_at_instruction_22) < _length(Binc.ListArray.list(local(0))) &&


7. (local(2)_at_instruction_22) \leq _length(Binc.ListArray.list(local(0))) &&


8. (local(2)_at_instruction_22) \geq 0 &&



9. (forall  var(0)  )0 \leq var(0) && var(0) < (local(2)_at_instruction_22) ==>
            ( ! Binc.ListArray.list(local(0))[var(0)] = local(1)) &&


10. 1 \geq 0 &&


11. typeof(local(0)) <: LBinc/ListArray; 




Goal: 


1 + (local(2)_at_instruction_22) \leq _length(Binc.ListArray.list(local(0))) && 


1 + (local(2)_at_instruction_22) \geq 0 &&



 (forall  var(0)  )0 \leq var(0) && var(0) < 1 + (local(2)_at_instruction_22) ==> ( ! Binc.ListArray.list(local(0))[var(0)] = local(1))




======================================================================================================================================


7. ArrayIndexOutOfBound Exception

Hyp:
_length(Binc.ListArray.list(local(0))) \leq (local(2)_at_instruction_22) || (local(2)_at_instruction_22) < 0 &&


 ( ! local(0) = NULL) &&


 (local(2)_at_instruction_22) < _length(Binc.ListArray.list(local(0))) &&


 ( ! Binc.ListArray.list(local(0)) = NULL) && 



(local(2)_at_instruction_22) \leq _length(Binc.ListArray.list(local(0))) &&


 (local(2)_at_instruction_22) \geq 0 &&


 (forall  var(0)  )0 \leq var(0) && var(0) < (local(2)_at_instruction_22) ==>

           ( ! Binc.ListArray.list(local(0))[var(0)] = local(1)) && 


1 \geq 0 &&



 typeof(local(0)) <: LBinc/ListArray; 





Goal: 
 FALSE

