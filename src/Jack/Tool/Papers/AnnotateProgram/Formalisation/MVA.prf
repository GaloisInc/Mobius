(EventType)
(MVA)
(WellFormedMVA)
(MVASemantics
 (get_MVAVarDecl_TCC1 0
  (get_MVAVarDecl_TCC1-1 nil 3383053727 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (initial_MVA_state_TCC1 0
  (initial_MVA_state_TCC1-1 nil 3383053727 nil
   ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (execute_actions_TCC1 0
  (execute_actions_TCC1-1 nil 3383053727 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (execute_actions_TCC2 0
  (execute_actions_TCC2-1 nil 3383053727 nil
   ("" (termination-tcc) nil nil) unchecked nil nil nil nil nil))
 (step_TCC1 0
  (step_TCC1-2 nil 3383053820 3383053825
   ("" (skolem-typepred)
    ((""
      (expand* "nonempty?" "empty?" "member" "total" "wf_AState"
       "wf_PEvent")
      (("" (expand* "wf_AState" "wf_PEvent")
        (("" (prop)
          (("" (inst -2 "cp(x!1)" "event(p!1)" "stA(x!1)" "stP(p!1)")
            (("" (split -2)
              (("1" (skolem!) (("1" (inst?) nil nil)) nil)
               ("2" (propax) nil nil) ("3" (propax) nil nil)
               ("4" (propax) nil nil) ("5" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MVASemantics nil)
    (CP formal-nonempty-type-decl nil MVASemantics nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil) (JType type-decl nil JType_adt nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (AState type-eq-decl nil MVASemantics nil)
    (PSt type-eq-decl nil State nil)
    (PEvent type-eq-decl nil MVASemantics nil)
    (nonempty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil))
   3093 120 nil nil)
  (step_TCC1-1 nil 3383053727 nil ("" (subtype-tcc) nil nil) nil nil
   nil nil nil nil))
 (wf_initial_MVA_state 0
  (wf_initial_MVA_state-1 nil 3387787557 3387787743
   ("" (skolem-typepred)
    (("" (flatten)
      (("" (expand* "wf_AState" "initial_MVA_state" "wf_MVA")
        (("" (prop) (("" (postpone) nil nil)) nil)) nil))
      nil))
    nil)
   unfinished nil 185930 15120 t shostak))
 (step_yields_wf_state 0
  (step_yields_wf_state-1 nil 3383053751 3383053757
   ("" (skolem-typepred)
    (("" (expand* "wf_AState" "wf_PEvent" "step")
      (("" (expand* "wf_AState" "wf_PEvent")
        (("" (use "step_TCC1")
          (("" (prop)
            (("1" (expand "wf_MVA")
              (("1" (flatten -2)
                (("1" (inst?)
                  (("1" (prop)
                    (("1" (hide-all-but (-1 1))
                      (("1"
                        (name "t1" "choose(LAMBDA (t: Transition):
                             ts(a!1)(t) AND
                             scp(t) = cp(x!1) AND
                             event(t) = event(p!1) AND
                             guard(t)(stA(x!1), stP(p!1)))")
                        (("1" (replace -1) (("1" (assert) nil nil))
                          nil)
                         ("2" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (use "execute_action_yields_wf_state")
              (("2" (split -1)
                (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MVASemantics nil)
    (CP formal-nonempty-type-decl nil MVASemantics nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil) (JType type-decl nil JType_adt nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (AState type-eq-decl nil MVASemantics nil)
    (PSt type-eq-decl nil State nil)
    (PEvent type-eq-decl nil MVASemantics nil)
    (choose const-decl "(p)" sets nil) (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Expr type-decl nil Expr_adt nil)
    (OneAction type-eq-decl nil MVA nil)
    (list type-decl nil list_adt nil)
    (execute_action_yields_wf_state formula-decl nil MVASemantics nil)
    (step_TCC1 subtype-tcc nil MVASemantics nil)
    (step const-decl "AState" MVASemantics nil))
   4494 250 t nil)))
(MVACompletion
 (all_guards_TCC1 0
  (all_guards_TCC1-1 nil 3382264515 3384513292
   ("" (skolem-typepred)
    (("" (use "all_guards_finite[CP, Name]")
      (("" (lemma "all_guards_subset[CP, Name]")
        (("" (inst? -1)
          (("" (beta -1)
            (("" (use "finite_subset[Guard[CP, Name]]")
              (("" (prop) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((all_guards_finite formula-decl nil MVAFiniteProps nil)
    (CP formal-nonempty-type-decl nil MVACompletion nil)
    (Name formal-nonempty-type-decl nil MVACompletion nil)
    (MVA type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (JType type-decl nil JType_adt nil) (Val type-decl nil Val_adt nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Event type-eq-decl nil MVA nil)
    (Action type-eq-decl nil MVA nil) (PSt type-eq-decl nil State nil)
    (Store type-eq-decl nil State nil)
    (finite_subset formula-decl nil finite_sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (all_guards_subset formula-decl nil MVAFiniteProps nil))
   214 150 t nil))
 (complete_trans_TCC1 0
  (complete_trans_TCC1-3 nil 3382265153 3384513293 ("" (skip) nil nil)
   unchecked nil 3 10 nil nil)
  (complete_trans_TCC1-2 nil 3382265133 nil ("" (skip) nil nil)
   unchecked nil nil nil nil nil)
  (complete_trans_TCC1-1 nil 3382264515 3382264991
   ("" (subtype-tcc) nil nil) unfinished nil 32426 31994 nil nil))
 (build_guard_yields_wf_guard 0
  (build_guard_yields_wf_guard-1 nil 3387785549 3387786020
   ("" (skosimp)
    (("" (expand* "wf_Guard" "wf_MVA" "build_guard" "all_guards")
      (("" (flatten)
        (("" (skosimp)
          (("" (split) (("1" (grind) nil nil) ("2" (grind) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((wf_MVA const-decl "boolean" WellFormedMVA nil)
    (all_guards const-decl "finite_set[Guard]" MVACompletion nil)
    (build_guard const-decl "Guard" MVACompletion nil)
    (wf_Guard const-decl "boolean" WellFormedMVA nil)
    (Val type-decl nil Val_adt nil) (Store type-eq-decl nil State nil)
    (PSt type-eq-decl nil State nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (Name formal-nonempty-type-decl nil MVACompletion nil)
    (CP formal-nonempty-type-decl nil MVACompletion nil)
    (wf_vdsA const-decl "boolean" WellFormedMVA nil)
    (wf_vdsP const-decl "boolean" WellFormedMVA nil)
    (var_names const-decl "set[Name]" WellFormedMVA nil)
    (member const-decl "bool" sets nil)
    (var_names const-decl "set[Name]" WellFormedMVA nil)
    (intersection const-decl "set" sets nil)
    (empty? const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (wf_Action const-decl "boolean" WellFormedMVA nil))
   112636 39000 t shostak))
 (complete_MVA_yields_wf_MVA 0
  (complete_MVA_yields_wf_MVA-1 nil 3387108138 3387787526
   ("" (skolem-typepred)
    (("" (expand "wf_MVA")
      (("" (prop)
        (("1"
          (expand* "complete_MVA" "init_cp" "add" "member"
           "complete_MVA_pre")
          (("1" (prop) nil nil)) nil)
         ("2" (expand* "wf_vdsA" "complete_MVA") nil nil)
         ("3" (expand* "wf_vdsP" "complete_MVA") nil nil)
         ("4" (expand "complete_MVA") (("4" (propax) nil nil)) nil)
         ("5" (skosimp)
          (("5" (inst? -6)
            (("5" (expand "complete_MVA" -1)
              (("5" (expand* "union" "member")
                (("5" (split -1)
                  (("1" (assert)
                    (("1" (flatten) (("1" (grind) nil nil)) nil)) nil)
                   ("2" (expand* "complete_trans" "union" "member")
                    (("2" (split -1)
                      (("1" (flatten)
                        (("1" (hide -7 -8 -9 -10)
                          (("1" (use "build_guard_yields_wf_guard")
                            (("1" (grind) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (hide -3 -4 -5 -6) (("2" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((skip const-decl "Action" MVA nil)
    (complete_trans const-decl "finite_set[Transition]" MVACompletion
     nil)
    (var_names const-decl "set[Name]" WellFormedMVA nil)
    (var_names const-decl "set[Name]" WellFormedMVA nil)
    (subset? const-decl "bool" sets nil)
    (wf_Action const-decl "boolean" WellFormedMVA nil)
    (intersection const-decl "set" sets nil)
    (empty? const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (wf_Guard const-decl "boolean" WellFormedMVA nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (member def-decl "bool" list_props nil)
    (build_guard const-decl "Guard" MVACompletion nil)
    (all_guards const-decl "finite_set[Guard]" MVACompletion nil)
    (build_guard_yields_wf_guard formula-decl nil MVACompletion nil)
    (union const-decl "set" sets nil)
    (wf_vdsP const-decl "boolean" WellFormedMVA nil)
    (wf_vdsA const-decl "boolean" WellFormedMVA nil)
    (member const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (complete_MVA_pre const-decl "boolean" MVACompletion nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (JType type-decl nil JType_adt nil) (Val type-decl nil Val_adt nil)
    (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (CP formal-nonempty-type-decl nil MVACompletion nil)
    (Name formal-nonempty-type-decl nil MVACompletion nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   162297 2490 t shostak))
 (complete_MVA_has_trap_state_TCC1 0
  (complete_MVA_has_trap_state_TCC1-1 nil 3382264515 3384513510
   ("" (use "complete_MVA_yields_wf_MVA") nil nil) unchecked
   ((complete_MVA_yields_wf_MVA formula-decl nil MVACompletion nil))
   30132 10 t nil))
 (complete_MVA_has_trap_state 0
  (complete_MVA_has_trap_state-2 nil 3383048645 3384513339
   ("" (skolem-typepred)
    (("" (expand* "trap_state" "complete_MVA")
      (("" (skosimp)
        ((""
          (expand* "complete_trans" "union" "member" "complete_MVA_pre"
           "wf_MVA")
          (("" (prop)
            (("" (inst?) (("" (prop) (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((complete_MVA const-decl "MVA" MVACompletion nil)
    (trap_state const-decl "boolean" WellFormedMVA nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (complete_trans const-decl "finite_set[Transition]" MVACompletion
     nil)
    (complete_MVA_pre const-decl "boolean" MVACompletion nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (JType type-decl nil JType_adt nil) (Val type-decl nil Val_adt nil)
    (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (CP formal-nonempty-type-decl nil MVACompletion nil)
    (Name formal-nonempty-type-decl nil MVACompletion nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   148 90 t nil)
  (complete_MVA_has_trap_state-1 nil 3382270875 3382270880
   ("" (skolem-typepred)
    (("" (expand* "trap_state" "complete_MVA")
      (("" (skosimp)
        ((""
          (expand* "complete_trans" "union" "member" "complete_MVA_pre"
           "valid_MVA")
          (("" (prop)
            (("" (inst?) (("" (prop) (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil))
   295 42 t nil))
 (complete_MVA_is_deterministic 0
  (complete_MVA_is_deterministic-2 nil 3383048795 3384513357
   ("" (expand "deterministic")
    (("" (skolem-typepred)
      (("" (skosimp)
        (("" (expand "complete_MVA_pre")
          (("" (flatten)
            (("" (case* "ts(a!1)(t1!1)" "ts(a!1)(t2!1)")
              (("1" (expand "deterministic")
                (("1" (inst -4 "t1!1" "t2!1" "stA!1" "stP!1")
                  (("1"
                    (expand* "wf_Store" "wf_PSt" "complete_MVA"
                     "complete_trans" "union" "member")
                    (("1" (prop) nil nil)) nil))
                  nil))
                nil)
               ("2" (hide -3 -6 -7)
                (("2" (expand "complete_MVA" -4)
                  (("2" (expand "complete_trans" -4)
                    (("2" (expand "union" -4)
                      (("2" (expand "member" -4)
                        (("2" (prop)
                          (("1" (hide -8 1) (("1" (grind) nil nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (hide -3 -5)
                (("3" (expand "complete_MVA" -3)
                  (("3" (expand "complete_trans" -3)
                    (("3" (expand "union" -3)
                      (("3" (expand "member" -3)
                        (("3" (expand "wf_MVA")
                          (("3" (flatten)
                            (("3" (inst -6 "t2!1")
                              (("3"
                                (prop)
                                (("1"
                                  (expand*
                                   "complete_MVA"
                                   "complete_trans"
                                   "union"
                                   "member"
                                   "build_guard"
                                   "all_guards"
                                   "wf_Store"
                                   "wf_PSt"
                                   "extend")
                                  (("1" (grind) nil nil))
                                  nil)
                                 ("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("4" (decompose-equality 4)
                (("1" (grind) nil nil) ("2" (grind) nil nil)
                 ("3" (grind) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MVACompletion nil)
    (CP formal-nonempty-type-decl nil MVACompletion nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil)
    (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil) (JType type-decl nil JType_adt nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (complete_MVA_pre const-decl "boolean" MVACompletion nil)
    (PSt type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (complete_trans const-decl "finite_set[Transition]" MVACompletion
     nil)
    (subset? const-decl "bool" sets nil)
    (domain_set const-decl "X" func_props nil)
    (singleton_elt const-decl "T" sets nil)
    (the const-decl "(p)" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (wf_vdsP const-decl "boolean" WellFormedMVA nil)
    (wf_vdsA const-decl "boolean" WellFormedMVA nil)
    (skip const-decl "Action" MVA nil)
    (build_guard const-decl "Guard" MVACompletion nil)
    (all_guards const-decl "finite_set[Guard]" MVACompletion nil)
    (extend const-decl "R" extend nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (deterministic const-decl "boolean" WellFormedMVA nil))
   18366 17450 t nil)
  (complete_MVA_is_deterministic-1 nil 3382270657 3382270846
   ("" (skolem-typepred)
    (("" (expand* "deterministic" "complete_MVA")
      (("" (skosimp)
        (("" (expand "complete_MVA_pre")
          (("" (flatten -2)
            (("" (case* "ts(a!1)(t1!1)" "ts(a!1)(t2!1)")
              (("1" (expand "deterministic")
                (("1" (inst -4 "t1!1" "t2!1" "stA!1" "stP!1")
                  (("1" (prop)
                    (("1" (expand "valid_PSt") (("1" (propax) nil nil))
                      nil)
                     ("2" (expand "valid_Store")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (delete -3 -6 -7)
                (("2" (expand "complete_trans" -4)
                  (("2" (expand "union" -4)
                    (("2" (expand "member" -4)
                      (("2" (prop)
                        (("1" (delete -8 1)
                          (("1" (expand "valid_MVA")
                            (("1" (prop)
                              (("1"
                                (inst -9 "t1!1")
                                (("1"
                                  (prop)
                                  (("1"
                                    (delete -4 -5)
                                    (("1"
                                      (grind)
                                      (("1" (postpone) nil nil)
                                       ("2" (postpone) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (delete -3 -5 -6 -7)
                (("3" (expand* "complete_trans" "union" "member")
                  (("3" (prop)
                    (("1" (grind)
                      (("1" (postpone) nil nil)
                       ("2" (postpone) nil nil))
                      nil)
                     ("2" (expand "valid_MVA")
                      (("2" (prop)
                        (("2" (inst -9 "t2!1")
                          (("2" (prop)
                            (("2" (delete -4 -5)
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("4" (delete -1 -2 -5 -6)
                (("4" (grind)
                  (("1" (decompose-equality 4) nil nil)
                   ("2" (decompose-equality 4) nil nil)
                   ("3" (postpone) nil nil) ("4" (postpone) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried nil 18669 3635 t nil))
 (complete_MVA_is_total 0
  (complete_MVA_is_total-2 nil 3383048587 3384513361
   ("" (skolem-typepred)
    (("" (expand "total")
      (("" (skosimp)
        (("" (expand "complete_MVA" 1)
          ((""
            (case "EXISTS (t: Transition[CP, Name]): ts(a!1)(t) AND scp(t) = q!1 AND event(t) = e!1 AND guard(t)(stA!1, stP!1)")
            (("1" (skolem!)
              (("1" (inst 1 "t!1")
                (("1" (expand* "union" "member") (("1" (prop) nil nil))
                  nil))
                nil))
              nil)
             ("2" (case "q!1 = halted")
              (("1"
                (inst 2
                 "(# scp := halted, event := e!1, guard := (LAMBDA (stA: (wf_Store(vdsA(a!1))) , stP: (wf_PSt(vdsP(a!1)))): TRUE), action := skip, tcp := halted #)")
                (("1" (expand* "wf_MVA" "complete_MVA_pre")
                  (("1" (flatten)
                    (("1" (hide-all-but (-1 -6 -8 -9 -10 -11 2 3))
                      (("1" (grind)
                        (("1" (expand "extend")
                          (("1" (apply-extensionality 3) nil nil)) nil)
                         ("2" (expand "extend")
                          (("2" (apply-extensionality 4) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (delete 2)
                (("2"
                  (case "EXISTS (t: Transition): ts(a!1)(t) AND scp(t) = q!1 AND event(t) = e!1 AND guard(t)(stA!1, stP!1)")
                  (("1" (skolem!)
                    (("1" (inst 2 "t!1") (("1" (grind) nil nil)) nil))
                    nil)
                   ("2"
                    (inst 3
                     "(# scp := q!1, event := e!1, guard := build_guard(a!1)(q!1, e!1), action := skip, tcp := halted #)")
                    (("2" (grind) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((total const-decl "boolean" WellFormedMVA nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (halted const-decl "CP" MVA nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (all_guards const-decl "finite_set[Guard]" MVACompletion nil)
    (build_guard const-decl "Guard" MVACompletion nil)
    (complete_trans const-decl "finite_set[Transition]" MVACompletion
     nil)
    (add const-decl "(nonempty?)" sets nil)
    (the const-decl "(p)" sets nil)
    (singleton_elt const-decl "T" sets nil)
    (domain_set const-decl "X" func_props nil)
    (subset? const-decl "bool" sets nil)
    (skip const-decl "Action" MVA nil)
    (list type-decl nil list_adt nil)
    (OneAction type-eq-decl nil MVA nil)
    (Expr type-decl nil Expr_adt nil)
    (TRUE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (FALSE const-decl "bool" booleans nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (disjoint? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (wf_vdsP const-decl "boolean" WellFormedMVA nil)
    (wf_vdsA const-decl "boolean" WellFormedMVA nil)
    (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Store type-eq-decl nil State nil) (PSt type-eq-decl nil State nil)
    (complete_MVA_pre const-decl "boolean" MVACompletion nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (JType type-decl nil JType_adt nil) (Val type-decl nil Val_adt nil)
    (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (CP formal-nonempty-type-decl nil MVACompletion nil)
    (Name formal-nonempty-type-decl nil MVACompletion nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   4289 3940 t nil)
  (complete_MVA_is_total-1 nil 3382265612 3382270601
   ("" (skolem-typepred)
    (("" (expand "total")
      (("" (skosimp)
        (("" (expand "complete_MVA" 1)
          ((""
            (case "EXISTS (t: Transition[CP, Name]): ts(a!1)(t) AND scp(t) = q!1 AND event(t) = e!1 AND guard(t)(stA!1, stP!1)")
            (("1" (skolem!)
              (("1" (inst 1 "t!1")
                (("1" (expand "union" 1)
                  (("1" (expand "member" 1) (("1" (prop) nil nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (case "q!1 = halted")
              (("1"
                (inst 2
                 "(# scp := halted, event := e!1, guard := (LAMBDA (stA: (valid_Store(vdsA(a!1))) , stP: (valid_PSt(vdsP(a!1)))): TRUE), action := skip, tcp := halted #)")
                (("1" (hide -6 -7 1) (("1" (postpone) nil nil)) nil))
                nil)
               ("2"
                (inst 3
                 "(# scp := q!1, event := e!1, guard := build_guard(q!1, e!1, ts(a!1), vdsA(a!1), vdsP(a!1)), action := skip, tcp := halted #)")
                (("2" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   untried nil 46487 3476 t nil))
 (complete_MVA_is_complete 0
  (complete_MVA_is_complete-1 nil 3382265489 3384513362
   ("" (skolem-typepred)
    (("" (expand "complete")
      (("" (split)
        (("1" (use "complete_MVA_yields_wf_MVA") nil nil)
         ("2" (expand "complete_MVA")
          (("2" (expand "add") (("2" (propax) nil nil)) nil)) nil)
         ("3" (use "complete_MVA_has_trap_state") nil nil)
         ("4" (expand* "complete_MVA_pre" "complete_MVA" "wf_MVA")
          (("4" (prop)
            (("4" (delete -3 -4 -5 -6) (("4" (assert) nil nil)) nil))
            nil))
          nil)
         ("5" (use "complete_MVA_is_deterministic") nil nil)
         ("6" (use "complete_MVA_is_total") nil nil))
        nil))
      nil))
    nil)
   unfinished
   ((complete const-decl "boolean" WellFormedMVA nil)
    (complete_MVA_is_total formula-decl nil MVACompletion nil)
    (complete_MVA_is_deterministic formula-decl nil MVACompletion nil)
    (complete_MVA_has_trap_state formula-decl nil MVACompletion nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (add const-decl "(nonempty?)" sets nil)
    (complete_MVA_yields_wf_MVA formula-decl nil MVACompletion nil)
    (complete_MVA_pre const-decl "boolean" MVACompletion nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil)
    (ProgVarDecl type-eq-decl nil MVA nil)
    (MVAVarDecl type-eq-decl nil MVA nil)
    (JType type-decl nil JType_adt nil) (Val type-decl nil Val_adt nil)
    (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (CP formal-nonempty-type-decl nil MVACompletion nil)
    (Name formal-nonempty-type-decl nil MVACompletion nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   413 350 t nil)))

