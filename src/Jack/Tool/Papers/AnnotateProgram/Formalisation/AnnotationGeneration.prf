(AnnotateProgram
 (unique_TCC1 0
  (unique_TCC1-1 nil 3383987003 nil ("" (existence-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (name_of_TCC1 0
  (name_of_TCC1-1 nil 3383987003 nil ("" (existence-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (new_gvds_TCC1 0
  (new_gvds_TCC1-1 nil 3383987003 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (ann_action_TCC1 0
  (ann_action_TCC1-1 nil 3383987003 nil ("" (termination-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (ann_guard_actions_TCC1 0
  (ann_guard_actions_TCC1-1 nil 3383987003 nil
   ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (ann_guard_actions_TCC2 0
  (ann_guard_actions_TCC2-1 nil 3387192887 nil
   ("" (subtype-tcc) nil nil) unfinished nil nil nil nil nil))
 (ann_guard_actions_TCC3 0
  (ann_guard_actions_TCC3-1 nil 3387192887 nil
   ("" (subtype-tcc) nil nil) unfinished nil nil nil nil nil))
 (ann_guard_actions_TCC4 0
  (ann_guard_actions_TCC4-1 nil 3387192887 nil
   ("" (subtype-tcc) nil nil) unfinished nil nil nil nil nil))
 (ann_event_TCC1 0
  (ann_event_TCC1-1 nil 3383987003 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (ann_event_TCC2 0
  (ann_event_TCC2-1 nil 3383987003 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (filter_event_TCC1 0
  (filter_event_TCC1-1 nil 3383987003 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (ann_methods_TCC1 0
  (ann_methods_TCC1-1 nil 3383987003 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (ann_class_TCC1 0
  (ann_class_TCC1-1 nil 3387192887 nil ("" (subtype-tcc) nil nil)
   unfinished nil nil nil nil nil))
 (ann_program_TCC1 0
  (ann_program_TCC1-1 nil 3383987003 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil)))
(AnnotateProgramProperties
 (ann_program_preserves_structure 0
  (ann_program_preserves_structure-1 nil 3387252581 3387514967
   ("" (skosimp)
    (("" (split)
      (("1" (beta)
        (("1" (prop)
          (("1" (expand "ann_class")
            (("1" (lift-if) (("1" (propax) nil nil)) nil)) nil)
           ("2" (skosimp*)
            (("2" (prop)
              (("1" (expand "ann_program") (("1" (inst?) nil nil)) nil)
               ("2" (expand "ann_class")
                (("2" (split)
                  (("1" (flatten)
                    (("1" (expand "ann_methods")
                      (("1" (inst?) nil nil)) nil))
                    nil)
                   ("2" (flatten) nil nil))
                  nil))
                nil)
               ("3" (expand "ann_method") (("3" (propax) nil nil)) nil)
               ("4" (expand "ann_method") (("4" (propax) nil nil)) nil)
               ("5" (expand "ann_method") (("5" (propax) nil nil)) nil)
               ("6" (expand "ann_method") (("6" (propax) nil nil)) nil)
               ("7" (expand "ann_method") (("7" (propax) nil nil)) nil)
               ("8" (expand "ann_method") (("8" (propax) nil nil)) nil)
               ("9" (expand "ann_method") (("9" (propax) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (expand "ann_program")
          (("2" (inst?)
            (("2" (prop)
              (("2" (expand "ann_class")
                (("2" (lift-if)
                  (("2" (split)
                    (("1" (prop) nil nil) ("2" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((ann_class const-decl "Class" AnnotateProgram nil)
    (Class type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Stmt type-decl nil Stmt_adt nil)
    (ArgDecl type-eq-decl nil Program nil)
    (Expr type-decl nil Expr_adt nil)
    (GhostVarDecl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (FieldDecl type-eq-decl nil Program nil)
    (string type-eq-decl nil strings nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (JType type-decl nil JType_adt nil) (Val type-decl nil Val_adt nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (ann_methods const-decl "finite_set[Method]" AnnotateProgram nil)
    (ann_method const-decl "Method" AnnotateProgram nil))
   120532 210 t nil))
 (wf_class_ann_program 0
  (wf_class_ann_program-1 nil 3387521115 3387521175
   ("" (skosimp)
    (("" (use "ann_program_yields_wf_program")
      (("" (assert)
        (("" (use "wf_program_has_wf_classes") (("" (assert) nil nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((ann_program_yields_wf_program formula-decl nil
     AnnotateProgramProperties nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (string type-eq-decl nil strings nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (CP formal-nonempty-type-decl nil AnnotateProgramProperties nil)
    (wf_program_has_wf_classes formula-decl nil WellFormedProgram nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (Class type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Stmt type-decl nil Stmt_adt nil)
    (ArgDecl type-eq-decl nil Program nil)
    (Expr type-decl nil Expr_adt nil)
    (GhostVarDecl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (FieldDecl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (Val type-decl nil Val_adt nil))
   60405 230 t shostak))
 (lookup_mthd_axiom_TCC1 0
  (lookup_mthd_axiom_TCC1-1 nil 3387197459 nil
   ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (same_class_name_ann_class_implies_same_class 0
  (same_class_name_ann_class_implies_same_class-1 nil 3387512899
   3387516399
   ("" (skosimp)
    (("" (expand "ann_program")
      (("" (skosimp)
        (("" (lemma "wf_program_has_unique_class_names")
          (("" (inst -1 "program(mp!1)" "c1!1" "c1!2")
            (("" (expand "ann_program_pre")
              (("" (expand "wf_MP")
                (("" (flatten)
                  (("" (delete -4 -5)
                    (("" (assert)
                      (("" (split 1)
                        (("1" (flatten)
                          (("1" (assert)
                            (("1" (delete -2 1)
                              (("1"
                                (expand "ann_class")
                                (("1"
                                  (replace -5)
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (assert)
                            (("2" (expand "ann_class")
                              (("2"
                                (lift-if)
                                (("2"
                                  (assert)
                                  (("2"
                                    (prop)
                                    (("1" (assert) nil nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((Val type-decl nil Val_adt nil) (JType type-decl nil JType_adt nil)
    (FieldDecl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (GhostVarDecl type-eq-decl nil Program nil)
    (Expr type-decl nil Expr_adt nil)
    (ArgDecl type-eq-decl nil Program nil)
    (Stmt type-decl nil Stmt_adt nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Class type-eq-decl nil Program nil)
    (Program type-eq-decl nil Program nil)
    (CP formal-nonempty-type-decl nil AnnotateProgramProperties nil)
    (MVA type-eq-decl nil MVA nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_MP const-decl "boolean" WellFormedMonitoredProgram nil)
    (ann_class const-decl "Class" AnnotateProgram nil)
    (ann_program_pre const-decl "boolean" AnnotateProgram nil)
    (wf_program_has_unique_class_names formula-decl nil
     WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (below type-eq-decl nil nat_types nil)
    (character type-decl nil character_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (char type-eq-decl nil strings nil)
    (string type-eq-decl nil strings nil)
    (ann_program const-decl "Program" AnnotateProgram nil))
   1363255 720 t shostak))
 (same_method_name_ann_class_implies_same_method 0
  (same_method_name_ann_class_implies_same_method-1 nil 3387516443
   3387520069
   ("" (skosimp)
    (("" (lemma "wf_class_has_unique_method_names")
      (("" (inst -1 "c2!1" "m2!1" "ann_method(mp!1)(m1!1)")
        (("" (lemma "wf_program_has_wf_classes")
          (("" (inst -1 "ann_program(mp!1)" "c2!1")
            (("" (use "ann_program_yields_wf_program")
              (("" (assert)
                (("" (split -2)
                  (("1" (assert)
                    (("1" (expand "ann_method" -3 2)
                      (("1" (replace -5)
                        (("1" (expand "ann_class" 1)
                          (("1" (expand "ann_methods")
                            (("1" (inst?) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "ann_program" 1)
                    (("2" (inst 1 "c1!1") (("2" (prop) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((string type-eq-decl nil strings nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_class_has_unique_method_names formula-decl nil
     WellFormedProgram nil)
    (wf_program_has_wf_classes formula-decl nil WellFormedProgram nil)
    (ann_program_yields_wf_program formula-decl nil
     AnnotateProgramProperties nil)
    nil (ann_program_pre const-decl "boolean" AnnotateProgram nil)
    (ann_class const-decl "Class" AnnotateProgram nil)
    (ann_methods const-decl "finite_set[Method]" AnnotateProgram nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (ann_method const-decl "Method" AnnotateProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (CP formal-nonempty-type-decl nil AnnotateProgramProperties nil)
    (Class type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Stmt type-decl nil Stmt_adt nil)
    (ArgDecl type-eq-decl nil Program nil)
    (Expr type-decl nil Expr_adt nil)
    (GhostVarDecl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (FieldDecl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (Val type-decl nil Val_adt nil))
   609194 470 t shostak))
 (lookup_mthd_ann_program_TCC1 0
  (lookup_mthd_ann_program_TCC1-1 nil 3387195852 nil
   ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (lookup_mthd_ann_program 0
  (lookup_mthd_ann_program-1 nil 3387195852 3387527391
   ("" (skosimp)
    (("" (lemma "lookup_mthd_axiom")
      (("" (inst-cp -1 "program(mp!1)" "s!1" "m1!1" "mn!1" "tgt!1")
        (("" (inst -1 "ann_program(mp!1)" "s!1" "m2!1" "mn!1" "tgt!1")
          (("" (assert)
            (("" (flatten)
              ((""
                (name "c1"
                      "down(get_class(program(mp!1))(tgt!1, s!1))")
                (("" (replace -1)
                  ((""
                    (name "c2"
                          "down(get_class(ann_program(mp!1))(tgt!1, s!1))")
                    (("" (replace -1)
                      ((""
                        (lemma
                         "same_class_name_ann_class_implies_same_class")
                        (("" (inst -1 "mp!1" "c1" "c2")
                          (("" (assert)
                            (("" (lemma "get_class_ann_program")
                              ((""
                                (inst
                                 -1
                                 "mp!1"
                                 "c1"
                                 "c2"
                                 "s!1"
                                 "tgt!1")
                                ((""
                                  (assert)
                                  ((""
                                    (prop)
                                    (("1"
                                      (use
                                       "same_method_name_ann_class_implies_same_method")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (use
                                       "wf_class_has_unique_method_names")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (lemma
                                           "wf_program_has_wf_classes")
                                          (("2"
                                            (inst
                                             -1
                                             "program(mp!1)"
                                             "c1")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand*
                                                 "ann_program_pre"
                                                 "wf_MP")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((lookup_mthd_axiom formula-decl nil AnnotateProgramProperties nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (get_class_ann_program formula-decl nil AnnotateProgramProperties
     nil)
    (wf_class_has_unique_method_names formula-decl nil
     WellFormedProgram nil)
    (wf_program_has_wf_classes formula-decl nil WellFormedProgram nil)
    (wf_MP const-decl "boolean" WellFormedMonitoredProgram nil)
    (ann_program_pre const-decl "boolean" AnnotateProgram nil)
    (same_method_name_ann_class_implies_same_method formula-decl nil
     AnnotateProgramProperties nil)
    (same_class_name_ann_class_implies_same_class formula-decl nil
     AnnotateProgramProperties nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (get_class const-decl "lift[Class]" State nil)
    (PState type-eq-decl nil State nil)
    (PSt type-eq-decl nil State nil)
    (Excpt type-decl nil Excpt_adt nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (MVA type-eq-decl nil MVA nil)
    (CP formal-nonempty-type-decl nil AnnotateProgramProperties nil)
    (Program type-eq-decl nil Program nil)
    (Class type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil)
    (LocalVarDecl type-eq-decl nil Program nil)
    (Stmt type-decl nil Stmt_adt nil)
    (ArgDecl type-eq-decl nil Program nil)
    (Expr type-decl nil Expr_adt nil)
    (GhostVarDecl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (FieldDecl type-eq-decl nil Program nil)
    (string type-eq-decl nil strings nil)
    (char type-eq-decl nil strings nil)
    (char? adt-recognizer-decl "[character -> boolean]" character_adt
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (character type-decl nil character_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (JType type-decl nil JType_adt nil)
    (Val type-decl nil Val_adt nil))
   448090 1470 t shostak)))

