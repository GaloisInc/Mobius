(CompleteMonitor
 (complete_MP_TCC1 0
  (complete_MP_TCC1-1 nil 3412326920 3428746685
   ("" (skosimp*)
    (("" (typepred "mp!1")
      (("" (expand "wf_and_partial_MP") (("" (assert) nil nil)) nil)) nil))
    nil)
   proved
   ((wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   537 490 t nil))
 (complete_MP_TCC2 0
  (complete_MP_TCC2-1 nil 3412326920 3428748033
   ("" (skosimp*)
    (("" (use "complete_MVA_yields_wf_MVA")
      (("1" (assert)
        (("1" (expand "good_for_monitoring")
          (("1" (use "complete_MVA_is_complete") (("1" (assert) nil nil))
            nil))
          nil))
        nil)
       ("2" (typepred "mp!1")
        (("2" (expand "wf_and_partial_MP") (("2" (flatten) nil nil)) nil))
        nil))
      nil))
    nil)
   proved
   ((complete_MVA_yields_wf_MVA formula-decl nil MVACompletion nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (partial const-decl "boolean" MVAProperties nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (mp!1 skolem-const-decl "(wf_and_partial_MP[CP, Name])" CompleteMonitor
     nil)
    (complete_MVA_is_complete formula-decl nil MVACompletion nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil))
   127023 920 t nil))
 (complete_MP_TCC3 0
  (complete_MP_TCC3-1 nil 3412326920 3428748141
   ("" (skosimp*)
    (("" (typepred "mp!1")
      (("" (expand "compatible")
        (("" (flatten)
          (("" (split 1)
            (("1" (expand "MVA_aut_vars_are_not_prog_vars")
              (("1" (expand "complete_MVA") (("1" (propax) nil nil)) nil))
              nil)
             ("2" (skosimp*)
              (("2" (inst?)
                (("2" (assert)
                  (("2" (expand "complete_MVA")
                    (("2" (expand "MVA_prog_vars_are_fields")
                      (("2" (expand "MVA_events_correspond_to_methods")
                        (("2" (assert)
                          (("2" (split 1)
                            (("1" (propax) nil nil) ("2" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (MVA_prog_vars_are_fields const-decl "boolean" MonitoredProgram nil)
    (MVA_events_correspond_to_methods const-decl "boolean" MonitoredProgram
     nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (MVA_aut_vars_are_not_prog_vars const-decl "boolean" MonitoredProgram nil)
    (complete_MVA const-decl "MVA" MVACompletion nil))
   84559 910 t nil))
 (complete_MP_wf_and_complete 0
  (complete_MP_wf_and_complete-1 nil 3412326966 3428746687
   ("" (skosimp*)
    (("" (expand "complete_MP")
      (("" (expand "wf_and_complete_MP")
        (("" (expand "wf_MP")
          (("" (use "complete_MVA_yields_wf_MVA")
            (("1" (assert) (("1" (use "complete_MVA_is_complete") nil nil))
              nil)
             ("2" (typepred "mp!1")
              (("2" (expand "wf_and_partial_MP") (("2" (flatten) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (complete_MVA_is_complete formula-decl nil MVACompletion nil)
    (mp!1 skolem-const-decl "(wf_and_partial_MP)" CompleteMonitor nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (partial const-decl "boolean" MVAProperties nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (complete_MVA_yields_wf_MVA formula-decl nil MVACompletion nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil))
   852 830 t shostak))
 (complete_MP_preserves_wf_body 0
  (complete_MP_preserves_wf_body-1 nil 3412327602 3428746688
   ("" (skosimp*) (("" (expand "complete_MP") (("" (propax) nil nil)) nil))
    nil)
   proved ((complete_MP const-decl "MonitoredProgram" CompleteMonitor nil))
   473 480 t shostak))
 (complete_MP_preserves_wf_method 0
  (complete_MP_preserves_wf_method-1 nil 3412327616 3428746688
   ("" (skosimp*) (("" (expand "complete_MP") (("" (propax) nil nil)) nil))
    nil)
   proved ((complete_MP const-decl "MonitoredProgram" CompleteMonitor nil))
   503 470 t shostak))
 (monitor_related_astates_consequence 0
  (monitor_related_astates_consequence-1 nil 3412488306 3428746689
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (expand "monitor_related_astates")
        (("" (flatten)
          (("" (prop)
            (("" (typepred "mp!1")
              (("" (expand "wf_and_partial_MP")
                (("" (flatten)
                  (("" (use "partial_MVA_never_in_halted_in_wf_state")
                    (("" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (partial_MVA_never_in_halted_in_wf_state formula-decl nil
     MonitoredProgramSemantics nil)
    (monitor_related_astates const-decl "boolean" CompleteMonitor nil))
   616 620 t shostak))
 (existence_state_partial_monitor 0
  (existence_state_partial_monitor-1 nil 3414152548 3428746690
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      ((""
        (inst 2
         "s!1 WITH [ astate := (# cp := IF cp(astate(s!1)) = halted THEN cp(initial_MVA_state(mva(mp!1))) ELSE cp(astate(s!1)) ENDIF, stA := stA(astate(s!1)) #), stuck := cp(astate(s!1)) = halted]")
        (("" (assert)
          (("" (split 2)
            (("1" (expand "monitor_related_astates") (("1" (propax) nil nil))
              nil)
             ("2" (expand "wf_state")
              (("2" (assert)
                (("2" (flatten)
                  (("2" (assert)
                    (("2" (expand "complete_MP")
                      (("2" (assert)
                        (("2" (split 1)
                          (("1" (expand "wf_AState")
                            (("1" (flatten)
                              (("1" (assert)
                                (("1" (expand "complete_MVA")
                                  (("1" (assert)
                                    (("1" (auto-rewrite "add" "member")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (apply
                                           (branch
                                            (split 1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                          (("1"
                                            (use "wf_initial_MVA_state")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "wf_AState")
                                                (("1" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "wf_ghoststate")
                            (("2" (expand "is_ghost") (("2" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (wf_initial_MVA_state formula-decl nil MVACommonSemantics nil)
    (add const-decl "(nonempty?)" sets nil)
    (member const-decl "bool" sets nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (is_ghost const-decl "boolean" SemanticsJML nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (monitor_related_astates const-decl "boolean" CompleteMonitor nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (initial_MVA_state const-decl "AState" MVACommonSemantics nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (halted const-decl "CP" MVA nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (boolean nonempty-type-decl nil booleans nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil))
   1074 1010 t shostak))
 (get_address_same_in_monitor_related_states 0
  (get_address_same_in_monitor_related_states-1 nil 3412326087 3428746691
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (expand "get_address") (("" (assert) nil nil)) nil)) nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (get_address const-decl "int" Semantics nil))
   481 480 t shostak))
 (get_dynamic_type_name_same_in_monitor_related_states 0
  (get_dynamic_type_name_same_in_monitor_related_states-2 nil 3412326135
   3428746691
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (assert)
        (("" (expand "get_dynamic_type_name") (("" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (get_dynamic_type_name const-decl "Name" Semantics nil))
   519 490 t nil)
  (get_dynamic_type_name_same_in_monitor_related_states-1 nil 3412326109 nil
   (";;; Proof get_address_same_in_monitor_related_states-1 for formula CompleteMonitor.get_address_same_in_monitor_related_states"
    (skosimp*)
    ((";;; Proof get_address_same_in_monitor_related_states-1 for formula CompleteMonitor.get_address_same_in_monitor_related_states"
      (expand "monitor_related_states")
      ((";;; Proof get_address_same_in_monitor_related_states-1 for formula CompleteMonitor.get_address_same_in_monitor_related_states"
        (expand "get_dynamic_type_name")
        ((";;; Proof get_address_same_in_monitor_related_states-1 for formula CompleteMonitor.get_address_same_in_monitor_related_states"
          (assert) nil))))))
    ";;; developed with shostak decision procedures")
   unchecked nil nil nil nil nil))
 (monitor_related_states_implies_same_exception 0
  (monitor_related_states_implies_same_exception-1 nil 3412326136 3428746692
   (";;; Proof get_address_same_in_monitor_related_states-1 for formula CompleteMonitor.get_address_same_in_monitor_related_states"
    (skosimp*)
    ((";;; Proof get_address_same_in_monitor_related_states-1 for formula CompleteMonitor.get_address_same_in_monitor_related_states"
      (expand "monitor_related_states")
      ((";;; Proof get_address_same_in_monitor_related_states-1 for formula CompleteMonitor.get_address_same_in_monitor_related_states"
        (assert) nil))))
    ";;; developed with shostak decision procedures")
   proved ((monitor_related_states const-decl "boolean" CompleteMonitor nil))
   486 470 nil nil))
 (monitor_related_states_implies_same_lookup 0
  (monitor_related_states_implies_same_lookup-1 nil 3412326159 3428746692
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (assert)
        ((""
          (expand* "lookup" "is_local" "is_field" "lookup_local"
           "lookup_field")
          (("" (flatten)
            (("" (replace -5) (("" (replace -4) (("" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (is_local const-decl "boolean" State nil)
    (lookup_local const-decl "Val" State nil)
    (lookup_field const-decl "Val" State nil)
    (is_field const-decl "boolean" State nil)
    (lookup const-decl "Val" SemanticsJML nil))
   538 510 t nil))
 (monitor_related_states_preserved_by_update_local 0
  (monitor_related_states_preserved_by_update_local-1 nil 3412326200
   3428746694
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (flatten)
        (("" (use "wf_update_PState" ("s1" "s1!1"))
          (("" (use "wf_update_PState" ("s1" "s2!1" "p" "complete_MP(mp!1)"))
            (("" (assert)
              (("" (split -1)
                (("1" (split -2)
                  (("1" (assert)
                    (("1" (expand "update_PState") (("1" (propax) nil nil))
                      nil))
                    nil)
                   ("2" (skosimp*)
                    (("2" (expand "update_PState")
                      (("2" (use "wf_state_update_local")
                        (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skosimp*)
                  (("2" (expand "update_PState")
                    (("2" (use "wf_state_update_local")
                      (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (boolean nonempty-type-decl nil booleans nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_local const-decl "PState" State nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (wf_state_update_local formula-decl nil State nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil))
   1759 1730 t shostak))
 (monitor_related_states_preserved_by_catch 0
  (monitor_related_states_preserved_by_catch-1 nil 3412326228 3428746696
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (flatten)
        (("" (use "wf_update_PState" ("s1" "s1!1"))
          (("" (use "wf_update_PState" ("s1" "s2!1" "p" "complete_MP(mp!1)"))
            (("" (assert)
              (("" (split -1)
                (("1" (split -2)
                  (("1" (assert)
                    (("1" (expand "update_PState") (("1" (propax) nil nil))
                      nil))
                    nil)
                   ("2" (skosimp*)
                    (("2" (expand "update_PState")
                      (("2" (use "wf_state_catch") (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skosimp*)
                  (("2" (expand "update_PState")
                    (("2" (use "wf_state_catch") (("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (boolean nonempty-type-decl nil booleans nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil) (catch const-decl "PState" State nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (wf_state_catch formula-decl nil State nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil))
   1920 1820 t shostak))
 (monitor_related_states_preserved_by_raise 0
  (monitor_related_states_preserved_by_raise-3 nil 3412488888 3428746698
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (flatten)
        (("" (use "wf_update_PState" ("s1" "s1!1"))
          (("" (use "wf_update_PState" ("s1" "s2!1" "p" "complete_MP(mp!1)"))
            (("" (assert)
              (("" (split -1)
                (("1" (split -2)
                  (("1" (assert)
                    (("1" (expand "update_PState") (("1" (propax) nil nil))
                      nil))
                    nil)
                   ("2" (skosimp*)
                    (("2" (expand "update_PState")
                      (("2" (use "wf_state_raise") (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skosimp*)
                  (("2" (expand "update_PState")
                    (("2" (use "wf_state_raise") (("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (boolean nonempty-type-decl nil booleans nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil) (raise const-decl "PState" State nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (wf_state_raise formula-decl nil State nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil))
   1743 1710 t nil)
  (monitor_related_states_preserved_by_raise-2 nil 3412330218 3412488492
   (";;; Proof monitor_related_states_preserved_by_catch-1 for formula CompleteMonitor.monitor_related_states_preserved_by_catch"
    (skosimp*)
    ((";;; Proof monitor_related_states_preserved_by_catch-1 for formula CompleteMonitor.monitor_related_states_preserved_by_catch"
      (expand "monitor_related_states")
      ((";;; Proof monitor_related_states_preserved_by_catch-1 for formula CompleteMonitor.monitor_related_states_preserved_by_catch"
        (flatten)
        ((";;; Proof monitor_related_states_preserved_by_catch-1 for formula CompleteMonitor.monitor_related_states_preserved_by_catch"
          (use "wf_update_PState" ("s1" "s2!1"))
          ((";;; Proof monitor_related_states_preserved_by_catch-1 for formula CompleteMonitor.monitor_related_states_preserved_by_catch"
            (assert)
            ((";;; Proof monitor_related_states_preserved_by_catch-1 for formula CompleteMonitor.monitor_related_states_preserved_by_catch"
              (split -1)
              (("1" (assert)
                (("1" (expand "update_PState") (("1" (propax) nil)))))
               ("2" (skosimp*)
                (("2" (expand "update_PState")
                  (("2" (use "wf_state_raise")
                    (("2" (assert) nil))))))))))))))))))
    ";;; developed with shostak decision procedures")
   unfinished nil 629 620 nil nil)
  (monitor_related_states_preserved_by_raise-1 nil 3412326240 3412329792
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (expand "update_PState")
        (("" (flatten) (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   unfinished
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil))
   48 20 t shostak))
 (monitor_related_states_preserved_by_update_stack 0
  (monitor_related_states_preserved_by_update_stack-1 nil 3413696364
   3428746699
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (flatten)
        (("" (use "wf_state_update_stack")
          (("" (assert)
            (("" (split -1)
              (("1" (assert)
                (("1" (use "wf_state_update_stack" ("p" "complete_MP(mp!1)"))
                  (("1" (assert)
                    (("1" (split -1)
                      (("1" (assert)
                        (("1"
                          (expand* "update_stack" "update_PState" "o"
                           "update_local")
                          (("1" (lift-if) (("1" (assert) nil nil)) nil)) nil))
                        nil)
                       ("2" (expand "complete_MP") (("2" (propax) nil nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "complete_MP") (("2" (propax) nil nil)) nil))
                  nil))
                nil)
               ("2" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (wf_state_update_stack formula-decl nil MonitoredProgramSemantics nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (arg!1 skolem-const-decl "(getLocalDecls(program(mp!1)))" CompleteMonitor
     nil)
    (mp!1 skolem-const-decl "(wf_and_partial_MP)" CompleteMonitor nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_local const-decl "PState" State nil)
    (O const-decl "T3" function_props nil)
    (update_stack const-decl "FullState" Semantics nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil))
   1017 980 t shostak))
 (monitor_related_astates_preserved_by_on_method_MVA_TCC1 0
  (monitor_related_astates_preserved_by_on_method_MVA_TCC1-1 nil 3412338644
   3428746701 ("" (subtype-tcc) nil nil) proved
   ((Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (skip const-decl "Action" MVA nil)
    (complete_trans const-decl "finite_set[Transition]" MVACompletion nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (member const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (defined? const-decl "boolean" ValProp nil)
    (var_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (wf_store const-decl "boolean" State nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (is_field const-decl "boolean" State nil)
    (getFieldDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_local const-decl "boolean" State nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (wf_state const-decl "boolean" State nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil) (lift type-decl nil lift_adt nil)
    (Excpt type-decl nil Excpt_adt nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_ghost const-decl "boolean" SemanticsJML nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (monitor_related_astates const-decl "boolean" CompleteMonitor nil))
   2430 2320 nil nil))
 (monitor_related_astates_preserved_by_on_method_MVA 0
  (monitor_related_astates_preserved_by_on_method_MVA-2 nil 3428748305
   3428748697
   ("" (skosimp*)
    (("" (expand "monitor_related_astates")
      (("" (typepred "complete_MP(mp!1)")
        (("" (typepred "mp!1")
          ((""
            (case-replace
             " methods(get_monitored_class(complete_MP(mp!1)))(md!1) = methods(get_monitored_class(mp!1))(md!1)")
            (("1" (typepred "mva(mp!1)")
              (("1" (expand* "wf_and_complete_MP" "wf_and_partial_MP")
                (("1" (flatten)
                  (("1" (assert)
                    (("1" (expand "complete_MP")
                      (("1" (auto-rewrite -3)
                        (("1"
                          (use "on_method_MVA_never_leaves_halted"
                               ("mp" "complete_MP(mp!1)"))
                          (("1" (assert)
                            (("1"
                              (case "wf_PEvent[CP, Name]
                                                                 (mva(mp!1))
                                                                 ((# stP := fvs(st(pstate(s1!1))),
                                                                     event := (# etype := etype!1, mname := name(md!1) #),
                                                                     arg := arg!1 #))")
                              (("1"
                                (case "wf_AState[CP, Name](mva(mp!1))(astate(s1!1))")
                                (("1"
                                  (case "                    NOT stuck(s1!1) AND
                                                                                    methods(get_monitored_class(mp!1))(md!1) AND
                                                                                     evs(mva(mp!1))((# etype := etype!1, mname := name(md!1) #))")
                                  (("1" (hide -4)
                                    (("1" (flatten)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "on_method_MVA")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (rewrite "evs_complete_MVA")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (use
                                                   "completion_equivalence2")
                                                  (("1"
                                                    (case
                                                     "up?(step(mva(mp!1))
                                                                                                     (astate(s1!1),
                                                                                                      (# stP := fvs(st(pstate(s1!1))),
                                                                                                         event := (# etype := etype!1, mname := name(md!1) #),
                                                                                                         arg := arg!1 #)))")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (use
                                                         "complete_definedness"
                                                         ("a"
                                                          "complete_MVA(mva(mp!1))"
                                                          "s"
                                                          "astate(s2!1)"))
                                                        (("1"
                                                          (replace -19)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide 1)
                                                              (("1"
                                                                (expand
                                                                 "step")
                                                                (("1"
                                                                  (name-replace
                                                                   "t"
                                                                   "choose(LAMBDA
                                                                                                                     (t: Transition[CP, Name]):
                                                                                                                     ts(mva(mp!1))(t)
                                                                                                                     AND
                                                                                                                     scp(t) = cp(astate(s1!1))
                                                                                                                     AND
                                                                                                                     event(t)
                                                                                                                     =
                                                                                                                     (# etype := etype!1,
                                                                                                                        mname := name(md!1) #)
                                                                                                                     AND
                                                                                                                     guard(t)
                                                                                                                     (stA(astate(s1!1)),
                                                                                                                      fvs(st(pstate(s2!1))),
                                                                                                                      arg!1))"
                                                                   :hide?
                                                                   t)
                                                                  (("1"
                                                                    (name-replace
                                                                     "t_c"
                                                                     "choose(LAMBDA
                                                                                                                                (t_1: Transition[CP, Name]):
                                                                                                                                ts(complete_MVA(mva(mp!1)))(t_1)
                                                                                                                                AND
                                                                                                                                scp(t_1) = cp(astate(s2!1))
                                                                                                                                AND
                                                                                                                                event(t_1)
                                                                                                                                =
                                                                                                                                (# etype := etype!1,
                                                                                                                                   mname := name(md!1) #)
                                                                                                                                AND
                                                                                                                                guard(t_1)
                                                                                                                                (stA(astate(s2!1)),
                                                                                                                                 fvs(st(pstate(s2!1))),
                                                                                                                                 arg!1))"
                                                                     :hide?
                                                                     t)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (typepred
                                                                               "t")
                                                                              (("1"
                                                                                (typepred
                                                                                 "t_c")
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "t_c = t")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         3)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      (("1"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           1)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (apply
                                                                                           (branch
                                                                                            (split
                                                                                             -12)
                                                                                            ((then
                                                                                              (flatten)
                                                                                              (assert)
                                                                                              (flatten)
                                                                                              (assert)))))
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -10)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     4)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "complete_MVA")
                                                                                      (("2"
                                                                                        (auto-rewrite
                                                                                         "union"
                                                                                         "member")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "partial")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "deterministic")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -19
                                                                                                     "t_c"
                                                                                                     "t"
                                                                                                     "stA(astate(s1!1))"
                                                                                                     "fvs(st(pstate(s1!1)))"
                                                                                                     "arg!1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "complete_trans"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "build_guard")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -7
                                                                                                           "guard(t)")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "all_guards")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "wf_AState")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "partial")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide 4)
                                                                      (("2"
                                                                        (rewrite
                                                                         "nonempty_exists")
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide 4)
                                                                    (("2"
                                                                      (rewrite
                                                                       "nonempty_exists")
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (split
                                                                             -2)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand "wf_state")
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (use
                                                       "complete_definedness"
                                                       ("a"
                                                        "complete_MVA(mva(mp!1))"
                                                        "s"
                                                        "astate(s2!1)"))
                                                      (("1"
                                                        (replace -19)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand "step")
                                                            (("1"
                                                              (lift-if 4)
                                                              (("1"
                                                                (split 4)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (name-replace
                                                                     "t"
                                                                     "(choose(LAMBDA (t: Transition[CP, Name]):
                                                                                              ts(complete_MVA(mva(mp!1)))(t) AND
                                                                                               scp(t) = cp(astate(s2!1)) AND
                                                                                                event(t) = (# etype := etype!1, mname := name(md!1) #)
                                                                                                 AND
                                                                                                 guard(t)(stA(astate(s2!1)), fvs(st(pstate(s2!1))), arg!1)))"
                                                                     :hide?
                                                                     t)
                                                                    (("1"
                                                                      (typepred
                                                                       "t")
                                                                      (("1"
                                                                        (expand
                                                                         "complete_MVA")
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (typepred
                                                                               "t")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "complete_MVA")
                                                                                  (("1"
                                                                                    (auto-rewrite
                                                                                     "union"
                                                                                     "member")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (split
                                                                                           2)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "complete_trans"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "skip")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "execute_action")
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "skip")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "execute_action")
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2
                                                                       3)
                                                                      (("2"
                                                                        (rewrite
                                                                         "nonempty_exists")
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -5)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "wf_state")
                                                        (("2"
                                                          (flatten)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (apply (branch
                                            (split 3)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                    (("1" (expand "on_method_MVA")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "complete_MP")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (apply
                                                 (branch
                                                  (split 1)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("1"
                                                  (apply
                                                   (branch
                                                    (split)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("1"
                                                    (apply
                                                     (branch
                                                      (split)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (apply
                                                     (branch
                                                      (split)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (apply
                                                   (branch
                                                    (split)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("2"
                                                    (apply
                                                     (branch
                                                      (split)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (expand "on_method_MVA")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (rewrite "evs_complete_MVA")
                                          (("2"
                                            (expand "complete_MP")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (apply
                                                 (branch
                                                  (split)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("2"
                                                  (lift-if)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (apply
                                                       (branch
                                                        (split)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (expand "on_method_MVA")
                                      (("3"
                                        (rewrite "evs_complete_MVA")
                                        (("3"
                                          (apply
                                           (branch
                                            (split)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                          (("3"
                                            (lift-if)
                                            (("3"
                                              (apply
                                               (branch
                                                (split)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("3"
                                                (apply
                                                 (branch
                                                  (split)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("3"
                                                  (expand "step")
                                                  (("3"
                                                    (lift-if)
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (split 1)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (name-replace
                                                             "t"
                                                             "choose(LAMBDA (t: Transition[CP, Name]):
                                                                                    ts(complete_MVA(mva(mp!1)))(t) AND
                                                                                     scp(t) = cp(astate(s2!1)) AND
                                                                                      event(t)
                                                                                      =
                                                                                      (# etype := etype!1,
                                                                                         mname := name(md!1) #)
                                                                                      AND
                                                                                      guard(t)
                                                                                      (stA(astate(s2!1)),
                                                                                       fvs(st(pstate(s2!1))),
                                                                                       arg!1))"
                                                             :hide?
                                                             t)
                                                            (("1"
                                                              (typepred "t")
                                                              (("1"
                                                                (auto-rewrite
                                                                 "union"
                                                                 "member")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "complete_MVA")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (typepred
                                                                           "mva(mp!1)")
                                                                          (("1"
                                                                            (typepred
                                                                             "mp!1")
                                                                            (("1"
                                                                              (expand
                                                                               "wf_and_partial_MP")
                                                                              (("1"
                                                                                (expand
                                                                                 "partial")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "wf_MVA")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "wf_Trans")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "complete_trans"
                                                                           -1)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (replace
                                                                                   -3)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "execute_action")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "skip")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "skip")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "execute_action")
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (rewrite
                                                               "nonempty_exists")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (expand "wf_state")
                                  (("2" (flatten) nil nil)) nil))
                                nil)
                               ("2" (expand "wf_PEvent")
                                (("2" (expand "wf_PSt")
                                  (("2" (typepred "mp!1")
                                    (("2" (split 1)
                                      (("1"
                                        (expand "on_method_MVA")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (rewrite "evs_complete_MVA")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide -10)
                                        (("2"
                                          (expand "compatible")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (skosimp*)
                                              (("2"
                                                (expand
                                                 "MVA_prog_vars_are_fields")
                                                (("2"
                                                  (expand "var_names")
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (inst -6 "f!1")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (expand
                                                             "wf_state")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "wf_state")
                                                                (("2"
                                                                  (inst
                                                                   -26
                                                                   "n!1")
                                                                  (("2"
                                                                    (expand
                                                                     "is_field")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           "var_names")
                                                                          (("2"
                                                                            (inst
                                                                             2
                                                                             "fd!1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "getFieldDecls")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (use "complete_MP_preserves_wf_method") nil
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "complete_MP")
              (("2" (expand "get_monitored_class")
                (("2" (expand "complete_MVA") (("2" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_astates const-decl "boolean" CompleteMonitor nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (md!1 skolem-const-decl "(wf_Method(program(mp!1)))" CompleteMonitor nil)
    (mp!1 skolem-const-decl "(wf_and_partial_MP)" CompleteMonitor nil)
    (PEvent type-eq-decl nil MVACommonSemantics nil)
    (wf_PEvent const-decl "boolean" MVACommonSemantics nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (on_method_MVA const-decl "MPState" MonitoredProgramSemantics nil)
    (partial const-decl "boolean" MVAProperties nil)
    (evs_complete_MVA formula-decl nil MVACompletion nil)
    (completion_equivalence2 formula-decl nil MVACompletion nil)
    (t!2 skolem-const-decl "Transition[CP, Name]" CompleteMonitor nil)
    (execute_action def-decl "Store" MVACommonSemantics nil)
    (skip const-decl "Action" MVA nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (choose const-decl "(p)" sets nil) (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (t!1 skolem-const-decl "Transition[CP, Name]" CompleteMonitor nil)
    (s2!1 skolem-const-decl "MPState[CP, Name]" CompleteMonitor nil)
    (etype!1 skolem-const-decl "EventType" CompleteMonitor nil)
    (arg!1 skolem-const-decl "ValOrExcpt[Name]" CompleteMonitor nil)
    (nonempty_exists formula-decl nil sets_lemmas nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (member const-decl "bool" sets nil) (union const-decl "set" sets nil)
    (complete_trans const-decl "finite_set[Transition]" MVACompletion nil)
    (all_guards const-decl "finite_set[Guard]" MVACompletion nil)
    (build_guard const-decl "Guard" MVACompletion nil)
    (deterministic const-decl "boolean" MVAProperties nil)
    (s1!1 skolem-const-decl "MPState[CP, Name]" CompleteMonitor nil)
    (t!1 skolem-const-decl "Transition[CP, Name]" CompleteMonitor nil)
    (complete_definedness formula-decl nil MVAPartialSemantics nil)
    (complete const-decl "boolean" MVAProperties nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (step const-decl "lift[AState]" MVAPartialSemantics nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (t!1 skolem-const-decl "Transition[CP, Name]" CompleteMonitor nil)
    (wf_Trans const-decl "boolean" WellFormedMVA nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (wf_PSt const-decl "boolean" MVACommonSemantics nil)
    (var_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (getFieldDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_field const-decl "boolean" State nil)
    (wf_state const-decl "boolean" State nil)
    (MVA_prog_vars_are_fields const-decl "boolean" MonitoredProgram nil)
    (complete_MP_preserves_wf_method formula-decl nil CompleteMonitor nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil))
   273387 13820 t nil)
  (monitor_related_astates_preserved_by_on_method_MVA-1 nil 3412338653
   3428746704
   ("" (skosimp*)
    (("" (expand "monitor_related_astates")
      (("" (typepred "complete_MP(mp!1)")
        (("" (typepred "mp!1")
          ((""
            (case-replace
             " methods(get_monitored_class(complete_MP(mp!1)))(md!1) = methods(get_monitored_class(mp!1))(md!1)")
            (("1" (typepred "mva(mp!1)")
              (("1" (expand* "wf_and_complete_MP" "wf_and_partial_MP")
                (("1" (flatten)
                  (("1" (assert)
                    (("1" (expand "complete_MP")
                      (("1" (auto-rewrite -3)
                        (("1"
                          (use "on_method_MVA_never_leaves_halted"
                               ("mp" "complete_MP(mp!1)"))
                          (("1" (assert)
                            (("1"
                              (case "wf_PEvent[CP, Name]
                                           (mva(mp!1))
                                           ((# stP := st(pstate(s1!1)),
                                               event := (# etype := etype!1, mname := name(md!1) #),
                                               arg := arg!1 #))")
                              (("1"
                                (case "wf_AState[CP, Name](mva(mp!1))(astate(s1!1))")
                                (("1"
                                  (case "                    NOT stuck(s1!1) AND
                                                      methods(get_monitored_class(mp!1))(md!1) AND
                                                       evs(mva(mp!1))((# etype := etype!1, mname := name(md!1) #))")
                                  (("1" (hide -4)
                                    (("1" (flatten)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "on_method_MVA")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (rewrite "evs_complete_MVA")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (use
                                                   "completion_equivalence2")
                                                  (("1"
                                                    (case
                                                     "up?(step(mva(mp!1))
                                                                   (astate(s1!1),
                                                                    (# stP := st(pstate(s1!1)),
                                                                       event := (# etype := etype!1, mname := name(md!1) #),
                                                                       arg := arg!1 #)))")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (use
                                                         "complete_definedness"
                                                         ("a"
                                                          "complete_MVA(mva(mp!1))"
                                                          "s"
                                                          "astate(s2!1)"))
                                                        (("1"
                                                          (replace -19)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide 1)
                                                              (("1"
                                                                (expand
                                                                 "step")
                                                                (("1"
                                                                  (name-replace
                                                                   "t"
                                                                   "choose(LAMBDA
                                                                                     (t: Transition[CP, Name]):
                                                                                     ts(mva(mp!1))(t)
                                                                                     AND
                                                                                     scp(t) = cp(astate(s1!1))
                                                                                     AND
                                                                                     event(t)
                                                                                     =
                                                                                     (# etype := etype!1,
                                                                                        mname := name(md!1) #)
                                                                                     AND
                                                                                     guard(t)
                                                                                     (stA(astate(s1!1)),
                                                                                      st(pstate(s2!1)),
                                                                                      arg!1))"
                                                                   :hide?
                                                                   t)
                                                                  (("1"
                                                                    (name-replace
                                                                     "t_c"
                                                                     "choose(LAMBDA
                                                                                            (t_1: Transition[CP, Name]):
                                                                                            ts(complete_MVA(mva(mp!1)))(t_1)
                                                                                            AND
                                                                                            scp(t_1) = cp(astate(s2!1))
                                                                                            AND
                                                                                            event(t_1)
                                                                                            =
                                                                                            (# etype := etype!1,
                                                                                               mname := name(md!1) #)
                                                                                            AND
                                                                                            guard(t_1)
                                                                                            (stA(astate(s2!1)),
                                                                                             st(pstate(s2!1)),
                                                                                             arg!1))"
                                                                     :hide?
                                                                     t)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (typepred
                                                                               "t")
                                                                              (("1"
                                                                                (typepred
                                                                                 "t_c")
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "t_c = t")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         3)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      (("1"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           1)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (apply
                                                                                           (branch
                                                                                            (split
                                                                                             -12)
                                                                                            ((then
                                                                                              (flatten)
                                                                                              (assert)
                                                                                              (flatten)
                                                                                              (assert)))))
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -10)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     4)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "complete_MVA")
                                                                                      (("2"
                                                                                        (auto-rewrite
                                                                                         "union"
                                                                                         "member")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "partial")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "deterministic")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -19
                                                                                                     "t_c"
                                                                                                     "t"
                                                                                                     "stA(astate(s1!1))"
                                                                                                     "st(pstate(s1!1))"
                                                                                                     "arg!1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "complete_trans"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "build_guard")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -7
                                                                                                           "guard(t)")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "all_guards")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "wf_AState")
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "partial")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide 4)
                                                                      (("2"
                                                                        (rewrite
                                                                         "nonempty_exists")
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide 4)
                                                                    (("2"
                                                                      (rewrite
                                                                       "nonempty_exists")
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (split
                                                                             -2)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand "wf_state")
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (use
                                                       "complete_definedness"
                                                       ("a"
                                                        "complete_MVA(mva(mp!1))"
                                                        "s"
                                                        "astate(s2!1)"))
                                                      (("1"
                                                        (replace -19)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand "step")
                                                            (("1"
                                                              (lift-if 4)
                                                              (("1"
                                                                (split 4)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (name-replace
                                                                     "t"
                                                                     "(choose(LAMBDA (t: Transition[CP, Name]):
                                                          ts(complete_MVA(mva(mp!1)))(t) AND
                                                           scp(t) = cp(astate(s2!1)) AND
                                                            event(t) = (# etype := etype!1, mname := name(md!1) #)
                                                             AND
                                                             guard(t)(stA(astate(s2!1)), st(pstate(s2!1)), arg!1)))"
                                                                     :hide?
                                                                     t)
                                                                    (("1"
                                                                      (typepred
                                                                       "t")
                                                                      (("1"
                                                                        (expand
                                                                         "complete_MVA")
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (typepred
                                                                               "t")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "complete_MVA")
                                                                                  (("1"
                                                                                    (auto-rewrite
                                                                                     "union"
                                                                                     "member")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (split
                                                                                           2)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "complete_trans"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "skip")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "execute_action")
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "skip")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "execute_action")
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2
                                                                       3)
                                                                      (("2"
                                                                        (rewrite
                                                                         "nonempty_exists")
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -5)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "wf_state")
                                                        (("2"
                                                          (flatten)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (apply (branch
                                            (split 3)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                    (("1" (expand "on_method_MVA")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "complete_MP")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (apply
                                                 (branch
                                                  (split 1)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("1"
                                                  (apply
                                                   (branch
                                                    (split)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("1"
                                                    (apply
                                                     (branch
                                                      (split)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (apply
                                                     (branch
                                                      (split)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (apply
                                                   (branch
                                                    (split)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("2"
                                                    (apply
                                                     (branch
                                                      (split)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (expand "on_method_MVA")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (rewrite "evs_complete_MVA")
                                          (("2"
                                            (expand "complete_MP")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (apply
                                                 (branch
                                                  (split)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("2"
                                                  (lift-if)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (apply
                                                       (branch
                                                        (split)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (expand "on_method_MVA")
                                      (("3"
                                        (rewrite "evs_complete_MVA")
                                        (("3"
                                          (apply
                                           (branch
                                            (split)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                          (("3"
                                            (lift-if)
                                            (("3"
                                              (apply
                                               (branch
                                                (split)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("3"
                                                (apply
                                                 (branch
                                                  (split)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("3"
                                                  (expand "step")
                                                  (("3"
                                                    (lift-if)
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (split 1)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (name-replace
                                                             "t"
                                                             "choose(LAMBDA (t: Transition[CP, Name]):
                                                    ts(complete_MVA(mva(mp!1)))(t) AND
                                                     scp(t) = cp(astate(s2!1)) AND
                                                      event(t)
                                                      =
                                                      (# etype := etype!1,
                                                         mname := name(md!1) #)
                                                      AND
                                                      guard(t)
                                                      (stA(astate(s2!1)),
                                                       st(pstate(s2!1)),
                                                       arg!1))"
                                                             :hide?
                                                             t)
                                                            (("1"
                                                              (typepred "t")
                                                              (("1"
                                                                (auto-rewrite
                                                                 "union"
                                                                 "member")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "complete_MVA")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (typepred
                                                                           "mva(mp!1)")
                                                                          (("1"
                                                                            (typepred
                                                                             "mp!1")
                                                                            (("1"
                                                                              (expand
                                                                               "wf_and_partial_MP")
                                                                              (("1"
                                                                                (expand
                                                                                 "partial")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "wf_MVA")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "wf_Trans")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "complete_trans"
                                                                           -1)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (replace
                                                                                   -3)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "execute_action")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "skip")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "skip")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "execute_action")
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (rewrite
                                                               "nonempty_exists")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (expand "wf_state")
                                  (("2" (flatten) nil nil)) nil))
                                nil)
                               ("2" (expand "wf_PEvent")
                                (("2" (expand "wf_PSt")
                                  (("2" (typepred "mp!1")
                                    (("2" (split 1)
                                      (("1"
                                        (expand "on_method_MVA")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (rewrite "evs_complete_MVA")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide -10)
                                        (("2"
                                          (expand "compatible")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (skosimp*)
                                              (("2"
                                                (expand
                                                 "MVA_prog_vars_are_fields")
                                                (("2"
                                                  (expand "var_names")
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (inst -6 "l!1")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (expand
                                                             "wf_state")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "wf_state")
                                                                (("2"
                                                                  (inst
                                                                   -26
                                                                   "n!1")
                                                                  (("2"
                                                                    (expand
                                                                     "is_field")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           "var_names")
                                                                          (("2"
                                                                            (inst
                                                                             2
                                                                             "fd!1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "getFieldDecls")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (use "complete_MP_preserves_wf_method") nil
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "complete_MP")
              (("2" (expand "get_monitored_class")
                (("2" (expand "complete_MVA") (("2" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((monitor_related_astates const-decl "boolean" CompleteMonitor nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (PSt type-eq-decl nil State nil)
    (PEvent type-eq-decl nil MVACommonSemantics nil)
    (wf_PEvent const-decl "boolean" MVACommonSemantics nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (on_method_MVA const-decl "MPState" MonitoredProgramSemantics nil)
    (partial const-decl "boolean" MVAProperties nil)
    (evs_complete_MVA formula-decl nil MVACompletion nil)
    (completion_equivalence2 formula-decl nil MVACompletion nil)
    (execute_action def-decl "Store" MVACommonSemantics nil)
    (skip const-decl "Action" MVA nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (choose const-decl "(p)" sets nil) (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (nonempty_exists formula-decl nil sets_lemmas nil)
    (nonempty_add_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (member const-decl "bool" sets nil) (union const-decl "set" sets nil)
    (complete_trans const-decl "finite_set[Transition]" MVACompletion nil)
    (all_guards const-decl "finite_set[Guard]" MVACompletion nil)
    (build_guard const-decl "Guard" MVACompletion nil)
    (deterministic const-decl "boolean" MVAProperties nil)
    (complete_definedness formula-decl nil MVAPartialSemantics nil)
    (complete const-decl "boolean" MVAProperties nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (step const-decl "lift[AState]" MVAPartialSemantics nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (wf_Trans const-decl "boolean" WellFormedMVA nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (wf_PSt const-decl "boolean" MVACommonSemantics nil)
    (getFieldDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_field const-decl "boolean" State nil)
    (wf_state const-decl "boolean" State nil)
    (MVA_prog_vars_are_fields const-decl "boolean" MonitoredProgram nil)
    (complete_MP_preserves_wf_method formula-decl nil CompleteMonitor nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) nil
    (Expr type-eq-decl nil Body_adt nil) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) nil nil (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil))
   2689 2560 t shostak))
 (monitor_related_states_initial_MP_states 0
  (monitor_related_states_initial_MP_states-1 nil 3412327053 3428746705
   ("" (skosimp*)
    (("" (expand "monitor_related_states")
      (("" (use "wf_initial_MP_state" ("mp" "complete_MP(mp!1)"))
        (("" (use "wf_initial_MP_state" ("mp" "mp!1"))
          (("" (assert)
            (("" (split -1)
              (("1" (split -2)
                (("1" (assert)
                  (("1" (hide -1 -2)
                    (("1"
                      (expand* "monitor_related_astates" "initial_MP_state"
                       "complete_MP" "initial_MVA_state")
                      (("1" (use "complete_MVA_yields_wf_MVA")
                        (("1" (expand "wf_MVA")
                          (("1" (flatten)
                            (("1" (assert)
                              (("1" (split 2)
                                (("1" (expand "complete_MVA")
                                  (("1" (propax) nil nil)) nil)
                                 ("2" (apply-extensionality 1 :hide? t)
                                  (("1"
                                    (case-replace
                                     "(get_MVAVarDecl(x!1, mva(mp!1))) = (get_MVAVarDecl(x!1, complete_MVA(mva(mp!1))))")
                                    (("1" (hide 2)
                                      (("1"
                                        (expand "get_MVAVarDecl")
                                        (("1"
                                          (expand "complete_MVA")
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (skosimp*) (("2" (assert) nil nil))
                                    nil)
                                   ("3" (skosimp*) (("3" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (typepred "mp!1")
                          (("2" (expand "wf_and_partial_MP")
                            (("2" (flatten) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (typepred "complete_MP(mp!1)")
                  (("2" (expand "wf_and_complete_MP")
                    (("2" (flatten) nil nil)) nil))
                  nil))
                nil)
               ("2" (typepred "mp!1")
                (("2" (expand "wf_and_partial_MP") (("2" (flatten) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (initial_MP_state const-decl "MPState" MonitoredProgramSemantics nil)
    (initial_MVA_state const-decl "AState" MVACommonSemantics nil)
    (monitor_related_astates const-decl "boolean" CompleteMonitor nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (Bottom adt-constructor-decl "(Bottom?)" Val_adt nil)
    (Bottom? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (get_MVAVarDecl const-decl "lift[Decl]" MVA nil)
    (bottom? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (lift type-decl nil lift_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (partial const-decl "boolean" MVAProperties nil)
    (mp!1 skolem-const-decl "(wf_and_partial_MP)" CompleteMonitor nil)
    (complete_MVA_yields_wf_MVA formula-decl nil MVACompletion nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (wf_initial_MP_state formula-decl nil MonitoredProgramSemantics nil))
   1612 1500 t shostak))
 (monitor_related_states_preserved_by_derive_TCC1 0
  (monitor_related_states_preserved_by_derive_TCC1-1 nil 3412326920 3428746706
   ("" (skosimp*) (("" (expand "complete_MP") (("" (propax) nil nil)) nil))
    nil)
   proved ((complete_MP const-decl "MonitoredProgram" CompleteMonitor nil))
   518 490 t nil))
 (monitor_related_states_preserved_by_derive 0
  (monitor_related_states_preserved_by_derive-3 nil 3428748811 nil
   (";;; Proof monitor_related_states_preserved_by_derive-2 for formula CompleteMonitor.monitor_related_states_preserved_by_derive"
    (skolem 1 ("mp!1" _ _ _))
    ((";;; Proof monitor_related_states_preserved_by_derive-2 for formula CompleteMonitor.monitor_related_states_preserved_by_derive"
      (lemma
       "wf_induction[[nat, nat], LAMBDA(i, j : [nat, nat]) : proj_1(i) < proj_1(j) AND proj_2(i) < proj_2(j)]")
      (("1"
        (inst -1
         "LAMBDA(x : [nat, nat]) : FORALL (b: (wf_Body(program(mp!1))), v1, v2: Val)
                                 (s1a, s1b, s2a, s2b: MPState) :
                             monitor_related_states(mp!1)(s1a, s1b) IMPLIES
                              derive(mp!1)(b, s1a, v1, s2a)(proj_1(x)) IMPLIES
                               derive(complete_MP(mp!1))(b, s1b, v2, s2b)(proj_2(x)) IMPLIES
                                monitor_related_states(mp!1)(s2a, s2b) AND v1 = v2")
        (("1" (split -1)
          (("1" (skosimp*)
            (("1" (inst -1 "(n1!1, n2!1)")
              (("1" (assert)
                (("1" (apply (repeat (inst? -1))) (("1" (assert) nil)))))))))
           ("2" (hide 2)
            (("2" (skosimp*)
              (("2" (use "monitor_related_states_implies_same_exception")
                (("2" (assert)
                  (("2" (expand "derive" (-5 -4))
                    (("2" (assert)
                      (("2"
                        (apply (branch (split -4)
                                ((then (flatten) (assert) (flatten)
                                  (assert)))))
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2"
                              (expand* "check_for_exception_final"
                               "check_for_exception")
                              (("2"
                                (apply (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                (("1" (skosimp*)
                                  (("1" (copy -7)
                                    (("1" (inst -1 "(m1!1, m1!2)")
                                      (("1"
                                        (inst -8 "(m2!1, m2!2)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst? -1 :where (-4 -11))))
                                            (("1"
                                              (apply
                                               (repeat
                                                (inst? -8 :where (-5 -12))))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (hide -1)
                                                        (("1"
                                                          (use
                                                           "monitor_related_states_implies_same_exception")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (branch
                                                                (split -7)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              nil)))))))))))))))))))))))))
                                     ("2" (expand "complete_MP")
                                      (("2" (propax) nil)))))))
                                 ("2"
                                  (apply (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                  (("1"
                                    (use "monitor_related_states_implies_same_lookup")
                                    (("1" (assert) nil)))
                                   ("2"
                                    (apply (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                    (("1" (skosimp*)
                                      (("1"
                                        (inst
                                         -6
                                         "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst? -6 :where (-3 -9))))
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (use
                                                   "monitor_related_states_implies_same_exception")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (apply
                                                       (branch
                                                        (split -5)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      nil)))))))))))))))))
                                     ("2"
                                      (apply
                                       (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst-cp -7 "(m1!1, m1!2)")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (apply
                                               (repeat
                                                (inst? -8 :where (-3 -11))))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (use
                                                     "monitor_related_states_implies_same_exception")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (apply
                                                         (branch
                                                          (split -5)
                                                          ((then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))))
                                                        (("1"
                                                          (replace -10)
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -1)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (inst
                                                               -10
                                                               "(m2!1, m2!2)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (repeat
                                                                    (inst?
                                                                     -10
                                                                     :where
                                                                     (-3
                                                                      -16))))
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (use
                                                                         "monitor_related_states_implies_same_exception")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (branch
                                                                              (split
                                                                               -5)
                                                                              ((then
                                                                                (flatten)
                                                                                (assert)
                                                                                (flatten)
                                                                                (assert)))))
                                                                            nil)))))))))))))))
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -15)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              nil)))))))))))))))))))))))
                                       ("2"
                                        (apply
                                         (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (inst-cp -7 "(m1!1, m1!2)")
                                            (("1"
                                              (inst -7 "(m2!1, m2!2)")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (apply
                                                   (repeat
                                                    (inst?
                                                     -8
                                                     :where
                                                     (-3 -11))))
                                                  (("1"
                                                    (apply
                                                     (repeat
                                                      (inst?
                                                       -7
                                                       :where
                                                       (-4 -12))))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_implies_same_exception")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split -6)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  nil)))))))))))))))))))))))))
                                         ("2"
                                          (apply
                                           (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                          (("1"
                                            (use
                                             "monitor_related_states_implies_same_lookup")
                                            (("1" (assert) nil)))
                                           ("2"
                                            (apply
                                             (branch
                                              (split -1)
                                              ((then
                                                (flatten)
                                                (assert)
                                                (flatten)
                                                (assert)))))
                                            (("1"
                                              (use
                                               "get_address_same_in_monitor_related_states")
                                              (("1"
                                                (use
                                                 "get_dynamic_type_name_same_in_monitor_related_states")
                                                (("1" (assert) nil)))))
                                             ("2"
                                              (apply
                                               (branch
                                                (split -1)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (inst
                                                   -6
                                                   "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (apply
                                                       (repeat
                                                        (inst?
                                                         -6
                                                         :where
                                                         (-3 -9))))
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (use
                                                             "monitor_related_states_implies_same_exception")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split -5)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (replace
                                                                       -12)
                                                                      (("1"
                                                                        (expand
                                                                         "monitor_related_states")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (use
                                                                             "wf_update_PState"
                                                                             ("s1"
                                                                              "tau!1"))
                                                                            (("1"
                                                                              (use
                                                                               "wf_update_PState"
                                                                               ("s1"
                                                                                "tau!2"
                                                                                "p"
                                                                                "complete_MP(mp!1)"))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil)))))
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_state_update")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "derive_bottom_iff_exception_step")
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -1
                                                                                               :where
                                                                                               -8)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "defined?")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil)))))))))))))))))
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "update_PState")
                                                                                      (("2"
                                                                                        (use
                                                                                         "wf_state_update")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "derive_bottom_iff_exception_step")
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :where
                                                                                             -22)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "defined?")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))))))))
                                               ("2"
                                                (apply
                                                 (branch
                                                  (split -1)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (inst-cp
                                                     -7
                                                     "(m1!1, m1!2)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (apply
                                                         (repeat
                                                          (inst?
                                                           -8
                                                           :where
                                                           (-3 -11))))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_implies_same_exception")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split -5)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (inst
                                                                     -9
                                                                     "(m2!1, m2!2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -11)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -8
                                                                             :where
                                                                             (-2
                                                                              -14))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -8)
                                                                              (("1"
                                                                                (propax)
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil)
                                                                               ("3"
                                                                                (propax)
                                                                                nil)))))
                                                                           ("2"
                                                                            (skosimp*)
                                                                            (("2"
                                                                              (typepred
                                                                               "b!1")
                                                                              (("2"
                                                                                (use
                                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                                 ("b2"
                                                                                  "else_expr(b!1)"))
                                                                                (("2"
                                                                                  (expand
                                                                                   "<<")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil)))))))))
                                                                           ("3"
                                                                            (skosimp*)
                                                                            (("3"
                                                                              (use
                                                                               "wf_Body_preserved_by_proper_subterm"
                                                                               ("b2"
                                                                                "then_expr(b!1)"
                                                                                "b1"
                                                                                "b!1"))
                                                                              (("3"
                                                                                (expand
                                                                                 "<<")
                                                                                (("3"
                                                                                  (propax)
                                                                                  nil)))))))))))))))))))))))))))))))))
                                                 ("2"
                                                  (apply
                                                   (branch
                                                    (split -1)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("1"
                                                    (hide (1 2 3 4 5 6 7 8 9))
                                                    (("1"
                                                      (skosimp*)
                                                      (("1"
                                                        (inst-cp
                                                         -7
                                                         "(m1!1, m1!2)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -8
                                                               :where
                                                               (-3 -11))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst-cp
                                                                   -7
                                                                   "(m2!1, m2!2)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -8
                                                                         :where
                                                                         (-4
                                                                          -14))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (replace
                                                                             -9)
                                                                            (("1"
                                                                              (replace
                                                                               -11)
                                                                              (("1"
                                                                                (use
                                                                                 "monitor_related_states_implies_same_exception")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -6)
                                                                                      ((then
                                                                                        (flatten)
                                                                                        (assert)
                                                                                        (flatten)
                                                                                        (assert)))))
                                                                                    (("1"
                                                                                      (replace
                                                                                       -24)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -3)
                                                                                        (("1"
                                                                                          (use
                                                                                           "monitor_related_states_preserved_by_raise")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))))))
                                                                                     ("2"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         -17)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      (("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -1)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("2"
                                                                                          (case-replace
                                                                                           "md!1 = md!2")
                                                                                          (("1"
                                                                                            (case
                                                                                             "monitor_related_states(mp!1)(tau3!1, tau3!2)")
                                                                                            (("1"
                                                                                              (case
                                                                                               "monitor_related_states(mp!1)(tau4!1, tau4!2)")
                                                                                              (("1"
                                                                                                (inst-cp
                                                                                                 -31
                                                                                                 "(m4!1, m4!2)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -32
                                                                                                       :where
                                                                                                       (-9
                                                                                                        -19))))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -31
                                                                                                           "(m5!1, m5!2)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (repeat
                                                                                                                (inst?
                                                                                                                 -32
                                                                                                                 :where
                                                                                                                 (-11
                                                                                                                  -21))))
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "monitor_related_states_implies_same_exception"
                                                                                                                     ("s1"
                                                                                                                      "tau6!1"
                                                                                                                      "s2"
                                                                                                                      "tau6!2"))
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "monitor_related_states(mp!1)(tau7!1, tau7!2)")
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "monitor_related_states_implies_same_exception")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               4)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -27)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -17)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "monitor_related_states")
                                                                                                                                    (("1"
                                                                                                                                      (use
                                                                                                                                       "wf_update_PState"
                                                                                                                                       ("s1"
                                                                                                                                        "tau7!1"))
                                                                                                                                      (("1"
                                                                                                                                        (use
                                                                                                                                         "wf_update_PState"
                                                                                                                                         ("s1"
                                                                                                                                          "tau7!2"
                                                                                                                                          "p"
                                                                                                                                          "complete_MP(mp!1)"))
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -2)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "update_PState")
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil)))))
                                                                                                                                                   ("2"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "update_PState")
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -33)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "wf_state"
                                                                                                                                                           (-62
                                                                                                                                                            1
                                                                                                                                                            -5))
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "wf_state"
                                                                                                                                                             (-62
                                                                                                                                                              1
                                                                                                                                                              -5))
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "is_local")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "is_field")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skosimp*)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?
                                                                                                                                                                         -65)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst?
                                                                                                                                                                           -6)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (prop)
                                                                                                                                                                            nil)))))))))))))))))))))))))))
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "update_PState")
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -22)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_state"
                                                                                                                                                         (-63
                                                                                                                                                          1
                                                                                                                                                          -6))
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "wf_state"
                                                                                                                                                           (-63
                                                                                                                                                            1
                                                                                                                                                            -6))
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "is_local")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "is_field")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skosimp*)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?
                                                                                                                                                                       -66)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?
                                                                                                                                                                         -7)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (prop)
                                                                                                                                                                          nil)))))))))))))))))))))))))))))))))))))))))))
                                                                                                                               ("2"
                                                                                                                                (apply
                                                                                                                                 (branch
                                                                                                                                  (split
                                                                                                                                   -26)
                                                                                                                                  ((then
                                                                                                                                    (flatten)
                                                                                                                                    (assert)
                                                                                                                                    (flatten)
                                                                                                                                    (assert)))))
                                                                                                                                nil)))))))
                                                                                                                         ("2"
                                                                                                                          (apply
                                                                                                                           (branch
                                                                                                                            (split
                                                                                                                             -13)
                                                                                                                            ((then
                                                                                                                              (flatten)
                                                                                                                              (assert)
                                                                                                                              (flatten)
                                                                                                                              (assert)))))
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -36)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -3
                                                                                                                                -4
                                                                                                                                -25
                                                                                                                                -34
                                                                                                                                -35
                                                                                                                                1
                                                                                                                                -44
                                                                                                                                -30))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "on_method_exit_normal_MP")
                                                                                                                                (("1"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "check_assertion")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("1"
                                                                                                                                        (inst-cp
                                                                                                                                         -28
                                                                                                                                         "(m1!4, m1!3)")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (apply
                                                                                                                                             (repeat
                                                                                                                                              (inst?
                                                                                                                                               -29
                                                                                                                                               :where
                                                                                                                                               (-3
                                                                                                                                                -16))))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "monitor_related_states(mp!1)(tau2!4, tau2!3)")
                                                                                                                                                  (("1"
                                                                                                                                                    (case-replace
                                                                                                                                                     "inv!2 = inv!1")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst-cp
                                                                                                                                                       -30
                                                                                                                                                       "(m2!4 - 1, m2!3 - 1)")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (apply
                                                                                                                                                           (repeat
                                                                                                                                                            (inst?
                                                                                                                                                             -31
                                                                                                                                                             :where
                                                                                                                                                             (-23
                                                                                                                                                              -10))))
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -32)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "monitor_related_states(mp!1)(tau3!4, tau3!3)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -31
                                                                                                                                                                     "(m3!4 - 1, m3!3 - 1)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (apply
                                                                                                                                                                         (repeat
                                                                                                                                                                          (inst?
                                                                                                                                                                           -31
                                                                                                                                                                           :where
                                                                                                                                                                           (-27
                                                                                                                                                                            -14))))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -32)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -15)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -28)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (split
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil)))))))))))))))))))))))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -11)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -24)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (use
                                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil)))))))))))))))))))))))))))))
                                                                                                                                                     ("2"
                                                                                                                                                      (replace
                                                                                                                                                       -20)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -7)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "lookup_inv")
                                                                                                                                                          (("2"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "complete_MP")
                                                                                                                                                                (("2"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil)))))))))))))))
                                                                                                                                                   ("2"
                                                                                                                                                    (replace
                                                                                                                                                     -5)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -18)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "monitor_related_states")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (split
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (use
                                                                                                                                                                 "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil)))
                                                                                                                                                               ("2"
                                                                                                                                                                (use
                                                                                                                                                                 "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "complete_MP(mp!1)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "wf_and_complete_MP")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (propax)
                                                                                                                                                                        nil)))))))))
                                                                                                                                                               ("3"
                                                                                                                                                                (use
                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                (("3"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil)))
                                                                                                                                                               ("4"
                                                                                                                                                                (use
                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                (("4"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil)))
                                                                                                                                                               ("5"
                                                                                                                                                                (expand
                                                                                                                                                                 "on_method_MVA")
                                                                                                                                                                (("5"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil)))
                                                                                                                                                               ("6"
                                                                                                                                                                (expand
                                                                                                                                                                 "on_method_MVA")
                                                                                                                                                                (("6"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil)))))))))))))))))))))))))))))))))))))))
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              -2
                                                                                                                              -23
                                                                                                                              -33
                                                                                                                              1
                                                                                                                              2
                                                                                                                              -32))
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "on_method_exit_exceptional_MP")
                                                                                                                              (("2"
                                                                                                                                (apply
                                                                                                                                 (branch
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  ((then
                                                                                                                                    (flatten)
                                                                                                                                    (assert)
                                                                                                                                    (flatten)
                                                                                                                                    (assert)))))
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -18
                                                                                                                                     "(m1!4, m1!3)")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -9)
                                                                                                                                        (("2"
                                                                                                                                          (apply
                                                                                                                                           (repeat
                                                                                                                                            (inst?
                                                                                                                                             -19
                                                                                                                                             :where
                                                                                                                                             (-2
                                                                                                                                              -11))))
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (split
                                                                                                                                               -19)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "monitor_related_states(mp!1)(tau2!4, tau2!3)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (case-replace
                                                                                                                                                       "inv!1 = inv!2")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "check_assertion")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -26
                                                                                                                                                             "(m2!4 - 1, m2!3 - 1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (apply
                                                                                                                                                                 (repeat
                                                                                                                                                                  (inst?
                                                                                                                                                                   -26
                                                                                                                                                                   :where
                                                                                                                                                                   (-11
                                                                                                                                                                    -22))))
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "monitor_related_states(mp!1)(tau3!4, tau3!3)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -14)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -25)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (use
                                                                                                                                                                               "monitor_related_states_implies_same_exception")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       3)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil)))))))))))))))))))))
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -27)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -12)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -23)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil)))))))))))))))))))))))))))
                                                                                                                                                             ("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (assert)
                                                                                                                                                              nil)))))))
                                                                                                                                                       ("2"
                                                                                                                                                        (replace
                                                                                                                                                         -8)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -17)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "lookup_inv")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "complete_MP")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil)))))))))))))
                                                                                                                                                   ("2"
                                                                                                                                                    (replace
                                                                                                                                                     -6)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -15)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "monitor_related_states")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (split
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (use
                                                                                                                                                               "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil)))
                                                                                                                                                             ("2"
                                                                                                                                                              (use
                                                                                                                                                               "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "complete_MP(mp!1)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "wf_and_complete_MP")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil)))))))))
                                                                                                                                                             ("3"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                nil)))
                                                                                                                                                             ("4"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                              (("4"
                                                                                                                                                                (assert)
                                                                                                                                                                nil)))
                                                                                                                                                             ("5"
                                                                                                                                                              (expand
                                                                                                                                                               "on_method_MVA")
                                                                                                                                                              (("5"
                                                                                                                                                                (assert)
                                                                                                                                                                nil)))
                                                                                                                                                             ("6"
                                                                                                                                                              (expand
                                                                                                                                                               "on_method_MVA")
                                                                                                                                                              (("6"
                                                                                                                                                                (assert)
                                                                                                                                                                nil)))))))))))))))))
                                                                                                                                               ("2"
                                                                                                                                                (use
                                                                                                                                                 "monitor_related_states_preserved_by_catch")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (1
                                                                                                  -1
                                                                                                  -7
                                                                                                  -17
                                                                                                  -30))
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "monitor_related_states_implies_same_exception"
                                                                                                   ("s1"
                                                                                                    "tau3!1"
                                                                                                    "s2"
                                                                                                    "tau3!2"))
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "on_method_entry_MP")
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "monitor_related_states(mp!1)(s_new!2, s_new!1)")
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "monitor_related_states_implies_same_exception")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (apply
                                                                                                                 (branch
                                                                                                                  (split
                                                                                                                   -6)
                                                                                                                  ((then
                                                                                                                    (flatten)
                                                                                                                    (assert)
                                                                                                                    (flatten)
                                                                                                                    (assert)))))
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -8)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "monitor_related_states")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           3)
                                                                                                                          (("1"
                                                                                                                            (use
                                                                                                                             "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("2"
                                                                                                                            (use
                                                                                                                             "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "complete_MP(mp!1)")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "wf_and_complete_MP")
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil)))))))))
                                                                                                                           ("3"
                                                                                                                            (use
                                                                                                                             "on_method_MVA_yields_wf_state")
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("4"
                                                                                                                            (use
                                                                                                                             "on_method_MVA_yields_wf_state")
                                                                                                                            (("4"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("5"
                                                                                                                            (expand
                                                                                                                             "on_method_MVA")
                                                                                                                            (("5"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("6"
                                                                                                                            (expand
                                                                                                                             "on_method_MVA")
                                                                                                                            (("6"
                                                                                                                              (assert)
                                                                                                                              nil)))))))))))))))))))
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "on_method_entry")
                                                                                                            (("2"
                                                                                                              (apply
                                                                                                               (branch
                                                                                                                (split
                                                                                                                 -3)
                                                                                                                ((then
                                                                                                                  (flatten)
                                                                                                                  (assert)
                                                                                                                  (flatten)
                                                                                                                  (assert)))))
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "check_assertion")
                                                                                                                  (("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (case-replace
                                                                                                                       "inv!1 = inv!2")
                                                                                                                      (("1"
                                                                                                                        (inst-cp
                                                                                                                         -28
                                                                                                                         "(m1!4 - 1, m1!3 - 1)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (apply
                                                                                                                             (repeat
                                                                                                                              (inst?
                                                                                                                               -29
                                                                                                                               :where
                                                                                                                               (-5
                                                                                                                                -19))))
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -30)
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "monitor_related_states(mp!1)(tau1!4, tau1!3)")
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       -29
                                                                                                                                       "(m2!4 - 1,  m2!3 - 1)")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (apply
                                                                                                                                           (repeat
                                                                                                                                            (inst?
                                                                                                                                             -30
                                                                                                                                             :where
                                                                                                                                             (-9
                                                                                                                                              -23))))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "monitor_related_states(mp!1)(tau2!4, tau2!3)")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -30
                                                                                                                                                   "(m3!4, m3!3)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (apply
                                                                                                                                                       (repeat
                                                                                                                                                        (inst?
                                                                                                                                                         -30
                                                                                                                                                         :where
                                                                                                                                                         (-12
                                                                                                                                                          -26))))
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil)))))))
                                                                                                                                                 ("2"
                                                                                                                                                  (replace
                                                                                                                                                   -10)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -24)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -31)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (split
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (propax)
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (skosimp*)
                                                                                                                                                              (("2"
                                                                                                                                                                (use
                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil)))))))))))))))))))))))))))))
                                                                                                                                     ("2"
                                                                                                                                      (replace
                                                                                                                                       -6)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -23)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -20)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (split
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("2"
                                                                                                                                                    (use
                                                                                                                                                     "monitor_related_states_preserved_by_raise")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil)))))))))))))))))))))))))))))
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (assert)
                                                                                                                          nil)))
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -16)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "lookup_inv")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "complete_MP")
                                                                                                                              (("2"
                                                                                                                                (propax)
                                                                                                                                nil)))))))))))))))))))))))))))))))))))
                                                                                             ("2"
                                                                                              (replace
                                                                                               -4)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -15)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "monitor_related_states")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "complete_MP")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "get_class_in_classes")
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "up?(get_class(program(mp!1))(a!2))")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               " FORALL (l: Decl[Name]):
                                                                                     lvars(md!2)(l) IMPLIES getLocalDecls(program(mp!1))(l)")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "getLocalDecls[Name](program(mp!1))(arg(md!2))")
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "wf_state_update_stack")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "wf_state_update_stack"
                                                                                                                           ("s"
                                                                                                                            "tau2!2"))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "update_stack")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil)))))))))
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil)))))
                                                                                                                           ("2"
                                                                                                                            (use
                                                                                                                             "complete_MVA_is_complete")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "good_for_monitoring")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "complete")
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil)))))))))
                                                                                                                           ("3"
                                                                                                                            (use
                                                                                                                             "complete_MVA_yields_wf_MVA")
                                                                                                                            nil)))))
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil)))))))
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "getLocalDecls")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "down(get_class(program(mp!1))(a!2))")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "getLocalDecls")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "md!2")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (apply
                                                                                                                                   (branch
                                                                                                                                    (split
                                                                                                                                     -6)
                                                                                                                                    ((then
                                                                                                                                      (flatten)
                                                                                                                                      (assert)
                                                                                                                                      (flatten)
                                                                                                                                      (assert)))))
                                                                                                                                  nil)))))))))))))))))))
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "getLocalDecls")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "down(get_class(program(mp!1))(a!2))")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "getLocalDecls")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "md!2")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (apply
                                                                                                                                   (branch
                                                                                                                                    (split
                                                                                                                                     -6)
                                                                                                                                    ((then
                                                                                                                                      (flatten)
                                                                                                                                      (assert)
                                                                                                                                      (flatten)
                                                                                                                                      (assert)))))
                                                                                                                                  nil)))))))))))))))))))))))
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "lookup_mthd")
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))
                                                                                           ("2"
                                                                                            (apply
                                                                                             (branch
                                                                                              (split
                                                                                               -1)
                                                                                              ((then
                                                                                                (flatten)
                                                                                                (assert)
                                                                                                (flatten)
                                                                                                (assert)))))
                                                                                            (("2"
                                                                                              (apply
                                                                                               (branch
                                                                                                (split
                                                                                                 -13)
                                                                                                ((then
                                                                                                  (flatten)
                                                                                                  (assert)
                                                                                                  (flatten)
                                                                                                  (assert)))))
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "complete_MP")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil)))))))))))))))))))))))))))))))))))))))))))))))))))
                                                   ("2"
                                                    (apply
                                                     (branch
                                                      (split -1)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    (("2"
                                                      (apply
                                                       (branch
                                                        (split -1)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      (("1"
                                                        (expand
                                                         "execute_CaseJML")
                                                        (("1"
                                                          (expand "extend")
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -3)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (apply
                                                                 (branch
                                                                  (split -2)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split
                                                                     -12)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  nil)
                                                                 ("2"
                                                                  (apply
                                                                   (branch
                                                                    (split
                                                                     -11)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("2"
                                                                    (inst
                                                                     -12
                                                                     "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -12
                                                                           :where
                                                                           (-3
                                                                            -6))))
                                                                        (("2"
                                                                          (assert)
                                                                          nil)))))))))))))))))))
                                                       ("2"
                                                        (apply
                                                         (branch
                                                          (split -1)
                                                          ((then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))))
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst-cp
                                                             -8
                                                             "(m1!1, m1!2)")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (apply
                                                                 (repeat
                                                                  (inst?
                                                                   -9
                                                                   :where
                                                                   (-4 -13))))
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (use
                                                                     "monitor_related_states_implies_same_exception")
                                                                    (("1"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -6)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))))
                                                                      (("1"
                                                                        (replace
                                                                         -12)
                                                                        (("1"
                                                                          (inst
                                                                           -9
                                                                           "(m2!1, m2!2)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (repeat
                                                                                (inst?
                                                                                 -9
                                                                                 :where
                                                                                 (-2
                                                                                  -16))))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -9)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil)
                                                                                   ("2"
                                                                                    (propax)
                                                                                    nil)
                                                                                   ("3"
                                                                                    (propax)
                                                                                    nil)))))
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (use
                                                                                   "wf_Body_preserved_by_proper_subterm"
                                                                                   ("b2"
                                                                                    "else_stmt(b!1)"
                                                                                    "b1"
                                                                                    "b!1"))
                                                                                  (("2"
                                                                                    (expand
                                                                                     "<<")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil)))))))
                                                                               ("3"
                                                                                (skosimp*)
                                                                                (("3"
                                                                                  (use
                                                                                   "wf_Body_preserved_by_proper_subterm"
                                                                                   ("b2"
                                                                                    "then_stmt(b!1)"
                                                                                    "b1"
                                                                                    "b!1"))
                                                                                  (("3"
                                                                                    (expand
                                                                                     "<<")
                                                                                    (("3"
                                                                                      (propax)
                                                                                      nil)))))))))))))))))))))))))))))
                                                         ("2"
                                                          (apply
                                                           (branch
                                                            (split -1)
                                                            ((then
                                                              (flatten)
                                                              (assert)
                                                              (flatten)
                                                              (assert)))))
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (inst-cp
                                                               -8
                                                               "(m1!1, m1!2)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -8
                                                                   "(m2!1, m2!2)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -9
                                                                         :where
                                                                         (-4
                                                                          -13))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -8
                                                                             :where
                                                                             (-6
                                                                              -15))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (assert)
                                                                                nil)))))))))))))))))))))
                                                           ("2"
                                                            (apply
                                                             (branch
                                                              (split -1)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (expand
                                                               "execute_set")
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   -8
                                                                   "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -8
                                                                         :where
                                                                         (-4
                                                                          -12))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (use
                                                                             "monitor_related_states_implies_same_exception")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (apply
                                                                                   (branch
                                                                                    (split
                                                                                     -6)
                                                                                    ((then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (flatten)
                                                                                      (assert)))))
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -15)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "monitor_related_states")
                                                                                        (("1"
                                                                                          (use
                                                                                           "wf_update_GhostVars")
                                                                                          (("1"
                                                                                            (use
                                                                                             "wf_update_GhostVars"
                                                                                             ("s1"
                                                                                              "tau!2"
                                                                                              "p"
                                                                                              "complete_MP(mp!1)"))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "update_GhostVars")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "return_of_stmt")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil)))))))))))
                                                                                                   ("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_GhostVars")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_ghoststate")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "is_ghost")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "update_store")
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (lift-if)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (skosimp*)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "derive_bottom_iff_exception_step")
                                                                                                                          (("1"
                                                                                                                            (inst?
                                                                                                                             -1
                                                                                                                             :where
                                                                                                                             -11)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "defined?")
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "b!1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "wf_Body")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (inst?
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "subterm")
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (auto-rewrite
                                                                                                                                               "union"
                                                                                                                                               "member"
                                                                                                                                               "add")
                                                                                                                                              (("1"
                                                                                                                                                (rewrite
                                                                                                                                                 "var_names"
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)))))))))))))))))))))))))))
                                                                                                                       ("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (prop)
                                                                                                                            nil)))))))))))))))))))))))))
                                                                                                   ("3"
                                                                                                    (skosimp*)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "update_GhostVars")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_ghoststate")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "is_ghost")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "update_store")
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (lift-if)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "derive_bottom_iff_exception_step")
                                                                                                                      (("1"
                                                                                                                        (inst?
                                                                                                                         -1
                                                                                                                         :where
                                                                                                                         -27)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "defined?")
                                                                                                                            (("1"
                                                                                                                              (use
                                                                                                                               "complete_MP_preserves_wf_body")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "wf_Body")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (inst?
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "subterm")
                                                                                                                                      (("1"
                                                                                                                                        (inst?)
                                                                                                                                        (("1"
                                                                                                                                          (auto-rewrite
                                                                                                                                           "union"
                                                                                                                                           "member"
                                                                                                                                           "add")
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "var_names"
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil)))))))))))))))))))))))))))
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil)))))))))))))))))))))))
                                                                                                 ("3"
                                                                                                  (flatten)
                                                                                                  nil)))))))))))))))))))))))))))))))))))))
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -1)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              (("1"
                                                                (use
                                                                 "monitor_related_states_implies_same_exception")
                                                                (("1"
                                                                  (expand
                                                                   "return_of_stmt")
                                                                  (("1"
                                                                    (assert)
                                                                    nil)))))
                                                               ("2"
                                                                (apply
                                                                 (branch
                                                                  (split -1)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     -6
                                                                     "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -6
                                                                           :where
                                                                           (-4
                                                                            -10))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_implies_same_exception")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "return_of_stmt")
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         -4)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      nil)))))))))))))))))))))
                                                                 ("2"
                                                                  (apply
                                                                   (branch
                                                                    (split -1)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (replace
                                                                       -10)
                                                                      (("1"
                                                                        (case
                                                                         "monitor_related_states(mp!1)
                                                                                                                                                          (update_PState(s1a!1, raise(exc(b!1))),
                                                                                                                                                           update_PState(s1b!1, raise(exc(b!1))))")
                                                                        (("1"
                                                                          (use
                                                                           "monitor_related_states_implies_same_exception")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "return_of_stmt")
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (apply
                                                                                   (branch
                                                                                    (split
                                                                                     -5)
                                                                                    ((then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (flatten)
                                                                                      (assert)))))
                                                                                  nil)))))))))
                                                                         ("2"
                                                                          (use
                                                                           "monitor_related_states_preserved_by_raise")
                                                                          (("2"
                                                                            (assert)
                                                                            nil)))))))))
                                                                   ("2"
                                                                    (apply
                                                                     (branch
                                                                      (split
                                                                       -1)
                                                                      ((then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))))
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (inst-cp
                                                                         -11
                                                                         "(m1!1, m1!2)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -12
                                                                               :where
                                                                               (-4
                                                                                -16))))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_implies_same_exception")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (case
                                                                                       "monitor_related_states(mp!1)(tau2!1, tau2!2)")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -13
                                                                                         "(m3!1, m3!2)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (apply
                                                                                             (repeat
                                                                                              (inst?
                                                                                               -13
                                                                                               :where
                                                                                               (-9
                                                                                                -22))))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -13)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "monitor_related_states_implies_same_exception")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (branch
                                                                                                            (split
                                                                                                             -14)
                                                                                                            ((then
                                                                                                              (flatten)
                                                                                                              (assert)
                                                                                                              (flatten)
                                                                                                              (assert)))))
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -26)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "monitor_related_states(mp!1)
                                                                                                                                                                            (update_PState(tau3!1,
                                                                                                                                                                                           LAMBDA
                                                                                                                                                                                           (ptau3: PState[Name]):
                                                                                                                                                                                           ptau3
                                                                                                                                                                                           WITH [ex
                                                                                                                                                                                                 := ex(pstate(tau2!1))]),
                                                                                                                                                                             update_PState(tau3!2,
                                                                                                                                                                                           LAMBDA
                                                                                                                                                                                           (ptau3_1: PState[Name]):
                                                                                                                                                                                           ptau3_1
                                                                                                                                                                                           WITH [ex
                                                                                                                                                                                                 := ex(pstate(tau2!2))]))")
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "monitor_related_states_implies_same_exception")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "return_of_stmt")
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (apply
                                                                                                                           (branch
                                                                                                                            (split
                                                                                                                             -21)
                                                                                                                            ((then
                                                                                                                              (flatten)
                                                                                                                              (assert)
                                                                                                                              (flatten)
                                                                                                                              (assert)))))
                                                                                                                          nil)))))))))
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "monitor_related_states")
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "wf_update_PState"
                                                                                                                     ("s1"
                                                                                                                      "tau3!1"))
                                                                                                                    (("2"
                                                                                                                      (use
                                                                                                                       "wf_update_PState"
                                                                                                                       ("s1"
                                                                                                                        "tau3!2"
                                                                                                                        "p"
                                                                                                                        "complete_MP(mp!1)"))
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil)))))
                                                                                                                                 ("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "wf_state")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "is_local")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "is_field")
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil)))))))))))))
                                                                                                                               ("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "update_PState")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "wf_state")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "is_local")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "is_field")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil)))))))))))))))))))))))))))))))))))))))))
                                                                                                 ("2"
                                                                                                  (use
                                                                                                   "monitor_related_states_preserved_by_catch")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil)))))))))))))
                                                                                       ("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -7)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (inst
                                                                                           -15
                                                                                           "(m2!1, m2!2)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -15
                                                                                                 :where
                                                                                                 (-3
                                                                                                  -23))))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "monitor_related_states_preserved_by_catch")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil)))))))))))
                                                                                         ("2"
                                                                                          (apply
                                                                                           (branch
                                                                                            (split
                                                                                             -21)
                                                                                            ((then
                                                                                              (flatten)
                                                                                              (assert)
                                                                                              (flatten)
                                                                                              (assert)))))
                                                                                          nil)))))))))))))))))))))
                                                                     ("2"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -1)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))))
                                                                      (("1"
                                                                        (inst
                                                                         -6
                                                                         "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -6
                                                                               :where
                                                                               (-4
                                                                                -10))))
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))))
                                                                       ("2"
                                                                        (expand
                                                                         "execute_assert")
                                                                        (("2"
                                                                          (expand
                                                                           "check_assertion")
                                                                          (("2"
                                                                            (skosimp*)
                                                                            (("2"
                                                                              (inst
                                                                               -7
                                                                               "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (apply
                                                                                   (repeat
                                                                                    (inst?
                                                                                     -7
                                                                                     :where
                                                                                     (-3
                                                                                      -11))))
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -8)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (apply
                                                                                               (branch
                                                                                                (split
                                                                                                 -4)
                                                                                                ((then
                                                                                                  (flatten)
                                                                                                  (assert)
                                                                                                  (flatten)
                                                                                                  (assert)))))
                                                                                              (("1"
                                                                                                (use
                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "return_of_stmt")
                                                                                                  (("1"
                                                                                                    (lift-if)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (apply
                                                                                                         (branch
                                                                                                          (split
                                                                                                           -6)
                                                                                                          ((then
                                                                                                            (flatten)
                                                                                                            (assert)
                                                                                                            (flatten)
                                                                                                            (assert)))))
                                                                                                        nil)))))))))
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (branch
                                                                                                    (split
                                                                                                     -13)
                                                                                                    ((then
                                                                                                      (flatten)
                                                                                                      (assert)
                                                                                                      (flatten)
                                                                                                      (assert)))))
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "monitor_related_states(mp!1)
                                                                                                                                                                            (update_PState(tau1!1, raise(JMLExc)),
                                                                                                                                                                             update_PState(tau1!2, raise(JMLExc)))")
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "monitor_related_states_implies_same_exception")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "return_of_stmt")
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (branch
                                                                                                                (split
                                                                                                                 -14)
                                                                                                                ((then
                                                                                                                  (flatten)
                                                                                                                  (assert)
                                                                                                                  (flatten)
                                                                                                                  (assert)))))
                                                                                                              nil)))))))
                                                                                                       ("2"
                                                                                                        (use
                                                                                                         "monitor_related_states_preserved_by_raise")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
         ("2" (skosimp*)
          (("2" (expand "complete_MP") (("2" (propax) nil)))))))
       ("2" (lemma "well_founded?_product")
        (("2"
          (inst -1 "LAMBDA(i, j : nat) : i < j" "LAMBDA(i, j : nat) : i < j")
          (("2" (assert) (("2" (use "wf_nat") (("2" (assert) nil))))))))))))
    ";;; developed with shostak decision procedures")
   unchecked nil nil nil nil nil)
  (monitor_related_states_preserved_by_derive-2 nil 3413707232 3428746743
   ("" (skolem 1 ("mp!1" _ _ _))
    ((""
      (lemma
       "wf_induction[[nat, nat], LAMBDA(i, j : [nat, nat]) : proj_1(i) < proj_1(j) AND proj_2(i) < proj_2(j)]")
      (("1"
        (inst -1
         "LAMBDA(x : [nat, nat]) : FORALL (b: (wf_Body(program(mp!1))), v1, v2: Val)
                             (s1a, s1b, s2a, s2b: MPState) :
                         monitor_related_states(mp!1)(s1a, s1b) IMPLIES
                          derive(mp!1)(b, s1a, v1, s2a)(proj_1(x)) IMPLIES
                           derive(complete_MP(mp!1))(b, s1b, v2, s2b)(proj_2(x)) IMPLIES
                            monitor_related_states(mp!1)(s2a, s2b) AND v1 = v2")
        (("1" (split -1)
          (("1" (skosimp*)
            (("1" (inst -1 "(n1!1, n2!1)")
              (("1" (assert)
                (("1" (apply (repeat (inst? -1))) (("1" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (skosimp*)
              (("2" (use "monitor_related_states_implies_same_exception")
                (("2" (assert)
                  (("2" (expand "derive" (-5 -4))
                    (("2" (assert)
                      (("2"
                        (apply (branch (split -4)
                                ((then (flatten) (assert) (flatten)
                                  (assert)))))
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2"
                              (expand* "check_for_exception_final"
                               "check_for_exception")
                              (("2"
                                (apply (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                (("1" (skosimp*)
                                  (("1" (copy -7)
                                    (("1" (inst -1 "(m1!1, m1!2)")
                                      (("1"
                                        (inst -8 "(m2!1, m2!2)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst? -1 :where (-4 -11))))
                                            (("1"
                                              (apply
                                               (repeat
                                                (inst? -8 :where (-5 -12))))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (hide -1)
                                                        (("1"
                                                          (use
                                                           "monitor_related_states_implies_same_exception")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (branch
                                                                (split -7)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (expand "complete_MP")
                                      (("2" (propax) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (apply (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                  (("1"
                                    (use "monitor_related_states_implies_same_lookup")
                                    (("1" (assert) nil nil)) nil)
                                   ("2"
                                    (apply (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                    (("1" (skosimp*)
                                      (("1"
                                        (inst
                                         -6
                                         "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst? -6 :where (-3 -9))))
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (use
                                                   "monitor_related_states_implies_same_exception")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (apply
                                                       (branch
                                                        (split -5)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (apply
                                       (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst-cp -7 "(m1!1, m1!2)")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (apply
                                               (repeat
                                                (inst? -8 :where (-3 -11))))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (use
                                                     "monitor_related_states_implies_same_exception")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (apply
                                                         (branch
                                                          (split -5)
                                                          ((then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))))
                                                        (("1"
                                                          (replace -10)
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -1)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (inst
                                                               -10
                                                               "(m2!1, m2!2)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (repeat
                                                                    (inst?
                                                                     -10
                                                                     :where
                                                                     (-3
                                                                      -16))))
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (use
                                                                         "monitor_related_states_implies_same_exception")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (branch
                                                                              (split
                                                                               -5)
                                                                              ((then
                                                                                (flatten)
                                                                                (assert)
                                                                                (flatten)
                                                                                (assert)))))
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -15)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply
                                         (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (inst-cp -7 "(m1!1, m1!2)")
                                            (("1"
                                              (inst -7 "(m2!1, m2!2)")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (apply
                                                   (repeat
                                                    (inst?
                                                     -8
                                                     :where
                                                     (-3 -11))))
                                                  (("1"
                                                    (apply
                                                     (repeat
                                                      (inst?
                                                       -7
                                                       :where
                                                       (-4 -12))))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_implies_same_exception")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split -6)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (apply
                                           (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                          (("1"
                                            (use
                                             "monitor_related_states_implies_same_lookup")
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (apply
                                             (branch
                                              (split -1)
                                              ((then
                                                (flatten)
                                                (assert)
                                                (flatten)
                                                (assert)))))
                                            (("1"
                                              (use
                                               "get_address_same_in_monitor_related_states")
                                              (("1"
                                                (use
                                                 "get_dynamic_type_name_same_in_monitor_related_states")
                                                (("1" (assert) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (apply
                                               (branch
                                                (split -1)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (inst
                                                   -6
                                                   "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (apply
                                                       (repeat
                                                        (inst?
                                                         -6
                                                         :where
                                                         (-3 -9))))
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (use
                                                             "monitor_related_states_implies_same_exception")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split -5)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (replace
                                                                       -12)
                                                                      (("1"
                                                                        (expand
                                                                         "monitor_related_states")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (use
                                                                             "wf_update_PState"
                                                                             ("s1"
                                                                              "tau!1"))
                                                                            (("1"
                                                                              (use
                                                                               "wf_update_PState"
                                                                               ("s1"
                                                                                "tau!2"
                                                                                "p"
                                                                                "complete_MP(mp!1)"))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_state_update")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "derive_bottom_iff_exception_step")
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -1
                                                                                               :where
                                                                                               -8)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "defined?")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "update_PState")
                                                                                      (("2"
                                                                                        (use
                                                                                         "wf_state_update")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "derive_bottom_iff_exception_step")
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :where
                                                                                             -22)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "defined?")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (apply
                                                 (branch
                                                  (split -1)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (inst-cp
                                                     -7
                                                     "(m1!1, m1!2)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (apply
                                                         (repeat
                                                          (inst?
                                                           -8
                                                           :where
                                                           (-3 -11))))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_implies_same_exception")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split -5)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (inst
                                                                     -9
                                                                     "(m2!1, m2!2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -11)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -8
                                                                             :where
                                                                             (-2
                                                                              -14))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -8)
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil)
                                                                               ("3"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (skosimp*)
                                                                            (("2"
                                                                              (typepred
                                                                               "b!1")
                                                                              (("2"
                                                                                (use
                                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                                 ("b2"
                                                                                  "else_expr(b!1)"))
                                                                                (("2"
                                                                                  (expand
                                                                                   "<<")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (skosimp*)
                                                                            (("3"
                                                                              (use
                                                                               "wf_Body_preserved_by_proper_subterm"
                                                                               ("b2"
                                                                                "then_expr(b!1)"
                                                                                "b1"
                                                                                "b!1"))
                                                                              (("3"
                                                                                (expand
                                                                                 "<<")
                                                                                (("3"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (apply
                                                   (branch
                                                    (split -1)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("1"
                                                    (hide (1 2 3 4 5 6 7 8 9))
                                                    (("1"
                                                      (skosimp*)
                                                      (("1"
                                                        (inst-cp
                                                         -7
                                                         "(m1!1, m1!2)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -8
                                                               :where
                                                               (-3 -11))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst-cp
                                                                   -7
                                                                   "(m2!1, m2!2)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -8
                                                                         :where
                                                                         (-4
                                                                          -14))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (replace
                                                                             -9)
                                                                            (("1"
                                                                              (replace
                                                                               -11)
                                                                              (("1"
                                                                                (use
                                                                                 "monitor_related_states_implies_same_exception")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -6)
                                                                                      ((then
                                                                                        (flatten)
                                                                                        (assert)
                                                                                        (flatten)
                                                                                        (assert)))))
                                                                                    (("1"
                                                                                      (replace
                                                                                       -24)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -3)
                                                                                        (("1"
                                                                                          (use
                                                                                           "monitor_related_states_preserved_by_raise")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         -17)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      (("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -1)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("2"
                                                                                          (case-replace
                                                                                           "md!1 = md!2")
                                                                                          (("1"
                                                                                            (case
                                                                                             "monitor_related_states(mp!1)(tau3!1, tau3!2)")
                                                                                            (("1"
                                                                                              (case
                                                                                               "monitor_related_states(mp!1)(tau4!1, tau4!2)")
                                                                                              (("1"
                                                                                                (inst-cp
                                                                                                 -31
                                                                                                 "(m4!1, m4!2)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -32
                                                                                                       :where
                                                                                                       (-9
                                                                                                        -19))))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -31
                                                                                                           "(m5!1, m5!2)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (repeat
                                                                                                                (inst?
                                                                                                                 -32
                                                                                                                 :where
                                                                                                                 (-11
                                                                                                                  -21))))
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "monitor_related_states_implies_same_exception"
                                                                                                                     ("s1"
                                                                                                                      "tau6!1"
                                                                                                                      "s2"
                                                                                                                      "tau6!2"))
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "monitor_related_states(mp!1)(tau7!1, tau7!2)")
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "monitor_related_states_implies_same_exception")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               4)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -27)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -17)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "monitor_related_states")
                                                                                                                                    (("1"
                                                                                                                                      (use
                                                                                                                                       "wf_update_PState"
                                                                                                                                       ("s1"
                                                                                                                                        "tau7!1"))
                                                                                                                                      (("1"
                                                                                                                                        (use
                                                                                                                                         "wf_update_PState"
                                                                                                                                         ("s1"
                                                                                                                                          "tau7!2"
                                                                                                                                          "p"
                                                                                                                                          "complete_MP(mp!1)"))
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -2)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "update_PState")
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "update_PState")
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -33)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "wf_state"
                                                                                                                                                           (-62
                                                                                                                                                            1
                                                                                                                                                            -5))
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "wf_state"
                                                                                                                                                             (-62
                                                                                                                                                              1
                                                                                                                                                              -5))
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "is_local")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "is_field")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skosimp*)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?
                                                                                                                                                                         -65)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst?
                                                                                                                                                                           -6)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (prop)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "update_PState")
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -22)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_state"
                                                                                                                                                         (-63
                                                                                                                                                          1
                                                                                                                                                          -6))
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "wf_state"
                                                                                                                                                           (-63
                                                                                                                                                            1
                                                                                                                                                            -6))
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "is_local")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "is_field")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skosimp*)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?
                                                                                                                                                                       -66)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?
                                                                                                                                                                         -7)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (prop)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (apply
                                                                                                                                 (branch
                                                                                                                                  (split
                                                                                                                                   -26)
                                                                                                                                  ((then
                                                                                                                                    (flatten)
                                                                                                                                    (assert)
                                                                                                                                    (flatten)
                                                                                                                                    (assert)))))
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (apply
                                                                                                                           (branch
                                                                                                                            (split
                                                                                                                             -13)
                                                                                                                            ((then
                                                                                                                              (flatten)
                                                                                                                              (assert)
                                                                                                                              (flatten)
                                                                                                                              (assert)))))
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -36)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -3
                                                                                                                                -4
                                                                                                                                -25
                                                                                                                                -34
                                                                                                                                -35
                                                                                                                                1
                                                                                                                                -44
                                                                                                                                -30))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "on_method_exit_normal_MP")
                                                                                                                                (("1"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "check_assertion")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("1"
                                                                                                                                        (inst-cp
                                                                                                                                         -28
                                                                                                                                         "(m1!4, m1!3)")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (apply
                                                                                                                                             (repeat
                                                                                                                                              (inst?
                                                                                                                                               -29
                                                                                                                                               :where
                                                                                                                                               (-3
                                                                                                                                                -16))))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "monitor_related_states(mp!1)(tau2!4, tau2!3)")
                                                                                                                                                  (("1"
                                                                                                                                                    (case-replace
                                                                                                                                                     "inv!2 = inv!1")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst-cp
                                                                                                                                                       -30
                                                                                                                                                       "(m2!4 - 1, m2!3 - 1)")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (apply
                                                                                                                                                           (repeat
                                                                                                                                                            (inst?
                                                                                                                                                             -31
                                                                                                                                                             :where
                                                                                                                                                             (-23
                                                                                                                                                              -10))))
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -32)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "monitor_related_states(mp!1)(tau3!4, tau3!3)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -31
                                                                                                                                                                     "(m3!4 - 1, m3!3 - 1)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (apply
                                                                                                                                                                         (repeat
                                                                                                                                                                          (inst?
                                                                                                                                                                           -31
                                                                                                                                                                           :where
                                                                                                                                                                           (-27
                                                                                                                                                                            -14))))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -32)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -15)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -28)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (split
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -11)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -24)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (use
                                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replace
                                                                                                                                                       -20)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -7)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "lookup_inv")
                                                                                                                                                          (("2"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "complete_MP")
                                                                                                                                                                (("2"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (replace
                                                                                                                                                     -5)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -18)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "monitor_related_states")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (split
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (use
                                                                                                                                                                 "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (use
                                                                                                                                                                 "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "complete_MP(mp!1)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "wf_and_complete_MP")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (propax)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("3"
                                                                                                                                                                (use
                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                (("3"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("4"
                                                                                                                                                                (use
                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                (("4"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("5"
                                                                                                                                                                (expand
                                                                                                                                                                 "on_method_MVA")
                                                                                                                                                                (("5"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("6"
                                                                                                                                                                (expand
                                                                                                                                                                 "on_method_MVA")
                                                                                                                                                                (("6"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              -2
                                                                                                                              -23
                                                                                                                              -33
                                                                                                                              1
                                                                                                                              2
                                                                                                                              -32))
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "on_method_exit_exceptional_MP")
                                                                                                                              (("2"
                                                                                                                                (apply
                                                                                                                                 (branch
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  ((then
                                                                                                                                    (flatten)
                                                                                                                                    (assert)
                                                                                                                                    (flatten)
                                                                                                                                    (assert)))))
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -18
                                                                                                                                     "(m1!4, m1!3)")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -9)
                                                                                                                                        (("2"
                                                                                                                                          (apply
                                                                                                                                           (repeat
                                                                                                                                            (inst?
                                                                                                                                             -19
                                                                                                                                             :where
                                                                                                                                             (-2
                                                                                                                                              -11))))
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (split
                                                                                                                                               -19)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "monitor_related_states(mp!1)(tau2!4, tau2!3)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (case-replace
                                                                                                                                                       "inv!1 = inv!2")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "check_assertion")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -26
                                                                                                                                                             "(m2!4 - 1, m2!3 - 1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (apply
                                                                                                                                                                 (repeat
                                                                                                                                                                  (inst?
                                                                                                                                                                   -26
                                                                                                                                                                   :where
                                                                                                                                                                   (-11
                                                                                                                                                                    -22))))
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "monitor_related_states(mp!1)(tau3!4, tau3!3)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -14)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -25)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (use
                                                                                                                                                                               "monitor_related_states_implies_same_exception")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       3)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -27)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -12)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -23)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replace
                                                                                                                                                         -8)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -17)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "lookup_inv")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "complete_MP")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (replace
                                                                                                                                                     -6)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -15)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "monitor_related_states")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (split
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (use
                                                                                                                                                               "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (use
                                                                                                                                                               "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "complete_MP(mp!1)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "wf_and_complete_MP")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("4"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                              (("4"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("5"
                                                                                                                                                              (expand
                                                                                                                                                               "on_method_MVA")
                                                                                                                                                              (("5"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("6"
                                                                                                                                                              (expand
                                                                                                                                                               "on_method_MVA")
                                                                                                                                                              (("6"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (use
                                                                                                                                                 "monitor_related_states_preserved_by_catch")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (1
                                                                                                  -1
                                                                                                  -7
                                                                                                  -17
                                                                                                  -30))
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "monitor_related_states_implies_same_exception"
                                                                                                   ("s1"
                                                                                                    "tau3!1"
                                                                                                    "s2"
                                                                                                    "tau3!2"))
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "on_method_entry_MP")
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "monitor_related_states(mp!1)(s_new!2, s_new!1)")
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "monitor_related_states_implies_same_exception")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (apply
                                                                                                                 (branch
                                                                                                                  (split
                                                                                                                   -6)
                                                                                                                  ((then
                                                                                                                    (flatten)
                                                                                                                    (assert)
                                                                                                                    (flatten)
                                                                                                                    (assert)))))
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -8)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "monitor_related_states")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           3)
                                                                                                                          (("1"
                                                                                                                            (use
                                                                                                                             "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (use
                                                                                                                             "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "complete_MP(mp!1)")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "wf_and_complete_MP")
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (use
                                                                                                                             "on_method_MVA_yields_wf_state")
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("4"
                                                                                                                            (use
                                                                                                                             "on_method_MVA_yields_wf_state")
                                                                                                                            (("4"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("5"
                                                                                                                            (expand
                                                                                                                             "on_method_MVA")
                                                                                                                            (("5"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("6"
                                                                                                                            (expand
                                                                                                                             "on_method_MVA")
                                                                                                                            (("6"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "on_method_entry")
                                                                                                            (("2"
                                                                                                              (apply
                                                                                                               (branch
                                                                                                                (split
                                                                                                                 -3)
                                                                                                                ((then
                                                                                                                  (flatten)
                                                                                                                  (assert)
                                                                                                                  (flatten)
                                                                                                                  (assert)))))
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "check_assertion")
                                                                                                                  (("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (case-replace
                                                                                                                       "inv!1 = inv!2")
                                                                                                                      (("1"
                                                                                                                        (inst-cp
                                                                                                                         -28
                                                                                                                         "(m1!4 - 1, m1!3 - 1)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (apply
                                                                                                                             (repeat
                                                                                                                              (inst?
                                                                                                                               -29
                                                                                                                               :where
                                                                                                                               (-5
                                                                                                                                -19))))
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -30)
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "monitor_related_states(mp!1)(tau1!4, tau1!3)")
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       -29
                                                                                                                                       "(m2!4 - 1,  m2!3 - 1)")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (apply
                                                                                                                                           (repeat
                                                                                                                                            (inst?
                                                                                                                                             -30
                                                                                                                                             :where
                                                                                                                                             (-9
                                                                                                                                              -23))))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "monitor_related_states(mp!1)(tau2!4, tau2!3)")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -30
                                                                                                                                                   "(m3!4, m3!3)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (apply
                                                                                                                                                       (repeat
                                                                                                                                                        (inst?
                                                                                                                                                         -30
                                                                                                                                                         :where
                                                                                                                                                         (-12
                                                                                                                                                          -26))))
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (replace
                                                                                                                                                   -10)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -24)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -31)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (split
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (propax)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (skosimp*)
                                                                                                                                                              (("2"
                                                                                                                                                                (use
                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (replace
                                                                                                                                       -6)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -23)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -20)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (split
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("2"
                                                                                                                                                    (use
                                                                                                                                                     "monitor_related_states_preserved_by_raise")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -16)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "lookup_inv")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "complete_MP")
                                                                                                                              (("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -4)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -15)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "monitor_related_states")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "complete_MP")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "get_class_in_classes")
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "up?(get_class(program(mp!1))(a!2))")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               " FORALL (l: LocalVarDecl[Name]):
                                            lvars(md!2)(l) IMPLIES getLocalDecls(program(mp!1))(l)")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "getLocalDecls[Name](program(mp!1))(arg(md!2))")
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "wf_state_update_stack")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "wf_state_update_stack"
                                                                                                                           ("s"
                                                                                                                            "tau2!2"))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "update_stack")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (use
                                                                                                                             "complete_MVA_is_complete")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "good_for_monitoring")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "complete")
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (use
                                                                                                                             "complete_MVA_yields_wf_MVA")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "getLocalDecls")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "down(get_class(program(mp!1))(a!2))")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "getLocalDecls")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "md!2")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (apply
                                                                                                                                   (branch
                                                                                                                                    (split
                                                                                                                                     -6)
                                                                                                                                    ((then
                                                                                                                                      (flatten)
                                                                                                                                      (assert)
                                                                                                                                      (flatten)
                                                                                                                                      (assert)))))
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "getLocalDecls")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "down(get_class(program(mp!1))(a!2))")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "getLocalDecls")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "md!2")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (apply
                                                                                                                                   (branch
                                                                                                                                    (split
                                                                                                                                     -6)
                                                                                                                                    ((then
                                                                                                                                      (flatten)
                                                                                                                                      (assert)
                                                                                                                                      (flatten)
                                                                                                                                      (assert)))))
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "lookup_mthd")
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (apply
                                                                                             (branch
                                                                                              (split
                                                                                               -1)
                                                                                              ((then
                                                                                                (flatten)
                                                                                                (assert)
                                                                                                (flatten)
                                                                                                (assert)))))
                                                                                            (("2"
                                                                                              (apply
                                                                                               (branch
                                                                                                (split
                                                                                                 -13)
                                                                                                ((then
                                                                                                  (flatten)
                                                                                                  (assert)
                                                                                                  (flatten)
                                                                                                  (assert)))))
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "complete_MP")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (apply
                                                     (branch
                                                      (split -1)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    (("2"
                                                      (apply
                                                       (branch
                                                        (split -1)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      (("1"
                                                        (expand
                                                         "execute_CaseJML")
                                                        (("1"
                                                          (expand "extend")
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -3)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (apply
                                                                 (branch
                                                                  (split -2)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split
                                                                     -12)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (apply
                                                                   (branch
                                                                    (split
                                                                     -11)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("2"
                                                                    (inst
                                                                     -12
                                                                     "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -12
                                                                           :where
                                                                           (-3
                                                                            -6))))
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (apply
                                                         (branch
                                                          (split -1)
                                                          ((then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))))
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst-cp
                                                             -8
                                                             "(m1!1, m1!2)")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (apply
                                                                 (repeat
                                                                  (inst?
                                                                   -9
                                                                   :where
                                                                   (-4 -13))))
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (use
                                                                     "monitor_related_states_implies_same_exception")
                                                                    (("1"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -6)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))))
                                                                      (("1"
                                                                        (replace
                                                                         -12)
                                                                        (("1"
                                                                          (inst
                                                                           -9
                                                                           "(m2!1, m2!2)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (repeat
                                                                                (inst?
                                                                                 -9
                                                                                 :where
                                                                                 (-2
                                                                                  -16))))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -9)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (use
                                                                                   "wf_Body_preserved_by_proper_subterm"
                                                                                   ("b2"
                                                                                    "else_stmt(b!1)"
                                                                                    "b1"
                                                                                    "b!1"))
                                                                                  (("2"
                                                                                    (expand
                                                                                     "<<")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (skosimp*)
                                                                                (("3"
                                                                                  (use
                                                                                   "wf_Body_preserved_by_proper_subterm"
                                                                                   ("b2"
                                                                                    "then_stmt(b!1)"
                                                                                    "b1"
                                                                                    "b!1"))
                                                                                  (("3"
                                                                                    (expand
                                                                                     "<<")
                                                                                    (("3"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply
                                                           (branch
                                                            (split -1)
                                                            ((then
                                                              (flatten)
                                                              (assert)
                                                              (flatten)
                                                              (assert)))))
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (inst-cp
                                                               -8
                                                               "(m1!1, m1!2)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -8
                                                                   "(m2!1, m2!2)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -9
                                                                         :where
                                                                         (-4
                                                                          -13))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -8
                                                                             :where
                                                                             (-6
                                                                              -15))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply
                                                             (branch
                                                              (split -1)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (expand
                                                               "execute_set")
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   -8
                                                                   "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -8
                                                                         :where
                                                                         (-4
                                                                          -12))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (use
                                                                             "monitor_related_states_implies_same_exception")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (apply
                                                                                   (branch
                                                                                    (split
                                                                                     -6)
                                                                                    ((then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (flatten)
                                                                                      (assert)))))
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -15)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "monitor_related_states")
                                                                                        (("1"
                                                                                          (use
                                                                                           "wf_update_GhostVars")
                                                                                          (("1"
                                                                                            (use
                                                                                             "wf_update_GhostVars"
                                                                                             ("s1"
                                                                                              "tau!2"
                                                                                              "p"
                                                                                              "complete_MP(mp!1)"))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "update_GhostVars")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "return_of_stmt")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_GhostVars")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_ghoststate")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "is_ghost")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "update_store")
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (lift-if)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (skosimp*)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "derive_bottom_iff_exception_step")
                                                                                                                          (("1"
                                                                                                                            (inst?
                                                                                                                             -1
                                                                                                                             :where
                                                                                                                             -11)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "defined?")
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "b!1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "wf_Body")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (inst?
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "subterm")
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (auto-rewrite
                                                                                                                                               "union"
                                                                                                                                               "member"
                                                                                                                                               "add")
                                                                                                                                              (("1"
                                                                                                                                                (rewrite
                                                                                                                                                 "var_names"
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (prop)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (skosimp*)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "update_GhostVars")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_ghoststate")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "is_ghost")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "update_store")
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (lift-if)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "derive_bottom_iff_exception_step")
                                                                                                                      (("1"
                                                                                                                        (inst?
                                                                                                                         -1
                                                                                                                         :where
                                                                                                                         -27)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "defined?")
                                                                                                                            (("1"
                                                                                                                              (use
                                                                                                                               "complete_MP_preserves_wf_body")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "wf_Body")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (inst?
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "subterm")
                                                                                                                                      (("1"
                                                                                                                                        (inst?)
                                                                                                                                        (("1"
                                                                                                                                          (auto-rewrite
                                                                                                                                           "union"
                                                                                                                                           "member"
                                                                                                                                           "add")
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "var_names"
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (flatten)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -1)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              (("1"
                                                                (use
                                                                 "monitor_related_states_implies_same_exception")
                                                                (("1"
                                                                  (expand
                                                                   "return_of_stmt")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (apply
                                                                 (branch
                                                                  (split -1)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     -6
                                                                     "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -6
                                                                           :where
                                                                           (-4
                                                                            -10))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_implies_same_exception")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "return_of_stmt")
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         -4)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (apply
                                                                   (branch
                                                                    (split -1)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (replace
                                                                       -10)
                                                                      (("1"
                                                                        (case
                                                                         "monitor_related_states(mp!1)
                                                                                                                (update_PState(s1a!1, raise(exc(b!1))),
                                                                                                                 update_PState(s1b!1, raise(exc(b!1))))")
                                                                        (("1"
                                                                          (use
                                                                           "monitor_related_states_implies_same_exception")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "return_of_stmt")
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (apply
                                                                                   (branch
                                                                                    (split
                                                                                     -5)
                                                                                    ((then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (flatten)
                                                                                      (assert)))))
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (use
                                                                           "monitor_related_states_preserved_by_raise")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (apply
                                                                     (branch
                                                                      (split
                                                                       -1)
                                                                      ((then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))))
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (inst-cp
                                                                         -11
                                                                         "(m1!1, m1!2)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -12
                                                                               :where
                                                                               (-4
                                                                                -16))))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_implies_same_exception")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (case
                                                                                       "monitor_related_states(mp!1)(tau2!1, tau2!2)")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -13
                                                                                         "(m3!1, m3!2)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (apply
                                                                                             (repeat
                                                                                              (inst?
                                                                                               -13
                                                                                               :where
                                                                                               (-9
                                                                                                -22))))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -13)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "monitor_related_states_implies_same_exception")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (branch
                                                                                                            (split
                                                                                                             -14)
                                                                                                            ((then
                                                                                                              (flatten)
                                                                                                              (assert)
                                                                                                              (flatten)
                                                                                                              (assert)))))
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -26)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "monitor_related_states(mp!1)
                                                                                                                            (update_PState(tau3!1,
                                                                                                                                           LAMBDA
                                                                                                                                           (ptau3: PState[Name]):
                                                                                                                                           ptau3
                                                                                                                                           WITH [ex
                                                                                                                                                 := ex(pstate(tau2!1))]),
                                                                                                                             update_PState(tau3!2,
                                                                                                                                           LAMBDA
                                                                                                                                           (ptau3_1: PState[Name]):
                                                                                                                                           ptau3_1
                                                                                                                                           WITH [ex
                                                                                                                                                 := ex(pstate(tau2!2))]))")
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "monitor_related_states_implies_same_exception")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "return_of_stmt")
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (apply
                                                                                                                           (branch
                                                                                                                            (split
                                                                                                                             -21)
                                                                                                                            ((then
                                                                                                                              (flatten)
                                                                                                                              (assert)
                                                                                                                              (flatten)
                                                                                                                              (assert)))))
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "monitor_related_states")
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "wf_update_PState"
                                                                                                                     ("s1"
                                                                                                                      "tau3!1"))
                                                                                                                    (("2"
                                                                                                                      (use
                                                                                                                       "wf_update_PState"
                                                                                                                       ("s1"
                                                                                                                        "tau3!2"
                                                                                                                        "p"
                                                                                                                        "complete_MP(mp!1)"))
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "wf_state")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "is_local")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "is_field")
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "update_PState")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "wf_state")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "is_local")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "is_field")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (use
                                                                                                   "monitor_related_states_preserved_by_catch")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -7)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (inst
                                                                                           -15
                                                                                           "(m2!1, m2!2)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -15
                                                                                                 :where
                                                                                                 (-3
                                                                                                  -23))))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "monitor_related_states_preserved_by_catch")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (apply
                                                                                           (branch
                                                                                            (split
                                                                                             -21)
                                                                                            ((then
                                                                                              (flatten)
                                                                                              (assert)
                                                                                              (flatten)
                                                                                              (assert)))))
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -1)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))))
                                                                      (("1"
                                                                        (inst
                                                                         -6
                                                                         "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -6
                                                                               :where
                                                                               (-4
                                                                                -10))))
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "execute_assert")
                                                                        (("2"
                                                                          (expand
                                                                           "check_assertion")
                                                                          (("2"
                                                                            (skosimp*)
                                                                            (("2"
                                                                              (inst
                                                                               -7
                                                                               "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (apply
                                                                                   (repeat
                                                                                    (inst?
                                                                                     -7
                                                                                     :where
                                                                                     (-3
                                                                                      -11))))
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -8)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (apply
                                                                                               (branch
                                                                                                (split
                                                                                                 -4)
                                                                                                ((then
                                                                                                  (flatten)
                                                                                                  (assert)
                                                                                                  (flatten)
                                                                                                  (assert)))))
                                                                                              (("1"
                                                                                                (use
                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "return_of_stmt")
                                                                                                  (("1"
                                                                                                    (lift-if)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (apply
                                                                                                         (branch
                                                                                                          (split
                                                                                                           -6)
                                                                                                          ((then
                                                                                                            (flatten)
                                                                                                            (assert)
                                                                                                            (flatten)
                                                                                                            (assert)))))
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (branch
                                                                                                    (split
                                                                                                     -13)
                                                                                                    ((then
                                                                                                      (flatten)
                                                                                                      (assert)
                                                                                                      (flatten)
                                                                                                      (assert)))))
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "monitor_related_states(mp!1)
                                                                                                                            (update_PState(tau1!1, raise(JMLExc)),
                                                                                                                             update_PState(tau1!2, raise(JMLExc)))")
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "monitor_related_states_implies_same_exception")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "return_of_stmt")
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (branch
                                                                                                                (split
                                                                                                                 -14)
                                                                                                                ((then
                                                                                                                  (flatten)
                                                                                                                  (assert)
                                                                                                                  (flatten)
                                                                                                                  (assert)))))
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (use
                                                                                                         "monitor_related_states_preserved_by_raise")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skosimp*)
          (("2" (expand "complete_MP") (("2" (propax) nil nil)) nil)) nil))
        nil)
       ("2" (lemma "well_founded?_product")
        (("2"
          (inst -1 "LAMBDA(i, j : nat) : i < j" "LAMBDA(i, j : nat) : i < j")
          (("2" (assert) (("2" (use "wf_nat") (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((well_founded?_product formula-decl nil WF nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (derive def-decl "bool" Semantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) nil nil
    (Transition type-eq-decl nil MVA nil) (Guard type-eq-decl nil MVA nil)
    (Action type-eq-decl nil MVA nil) (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) nil
    (Expr type-eq-decl nil Body_adt nil)
    (finite_set type-eq-decl nil finite_sets nil) nil
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Body type-decl nil Body_adt nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (monitor_related_states_implies_same_exception formula-decl nil
     CompleteMonitor nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (b1 shared-adt-accessor-decl
     "[{x: Body | Eq?(x) OR Conj?(x) OR Plus?(x)} -> Expr]" Body_adt nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (b2 shared-adt-accessor-decl
     "[{x: Body | Eq?(x) OR Conj?(x) OR Plus?(x)} -> Expr]" Body_adt nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (b adt-accessor-decl "[(Neg?) -> Expr]" Body_adt nil)
    (get_dynamic_type_name_same_in_monitor_related_states formula-decl nil
     CompleteMonitor nil)
    (get_address_same_in_monitor_related_states formula-decl nil
     CompleteMonitor nil)
    (test shared-adt-accessor-decl
     "[{x: Body | While?(x) OR IfThenElse?(x) OR CondExpr?(x)} -> Expr]"
     Body_adt nil)
    (wf_Body_preserved_by_proper_subterm formula-decl nil WellFormedProgram
     nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (Bool? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (b adt-accessor-decl "[(Bool?) -> bool]" Val_adt nil)
    (then_expr adt-accessor-decl "[(CondExpr?) -> Expr]" Body_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (else_expr adt-accessor-decl "[(CondExpr?) -> Expr]" Body_adt nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (then_stmt adt-accessor-decl "[(IfThenElse?) -> Stmt]" Body_adt nil)
    (else_stmt adt-accessor-decl "[(IfThenElse?) -> Stmt]" Body_adt nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (subterm adt-def-decl "boolean" Body_adt nil)
    (is_ghost const-decl "boolean" SemanticsJML nil) nil
    (complete_MP_preserves_wf_body formula-decl nil CompleteMonitor nil)
    (update_store const-decl "Store" State nil)
    (wf_update_GhostVars formula-decl nil MonitoredProgramSemantics nil)
    (expr shared-adt-accessor-decl
          "[{x: Body | Assert?(x) OR StmtExpr?(x)} -> Expr]" Body_adt nil)
    (try adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (catch adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (finally adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (While adt-constructor-decl "[[Expr, Stmt] -> (While?)]" Body_adt nil)
    (body adt-accessor-decl "[(While?) -> Stmt]" Body_adt nil)
    (Skip adt-constructor-decl "(Skip?)" Body_adt nil)
    (raise const-decl "PState" State nil)
    (exc shared-adt-accessor-decl
     "[{x: Body | TryCatch?(x) OR Throw?(x)} -> Excpt]" Body_adt nil)
    (s2 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (s1 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (IfThenElse adt-constructor-decl "[[Expr, Stmt, Stmt] -> (IfThenElse?)]"
     Body_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (branches adt-accessor-decl "[(CaseJML?) -> list[[Expr, Stmt]]]" Body_adt
     nil)
    (CaseJML adt-constructor-decl "[list[[Expr, Stmt]] -> (CaseJML?)]"
     Body_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (extend const-decl "R" extend nil)
    (tgt adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (NullPointer adt-constructor-decl "(NullPointer?)" Excpt_adt nil)
    (NullPointer? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (monitor_related_states_preserved_by_raise formula-decl nil
     CompleteMonitor nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (Entry? adt-recognizer-decl "[EventType -> boolean]" EventType_adt nil)
    (Entry adt-constructor-decl "(Entry?)" EventType_adt nil)
    (is_local const-decl "boolean" State nil)
    (is_field const-decl "boolean" State nil)
    (wf_state const-decl "boolean" State nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (monitor_related_states_preserved_by_catch formula-decl nil
     CompleteMonitor nil)
    (excpt adt-constructor-decl "[Excpt -> (excpt?)]" ValOrExcpt_adt nil)
    (excpt? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (ExitExceptional adt-constructor-decl "(ExitExceptional?)" EventType_adt
     nil)
    (ExitExceptional? adt-recognizer-decl "[EventType -> boolean]"
     EventType_adt nil)
    (catch const-decl "PState" State nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (Const adt-constructor-decl "[(defined?) -> (Const?)]" Body_adt nil)
    (on_method_MVA const-decl "MPState" MonitoredProgramSemantics nil)
    (on_method_MVA_yields_wf_state formula-decl nil MonitoredProgramSemantics
     nil)
    (complete_MVA_never_stuck_after_on_method_MVA formula-decl nil
     MonitoredProgramSemantics nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (monitor_related_astates_preserved_by_on_method_MVA formula-decl nil
     CompleteMonitor nil)
    (ExitNormal? adt-recognizer-decl "[EventType -> boolean]" EventType_adt
     nil)
    (ExitNormal adt-constructor-decl "(ExitNormal?)" EventType_adt nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (val adt-constructor-decl "[Expr -> (val?)]" ValOrExcpt_adt nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (lookup_inv const-decl "Expr" ProgramFunctions nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil)
    (complete_MVA_yields_wf_MVA formula-decl nil MVACompletion nil)
    (complete_MVA_is_complete formula-decl nil MVACompletion nil)
    (complete const-decl "boolean" MVAProperties nil)
    (update_stack const-decl "FullState" Semantics nil)
    (partial const-decl "boolean" MVAProperties nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (wf_state_update_stack formula-decl nil MonitoredProgramSemantics nil)
    (name adt-accessor-decl "[(MethodCall?) -> Name]" Body_adt nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (arg adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (update const-decl "PState" State nil)
    (target shared-adt-accessor-decl
            "[{x: Body | Set?(x) OR Assign?(x)} -> Name]" Body_adt nil)
    (derive_bottom_iff_exception_step formula-decl nil SemanticsProofs nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (wf_state_update formula-decl nil State nil)
    (source shared-adt-accessor-decl
     "[{x: Body | Set?(x) OR Assign?(x)} -> Expr]" Body_adt nil)
    (monitor_related_states_implies_same_lookup formula-decl nil
     CompleteMonitor nil)
    (varname shared-adt-accessor-decl
     "[{x: Body | RefVarEval?(x) OR BoolVarEval?(x) OR NumVarEval?(x)} -> Name]"
     Body_adt nil)
    nil nil (pred type-eq-decl nil defined_types nil)
    (well_founded? const-decl "bool" orders nil)
    (wf_induction formula-decl nil wf_induction nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil))
   36579 32860 nil nil)
  (monitor_related_states_preserved_by_derive-1 nil 3412327366 3413705243
   ("" (skolem 1 ("mp!1" _ _ _))
    ((""
      (lemma
       "wf_induction[[nat, nat], LAMBDA(i, j : [nat, nat]) : proj_1(i) < proj_1(j) AND proj_2(i) < proj_2(j)]")
      (("1"
        (inst -1
         "LAMBDA(x : [nat, nat]) : FORALL (b: (wf_Body(program(mp!1))), v1, v2: Val)
                         (s1a, s1b, s2a, s2b: MPState) :
                     monitor_related_states(mp!1)(s1a, s1b) IMPLIES
                      derive(mp!1)(b, s1a, v1, s2a)(proj_1(x)) IMPLIES
                       derive(complete_MP(mp!1))(b, s1b, v2, s2b)(proj_2(x)) IMPLIES
                        monitor_related_states(mp!1)(s2a, s2b) AND v1 = v2")
        (("1" (split -1)
          (("1" (skosimp*)
            (("1" (inst -1 "(n1!1, n2!1)")
              (("1" (assert)
                (("1" (apply (repeat (inst? -1))) (("1" (assert) nil nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (skosimp*)
              (("2" (use "monitor_related_states_implies_same_exception")
                (("2" (assert)
                  (("2" (expand "derive" (-5 -4))
                    (("2" (assert)
                      (("2"
                        (apply (branch (split -4)
                                ((then (flatten) (assert) (flatten)
                                  (assert)))))
                        (("2" (lift-if)
                          (("2" (assert)
                            (("2"
                              (expand* "check_for_exception_final"
                               "check_for_exception")
                              (("2"
                                (apply (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                (("1" (skosimp*)
                                  (("1" (copy -7)
                                    (("1" (inst -1 "(m1!1, m1!2)")
                                      (("1"
                                        (inst -8 "(m2!1, m2!2)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst? -1 :where (-4 -11))))
                                            (("1"
                                              (apply
                                               (repeat
                                                (inst? -8 :where (-5 -12))))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (hide -1)
                                                        (("1"
                                                          (use
                                                           "monitor_related_states_implies_same_exception")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (branch
                                                                (split -7)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (expand "complete_MP")
                                      (("2" (propax) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (apply (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                  (("1"
                                    (use "monitor_related_states_implies_same_lookup")
                                    (("1" (assert) nil nil)) nil)
                                   ("2"
                                    (apply (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                    (("1" (skosimp*)
                                      (("1"
                                        (inst
                                         -6
                                         "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst? -6 :where (-3 -9))))
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (use
                                                   "monitor_related_states_implies_same_exception")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (apply
                                                       (branch
                                                        (split -5)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (apply
                                       (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst-cp -7 "(m1!1, m1!2)")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (apply
                                               (repeat
                                                (inst? -8 :where (-3 -11))))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (use
                                                     "monitor_related_states_implies_same_exception")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (apply
                                                         (branch
                                                          (split -5)
                                                          ((then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))))
                                                        (("1"
                                                          (replace -10)
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -1)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (inst
                                                               -10
                                                               "(m2!1, m2!2)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (repeat
                                                                    (inst?
                                                                     -10
                                                                     :where
                                                                     (-3
                                                                      -16))))
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (use
                                                                         "monitor_related_states_implies_same_exception")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (branch
                                                                              (split
                                                                               -5)
                                                                              ((then
                                                                                (flatten)
                                                                                (assert)
                                                                                (flatten)
                                                                                (assert)))))
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -15)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply
                                         (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (inst-cp -7 "(m1!1, m1!2)")
                                            (("1"
                                              (inst -7 "(m2!1, m2!2)")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (apply
                                                   (repeat
                                                    (inst?
                                                     -8
                                                     :where
                                                     (-3 -11))))
                                                  (("1"
                                                    (apply
                                                     (repeat
                                                      (inst?
                                                       -7
                                                       :where
                                                       (-4 -12))))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_implies_same_exception")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split -6)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (apply
                                           (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                          (("1"
                                            (use
                                             "monitor_related_states_implies_same_lookup")
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (apply
                                             (branch
                                              (split -1)
                                              ((then
                                                (flatten)
                                                (assert)
                                                (flatten)
                                                (assert)))))
                                            (("1"
                                              (use
                                               "get_address_same_in_monitor_related_states")
                                              (("1"
                                                (use
                                                 "get_dynamic_type_name_same_in_monitor_related_states")
                                                (("1" (assert) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (apply
                                               (branch
                                                (split -1)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (inst
                                                   -6
                                                   "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (apply
                                                       (repeat
                                                        (inst?
                                                         -6
                                                         :where
                                                         (-3 -9))))
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (use
                                                             "monitor_related_states_implies_same_exception")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split -5)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (replace
                                                                       -12)
                                                                      (("1"
                                                                        (expand
                                                                         "monitor_related_states")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (use
                                                                             "wf_update_PState"
                                                                             ("s1"
                                                                              "tau!1"))
                                                                            (("1"
                                                                              (use
                                                                               "wf_update_PState"
                                                                               ("s1"
                                                                                "tau!2"
                                                                                "p"
                                                                                "complete_MP(mp!1)"))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_state_update")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "derive_bottom_iff_exception_step")
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -1
                                                                                               :where
                                                                                               -8)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "defined?")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "update_PState")
                                                                                      (("2"
                                                                                        (use
                                                                                         "wf_state_update")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "derive_bottom_iff_exception_step")
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :where
                                                                                             -22)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "defined?")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (apply
                                                 (branch
                                                  (split -1)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (inst-cp
                                                     -7
                                                     "(m1!1, m1!2)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (apply
                                                         (repeat
                                                          (inst?
                                                           -8
                                                           :where
                                                           (-3 -11))))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_implies_same_exception")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split -5)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (inst
                                                                     -9
                                                                     "(m2!1, m2!2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -11)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -8
                                                                             :where
                                                                             (-2
                                                                              -14))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -8)
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil)
                                                                               ("3"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (skosimp*)
                                                                            (("2"
                                                                              (typepred
                                                                               "b!1")
                                                                              (("2"
                                                                                (use
                                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                                 ("b2"
                                                                                  "else_expr(b!1)"))
                                                                                (("2"
                                                                                  (expand
                                                                                   "<<")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (skosimp*)
                                                                            (("3"
                                                                              (use
                                                                               "wf_Body_preserved_by_proper_subterm"
                                                                               ("b2"
                                                                                "then_expr(b!1)"
                                                                                "b1"
                                                                                "b!1"))
                                                                              (("3"
                                                                                (expand
                                                                                 "<<")
                                                                                (("3"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (apply
                                                   (branch
                                                    (split -1)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("1"
                                                    (hide (1 2 3 4 5 6 7 8 9))
                                                    (("1"
                                                      (skosimp*)
                                                      (("1"
                                                        (inst-cp
                                                         -7
                                                         "(m1!1, m1!2)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -8
                                                               :where
                                                               (-3 -11))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst-cp
                                                                   -7
                                                                   "(m2!1, m2!2)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -8
                                                                         :where
                                                                         (-4
                                                                          -14))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (replace
                                                                             -9)
                                                                            (("1"
                                                                              (replace
                                                                               -11)
                                                                              (("1"
                                                                                (use
                                                                                 "monitor_related_states_implies_same_exception")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -6)
                                                                                      ((then
                                                                                        (flatten)
                                                                                        (assert)
                                                                                        (flatten)
                                                                                        (assert)))))
                                                                                    (("1"
                                                                                      (replace
                                                                                       -24)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -3)
                                                                                        (("1"
                                                                                          (use
                                                                                           "monitor_related_states_preserved_by_raise")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         -17)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      (("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -1)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("2"
                                                                                          (case-replace
                                                                                           "md!1 = md!2")
                                                                                          (("1"
                                                                                            (case
                                                                                             "monitor_related_states(mp!1)(tau3!1, tau3!2)")
                                                                                            (("1"
                                                                                              (case
                                                                                               "monitor_related_states(mp!1)(tau4!1, tau4!2)")
                                                                                              (("1"
                                                                                                (inst-cp
                                                                                                 -31
                                                                                                 "(m4!1, m4!2)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -32
                                                                                                       :where
                                                                                                       (-9
                                                                                                        -19))))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -31
                                                                                                           "(m5!1, m5!2)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (repeat
                                                                                                                (inst?
                                                                                                                 -32
                                                                                                                 :where
                                                                                                                 (-11
                                                                                                                  -21))))
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "monitor_related_states_implies_same_exception"
                                                                                                                     ("s1"
                                                                                                                      "tau6!1"
                                                                                                                      "s2"
                                                                                                                      "tau6!2"))
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "monitor_related_states(mp!1)(tau7!1, tau7!2)")
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "monitor_related_states_implies_same_exception")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               4)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -27)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -17)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "monitor_related_states")
                                                                                                                                    (("1"
                                                                                                                                      (use
                                                                                                                                       "wf_update_PState"
                                                                                                                                       ("s1"
                                                                                                                                        "tau7!1"))
                                                                                                                                      (("1"
                                                                                                                                        (use
                                                                                                                                         "wf_update_PState"
                                                                                                                                         ("s1"
                                                                                                                                          "tau7!2"
                                                                                                                                          "p"
                                                                                                                                          "complete_MP(mp!1)"))
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -2)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "update_PState")
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "update_PState")
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -33)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "wf_state"
                                                                                                                                                           (-62
                                                                                                                                                            1
                                                                                                                                                            -5))
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "wf_state"
                                                                                                                                                             (-62
                                                                                                                                                              1
                                                                                                                                                              -5))
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "is_local")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "is_field")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skosimp*)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?
                                                                                                                                                                         -65)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst?
                                                                                                                                                                           -6)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (prop)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "update_PState")
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -22)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_state"
                                                                                                                                                         (-63
                                                                                                                                                          1
                                                                                                                                                          -6))
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "wf_state"
                                                                                                                                                           (-63
                                                                                                                                                            1
                                                                                                                                                            -6))
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "is_local")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "is_field")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skosimp*)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?
                                                                                                                                                                       -66)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?
                                                                                                                                                                         -7)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (prop)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (apply
                                                                                                                                 (branch
                                                                                                                                  (split
                                                                                                                                   -26)
                                                                                                                                  ((then
                                                                                                                                    (flatten)
                                                                                                                                    (assert)
                                                                                                                                    (flatten)
                                                                                                                                    (assert)))))
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (apply
                                                                                                                           (branch
                                                                                                                            (split
                                                                                                                             -13)
                                                                                                                            ((then
                                                                                                                              (flatten)
                                                                                                                              (assert)
                                                                                                                              (flatten)
                                                                                                                              (assert)))))
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -36)
                                                                                                                            (("1"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -3
                                                                                                                                -4
                                                                                                                                -25
                                                                                                                                -34
                                                                                                                                -35
                                                                                                                                1
                                                                                                                                -44
                                                                                                                                -30))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "on_method_exit_normal_MP")
                                                                                                                                (("1"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "check_assertion")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("1"
                                                                                                                                        (inst-cp
                                                                                                                                         -28
                                                                                                                                         "(m1!4, m1!3)")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (apply
                                                                                                                                             (repeat
                                                                                                                                              (inst?
                                                                                                                                               -29
                                                                                                                                               :where
                                                                                                                                               (-3
                                                                                                                                                -16))))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "monitor_related_states(mp!1)(tau2!4, tau2!3)")
                                                                                                                                                  (("1"
                                                                                                                                                    (case-replace
                                                                                                                                                     "inv!4 = inv!3")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst-cp
                                                                                                                                                       -30
                                                                                                                                                       "(m2!4 - 1, m2!3 - 1)")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (apply
                                                                                                                                                           (repeat
                                                                                                                                                            (inst?
                                                                                                                                                             -31
                                                                                                                                                             :where
                                                                                                                                                             (-23
                                                                                                                                                              -10))))
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -32)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "monitor_related_states(mp!1)(tau3!4, tau3!3)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -31
                                                                                                                                                                     "(m3!4 - 1, m3!3 - 1)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (apply
                                                                                                                                                                         (repeat
                                                                                                                                                                          (inst?
                                                                                                                                                                           -31
                                                                                                                                                                           :where
                                                                                                                                                                           (-27
                                                                                                                                                                            -14))))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -32)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -15)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -28)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (split
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -11)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -24)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (use
                                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replace
                                                                                                                                                       -20)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -7)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "lookup_inv")
                                                                                                                                                          (("2"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "complete_MP")
                                                                                                                                                                (("2"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (replace
                                                                                                                                                     -5)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -18)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "monitor_related_states")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (split
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (use
                                                                                                                                                                 "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (use
                                                                                                                                                                 "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "complete_MP(mp!1)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "wf_and_complete_MP")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (propax)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("3"
                                                                                                                                                                (use
                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                (("3"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("4"
                                                                                                                                                                (use
                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                (("4"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("5"
                                                                                                                                                                (expand
                                                                                                                                                                 "on_method_MVA")
                                                                                                                                                                (("5"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("6"
                                                                                                                                                                (expand
                                                                                                                                                                 "on_method_MVA")
                                                                                                                                                                (("6"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             (-1
                                                                                                                              -2
                                                                                                                              -23
                                                                                                                              -33
                                                                                                                              1
                                                                                                                              2
                                                                                                                              -32))
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "on_method_exit_exceptional_MP")
                                                                                                                              (("2"
                                                                                                                                (apply
                                                                                                                                 (branch
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  ((then
                                                                                                                                    (flatten)
                                                                                                                                    (assert)
                                                                                                                                    (flatten)
                                                                                                                                    (assert)))))
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -18
                                                                                                                                     "(m1!4, m1!3)")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -9)
                                                                                                                                        (("2"
                                                                                                                                          (apply
                                                                                                                                           (repeat
                                                                                                                                            (inst?
                                                                                                                                             -19
                                                                                                                                             :where
                                                                                                                                             (-2
                                                                                                                                              -11))))
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (split
                                                                                                                                               -19)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "monitor_related_states(mp!1)(tau2!4, tau2!3)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (case-replace
                                                                                                                                                       "inv!3 = inv!4")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "check_assertion")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -26
                                                                                                                                                             "(m2!4 - 1, m2!3 - 1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (apply
                                                                                                                                                                 (repeat
                                                                                                                                                                  (inst?
                                                                                                                                                                   -26
                                                                                                                                                                   :where
                                                                                                                                                                   (-11
                                                                                                                                                                    -22))))
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "monitor_related_states(mp!1)(tau3!4, tau3!3)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -14)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -25)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (use
                                                                                                                                                                               "monitor_related_states_implies_same_exception")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       3)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -27)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -12)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -23)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replace
                                                                                                                                                         -8)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -17)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "lookup_inv")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "complete_MP")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (replace
                                                                                                                                                     -6)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -15)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "monitor_related_states")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (split
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (use
                                                                                                                                                               "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (use
                                                                                                                                                               "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "complete_MP(mp!1)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "wf_and_complete_MP")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("4"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                              (("4"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("5"
                                                                                                                                                              (expand
                                                                                                                                                               "on_method_MVA")
                                                                                                                                                              (("5"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("6"
                                                                                                                                                              (expand
                                                                                                                                                               "on_method_MVA")
                                                                                                                                                              (("6"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (use
                                                                                                                                                 "monitor_related_states_preserved_by_catch")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (1
                                                                                                  -1
                                                                                                  -7
                                                                                                  -17
                                                                                                  -30))
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "monitor_related_states_implies_same_exception"
                                                                                                   ("s1"
                                                                                                    "tau3!1"
                                                                                                    "s2"
                                                                                                    "tau3!2"))
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "on_method_entry_MP")
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "monitor_related_states(mp!1)(s_new!2, s_new!1)")
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "monitor_related_states_implies_same_exception")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (apply
                                                                                                                 (branch
                                                                                                                  (split
                                                                                                                   -6)
                                                                                                                  ((then
                                                                                                                    (flatten)
                                                                                                                    (assert)
                                                                                                                    (flatten)
                                                                                                                    (assert)))))
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -8)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "monitor_related_states")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           3)
                                                                                                                          (("1"
                                                                                                                            (use
                                                                                                                             "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (use
                                                                                                                             "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "complete_MP(mp!1)")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "wf_and_complete_MP")
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (use
                                                                                                                             "on_method_MVA_yields_wf_state")
                                                                                                                            (("3"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("4"
                                                                                                                            (use
                                                                                                                             "on_method_MVA_yields_wf_state")
                                                                                                                            (("4"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("5"
                                                                                                                            (expand
                                                                                                                             "on_method_MVA")
                                                                                                                            (("5"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("6"
                                                                                                                            (expand
                                                                                                                             "on_method_MVA")
                                                                                                                            (("6"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "on_method_entry")
                                                                                                            (("2"
                                                                                                              (apply
                                                                                                               (branch
                                                                                                                (split
                                                                                                                 -3)
                                                                                                                ((then
                                                                                                                  (flatten)
                                                                                                                  (assert)
                                                                                                                  (flatten)
                                                                                                                  (assert)))))
                                                                                                              (("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "check_assertion")
                                                                                                                  (("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (case-replace
                                                                                                                       "inv!3 = inv!4")
                                                                                                                      (("1"
                                                                                                                        (inst-cp
                                                                                                                         -28
                                                                                                                         "(m1!4 - 1, m1!3 - 1)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (apply
                                                                                                                             (repeat
                                                                                                                              (inst?
                                                                                                                               -29
                                                                                                                               :where
                                                                                                                               (-5
                                                                                                                                -19))))
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -30)
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "monitor_related_states(mp!1)(tau1!4, tau1!3)")
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       -29
                                                                                                                                       "(m2!4 - 1,  m2!3 - 1)")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (apply
                                                                                                                                           (repeat
                                                                                                                                            (inst?
                                                                                                                                             -30
                                                                                                                                             :where
                                                                                                                                             (-9
                                                                                                                                              -23))))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "monitor_related_states(mp!1)(tau2!4, tau2!3)")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -30
                                                                                                                                                   "(m3!4, m3!3)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (apply
                                                                                                                                                       (repeat
                                                                                                                                                        (inst?
                                                                                                                                                         -30
                                                                                                                                                         :where
                                                                                                                                                         (-12
                                                                                                                                                          -26))))
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (replace
                                                                                                                                                   -10)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -24)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -31)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (split
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (propax)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (skosimp*)
                                                                                                                                                              (("2"
                                                                                                                                                                (use
                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (replace
                                                                                                                                       -6)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -23)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -20)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (split
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("2"
                                                                                                                                                    (use
                                                                                                                                                     "monitor_related_states_preserved_by_raise")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -16)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "lookup_inv")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "complete_MP")
                                                                                                                              (("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -4)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -15)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "monitor_related_states")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "complete_MP")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "get_class_in_classes")
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "up?(get_class(program(mp!1))(a!2))")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               " FORALL (l: LocalVarDecl[Name]):
        lvars(md!2)(l) IMPLIES getLocalDecls(program(mp!1))(l)")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "getLocalDecls[Name](program(mp!1))(arg(md!2))")
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "wf_state_update_stack")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "wf_state_update_stack"
                                                                                                                           ("s"
                                                                                                                            "tau2!2"))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "update_stack")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (use
                                                                                                                             "complete_MVA_is_complete")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "good_for_monitoring")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "complete")
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (use
                                                                                                                             "complete_MVA_yields_wf_MVA")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "getLocalDecls")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "down(get_class(program(mp!1))(a!2))")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "getLocalDecls")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "md!2")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (apply
                                                                                                                                   (branch
                                                                                                                                    (split
                                                                                                                                     -6)
                                                                                                                                    ((then
                                                                                                                                      (flatten)
                                                                                                                                      (assert)
                                                                                                                                      (flatten)
                                                                                                                                      (assert)))))
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "getLocalDecls")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "down(get_class(program(mp!1))(a!2))")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "getLocalDecls")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "md!2")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (apply
                                                                                                                                   (branch
                                                                                                                                    (split
                                                                                                                                     -6)
                                                                                                                                    ((then
                                                                                                                                      (flatten)
                                                                                                                                      (assert)
                                                                                                                                      (flatten)
                                                                                                                                      (assert)))))
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "lookup_mthd")
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (apply
                                                                                             (branch
                                                                                              (split
                                                                                               -1)
                                                                                              ((then
                                                                                                (flatten)
                                                                                                (assert)
                                                                                                (flatten)
                                                                                                (assert)))))
                                                                                            (("2"
                                                                                              (apply
                                                                                               (branch
                                                                                                (split
                                                                                                 -13)
                                                                                                ((then
                                                                                                  (flatten)
                                                                                                  (assert)
                                                                                                  (flatten)
                                                                                                  (assert)))))
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "complete_MP")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (apply
                                                     (branch
                                                      (split -1)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    (("2"
                                                      (apply
                                                       (branch
                                                        (split -1)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      (("1"
                                                        (expand
                                                         "execute_CaseJML")
                                                        (("1"
                                                          (expand "extend")
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -3)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (apply
                                                                 (branch
                                                                  (split -2)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (apply
                                                                   (branch
                                                                    (split
                                                                     -12)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (apply
                                                                   (branch
                                                                    (split
                                                                     -11)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("2"
                                                                    (inst
                                                                     -12
                                                                     "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -12
                                                                           :where
                                                                           (-3
                                                                            -6))))
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (apply
                                                         (branch
                                                          (split -1)
                                                          ((then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))))
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst-cp
                                                             -8
                                                             "(m1!1, m1!2)")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (apply
                                                                 (repeat
                                                                  (inst?
                                                                   -9
                                                                   :where
                                                                   (-4 -13))))
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (use
                                                                     "monitor_related_states_implies_same_exception")
                                                                    (("1"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -6)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))))
                                                                      (("1"
                                                                        (replace
                                                                         -12)
                                                                        (("1"
                                                                          (inst
                                                                           -9
                                                                           "(m2!1, m2!2)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (repeat
                                                                                (inst?
                                                                                 -9
                                                                                 :where
                                                                                 (-2
                                                                                  -16))))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -9)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (use
                                                                                   "wf_Body_preserved_by_proper_subterm"
                                                                                   ("b2"
                                                                                    "else_stmt(b!1)"
                                                                                    "b1"
                                                                                    "b!1"))
                                                                                  (("2"
                                                                                    (expand
                                                                                     "<<")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (skosimp*)
                                                                                (("3"
                                                                                  (use
                                                                                   "wf_Body_preserved_by_proper_subterm"
                                                                                   ("b2"
                                                                                    "then_stmt(b!1)"
                                                                                    "b1"
                                                                                    "b!1"))
                                                                                  (("3"
                                                                                    (expand
                                                                                     "<<")
                                                                                    (("3"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply
                                                           (branch
                                                            (split -1)
                                                            ((then
                                                              (flatten)
                                                              (assert)
                                                              (flatten)
                                                              (assert)))))
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (inst-cp
                                                               -8
                                                               "(m1!1, m1!2)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -8
                                                                   "(m2!1, m2!2)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -9
                                                                         :where
                                                                         (-4
                                                                          -13))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -8
                                                                             :where
                                                                             (-6
                                                                              -15))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply
                                                             (branch
                                                              (split -1)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (expand
                                                               "execute_set")
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   -8
                                                                   "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -8
                                                                         :where
                                                                         (-4
                                                                          -12))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (use
                                                                             "monitor_related_states_implies_same_exception")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (apply
                                                                                   (branch
                                                                                    (split
                                                                                     -6)
                                                                                    ((then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (flatten)
                                                                                      (assert)))))
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -15)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "monitor_related_states")
                                                                                        (("1"
                                                                                          (use
                                                                                           "wf_update_GhostVars")
                                                                                          (("1"
                                                                                            (use
                                                                                             "wf_update_GhostVars"
                                                                                             ("s1"
                                                                                              "tau!2"
                                                                                              "p"
                                                                                              "complete_MP(mp!1)"))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "update_GhostVars")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "return_of_stmt")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_GhostVars")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_ghoststate")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "is_ghost")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "update_store")
                                                                                                            (("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (lift-if)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (skosimp*)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "derive_bottom_iff_exception_step")
                                                                                                                          (("1"
                                                                                                                            (inst?
                                                                                                                             -1
                                                                                                                             :where
                                                                                                                             -11)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "defined?")
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "b!1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "wf_Body")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (inst?
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "subterm")
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (auto-rewrite
                                                                                                                                               "union"
                                                                                                                                               "member"
                                                                                                                                               "add")
                                                                                                                                              (("1"
                                                                                                                                                (rewrite
                                                                                                                                                 "var_names"
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (prop)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (skosimp*)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "update_GhostVars")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_ghoststate")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "is_ghost")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "update_store")
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (lift-if)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "derive_bottom_iff_exception_step")
                                                                                                                      (("1"
                                                                                                                        (inst?
                                                                                                                         -1
                                                                                                                         :where
                                                                                                                         -27)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "defined?")
                                                                                                                            (("1"
                                                                                                                              (use
                                                                                                                               "complete_MP_preserves_wf_body")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "wf_Body")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (inst?
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "subterm")
                                                                                                                                      (("1"
                                                                                                                                        (inst?)
                                                                                                                                        (("1"
                                                                                                                                          (auto-rewrite
                                                                                                                                           "union"
                                                                                                                                           "member"
                                                                                                                                           "add")
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "var_names"
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (flatten)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -1)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              (("1"
                                                                (use
                                                                 "monitor_related_states_implies_same_exception")
                                                                (("1"
                                                                  (expand
                                                                   "return_of_stmt")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (apply
                                                                 (branch
                                                                  (split -1)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     -6
                                                                     "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -6
                                                                           :where
                                                                           (-4
                                                                            -10))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_implies_same_exception")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "return_of_stmt")
                                                                                  (("1"
                                                                                    (lift-if)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         -4)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (apply
                                                                   (branch
                                                                    (split -1)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (replace
                                                                       -10)
                                                                      (("1"
                                                                        (case
                                                                         "monitor_related_states(mp!1)
                                                                      (update_PState(s1a!1, raise(exc(b!1))),
                                                                       update_PState(s1b!1, raise(exc(b!1))))")
                                                                        (("1"
                                                                          (use
                                                                           "monitor_related_states_implies_same_exception")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "return_of_stmt")
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (apply
                                                                                   (branch
                                                                                    (split
                                                                                     -5)
                                                                                    ((then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (flatten)
                                                                                      (assert)))))
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (use
                                                                           "monitor_related_states_preserved_by_raise")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (apply
                                                                     (branch
                                                                      (split
                                                                       -1)
                                                                      ((then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))))
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (inst-cp
                                                                         -11
                                                                         "(m1!1, m1!2)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -12
                                                                               :where
                                                                               (-4
                                                                                -16))))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_implies_same_exception")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (case
                                                                                       "monitor_related_states(mp!1)(tau2!1, tau2!2)")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -13
                                                                                         "(m3!1, m3!2)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (apply
                                                                                             (repeat
                                                                                              (inst?
                                                                                               -13
                                                                                               :where
                                                                                               (-9
                                                                                                -22))))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -13)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "monitor_related_states_implies_same_exception")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lift-if)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (branch
                                                                                                            (split
                                                                                                             -14)
                                                                                                            ((then
                                                                                                              (flatten)
                                                                                                              (assert)
                                                                                                              (flatten)
                                                                                                              (assert)))))
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -26)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "monitor_related_states(mp!1)
                                                                            (update_PState(tau3!1,
                                                                                           LAMBDA
                                                                                           (ptau3: PState[Name]):
                                                                                           ptau3
                                                                                           WITH [ex
                                                                                                 := ex(pstate(tau2!1))]),
                                                                             update_PState(tau3!2,
                                                                                           LAMBDA
                                                                                           (ptau3_1: PState[Name]):
                                                                                           ptau3_1
                                                                                           WITH [ex
                                                                                                 := ex(pstate(tau2!2))]))")
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "monitor_related_states_implies_same_exception")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "return_of_stmt")
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (apply
                                                                                                                           (branch
                                                                                                                            (split
                                                                                                                             -21)
                                                                                                                            ((then
                                                                                                                              (flatten)
                                                                                                                              (assert)
                                                                                                                              (flatten)
                                                                                                                              (assert)))))
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "monitor_related_states")
                                                                                                                  (("2"
                                                                                                                    (use
                                                                                                                     "wf_update_PState"
                                                                                                                     ("s1"
                                                                                                                      "tau3!1"))
                                                                                                                    (("2"
                                                                                                                      (use
                                                                                                                       "wf_update_PState"
                                                                                                                       ("s1"
                                                                                                                        "tau3!2"
                                                                                                                        "p"
                                                                                                                        "complete_MP(mp!1)"))
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "wf_state")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "is_local")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "is_field")
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "update_PState")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "wf_state")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "is_local")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "is_field")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (use
                                                                                                   "monitor_related_states_preserved_by_catch")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -7)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (inst
                                                                                           -15
                                                                                           "(m2!1, m2!2)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (apply
                                                                                               (repeat
                                                                                                (inst?
                                                                                                 -15
                                                                                                 :where
                                                                                                 (-3
                                                                                                  -23))))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "monitor_related_states_preserved_by_catch")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (apply
                                                                                           (branch
                                                                                            (split
                                                                                             -21)
                                                                                            ((then
                                                                                              (flatten)
                                                                                              (assert)
                                                                                              (flatten)
                                                                                              (assert)))))
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -1)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))))
                                                                      (("1"
                                                                        (inst
                                                                         -6
                                                                         "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -6
                                                                               :where
                                                                               (-4
                                                                                -10))))
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "execute_assert")
                                                                        (("2"
                                                                          (expand
                                                                           "check_assertion")
                                                                          (("2"
                                                                            (skosimp*)
                                                                            (("2"
                                                                              (inst
                                                                               -7
                                                                               "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (apply
                                                                                   (repeat
                                                                                    (inst?
                                                                                     -7
                                                                                     :where
                                                                                     (-3
                                                                                      -11))))
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -8)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (apply
                                                                                               (branch
                                                                                                (split
                                                                                                 -4)
                                                                                                ((then
                                                                                                  (flatten)
                                                                                                  (assert)
                                                                                                  (flatten)
                                                                                                  (assert)))))
                                                                                              (("1"
                                                                                                (use
                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "return_of_stmt")
                                                                                                  (("1"
                                                                                                    (lift-if)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (apply
                                                                                                         (branch
                                                                                                          (split
                                                                                                           -6)
                                                                                                          ((then
                                                                                                            (flatten)
                                                                                                            (assert)
                                                                                                            (flatten)
                                                                                                            (assert)))))
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (branch
                                                                                                    (split
                                                                                                     -13)
                                                                                                    ((then
                                                                                                      (flatten)
                                                                                                      (assert)
                                                                                                      (flatten)
                                                                                                      (assert)))))
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "monitor_related_states(mp!1)
                                                                            (update_PState(tau1!1, raise(JMLExc)),
                                                                             update_PState(tau1!2, raise(JMLExc)))")
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "monitor_related_states_implies_same_exception")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "return_of_stmt")
                                                                                                          (("1"
                                                                                                            (lift-if)
                                                                                                            (("1"
                                                                                                              (apply
                                                                                                               (branch
                                                                                                                (split
                                                                                                                 -14)
                                                                                                                ((then
                                                                                                                  (flatten)
                                                                                                                  (assert)
                                                                                                                  (flatten)
                                                                                                                  (assert)))))
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (use
                                                                                                         "monitor_related_states_preserved_by_raise")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skosimp*)
          (("2" (expand "complete_MP") (("2" (propax) nil nil)) nil)) nil))
        nil)
       ("2" (lemma "well_founded?_product")
        (("2"
          (inst -1 "LAMBDA(i, j : nat) : i < j" "LAMBDA(i, j : nat) : i < j")
          (("2" (assert) (("2" (use "wf_nat") (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((< const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (wf_induction formula-decl nil wf_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil) nil nil
    (varname shared-adt-accessor-decl
     "[{x: Body | RefVarEval?(x) OR BoolVarEval?(x) OR NumVarEval?(x)} -> Name]"
     Body_adt nil)
    (monitor_related_states_implies_same_lookup formula-decl nil
     CompleteMonitor nil)
    (source shared-adt-accessor-decl
     "[{x: Body | Set?(x) OR Assign?(x)} -> Expr]" Body_adt nil)
    (wf_state_update formula-decl nil State nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (derive_bottom_iff_exception_step formula-decl nil SemanticsProofs nil)
    (target shared-adt-accessor-decl
            "[{x: Body | Set?(x) OR Assign?(x)} -> Name]" Body_adt nil)
    (update const-decl "PState" State nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (arg adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (name adt-accessor-decl "[(MethodCall?) -> Name]" Body_adt nil)
    (wf_state_update_stack formula-decl nil MonitoredProgramSemantics nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (partial const-decl "boolean" MVAProperties nil)
    (update_stack const-decl "FullState" Semantics nil)
    (complete const-decl "boolean" MVAProperties nil)
    (complete_MVA_is_complete formula-decl nil MVACompletion nil)
    (complete_MVA_yields_wf_MVA formula-decl nil MVACompletion nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (lookup_inv const-decl "Expr" ProgramFunctions nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (val adt-constructor-decl "[Expr -> (val?)]" ValOrExcpt_adt nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (ExitNormal adt-constructor-decl "(ExitNormal?)" EventType_adt nil)
    (ExitNormal? adt-recognizer-decl "[EventType -> boolean]" EventType_adt
     nil)
    (monitor_related_astates_preserved_by_on_method_MVA formula-decl nil
     CompleteMonitor nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (complete_MVA_never_stuck_after_on_method_MVA formula-decl nil
     MonitoredProgramSemantics nil)
    (on_method_MVA_yields_wf_state formula-decl nil MonitoredProgramSemantics
     nil)
    (on_method_MVA const-decl "MPState" MonitoredProgramSemantics nil)
    (Const adt-constructor-decl "[(defined?) -> (Const?)]" Body_adt nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (catch const-decl "PState" State nil)
    (ExitExceptional? adt-recognizer-decl "[EventType -> boolean]"
     EventType_adt nil)
    (ExitExceptional adt-constructor-decl "(ExitExceptional?)" EventType_adt
     nil)
    (excpt? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (excpt adt-constructor-decl "[Excpt -> (excpt?)]" ValOrExcpt_adt nil)
    (monitor_related_states_preserved_by_catch formula-decl nil
     CompleteMonitor nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_state const-decl "boolean" State nil)
    (is_field const-decl "boolean" State nil)
    (is_local const-decl "boolean" State nil)
    (Entry adt-constructor-decl "(Entry?)" EventType_adt nil)
    (Entry? adt-recognizer-decl "[EventType -> boolean]" EventType_adt nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (monitor_related_states_preserved_by_raise formula-decl nil
     CompleteMonitor nil)
    (NullPointer? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (NullPointer adt-constructor-decl "(NullPointer?)" Excpt_adt nil)
    (tgt adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (extend const-decl "R" extend nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (CaseJML adt-constructor-decl "[list[[Expr, Stmt]] -> (CaseJML?)]"
     Body_adt nil)
    (branches adt-accessor-decl "[(CaseJML?) -> list[[Expr, Stmt]]]" Body_adt
     nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (IfThenElse adt-constructor-decl "[[Expr, Stmt, Stmt] -> (IfThenElse?)]"
     Body_adt nil)
    (s1 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (s2 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (exc shared-adt-accessor-decl
     "[{x: Body | TryCatch?(x) OR Throw?(x)} -> Excpt]" Body_adt nil)
    (raise const-decl "PState" State nil)
    (Skip adt-constructor-decl "(Skip?)" Body_adt nil)
    (body adt-accessor-decl "[(While?) -> Stmt]" Body_adt nil)
    (While adt-constructor-decl "[[Expr, Stmt] -> (While?)]" Body_adt nil)
    (finally adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (catch adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (try adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (expr shared-adt-accessor-decl
          "[{x: Body | Assert?(x) OR StmtExpr?(x)} -> Expr]" Body_adt nil)
    (wf_update_GhostVars formula-decl nil MonitoredProgramSemantics nil)
    (update_store const-decl "Store" State nil)
    (complete_MP_preserves_wf_body formula-decl nil CompleteMonitor nil) nil
    (is_ghost const-decl "boolean" SemanticsJML nil)
    (subterm adt-def-decl "boolean" Body_adt nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (else_stmt adt-accessor-decl "[(IfThenElse?) -> Stmt]" Body_adt nil)
    (then_stmt adt-accessor-decl "[(IfThenElse?) -> Stmt]" Body_adt nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (else_expr adt-accessor-decl "[(CondExpr?) -> Expr]" Body_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (then_expr adt-accessor-decl "[(CondExpr?) -> Expr]" Body_adt nil)
    (b adt-accessor-decl "[(Bool?) -> bool]" Val_adt nil)
    (Bool? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (wf_Body_preserved_by_proper_subterm formula-decl nil WellFormedProgram
     nil)
    (test shared-adt-accessor-decl
     "[{x: Body | While?(x) OR IfThenElse?(x) OR CondExpr?(x)} -> Expr]"
     Body_adt nil)
    (get_address_same_in_monitor_related_states formula-decl nil
     CompleteMonitor nil)
    (get_dynamic_type_name_same_in_monitor_related_states formula-decl nil
     CompleteMonitor nil)
    (b adt-accessor-decl "[(Neg?) -> Expr]" Body_adt nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (b2 shared-adt-accessor-decl
     "[{x: Body | Eq?(x) OR Conj?(x) OR Plus?(x)} -> Expr]" Body_adt nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (b1 shared-adt-accessor-decl
     "[{x: Body | Eq?(x) OR Conj?(x) OR Plus?(x)} -> Expr]" Body_adt nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (monitor_related_states_implies_same_exception formula-decl nil
     CompleteMonitor nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (Body type-decl nil Body_adt nil) (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) nil
    (finite_set type-eq-decl nil finite_sets nil)
    (Expr type-eq-decl nil Body_adt nil) nil
    (Stmt type-eq-decl nil Body_adt nil) (Excpt type-decl nil Excpt_adt nil)
    (Method type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil) nil
    nil (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (derive def-decl "bool" Semantics nil)
    (monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (well_founded?_product formula-decl nil WF nil))
   24292 22910 t shostak))
 (monitor_related_states_implies_derive 0
  (monitor_related_states_implies_derive-1 nil 3413528197 3428746817
   ("" (skolem 1 ("p!1" _ _))
    (("" (lemma "wf_induction[nat, LAMBDA(i, j : nat) : i < j]")
      (("1" (auto-rewrite "complete_MP_preserves_wf_body")
        (("1"
          (inst -1
           "LAMBDA(n1 : nat) :  FORALL (b: (wf_Body(program(p!1))), v : Val)
                 (s1a, s1b, s2a: MPState) :
            monitor_related_states(p!1)(s1a, s1b) IMPLIES
             derive(p!1)(b, s1a, v, s2a)(n1) IMPLIES
              (EXISTS (s2b: MPState, n2: nat):
                 derive(complete_MP(p!1))(b, s1b, v, s2b)(n2))")
          (("1" (split -1)
            (("1" (skosimp*)
              (("1" (inst?)
                (("1" (assert)
                  (("1" (inst?) (("1" (inst?) (("1" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (skosimp*)
                (("2" (expand "derive" (-3 1))
                  (("2" (use "monitor_related_states_implies_same_exception")
                    (("2" (assert)
                      (("2"
                        (apply (branch (split -4)
                                ((then (flatten) (assert) (flatten)
                                  (assert)))))
                        (("1" (inst 1 "s1b!1" "0") nil nil)
                         ("2" (lift-if)
                          (("2" (assert)
                            (("2"
                              (apply (branch (split -1)
                                      ((then
                                        (flatten)
                                        (assert)
                                        (flatten)
                                        (assert)))))
                              (("1" (skosimp*)
                                (("1" (inst-cp -7 "m1!1")
                                  (("1" (assert)
                                    (("1"
                                      (apply
                                       (repeat (inst? -8 :where (-3 -9))))
                                      (("1"
                                        (assert)
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (use
                                             "monitor_related_states_preserved_by_derive")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst -8 "m2!1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (apply
                                                     (repeat
                                                      (inst?
                                                       -8
                                                       :where
                                                       (-1 -5))))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst
                                                           2
                                                           "s2b!2"
                                                           "1 + n2!1 + n2!2")
                                                          (("1"
                                                            (inst
                                                             2
                                                             "s2b!1"
                                                             "v1!1"
                                                             "v2!1"
                                                             "n2!1"
                                                             "n2!2")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "check_for_exception_final")
                                                                (("1"
                                                                  (expand
                                                                   "check_for_exception")
                                                                  (("1"
                                                                    (use
                                                                     "monitor_related_states_preserved_by_derive")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (use
                                                                         "monitor_related_states_implies_same_exception")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (apply (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                (("1" (inst 3 "s1b!1" "0")
                                  (("1" (assert)
                                    (("1"
                                      (use
                                       "monitor_related_states_implies_same_lookup")
                                      (("1" (assert) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (apply (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                  (("1" (skosimp*)
                                    (("1" (inst -6 "x!1 - 1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (apply
                                           (repeat (inst? -6 :where (-3 -7))))
                                          (("1"
                                            (assert)
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst 4 "s2b!1" "n2!1 + 1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (use
                                                         "monitor_related_states_preserved_by_derive")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand*
                                                             "check_for_exception_final"
                                                             "check_for_exception")
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_implies_same_exception")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (apply (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                    (("1" (skosimp*)
                                      (("1"
                                        (inst-cp -7 "m1!1")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst? -8 :where (-3 -9))))
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (use
                                                   "monitor_related_states_preserved_by_derive")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (use
                                                       "monitor_related_states_implies_same_exception")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand*
                                                           "check_for_exception_final"
                                                           "check_for_exception")
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -6)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (inst
                                                               5
                                                               "s2b!1"
                                                               "1 + n2!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst?
                                                                   5
                                                                   :where
                                                                   -12)
                                                                  (("1"
                                                                    (inst
                                                                     5
                                                                     "Bottom"
                                                                     "0")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -1)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              (("1"
                                                                (inst
                                                                 -12
                                                                 "m2!1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (apply
                                                                     (repeat
                                                                      (inst?
                                                                       -12
                                                                       :where
                                                                       (-3
                                                                        -6))))
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           6
                                                                           "s2b!2"
                                                                           "n2!1 + n2!2 + 1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst?
                                                                               6
                                                                               :where
                                                                               (-12
                                                                                -13))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst?
                                                                                   6
                                                                                   :where
                                                                                   (-12
                                                                                    -13))
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (use
                                                                                       "monitor_related_states_preserved_by_derive")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (use
                                                                                           "monitor_related_states_implies_same_exception")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 7
                                                                 "s2b!1"
                                                                 "1 + n2!1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst?
                                                                     7
                                                                     :where
                                                                     -12)
                                                                    (("2"
                                                                      (inst
                                                                       7
                                                                       "Bottom"
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (split
                                                                           7)
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (apply
                                       (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst-cp -7 "m1!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (apply
                                               (repeat
                                                (inst? -8 :where (-3 -9))))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (use
                                                     "monitor_related_states_preserved_by_derive")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst -8 "m2!1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -8
                                                               :where
                                                               (-1 -5))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   6
                                                                   "s2b!2"
                                                                   "1 + n2!1 + n2!2")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         6
                                                                         :where
                                                                         (-8
                                                                          -9))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (use
                                                                           "monitor_related_states_preserved_by_derive")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_implies_same_exception")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "check_for_exception_final"
                                                                                   "check_for_exception")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply
                                         (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                        (("1"
                                          (inst 7 "s1b!1" "0")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (use
                                               "monitor_related_states_implies_same_lookup")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (apply
                                           (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                          (("1"
                                            (inst 8 "s1b!1" "0")
                                            (("1"
                                              (use
                                               "get_address_same_in_monitor_related_states")
                                              (("1"
                                                (use
                                                 "get_dynamic_type_name_same_in_monitor_related_states")
                                                (("1" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (apply
                                             (branch
                                              (split -1)
                                              ((then
                                                (flatten)
                                                (assert)
                                                (flatten)
                                                (assert)))))
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst -6 "x!1 - 1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (apply
                                                     (repeat
                                                      (inst?
                                                       -6
                                                       :where
                                                       (-3 -7))))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst
                                                           9
                                                           "IF up?(ex(pstate(s2b!1))) THEN s2b!1 ELSE update_PState(s2b!1, update(target(b!1), v!1)) ENDIF"
                                                           "n2!1 + 1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst 9 "s2b!1")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (apply
                                               (branch
                                                (split -1)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (inst-cp -7 "m1!1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (apply
                                                       (repeat
                                                        (inst?
                                                         -8
                                                         :where
                                                         (-3 -9))))
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (use
                                                             "monitor_related_states_preserved_by_derive")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (use
                                                                 "monitor_related_states_implies_same_exception")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand*
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -6)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))))
                                                                      (("1"
                                                                        (inst
                                                                         10
                                                                         "s2b!1"
                                                                         "1 + n2!1")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               10
                                                                               :where
                                                                               -12)))
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst
                                                                         -10
                                                                         "m2!1")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -10
                                                                               :where
                                                                               (-2
                                                                                -4))))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -10)
                                                                                (("1"
                                                                                  (skosimp*)
                                                                                  (("1"
                                                                                    (inst
                                                                                     11
                                                                                     "s2b!2"
                                                                                     "1 + n2!1 + n2!2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (inst
                                                                                         11
                                                                                         "s2b!1"
                                                                                         "v1!1"
                                                                                         "n2!1"
                                                                                         "n2!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (use
                                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                                 ("b2"
                                                                                  "else_expr(b!1)"
                                                                                  "b1"
                                                                                  "b!1"))
                                                                                (("2"
                                                                                  (expand
                                                                                   "<<")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (skosimp*)
                                                                              (("3"
                                                                                (use
                                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                                 ("b2"
                                                                                  "then_expr(b!1)"
                                                                                  "b1"
                                                                                  "b!1"))
                                                                                (("3"
                                                                                  (expand
                                                                                   "<<")
                                                                                  (("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (apply
                                                 (branch
                                                  (split -1)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (inst-cp -7 "m1!1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (apply
                                                         (repeat
                                                          (inst?
                                                           -8
                                                           :where
                                                           (-3 -9))))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_preserved_by_derive")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst-cp
                                                                   -8
                                                                   "m2!1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -9
                                                                         :where
                                                                         (-1
                                                                          -5))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (use
                                                                             "monitor_related_states_preserved_by_derive")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (use
                                                                                 "monitor_related_states_implies_same_exception")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -8)
                                                                                      ((then
                                                                                        (flatten)
                                                                                        (assert)
                                                                                        (flatten)
                                                                                        (assert)))))
                                                                                    (("1"
                                                                                      (inst
                                                                                       11
                                                                                       "update_PState(s2b!2, raise(NullPointer))"
                                                                                       "1 + n2!1 + n2!2")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (inst
                                                                                           11
                                                                                           "n2!1"
                                                                                           "n2!2"
                                                                                           "0"
                                                                                           "0"
                                                                                           "0"
                                                                                           "0")
                                                                                          (("1"
                                                                                            (inst
                                                                                             11
                                                                                             "s2b!1"
                                                                                             "s2b!2"
                                                                                             "s2b!2"
                                                                                             "s2b!2"
                                                                                             "s2b!2"
                                                                                             "s2b!2"
                                                                                             "s2b!2")
                                                                                            (("1"
                                                                                              (inst
                                                                                               11
                                                                                               "a!1"
                                                                                               "pv!1"
                                                                                               "Bottom"
                                                                                               "Bottom")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   11
                                                                                                   "lvs(st(pstate(s2b!2)))")
                                                                                                  (("1"
                                                                                                    (inst?
                                                                                                     11)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "complete_MP")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         -1)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      (("1"
                                                                                        (inst
                                                                                         12
                                                                                         "s2b!2"
                                                                                         "1 + n2!1 + n2!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             12
                                                                                             "n2!1"
                                                                                             "n2!2"
                                                                                             "0"
                                                                                             "0"
                                                                                             "0"
                                                                                             "0")
                                                                                            (("1"
                                                                                              (inst
                                                                                               12
                                                                                               "s2b!1"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 12
                                                                                                 "a!1"
                                                                                                 "pv!1"
                                                                                                 "Bottom"
                                                                                                 "Bottom")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     12
                                                                                                     "lvs(st(pstate(s2b!2)))")
                                                                                                    (("1"
                                                                                                      (inst?
                                                                                                       12)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "complete_MP")
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -1)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("2"
                                                                                          (copy
                                                                                           -1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "lookup_mthd"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (branch
                                                                                                    (split
                                                                                                     -1)
                                                                                                    ((then
                                                                                                      (flatten)
                                                                                                      (assert)
                                                                                                      (flatten)
                                                                                                      (assert)))))
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "get_class_in_classes")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "EXISTS(s : MPState, n : nat) :  on_method_entry_MP(complete_MP(p!1), md!1, a!1, val(Const(pv!1)), update_stack(a!1, arg(md!1), pv!1, lvars(md!1), s2b!2), s,
                                                         n,
                                                         LAMBDA (k: upto(n))
                                                                (p: MonitoredProgram[CP, Name])
                                                                (b: (wf_Body(program(p))),
                                                                 sigma1: MPState[CP, Name], v: Val[Name],
                                                                 sigma2: MPState[CP, Name])
                                                                (m: below(k)):
                                                           derive(p)(b, sigma1, v, sigma2)(m)) AND monitor_related_states(p!1)(tau4!1, s)")
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst-cp
                                                                                                             -26
                                                                                                             "m4!1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (apply
                                                                                                                 (repeat
                                                                                                                  (inst?
                                                                                                                   -27
                                                                                                                   :where
                                                                                                                   (-12
                                                                                                                    -2))))
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "monitor_related_states_preserved_by_derive")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "monitor_related_states_implies_same_exception")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (inst-cp
                                                                                                                               -28
                                                                                                                               "m5!1")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (apply
                                                                                                                                   (repeat
                                                                                                                                    (inst?
                                                                                                                                     -29
                                                                                                                                     :where
                                                                                                                                     (-2
                                                                                                                                      -16))))
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("1"
                                                                                                                                        (use
                                                                                                                                         "monitor_related_states_preserved_by_derive")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (use
                                                                                                                                             "monitor_related_states_implies_same_exception")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (apply
                                                                                                                                                 (branch
                                                                                                                                                  (split
                                                                                                                                                   -19)
                                                                                                                                                  ((then
                                                                                                                                                    (flatten)
                                                                                                                                                    (assert)
                                                                                                                                                    (flatten)
                                                                                                                                                    (assert)))))
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "EXISTS (s : MPState, n : nat) : on_method_exit_normal_MP(complete_MP(p!1), md!1, a!1, val(Const(w!1)), s2b!4,
                                                                   s, n,
                                                                   LAMBDA (k: upto(n))
                                                                          (p: MonitoredProgram[CP, Name])
                                                                          (b: (wf_Body(program(p))),
                                                                           sigma1: MPState[CP, Name],
                                                                           v: Val[Name],
                                                                           sigma2: MPState[CP, Name])
                                                                          (m: below(k)):
                                                                     derive(p)(b, sigma1, v, sigma2)(m)) AND monitor_related_states(p!1)(tau7!1, s)")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       13
                                                                                                                                                       "update_PState(s!2,
                                                           LAMBDA (pstate: PState[Name]):
                                                             pstate
                                                               WITH [st := st(pstate) WITH [lvs := lvs(st(pstate(s2b!2)))]])"
                                                                                                                                                       "1 + n2!1 + n2!2 + n!1 + n2!3 + n2!4 + n!2")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           13
                                                                                                                                                           "n2!1"
                                                                                                                                                           "n2!2"
                                                                                                                                                           "n!1"
                                                                                                                                                           "n2!3"
                                                                                                                                                           "n2!4"
                                                                                                                                                           "n!2")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               13
                                                                                                                                                               "s2b!1"
                                                                                                                                                               "s2b!2"
                                                                                                                                                               "update_stack(a!1,
                                                                            arg(md!1),
                                                                            pv!1,
                                                                            lvars(md!1),
                                                                            s2b!2)"
                                                                                                                                                               "s!1"
                                                                                                                                                               "s2b!3"
                                                                                                                                                               "s2b!4"
                                                                                                                                                               "s!2")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   13
                                                                                                                                                                   "a!1"
                                                                                                                                                                   "pv!1"
                                                                                                                                                                   "w!1"
                                                                                                                                                                   "x!2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       13
                                                                                                                                                                       "lvs(st(pstate(s2b!2)))")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         13
                                                                                                                                                                         "md!1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (use
                                                                                                                                                                             "monitor_related_states_implies_same_exception")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "complete_MP")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "return_of_stmt")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -9)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           13)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      -3
                                                                                                                                                      -4
                                                                                                                                                      -5
                                                                                                                                                      -32
                                                                                                                                                      1))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "on_method_exit_normal_MP")
                                                                                                                                                      (("2"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst-cp
                                                                                                                                                           -12
                                                                                                                                                           "m1!2")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (apply
                                                                                                                                                               (repeat
                                                                                                                                                                (inst?
                                                                                                                                                                 -13
                                                                                                                                                                 :where
                                                                                                                                                                 (-3
                                                                                                                                                                  -11))))
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (skosimp*)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (use
                                                                                                                                                                     "monitor_related_states_preserved_by_derive")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (use
                                                                                                                                                                         "monitor_related_states_implies_same_exception")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "monitor_related_states(p!1)(tau2!2, on_method_MVA(ExitNormal)(complete_MP(p!1), md!1)(val(Const(w!1)))(s2b!5))")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "check_assertion")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                   -19
                                                                                                                                                                                   "m2!2 - 1")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (repeat
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -20
                                                                                                                                                                                         :where
                                                                                                                                                                                         (-1
                                                                                                                                                                                          -11))))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "monitor_related_states_preserved_by_derive")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "monitor_related_states(p!1)(tau3!2, IF Bool?(v!3) AND b(v!3) THEN s2b!6
       ELSE update_PState(s2b!6, raise(JMLExc))
       ENDIF)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -22
                                                                                                                                                                                                       "m3!2 -1")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (apply
                                                                                                                                                                                                           (repeat
                                                                                                                                                                                                            (inst?
                                                                                                                                                                                                             -22
                                                                                                                                                                                                             :where
                                                                                                                                                                                                             (-1
                                                                                                                                                                                                              -17))))
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (split
                                                                                                                                                                                                               -22)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       "IF Bool?(v!4) AND b(v!4) THEN s2b!7
       ELSE update_PState(s2b!7, raise(JMLExc))
       ENDIF"
                                                                                                                                                                                                                       "1 + n2!5 + n2!6 + 1 + n2!7 + 1")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (split
                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             1
                                                                                                                                                                                                                             "n2!5"
                                                                                                                                                                                                                             " n2!6 + 1"
                                                                                                                                                                                                                             " n2!7 + 1"
                                                                                                                                                                                                                             "s2b!5"
                                                                                                                                                                                                                             _
                                                                                                                                                                                                                             _
                                                                                                                                                                                                                             "v!2"
                                                                                                                                                                                                                             "inv!1")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                 "on_method_MVA(ExitNormal)(complete_MP(p!1), md!1)
                           (val(Const(w!1)))(s2b!5)"
                                                                                                                                                                                                                                 " IF Bool?(v!3) AND b(v!3) THEN s2b!6
       ELSE update_PState(s2b!6, raise(JMLExc))
       ENDIF")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "return_of_stmt")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     -7)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (split
                                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "complete_MP")
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("3"
                                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("4"
                                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("5"
                                                                                                                                                                                                                                          (expand*
                                                                                                                                                                                                                                           "monitor_related_states"
                                                                                                                                                                                                                                           "update_PState"
                                                                                                                                                                                                                                           "raise")
                                                                                                                                                                                                                                          (("5"
                                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                                            (("5"
                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                              (("5"
                                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                                 -4
                                                                                                                                                                                                                                                 :dir
                                                                                                                                                                                                                                                 rl)
                                                                                                                                                                                                                                                (("5"
                                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                                   -46
                                                                                                                                                                                                                                                   :dir
                                                                                                                                                                                                                                                   rl)
                                                                                                                                                                                                                                                  (("5"
                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                     -41)
                                                                                                                                                                                                                                                    (("5"
                                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                                       -40)
                                                                                                                                                                                                                                                      (("5"
                                                                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                                                                        (("5"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "complete_MP")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (replace
                                                                                                                                                                                                                             -20)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (split
                                                                                                                                                                                                                               -1)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                                         "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil)
                                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil)
                                                                                                                                                                                                                               ("3"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -14)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (use
                                                                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -7)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "monitor_related_states"
                                                                                                                                                                                 (1
                                                                                                                                                                                  -2))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (use
                                                                                                                                                                                     "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (split
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "on_method_MVA_yields_wf_state"
                                                                                                                                                                                                     ("mp"
                                                                                                                                                                                                      "complete_MP(p!1)"))
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "on_method_MVA")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "complete_MP(p!1)")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "wf_and_complete_MP")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (case
                                                                                                                                                   "EXISTS (s : MPState, n : nat) : on_method_exit_exceptional_MP(complete_MP(p!1),
                                    md!1,
                                    a!1,
                                    excpt(down(ex(pstate(s2b!4)))),
                                    s2b!4,
                                    s,
                                    n,
                                    LAMBDA
                                    (k: upto(n))
                                    (p: MonitoredProgram[CP, Name])
                                    (b: (wf_Body(program(p))),
                                     sigma1: MPState[CP, Name],
                                     v: Val[Name],
                                     sigma2: MPState[CP, Name])
                                    (m: below(k)):
                                    derive(p)(b, sigma1, v, sigma2)(m)) AND monitor_related_states(p!1)(tau7!1, s)")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("1"
                                                                                                                                                      (use
                                                                                                                                                       "monitor_related_states_implies_same_exception")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           14
                                                                                                                                                           "update_PState(s!2,
                                                           LAMBDA (pstate: PState[Name]):
                                                             pstate
                                                               WITH [st := st(pstate) WITH [lvs := lvs(st(pstate(s2b!2)))]])"
                                                                                                                                                           "1 + n2!1 + n2!2 + n!1 + n2!3 + n2!4 + n!2")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               14
                                                                                                                                                               "n2!1"
                                                                                                                                                               "n2!2"
                                                                                                                                                               "n!1"
                                                                                                                                                               "n2!3"
                                                                                                                                                               "n2!4"
                                                                                                                                                               "n!2")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   14
                                                                                                                                                                   "s2b!1"
                                                                                                                                                                   "s2b!2"
                                                                                                                                                                   "update_stack(a!1,
                                                                            arg(md!1),
                                                                            pv!1,
                                                                            lvars(md!1),
                                                                            s2b!2)"
                                                                                                                                                                   "s!1"
                                                                                                                                                                   "s2b!3"
                                                                                                                                                                   "s2b!4"
                                                                                                                                                                   "s!2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     14
                                                                                                                                                                     "a!1"
                                                                                                                                                                     "pv!1"
                                                                                                                                                                     "w!1"
                                                                                                                                                                     "x!2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         14
                                                                                                                                                                         "lvs(st(pstate(s2b!2)))")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst?
                                                                                                                                                                             14)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "return_of_stmt")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -7)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "complete_MP")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (apply
                                                                                                                                                                                           (branch
                                                                                                                                                                                            (split
                                                                                                                                                                                             14)
                                                                                                                                                                                            ((then
                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                              (assert)))))
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (1
                                                                                                                                                      -30
                                                                                                                                                      -1
                                                                                                                                                      -2
                                                                                                                                                      -3))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "on_method_exit_exceptional_MP")
                                                                                                                                                      (("2"
                                                                                                                                                        (apply
                                                                                                                                                         (branch
                                                                                                                                                          (split
                                                                                                                                                           -1)
                                                                                                                                                          ((then
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)))))
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("1"
                                                                                                                                                            (use
                                                                                                                                                             "monitor_related_states_preserved_by_catch")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst-cp
                                                                                                                                                                 -12
                                                                                                                                                                 "m1!2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (apply
                                                                                                                                                                     (repeat
                                                                                                                                                                      (inst?
                                                                                                                                                                       -13
                                                                                                                                                                       :where
                                                                                                                                                                       (-3
                                                                                                                                                                        -1))))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (skosimp*)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (use
                                                                                                                                                                           "monitor_related_states_preserved_by_derive")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "monitor_related_states(p!1)(tau2!2, on_method_MVA(ExitExceptional)(complete_MP(p!1), md!1)
                    (excpt(down(ex(pstate(tau6!1)))))(s2b!5))")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "check_assertion")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -16
                                                                                                                                                                                     "m2!2 - 1")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (apply
                                                                                                                                                                                         (repeat
                                                                                                                                                                                          (inst?
                                                                                                                                                                                           -16
                                                                                                                                                                                           :where
                                                                                                                                                                                           (-10
                                                                                                                                                                                            -1))))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (name
                                                                                                                                                                                               "s2b7"
                                                                                                                                                                                               "IF Bool?(v!3) AND b(v!3) THEN s2b!6
       ELSE update_PState(s2b!6, raise(JMLExc))
       ENDIF")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 2
                                                                                                                                                                                                 "IF up?(ex(pstate(s2b7))) THEN s2b7
        ELSE update_PState(s2b7, raise(down(ex(pstate(s2b!4)))))
        ENDIF"
                                                                                                                                                                                                 "1 + n2!6 + n2!5 + 1")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (use
                                                                                                                                                                                                       "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (split
                                                                                                                                                                                                           2)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             1
                                                                                                                                                                                                             "n2!5"
                                                                                                                                                                                                             "n2!6 + 1"
                                                                                                                                                                                                             "s2b!5"
                                                                                                                                                                                                             "on_method_MVA(ExitExceptional)(complete_MP(p!1), md!1)
                           (excpt(down(ex(pstate(s2b!4)))))(s2b!5)"
                                                                                                                                                                                                             "s2b7"
                                                                                                                                                                                                             "v!2"
                                                                                                                                                                                                             "inv!1")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "return_of_stmt")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "monitor_related_states_implies_same_exception"
                                                                                                                                                                                                                   ("s1"
                                                                                                                                                                                                                    "tau1!2"
                                                                                                                                                                                                                    "s2"
                                                                                                                                                                                                                    "s2b!5"))
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "complete_MP")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("3"
                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -4)
                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("4"
                                                                                                                                                                                                                          (expand*
                                                                                                                                                                                                                           "monitor_related_states"
                                                                                                                                                                                                                           "update_PState"
                                                                                                                                                                                                                           "raise")
                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                            (("4"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -38
                                                                                                                                                                                                                               :dir
                                                                                                                                                                                                                               rl)
                                                                                                                                                                                                                              (("4"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 -32)
                                                                                                                                                                                                                                (("4"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   -31)
                                                                                                                                                                                                                                  (("4"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     -8
                                                                                                                                                                                                                                     :dir
                                                                                                                                                                                                                                     rl)
                                                                                                                                                                                                                                    (("4"
                                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "complete_MP")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -15)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (case
                                                                                                                                                                                                               "monitor_related_states(p!1)(tau3!2, s2b7)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (use
                                                                                                                                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (split
                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -19)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (use
                                                                                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -14)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -3
                                                                                                                                                                                                                   :dir
                                                                                                                                                                                                                   rl)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (use
                                                                                                                                                                                                                             "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -6)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "monitor_related_states"
                                                                                                                                                                                   (-1
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   -2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (use
                                                                                                                                                                                                       "on_method_MVA_yields_wf_state"
                                                                                                                                                                                                       ("mp"
                                                                                                                                                                                                        "complete_MP(p!1)"))
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "on_method_MVA")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                     "complete_MP(p!1)")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "wf_and_complete_MP")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             1
                                                                                                                                                             "s2b!4")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            2
                                                                                                            -17
                                                                                                            -7
                                                                                                            -9
                                                                                                            -24
                                                                                                            -1
                                                                                                            -2
                                                                                                            -4
                                                                                                            -5))
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "monitor_related_states_preserved_by_update_stack")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (expand*
                                                                                                                   "on_method_entry_MP"
                                                                                                                   "on_method_entry")
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (apply
                                                                                                                       (branch
                                                                                                                        (split
                                                                                                                         -7)
                                                                                                                        ((then
                                                                                                                          (flatten)
                                                                                                                          (assert)
                                                                                                                          (flatten)
                                                                                                                          (assert)))))
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -9)
                                                                                                                        (("1"
                                                                                                                          (expand*
                                                                                                                           "update_stack"
                                                                                                                           "update_PState"
                                                                                                                           "o"
                                                                                                                           "update_local")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "check_assertion")
                                                                                                                          (("2"
                                                                                                                            (skosimp*)
                                                                                                                            (("2"
                                                                                                                              (inst-cp
                                                                                                                               -20
                                                                                                                               "m1!2 - 1")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -17
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("1"
                                                                                                                                    (apply
                                                                                                                                     (repeat
                                                                                                                                      (inst?
                                                                                                                                       -21
                                                                                                                                       :where
                                                                                                                                       (-4
                                                                                                                                        -12))))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("1"
                                                                                                                                          (use
                                                                                                                                           "monitor_related_states_preserved_by_derive")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "monitor_related_states(p!1)(tau1!2, IF Bool?(v!3) AND b(v!3) THEN s2b!3
                                                 ELSE update_PState(s2b!3, raise(JMLExc))
                                                 ENDIF)")
                                                                                                                                              (("1"
                                                                                                                                                (inst-cp
                                                                                                                                                 -22
                                                                                                                                                 "m2!2 - 1")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (apply
                                                                                                                                                     (repeat
                                                                                                                                                      (inst?
                                                                                                                                                       -23
                                                                                                                                                       :where
                                                                                                                                                       (-1
                                                                                                                                                        -9))))
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (split
                                                                                                                                                         -23)
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("1"
                                                                                                                                                            (use
                                                                                                                                                             "monitor_related_states_preserved_by_derive")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (split
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "monitor_related_states(p!1)(tau2!2, IF Bool?(v!4) AND b(v!4) THEN s2b!4
                                                       ELSE update_PState(s2b!4, raise(JMLExc))
                                                       ENDIF)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -25
                                                                                                                                                                     "m3!2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (apply
                                                                                                                                                                         (repeat
                                                                                                                                                                          (inst?
                                                                                                                                                                           -25
                                                                                                                                                                           :where
                                                                                                                                                                           (-1
                                                                                                                                                                            -14))))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (split
                                                                                                                                                                             -25)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (use
                                                                                                                                                                                 "monitor_related_states_preserved_by_derive")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (split
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (branch
                                                                                                                                                                                        (split
                                                                                                                                                                                         -25)
                                                                                                                                                                                        ((then
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (assert)))))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         2
                                                                                                                                                                                         "s2b!5"
                                                                                                                                                                                         "1 + n2!3 + 1 + n2!4 + 1 + n2!5")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             2
                                                                                                                                                                                             "s2b!5")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "monitor_related_states_implies_same_exception")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand*
                                                                                                                                                                                                     "update_stack"
                                                                                                                                                                                                     "update_PState"
                                                                                                                                                                                                     "o"
                                                                                                                                                                                                     "update_local")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       2
                                                                                                                                                                                                       "n2!3 + 1"
                                                                                                                                                                                                       "n2!4 + 1"
                                                                                                                                                                                                       "n2!5"
                                                                                                                                                                                                       _
                                                                                                                                                                                                       _
                                                                                                                                                                                                       "v!2"
                                                                                                                                                                                                       "inv!1")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         2
                                                                                                                                                                                                         "IF Bool?(v!3) AND b(v!3) THEN s2b!3
                                                                                                                                 ELSE update_PState(s2b!3, raise(JMLExc))
                                                                                                                                 ENDIF"
                                                                                                                                                                                                         "IF Bool?(v!4) AND b(v!4) THEN s2b!4
                                                                                                                                 ELSE update_PState(s2b!4, raise(JMLExc))
                                                                                                                                 ENDIF")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "complete_MP")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("3"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("4"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("5"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "return_of_stmt")
                                                                                                                                                                                                              (("5"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("6"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "monitor_related_states")
                                                                                                                                                                                                              (("6"
                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                (("6"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "complete_MP")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         3
                                                                                                                                                                                         "on_method_MVA(Entry)(complete_MP(p!1), md!1)(val(Const(pv!1)))(s2b!5)"
                                                                                                                                                                                         "1 + n2!3 + 1 + n2!4 + 1 + n2!5")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (split
                                                                                                                                                                                             3)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "monitor_related_states_implies_same_exception")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   1
                                                                                                                                                                                                   "s2b!5")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand*
                                                                                                                                                                                                         "update_stack"
                                                                                                                                                                                                         "update_PState"
                                                                                                                                                                                                         "o"
                                                                                                                                                                                                         "update_local")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           2
                                                                                                                                                                                                           "n2!3 + 1"
                                                                                                                                                                                                           "n2!4 + 1"
                                                                                                                                                                                                           "n2!5"
                                                                                                                                                                                                           _
                                                                                                                                                                                                           _
                                                                                                                                                                                                           "v!2"
                                                                                                                                                                                                           "inv!1")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             2
                                                                                                                                                                                                             "IF Bool?(v!3) AND b(v!3) THEN s2b!3
                                                                                                                                 ELSE update_PState(s2b!3, raise(JMLExc))
                                                                                                                                 ENDIF"
                                                                                                                                                                                                             "IF Bool?(v!4) AND b(v!4) THEN s2b!4
                                                                                                                                 ELSE update_PState(s2b!4, raise(JMLExc))
                                                                                                                                 ENDIF")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (split
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "complete_MP")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("3"
                                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("4"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("5"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "return_of_stmt")
                                                                                                                                                                                                                  (("5"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("6"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "monitor_related_states")
                                                                                                                                                                                                                  (("6"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (("6"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "complete_MP")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "monitor_related_states"
                                                                                                                                                                                               (-2
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -2)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             -1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (use
                                                                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (use
                                                                                                                                                                                                                     "on_method_MVA_yields_wf_state"
                                                                                                                                                                                                                     ("mp"
                                                                                                                                                                                                                      "complete_MP(p!1)"))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "on_method_MVA")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (typepred
                                                                                                                                                                                                               "complete_MP(p!1)")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "wf_and_complete_MP")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "complete_MP")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("3"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -12)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (propax)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (use
                                                                                                                                                                               "monitor_related_states_preserved_by_raise")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -6)
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (split
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        (("2"
                                                                                                                                                          (use
                                                                                                                                                           "monitor_related_states_preserved_by_raise")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "getLocalDecls")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "getLocalDecls")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "lookup_mthd")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "getLocalDecls")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "getLocalDecls")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "lookup_mthd")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (expand
                                                                                                           "complete_MP")
                                                                                                          (("3"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (apply
                                                   (branch
                                                    (split -1)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("1"
                                                    (inst 12 "s1b!1" "0")
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (apply
                                                     (branch
                                                      (split -1)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    (("1"
                                                      (expand
                                                       "execute_CaseJML")
                                                      (("1"
                                                        (expand "extend")
                                                        (("1"
                                                          (expand
                                                           "complete_MP"
                                                           13
                                                           1)
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -3)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (apply
                                                                 (branch
                                                                  (split -2)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (inst
                                                                   13
                                                                   "s1b!1"
                                                                   "0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "return_of_stmt")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   -8
                                                                   "x!1 - 1")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -8
                                                                         :where
                                                                         (-2
                                                                          -9))))
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             14
                                                                             "s2b!1"
                                                                             "n2!1 + 1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "return_of_stmt")
                                                                                (("2"
                                                                                  (use
                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (use
                                                                                       "monitor_related_states_implies_same_exception")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "monitor_related_states")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (apply
                                                       (branch
                                                        (split -1)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst-cp -8 "m1!1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (repeat
                                                                (inst?
                                                                 -9
                                                                 :where
                                                                 (-4 -10))))
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (expand
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (use
                                                                       "monitor_related_states_preserved_by_derive")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (use
                                                                           "monitor_related_states_implies_same_exception")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (branch
                                                                                (split
                                                                                 -7)
                                                                                ((then
                                                                                  (flatten)
                                                                                  (assert)
                                                                                  (flatten)
                                                                                  (assert)))))
                                                                              (("1"
                                                                                (inst
                                                                                 14
                                                                                 "s2b!1"
                                                                                 "n2!1 + 1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "return_of_stmt")
                                                                                    (("1"
                                                                                      (inst?
                                                                                       14
                                                                                       :where
                                                                                       -13)
                                                                                      (("1"
                                                                                        (inst
                                                                                         14
                                                                                         "0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (inst
                                                                                 -11
                                                                                 "m2!1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (apply
                                                                                     (repeat
                                                                                      (inst?
                                                                                       -11
                                                                                       :where
                                                                                       (-2
                                                                                        -4))))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -11)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (inst
                                                                                             15
                                                                                             "s2b!2"
                                                                                             "n2!1 + n2!2 + 1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "return_of_stmt")
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -1
                                                                                                       :where
                                                                                                       (-2
                                                                                                        -4))))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "monitor_related_states_implies_same_exception")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 15)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst?
                                                                                                                   1
                                                                                                                   :where
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "n2!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                                         ("b2"
                                                                                                          "else_stmt(b!1)"
                                                                                                          "b1"
                                                                                                          "b!1"))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "<<")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (skosimp*)
                                                                                                      (("3"
                                                                                                        (use
                                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                                         ("b2"
                                                                                                          "then_stmt(b!1)"
                                                                                                          "b1"
                                                                                                          "b!1"))
                                                                                                        (("3"
                                                                                                          (expand
                                                                                                           "<<")
                                                                                                          (("3"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (use
                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                         ("b2"
                                                                                          "else_stmt(b!1)"
                                                                                          "b1"
                                                                                          "b!1"))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "<<")
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (use
                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                         ("b2"
                                                                                          "then_stmt(b!1)"
                                                                                          "b1"
                                                                                          "b!1"))
                                                                                        (("3"
                                                                                          (expand
                                                                                           "<<")
                                                                                          (("3"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (apply
                                                         (branch
                                                          (split -1)
                                                          ((then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))))
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst-cp
                                                               -8
                                                               "m1!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (repeat
                                                                    (inst?
                                                                     -9
                                                                     :where
                                                                     (-4
                                                                      -10))))
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (use
                                                                         "monitor_related_states_preserved_by_derive")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (use
                                                                             "monitor_related_states_implies_same_exception")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 -10
                                                                                 "m2!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (repeat
                                                                                      (inst?
                                                                                       -10
                                                                                       :where
                                                                                       (-8
                                                                                        -2))))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (inst
                                                                                           15
                                                                                           "s2b!2"
                                                                                           "n2!1 + n2!2 + 1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "return_of_stmt")
                                                                                              (("1"
                                                                                                (use
                                                                                                 "monitor_related_states_preserved_by_derive")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "monitor_related_states_implies_same_exception")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           15)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (inst?
                                                                                                             1
                                                                                                             :where
                                                                                                             (-13
                                                                                                              -12))
                                                                                                            (("2"
                                                                                                              (inst?
                                                                                                               1
                                                                                                               :where
                                                                                                               (-13
                                                                                                                -12))
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply
                                                           (branch
                                                            (split -1)
                                                            ((then
                                                              (flatten)
                                                              (assert)
                                                              (flatten)
                                                              (assert)))))
                                                          (("1"
                                                            (expand
                                                             "execute_set")
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (inst
                                                                 -8
                                                                 "x!1 - 1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (apply
                                                                     (repeat
                                                                      (inst?
                                                                       -8
                                                                       :where
                                                                       (-4
                                                                        -9))))
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           16
                                                                           "IF up?(ex(pstate(s2b!1))) THEN s2b!1 ELSE update_GhostVars(s2b!1, update_store(target(b!1), v!2)) ENDIF "
                                                                           "n2!1 + 1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_preserved_by_derive")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_implies_same_exception")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (split
                                                                                         16)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "return_of_stmt")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "update_GhostVars")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (branch
                                                                                                      (split
                                                                                                       1)
                                                                                                      ((then
                                                                                                        (flatten)
                                                                                                        (assert)
                                                                                                        (flatten)
                                                                                                        (assert)))))
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst?
                                                                                           1
                                                                                           :where
                                                                                           -10)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (branch
                                                                                                    (split
                                                                                                     1)
                                                                                                    ((then
                                                                                                      (flatten)
                                                                                                      (assert)
                                                                                                      (flatten)
                                                                                                      (assert)))))
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -7)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_GhostVars")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "monitor_related_states")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply
                                                             (branch
                                                              (split -1)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (inst
                                                               17
                                                               "s1b!1"
                                                               "0")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "return_of_stmt")
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -1)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     -6
                                                                     "x!1 - 1")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -6
                                                                           :where
                                                                           (-4
                                                                            -7))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst
                                                                               18
                                                                               "s2b!1"
                                                                               "n2!1 + 1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (use
                                                                                       "monitor_related_states_implies_same_exception")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "return_of_stmt")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (split
                                                                                               18)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst?)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (apply
                                                                 (branch
                                                                  (split -1)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (inst
                                                                   19
                                                                   "update_PState(s1b!1, raise(exc(b!1)))"
                                                                   "0")
                                                                  (("1"
                                                                    (expand
                                                                     "return_of_stmt")
                                                                    (("1"
                                                                      (expand
                                                                       "update_PState")
                                                                      (("1"
                                                                        (expand
                                                                         "raise")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (apply
                                                                   (branch
                                                                    (split -1)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (skosimp*)
                                                                    (("1"
                                                                      (inst-cp
                                                                       -11
                                                                       "m1!1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -12
                                                                             :where
                                                                             (-4
                                                                              -13))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (use
                                                                                 "monitor_related_states_preserved_by_derive")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (use
                                                                                     "monitor_related_states_implies_same_exception")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -8)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -16
                                                                                           "m2!1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (use
                                                                                               "monitor_related_states_preserved_by_catch")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (apply
                                                                                                   (repeat
                                                                                                    (inst?
                                                                                                     -18
                                                                                                     :where
                                                                                                     (-1
                                                                                                      -4))))
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -17
                                                                                                         "m3!1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "monitor_related_states_preserved_by_derive")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "monitor_related_states_preserved_by_catch")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (apply
                                                                                                                           (repeat
                                                                                                                            (inst?
                                                                                                                             -19
                                                                                                                             :where
                                                                                                                             (-15
                                                                                                                              -1))))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (skosimp*)
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "monitor_related_states_preserved_by_derive")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (use
                                                                                                                                     "monitor_related_states_implies_same_exception")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         20
                                                                                                                                         "IF NOT up?(ex(pstate(s2b!3))) THEN update_PState(s2b!3, LAMBDA(ptau3 : PState) : ptau3 WITH [ex := ex(pstate(s2b!2))]) ELSE s2b!3 ENDIF"
                                                                                                                                         "1 + n2!1 + n2!2 + n2!3")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (split
                                                                                                                                             20)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -19)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -4)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -13)
                                                                                                                                                      (("1"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "return_of_stmt")
                                                                                                                                                          (("1"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "update_PState")
                                                                                                                                                                (("1"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "n2!1"
                                                                                                                                               "n2!2"
                                                                                                                                               "n2!3"
                                                                                                                                               "s2b!1"
                                                                                                                                               "s2b!2"
                                                                                                                                               "s2b!3"
                                                                                                                                               "v1!1"
                                                                                                                                               "v2!1"
                                                                                                                                               "v3!1")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "return_of_stmt")
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -4)
                                                                                                                                                        (("2"
                                                                                                                                                          (split
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (use
                                                                                           "monitor_related_states_preserved_by_catch")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -2
                                                                                               :hide?
                                                                                               t)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -14
                                                                                                 "m3!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -14
                                                                                                       :where
                                                                                                       (-10
                                                                                                        -1))))
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           21
                                                                                                           "IF NOT up?(ex(pstate(s2b!2))) THEN update_PState(s2b!2, LAMBDA(ptau3 : PState) : ptau3 WITH [ex := ex(pstate(s2b!1))]) ELSE s2b!2 ENDIF"
                                                                                                           "1 + n2!1 + n2!2 ")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "monitor_related_states_preserved_by_derive")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (use
                                                                                                                   "monitor_related_states_implies_same_exception")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       21)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -14)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -5)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -8)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "return_of_stmt")
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "update_PState")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "n2!1"
                                                                                                                         "0"
                                                                                                                         "n2!2"
                                                                                                                         "s2b!1"
                                                                                                                         "s2b!1"
                                                                                                                         "s2b!2"
                                                                                                                         "v1!1"
                                                                                                                         "Bottom"
                                                                                                                         "v3!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "return_of_stmt")
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -5)
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("4"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("4"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (apply
                                                                     (branch
                                                                      (split
                                                                       -1)
                                                                      ((then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))))
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "x!1 - 1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -6
                                                                             :where
                                                                             (-4
                                                                              -7))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 21
                                                                                 "s2b!1"
                                                                                 "n2!1 + 1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (use
                                                                                     "monitor_related_states_preserved_by_derive")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (use
                                                                                         "monitor_related_states_implies_same_exception")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "return_of_stmt")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "execute_assert")
                                                                      (("2"
                                                                        (expand
                                                                         "check_assertion")
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             -7
                                                                             "x!1 - 1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (apply
                                                                                 (repeat
                                                                                  (inst?
                                                                                   -7
                                                                                   :where
                                                                                   (-3
                                                                                    -8))))
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (inst
                                                                                       22
                                                                                       "IF Bool?(v!2) AND b(v!2) THEN s2b!1 ELSE update_PState(s2b!1, raise(JMLExc)) ENDIF"
                                                                                       "n2!1 + 1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (use
                                                                                           "monitor_related_states_preserved_by_derive")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (use
                                                                                               "monitor_related_states_implies_same_exception")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   22)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "return_of_stmt")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -6)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "raise")
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (inst?
                                                                                                     1
                                                                                                     :where
                                                                                                     -9)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (lift-if)
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "monitor_related_states")
                                                                                                      (("3"
                                                                                                        (flatten)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "update_PState")
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "raise")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (use "wf_nat") nil nil))
      nil))
    nil)
   unfinished
   ((wf_nat formula-decl nil naturalnumbers nil)
    (monitor_related_states_implies_same_exception formula-decl nil
     CompleteMonitor nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (varname shared-adt-accessor-decl
     "[{x: Body | RefVarEval?(x) OR BoolVarEval?(x) OR NumVarEval?(x)} -> Name]"
     Body_adt nil)
    (monitor_related_states_implies_same_lookup formula-decl nil
     CompleteMonitor nil)
    (Bottom adt-constructor-decl "(Bottom?)" Val_adt nil)
    (Bottom? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (source shared-adt-accessor-decl
     "[{x: Body | Set?(x) OR Assign?(x)} -> Expr]" Body_adt nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (update const-decl "PState" State nil)
    (target shared-adt-accessor-decl
            "[{x: Body | Set?(x) OR Assign?(x)} -> Name]" Body_adt nil)
    (tgt adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (raise const-decl "PState" State nil)
    (NullPointer? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (NullPointer adt-constructor-decl "(NullPointer?)" Excpt_adt nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (val adt-constructor-decl "[Expr -> (val?)]" ValOrExcpt_adt nil)
    (Const adt-constructor-decl "[(defined?) -> (Const?)]" Body_adt nil)
    (update_stack const-decl "FullState" Semantics nil)
    (ExitNormal adt-constructor-decl "(ExitNormal?)" EventType_adt nil)
    (ExitNormal? adt-recognizer-decl "[EventType -> boolean]" EventType_adt
     nil)
    (on_method_MVA const-decl "MPState" MonitoredProgramSemantics nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (monitor_related_states_preserved_by_raise formula-decl nil
     CompleteMonitor nil)
    nil (check_assertion const-decl "boolean" SemanticsJML nil)
    (monitor_related_astates_preserved_by_on_method_MVA formula-decl nil
     CompleteMonitor nil)
    (complete_MVA_never_stuck_after_on_method_MVA formula-decl nil
     MonitoredProgramSemantics nil)
    (on_method_MVA_yields_wf_state formula-decl nil MonitoredProgramSemantics
     nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil) nil
    (monitor_related_states_preserved_by_catch formula-decl nil
     CompleteMonitor nil)
    (catch const-decl "PState" State nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ExitExceptional adt-constructor-decl "(ExitExceptional?)" EventType_adt
     nil)
    (ExitExceptional? adt-recognizer-decl "[EventType -> boolean]"
     EventType_adt nil)
    (excpt? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (excpt adt-constructor-decl "[Excpt -> (excpt?)]" ValOrExcpt_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (monitor_related_states_preserved_by_update_stack formula-decl nil
     CompleteMonitor nil)
    (Entry adt-constructor-decl "(Entry?)" EventType_adt nil)
    (Entry? adt-recognizer-decl "[EventType -> boolean]" EventType_adt nil)
    (update_local const-decl "PState" State nil)
    (O const-decl "T3" function_props nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (PRED type-eq-decl nil defined_types nil) (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (methods const-decl "finite_set[Method]" ProgramFunctions nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil)
    (name adt-accessor-decl "[(MethodCall?) -> Name]" Body_adt nil)
    (arg adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (extend const-decl "R" extend nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (CaseJML adt-constructor-decl "[list[[Expr, Stmt]] -> (CaseJML?)]"
     Body_adt nil)
    (branches adt-accessor-decl "[(CaseJML?) -> list[[Expr, Stmt]]]" Body_adt
     nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (IfThenElse adt-constructor-decl "[[Expr, Stmt, Stmt] -> (IfThenElse?)]"
     Body_adt nil)
    (s2 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (s1 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (exc shared-adt-accessor-decl
     "[{x: Body | TryCatch?(x) OR Throw?(x)} -> Excpt]" Body_adt nil)
    (Skip adt-constructor-decl "(Skip?)" Body_adt nil)
    (body adt-accessor-decl "[(While?) -> Stmt]" Body_adt nil)
    (While adt-constructor-decl "[[Expr, Stmt] -> (While?)]" Body_adt nil)
    (finally adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (catch adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (try adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (expr shared-adt-accessor-decl
          "[{x: Body | Assert?(x) OR StmtExpr?(x)} -> Expr]" Body_adt nil)
    (update_store const-decl "Store" State nil)
    (else_stmt adt-accessor-decl "[(IfThenElse?) -> Stmt]" Body_adt nil)
    (then_stmt adt-accessor-decl "[(IfThenElse?) -> Stmt]" Body_adt nil)
    (else_expr adt-accessor-decl "[(CondExpr?) -> Expr]" Body_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (then_expr adt-accessor-decl "[(CondExpr?) -> Expr]" Body_adt nil)
    (b adt-accessor-decl "[(Bool?) -> bool]" Val_adt nil)
    (Bool? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (wf_Body_preserved_by_proper_subterm formula-decl nil WellFormedProgram
     nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (test shared-adt-accessor-decl
     "[{x: Body | While?(x) OR IfThenElse?(x) OR CondExpr?(x)} -> Expr]"
     Body_adt nil)
    (get_dynamic_type_name_same_in_monitor_related_states formula-decl nil
     CompleteMonitor nil)
    (get_address_same_in_monitor_related_states formula-decl nil
     CompleteMonitor nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (b adt-accessor-decl "[(Neg?) -> Expr]" Body_adt nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (monitor_related_states_preserved_by_derive formula-decl nil
     CompleteMonitor nil)
    (b2 shared-adt-accessor-decl
     "[{x: Body | Eq?(x) OR Conj?(x) OR Plus?(x)} -> Expr]" Body_adt nil)
    nil nil (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (b1 shared-adt-accessor-decl
     "[{x: Body | Eq?(x) OR Conj?(x) OR Plus?(x)} -> Expr]" Body_adt nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (derive def-decl "bool" Semantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) nil nil
    (Transition type-eq-decl nil MVA nil) (Guard type-eq-decl nil MVA nil)
    (Action type-eq-decl nil MVA nil) (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) nil
    (Expr type-eq-decl nil Body_adt nil)
    (finite_set type-eq-decl nil finite_sets nil) nil
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Body type-decl nil Body_adt nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (complete_MP_preserves_wf_body formula-decl nil CompleteMonitor nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (pred type-eq-decl nil defined_types nil)
    (well_founded? const-decl "bool" orders nil)
    (wf_induction formula-decl nil wf_induction nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil))
   73975 68210 t shostak))
 (monitor_related_states_implies_derive_converse_TCC1 0
  (monitor_related_states_implies_derive_converse_TCC1-1 nil 3413713509
   3428746818 ("" (subtype-tcc) nil nil) proved
   ((monitor_related_astates const-decl "boolean" CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (defined? const-decl "boolean" ValProp nil)
    (var_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (wf_store const-decl "boolean" State nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (is_field const-decl "boolean" State nil)
    (getFieldDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_local const-decl "boolean" State nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (wf_state const-decl "boolean" State nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil) (lift type-decl nil lift_adt nil)
    (Excpt type-decl nil Excpt_adt nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_ghost const-decl "boolean" SemanticsJML nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (skip const-decl "Action" MVA nil)
    (complete_trans const-decl "finite_set[Transition]" MVACompletion nil)
    (complete_MVA const-decl "MVA" MVACompletion nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (member const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (monitor_related_states const-decl "boolean" CompleteMonitor nil))
   1720 1620 nil nil))
 (monitor_related_states_implies_derive_converse 0
  (monitor_related_states_implies_derive_converse-2 nil 3413714427 3428746897
   ("" (skolem 1 ("p!1" _ _))
    (("" (lemma "wf_induction[nat, LAMBDA(i, j : nat) : i < j]")
      (("1" (auto-rewrite "complete_MP_preserves_wf_body")
        (("1"
          (inst -1
           "LAMBDA(n1 : nat) :  FORALL (b: (wf_Body(program(p!1))), v : Val)
                         (s1a, s1b, s2a: MPState) :
                    monitor_related_states(p!1)(s1b, s1a) IMPLIES
                     derive(complete_MP(p!1))(b, s1a, v, s2a)(n1) IMPLIES
                      (EXISTS (s2b: MPState, n2: nat):
                         derive(p!1)(b, s1b, v, s2b)(n2))")
          (("1" (split -1)
            (("1" (skosimp*)
              (("1" (inst?)
                (("1" (assert)
                  (("1" (inst?) (("1" (inst?) (("1" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (skosimp*)
                (("2" (expand "derive" (-3 1))
                  (("2" (use "monitor_related_states_implies_same_exception")
                    (("2" (assert)
                      (("2"
                        (apply (branch (split -4)
                                ((then (flatten) (assert) (flatten)
                                  (assert)))))
                        (("1" (inst 1 "s1b!1" "0") nil nil)
                         ("2" (lift-if)
                          (("2" (assert)
                            (("2"
                              (apply (branch (split -1)
                                      ((then
                                        (flatten)
                                        (assert)
                                        (flatten)
                                        (assert)))))
                              (("1" (skosimp*)
                                (("1" (inst-cp -7 "m1!1")
                                  (("1" (assert)
                                    (("1"
                                      (apply
                                       (repeat (inst? -8 :where (-3 -9))))
                                      (("1"
                                        (assert)
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (use
                                             "monitor_related_states_preserved_by_derive")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst -8 "m2!1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (apply
                                                     (repeat
                                                      (inst?
                                                       -8
                                                       :where
                                                       (-1 -5))))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst
                                                           2
                                                           "s2b!2"
                                                           "1 + n2!1 + n2!2")
                                                          (("1"
                                                            (inst
                                                             2
                                                             "s2b!1"
                                                             "v1!1"
                                                             "v2!1"
                                                             "n2!1"
                                                             "n2!2")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "check_for_exception_final")
                                                                (("1"
                                                                  (expand
                                                                   "check_for_exception")
                                                                  (("1"
                                                                    (use
                                                                     "monitor_related_states_preserved_by_derive"
                                                                     ("s1a"
                                                                      "s2b!1"
                                                                      "s1b"
                                                                      "tau!1"))
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (use
                                                                         "monitor_related_states_implies_same_exception")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (apply
                                                       (then
                                                        (use
                                                         "wf_Body_preserved_by_proper_subterm"
                                                         ("b2"
                                                          "b2(b!1)"
                                                          "b1"
                                                          "b!1"))
                                                        (expand "<<")
                                                        (assert)))
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply
                                         (then
                                          (use
                                           "wf_Body_preserved_by_proper_subterm"
                                           ("b2" "b1(b!1)" "b1" "b!1"))
                                          (expand "<<")
                                          (assert)))
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (apply (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                (("1" (inst 3 "s1b!1" "0")
                                  (("1" (assert)
                                    (("1"
                                      (use
                                       "monitor_related_states_implies_same_lookup")
                                      (("1" (assert) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (apply (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                  (("1" (skosimp*)
                                    (("1" (inst -6 "x!1 - 1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (apply
                                           (repeat (inst? -6 :where (-3 -7))))
                                          (("1"
                                            (assert)
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst 4 "s2b!1" "n2!1 + 1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (use
                                                         "monitor_related_states_preserved_by_derive")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand*
                                                             "check_for_exception_final"
                                                             "check_for_exception")
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_implies_same_exception")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (apply
                                             (then
                                              (use
                                               "wf_Body_preserved_by_proper_subterm"
                                               ("b2" "b(b!1)" "b1" "b!1"))
                                              (expand "<<")
                                              (assert)))
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (apply (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                    (("1" (skosimp*)
                                      (("1"
                                        (inst-cp -7 "m1!1")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst? -8 :where (-3 -9))))
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (use
                                                   "monitor_related_states_preserved_by_derive")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (use
                                                       "monitor_related_states_implies_same_exception")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand*
                                                           "check_for_exception_final"
                                                           "check_for_exception")
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -6)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (inst
                                                               5
                                                               "s2b!1"
                                                               "1 + n2!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst?
                                                                   5
                                                                   :where
                                                                   -12)
                                                                  (("1"
                                                                    (inst
                                                                     5
                                                                     "Bottom"
                                                                     "0")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -1)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              (("1"
                                                                (inst
                                                                 -12
                                                                 "m2!1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (apply
                                                                     (repeat
                                                                      (inst?
                                                                       -12
                                                                       :where
                                                                       (-3
                                                                        -6))))
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           6
                                                                           "s2b!2"
                                                                           "n2!1 + n2!2 + 1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst?
                                                                               6
                                                                               :where
                                                                               (-12
                                                                                -13))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst?
                                                                                   6
                                                                                   :where
                                                                                   (-12
                                                                                    -13))
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (use
                                                                                       "monitor_related_states_preserved_by_derive")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (use
                                                                                           "monitor_related_states_implies_same_exception")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       7
                                                                       "s2b!1"
                                                                       "1 + n2!1")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst?
                                                                           7
                                                                           :where
                                                                           -12)
                                                                          (("2"
                                                                            (inst
                                                                             7
                                                                             "Bottom"
                                                                             "0")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (split
                                                                                 7)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (apply
                                                                                   (then
                                                                                    (use
                                                                                     "wf_Body_preserved_by_proper_subterm"
                                                                                     ("b2"
                                                                                      "b2(b!1)"
                                                                                      "b1"
                                                                                      "b!1"))
                                                                                    (expand
                                                                                     "<<")
                                                                                    (assert)))
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 7
                                                                 "s2b!1"
                                                                 "1 + n2!1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst?
                                                                     7
                                                                     :where
                                                                     -12)
                                                                    (("2"
                                                                      (inst
                                                                       7
                                                                       "Bottom"
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (split
                                                                           7)
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (apply
                                               (then
                                                (use
                                                 "wf_Body_preserved_by_proper_subterm"
                                                 ("b2" "b1(b!1)" "b1" "b!1"))
                                                (expand "<<")
                                                (assert)))
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (apply
                                       (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst-cp -7 "m1!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (apply
                                               (repeat
                                                (inst? -8 :where (-3 -9))))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (use
                                                     "monitor_related_states_preserved_by_derive")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst -8 "m2!1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -8
                                                               :where
                                                               (-1 -5))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   6
                                                                   "s2b!2"
                                                                   "1 + n2!1 + n2!2")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         6
                                                                         :where
                                                                         (-8
                                                                          -9))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (use
                                                                           "monitor_related_states_preserved_by_derive"
                                                                           ("s1a"
                                                                            "s2b!1"
                                                                            "s1b"
                                                                            "tau!1"))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_implies_same_exception")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "check_for_exception_final"
                                                                                   "check_for_exception")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (then
                                                                (use
                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                 ("b2"
                                                                  "b2(b!1)"
                                                                  "b1"
                                                                  "b!1"))
                                                                (expand "<<")
                                                                (assert)))
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (apply
                                                 (then
                                                  (use
                                                   "wf_Body_preserved_by_proper_subterm"
                                                   ("b2"
                                                    "b1(b!1)"
                                                    "b1"
                                                    "b!1"))
                                                  (expand "<<")
                                                  (assert)))
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply
                                         (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                        (("1"
                                          (inst 7 "s1b!1" "0")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (use
                                               "monitor_related_states_implies_same_lookup")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (apply
                                           (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                          (("1"
                                            (inst 8 "s1b!1" "0")
                                            (("1"
                                              (use
                                               "get_address_same_in_monitor_related_states")
                                              (("1"
                                                (use
                                                 "get_dynamic_type_name_same_in_monitor_related_states")
                                                (("1" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (apply
                                             (branch
                                              (split -1)
                                              ((then
                                                (flatten)
                                                (assert)
                                                (flatten)
                                                (assert)))))
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst -6 "x!1 - 1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (apply
                                                     (repeat
                                                      (inst?
                                                       -6
                                                       :where
                                                       (-3 -7))))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst
                                                           9
                                                           "IF up?(ex(pstate(s2b!1))) THEN s2b!1 ELSE update_PState(s2b!1, update(target(b!1), v!1)) ENDIF"
                                                           "n2!1 + 1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst 9 "s2b!1")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (apply
                                                       (then
                                                        (use
                                                         "wf_Body_preserved_by_proper_subterm"
                                                         ("b2"
                                                          "source(b!1)"
                                                          "b1"
                                                          "b!1"))
                                                        (expand "<<")
                                                        (assert)))
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (apply
                                               (branch
                                                (split -1)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (inst-cp -7 "m1!1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (apply
                                                       (repeat
                                                        (inst?
                                                         -8
                                                         :where
                                                         (-3 -9))))
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (use
                                                             "monitor_related_states_preserved_by_derive")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (use
                                                                 "monitor_related_states_implies_same_exception")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand*
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -6)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))))
                                                                      (("1"
                                                                        (inst
                                                                         10
                                                                         "s2b!1"
                                                                         "1 + n2!1")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               10
                                                                               :where
                                                                               -12)))
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst
                                                                         -10
                                                                         "m2!1")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -10
                                                                               :where
                                                                               (-2
                                                                                -4))))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -10)
                                                                                (("1"
                                                                                  (skosimp*)
                                                                                  (("1"
                                                                                    (inst
                                                                                     11
                                                                                     "s2b!2"
                                                                                     "1 + n2!1 + n2!2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (inst
                                                                                         11
                                                                                         "s2b!1"
                                                                                         "v1!1"
                                                                                         "n2!1"
                                                                                         "n2!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (use
                                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                                 ("b2"
                                                                                  "else_expr(b!1)"
                                                                                  "b1"
                                                                                  "b!1"))
                                                                                (("2"
                                                                                  (expand
                                                                                   "<<")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (skosimp*)
                                                                              (("3"
                                                                                (use
                                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                                 ("b2"
                                                                                  "then_expr(b!1)"
                                                                                  "b1"
                                                                                  "b!1"))
                                                                                (("3"
                                                                                  (expand
                                                                                   "<<")
                                                                                  (("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (apply
                                                         (then
                                                          (use
                                                           "wf_Body_preserved_by_proper_subterm"
                                                           ("b2"
                                                            "test(b!1)"
                                                            "b1"
                                                            "b!1"))
                                                          (expand "<<")
                                                          (assert)))
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (apply
                                                 (branch
                                                  (split -1)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (inst-cp -7 "m1!1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (apply
                                                         (repeat
                                                          (inst?
                                                           -8
                                                           :where
                                                           (-3 -9))))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_preserved_by_derive")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst-cp
                                                                   -8
                                                                   "m2!1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -9
                                                                         :where
                                                                         (-1
                                                                          -5))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_preserved_by_derive"
                                                                               ("s1a"
                                                                                "s2b!1"
                                                                                "s1b"
                                                                                "tau1!1"))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_implies_same_exception")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         -8)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      (("1"
                                                                                        (inst
                                                                                         11
                                                                                         "update_PState(s2b!2, raise(NullPointer))"
                                                                                         "1 + n2!1 + n2!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             11
                                                                                             "n2!1"
                                                                                             "n2!2"
                                                                                             "0"
                                                                                             "0"
                                                                                             "0"
                                                                                             "0")
                                                                                            (("1"
                                                                                              (inst
                                                                                               11
                                                                                               "s2b!1"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 11
                                                                                                 "a!1"
                                                                                                 "pv!1"
                                                                                                 "Bottom"
                                                                                                 "Bottom")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     11
                                                                                                     "lvs(st(pstate(s2b!2)))")
                                                                                                    (("1"
                                                                                                      (inst?
                                                                                                       11)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "md!1")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "complete_MP")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -1)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (inst
                                                                                           12
                                                                                           "s2b!2"
                                                                                           "1 + n2!1 + n2!2")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (inst
                                                                                               12
                                                                                               "n2!1"
                                                                                               "n2!2"
                                                                                               "0"
                                                                                               "0"
                                                                                               "0"
                                                                                               "0")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 12
                                                                                                 "s2b!1"
                                                                                                 "s2b!2"
                                                                                                 "s2b!2"
                                                                                                 "s2b!2"
                                                                                                 "s2b!2"
                                                                                                 "s2b!2"
                                                                                                 "s2b!2")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   12
                                                                                                   "a!1"
                                                                                                   "pv!1"
                                                                                                   "Bottom"
                                                                                                   "Bottom")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       12
                                                                                                       "lvs(st(pstate(s2b!2)))")
                                                                                                      (("1"
                                                                                                        (inst?
                                                                                                         12)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "md!1")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "complete_MP")
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (apply
                                                                                           (branch
                                                                                            (split
                                                                                             -1)
                                                                                            ((then
                                                                                              (flatten)
                                                                                              (assert)
                                                                                              (flatten)
                                                                                              (assert)))))
                                                                                          (("2"
                                                                                            (copy
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "lookup_mthd"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (apply
                                                                                                     (branch
                                                                                                      (split
                                                                                                       -1)
                                                                                                      ((then
                                                                                                        (flatten)
                                                                                                        (assert)
                                                                                                        (flatten)
                                                                                                        (assert)))))
                                                                                                    (("2"
                                                                                                      (use
                                                                                                       "get_class_in_classes")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "EXISTS(s : MPState, n : nat) :  on_method_entry_MP(p!1, md!1, a!1, val(Const(pv!1)), update_stack(a!1, arg(md!1), pv!1, lvars(md!1), s2b!2), s,
                                                                                                                         n,
                                                                                                                         LAMBDA (k: upto(n))
                                                                                                                                (p: MonitoredProgram[CP, Name])
                                                                                                                                (b: (wf_Body(program(p))),
                                                                                                                                 sigma1: MPState[CP, Name], v: Val[Name],
                                                                                                                                 sigma2: MPState[CP, Name])
                                                                                                                                (m: below(k)):
                                                                                                                           derive(p)(b, sigma1, v, sigma2)(m)) AND monitor_related_states(p!1)(s, tau4!1)")
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (inst-cp
                                                                                                               -26
                                                                                                               "m4!1")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (apply
                                                                                                                   (repeat
                                                                                                                    (inst?
                                                                                                                     -27
                                                                                                                     :where
                                                                                                                     (-12
                                                                                                                      -2))))
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (skosimp*)
                                                                                                                      (("1"
                                                                                                                        (use
                                                                                                                         "monitor_related_states_preserved_by_derive")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (use
                                                                                                                             "monitor_related_states_implies_same_exception")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (inst-cp
                                                                                                                                 -28
                                                                                                                                 "m5!1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (apply
                                                                                                                                     (repeat
                                                                                                                                      (inst?
                                                                                                                                       -29
                                                                                                                                       :where
                                                                                                                                       (-2
                                                                                                                                        -16))))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("1"
                                                                                                                                          (use
                                                                                                                                           "monitor_related_states_preserved_by_derive"
                                                                                                                                           ("s1a"
                                                                                                                                            "s2b!3"
                                                                                                                                            "s1b"
                                                                                                                                            "tau5!1"))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (use
                                                                                                                                               "monitor_related_states_implies_same_exception")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (apply
                                                                                                                                                   (branch
                                                                                                                                                    (split
                                                                                                                                                     -19)
                                                                                                                                                    ((then
                                                                                                                                                      (flatten)
                                                                                                                                                      (assert)
                                                                                                                                                      (flatten)
                                                                                                                                                      (assert)))))
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "EXISTS (s : MPState, n : nat) : on_method_exit_normal_MP(p!1, md!1, a!1, val(Const(w!1)), s2b!4,
                                                                                                                                           s, n,
                                                                                                                                           LAMBDA (k: upto(n))
                                                                                                                                                  (p: MonitoredProgram[CP, Name])
                                                                                                                                                  (b: (wf_Body(program(p))),
                                                                                                                                                   sigma1: MPState[CP, Name],
                                                                                                                                                   v: Val[Name],
                                                                                                                                                   sigma2: MPState[CP, Name])
                                                                                                                                                  (m: below(k)):
                                                                                                                                             derive(p)(b, sigma1, v, sigma2)(m)) AND monitor_related_states(p!1)(s, tau7!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (skosimp*)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         13
                                                                                                                                                         "update_PState(s!2,
                                                                                                                                       LAMBDA (pstate: PState[Name]):
                                                                                                                                         pstate
                                                                                                                                           WITH [st := st(pstate) WITH [lvs := lvs(st(pstate(s2b!2)))]])"
                                                                                                                                                         "1 + n2!1 + n2!2 + n!1 + n2!3 + n2!4 + n!2")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             13
                                                                                                                                                             "n2!1"
                                                                                                                                                             "n2!2"
                                                                                                                                                             "n!1"
                                                                                                                                                             "n2!3"
                                                                                                                                                             "n2!4"
                                                                                                                                                             "n!2")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 13
                                                                                                                                                                 "s2b!1"
                                                                                                                                                                 "s2b!2"
                                                                                                                                                                 "update_stack(a!1,
                                                                                                                                                        arg(md!1),
                                                                                                                                                        pv!1,
                                                                                                                                                        lvars(md!1),
                                                                                                                                                        s2b!2)"
                                                                                                                                                                 "s!1"
                                                                                                                                                                 "s2b!3"
                                                                                                                                                                 "s2b!4"
                                                                                                                                                                 "s!2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     13
                                                                                                                                                                     "a!1"
                                                                                                                                                                     "pv!1"
                                                                                                                                                                     "w!1"
                                                                                                                                                                     "x!2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         13
                                                                                                                                                                         "lvs(st(pstate(s2b!2)))")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           13
                                                                                                                                                                           "md!1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (use
                                                                                                                                                                               "monitor_related_states_implies_same_exception")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "complete_MP")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "return_of_stmt")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -9)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (split
                                                                                                                                                                                             13)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("3"
                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       (-1
                                                                                                                                                        -3
                                                                                                                                                        -4
                                                                                                                                                        -5
                                                                                                                                                        -32
                                                                                                                                                        1))
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "on_method_exit_normal_MP")
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst-cp
                                                                                                                                                             -12
                                                                                                                                                             "m1!2")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (apply
                                                                                                                                                                 (repeat
                                                                                                                                                                  (inst?
                                                                                                                                                                   -13
                                                                                                                                                                   :where
                                                                                                                                                                   (-3
                                                                                                                                                                    -11))))
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (skosimp*)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (use
                                                                                                                                                                       "monitor_related_states_preserved_by_derive")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (use
                                                                                                                                                                           "monitor_related_states_implies_same_exception")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "monitor_related_states(p!1)(on_method_MVA(ExitNormal)(p!1, md!1)(val(Const(w!1)))(s2b!5), tau2!2)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "check_assertion")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst-cp
                                                                                                                                                                                     -19
                                                                                                                                                                                     "m2!2 - 1")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (apply
                                                                                                                                                                                         (repeat
                                                                                                                                                                                          (inst?
                                                                                                                                                                                           -20
                                                                                                                                                                                           :where
                                                                                                                                                                                           (-1
                                                                                                                                                                                            -11))))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "monitor_related_states_preserved_by_derive"
                                                                                                                                                                                               ("s1a"
                                                                                                                                                                                                "                            (on_method_MVA(ExitNormal)
                                          (p!1, md!1)
                                          (val(Const(w!1)))(s2b!5))"
                                                                                                                                                                                                "s1b"
                                                                                                                                                                                                "tau2!2"))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "monitor_related_states(p!1)( IF Bool?(v!3) AND b(v!3) THEN s2b!6
                                                                                           ELSE update_PState(s2b!6, raise(JMLExc))
                                                                                           ENDIF, tau3!2)")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -22
                                                                                                                                                                                                         "m3!2 -1")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (apply
                                                                                                                                                                                                             (repeat
                                                                                                                                                                                                              (inst?
                                                                                                                                                                                                               -22
                                                                                                                                                                                                               :where
                                                                                                                                                                                                               (-1
                                                                                                                                                                                                                -17))))
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (split
                                                                                                                                                                                                                 -22)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (use
                                                                                                                                                                                                                     "monitor_related_states_preserved_by_derive"
                                                                                                                                                                                                                     ("s1a"
                                                                                                                                                                                                                      "IF Bool?(v!3) AND b(v!3) THEN s2b!6
             ELSE update_PState(s2b!6, raise(JMLExc))
             ENDIF"
                                                                                                                                                                                                                      "s1b"
                                                                                                                                                                                                                      "tau3!2"))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           "IF Bool?(v!4) AND b(v!4) THEN s2b!7
                                                                                                   ELSE update_PState(s2b!7, raise(JMLExc))
                                                                                                   ENDIF"
                                                                                                                                                                                                                           "1 + n2!5 + n2!6 + 1 + n2!7 + 1")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (split
                                                                                                                                                                                                                               1)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                 "n2!5"
                                                                                                                                                                                                                                 " n2!6 + 1"
                                                                                                                                                                                                                                 " n2!7 + 1"
                                                                                                                                                                                                                                 "s2b!5"
                                                                                                                                                                                                                                 _
                                                                                                                                                                                                                                 _
                                                                                                                                                                                                                                 "v!2"
                                                                                                                                                                                                                                 "inv!1")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                     1
                                                                                                                                                                                                                                     "on_method_MVA(ExitNormal)(p!1, md!1)
                                                                                                                               (val(Const(w!1)))(s2b!5)"
                                                                                                                                                                                                                                     " IF Bool?(v!3) AND b(v!3) THEN s2b!6
                                                                                                           ELSE update_PState(s2b!6, raise(JMLExc))
                                                                                                           ENDIF")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                       "return_of_stmt")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                         -7)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (split
                                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                             "complete_MP")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                           ("3"
                                                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                           ("4"
                                                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                           ("5"
                                                                                                                                                                                                                                            (expand*
                                                                                                                                                                                                                                             "monitor_related_states"
                                                                                                                                                                                                                                             "update_PState"
                                                                                                                                                                                                                                             "raise")
                                                                                                                                                                                                                                            (("5"
                                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                                              (("5"
                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                (("5"
                                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                                   -4
                                                                                                                                                                                                                                                   :dir
                                                                                                                                                                                                                                                   rl)
                                                                                                                                                                                                                                                  (("5"
                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                     -46
                                                                                                                                                                                                                                                     :dir
                                                                                                                                                                                                                                                     rl)
                                                                                                                                                                                                                                                    (("5"
                                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                                       -41)
                                                                                                                                                                                                                                                      (("5"
                                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                                         -40)
                                                                                                                                                                                                                                                        (("5"
                                                                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                                                                          (("5"
                                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                  (typepred
                                                                                                                                                                                                                                   "inv!1")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "complete_MP")
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil)
                                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 -20)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (split
                                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (use
                                                                                                                                                                                                                                           "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("3"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (typepred
                                                                                                                                                                                                               "md!1")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand*
                                                                                                                                                                                                                 "complete_MP"
                                                                                                                                                                                                                 "wf_Method"
                                                                                                                                                                                                                 "method_pred")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (inst?
                                                                                                                                                                                                                     -2)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -14)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (split
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (typepred
                                                                                                                                                                                           "inv!1")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "complete_MP")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "wf_Expr")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -7)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "monitor_related_states"
                                                                                                                                                                                   (1
                                                                                                                                                                                    -2))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (split
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (use
                                                                                                                                                                                                       "on_method_MVA_yields_wf_state"
                                                                                                                                                                                                       ("mp"
                                                                                                                                                                                                        "complete_MP(p!1)"))
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "on_method_MVA")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (typepred
                                                                                                                                                                                                 "complete_MP(p!1)")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "wf_and_complete_MP")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (typepred
                                                                                                                                                                                         "md!1")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "complete_MP")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "md!1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "complete_MP")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "wf_Method")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "method_pred")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst?
                                                                                                                                                                             -5)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (case
                                                                                                                                                     "EXISTS (s : MPState, n : nat) : on_method_exit_exceptional_MP(p!1,
                                                                                                            md!1,
                                                                                                            a!1,
                                                                                                            excpt(down(ex(pstate(s2b!4)))),
                                                                                                            s2b!4,
                                                                                                            s,
                                                                                                            n,
                                                                                                            LAMBDA
                                                                                                            (k: upto(n))
                                                                                                            (p: MonitoredProgram[CP, Name])
                                                                                                            (b: (wf_Body(program(p))),
                                                                                                             sigma1: MPState[CP, Name],
                                                                                                             v: Val[Name],
                                                                                                             sigma2: MPState[CP, Name])
                                                                                                            (m: below(k)):
                                                                                                            derive(p)(b, sigma1, v, sigma2)(m)) AND monitor_related_states(p!1)(s, tau7!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (skosimp*)
                                                                                                                                                      (("1"
                                                                                                                                                        (use
                                                                                                                                                         "monitor_related_states_implies_same_exception")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             14
                                                                                                                                                             "update_PState(s!2,
                                                                                                                                       LAMBDA (pstate: PState[Name]):
                                                                                                                                         pstate
                                                                                                                                           WITH [st := st(pstate) WITH [lvs := lvs(st(pstate(s2b!2)))]])"
                                                                                                                                                             "1 + n2!1 + n2!2 + n!1 + n2!3 + n2!4 + n!2")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 14
                                                                                                                                                                 "n2!1"
                                                                                                                                                                 "n2!2"
                                                                                                                                                                 "n!1"
                                                                                                                                                                 "n2!3"
                                                                                                                                                                 "n2!4"
                                                                                                                                                                 "n!2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     14
                                                                                                                                                                     "s2b!1"
                                                                                                                                                                     "s2b!2"
                                                                                                                                                                     "update_stack(a!1,
                                                                                                                                                        arg(md!1),
                                                                                                                                                        pv!1,
                                                                                                                                                        lvars(md!1),
                                                                                                                                                        s2b!2)"
                                                                                                                                                                     "s!1"
                                                                                                                                                                     "s2b!3"
                                                                                                                                                                     "s2b!4"
                                                                                                                                                                     "s!2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       14
                                                                                                                                                                       "a!1"
                                                                                                                                                                       "pv!1"
                                                                                                                                                                       "w!1"
                                                                                                                                                                       "x!2")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           14
                                                                                                                                                                           "lvs(st(pstate(s2b!2)))")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst?
                                                                                                                                                                               14)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "return_of_stmt")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -7)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "complete_MP")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (apply
                                                                                                                                                                                             (branch
                                                                                                                                                                                              (split
                                                                                                                                                                                               14)
                                                                                                                                                                                              ((then
                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                (assert)))))
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       (1
                                                                                                                                                        -30
                                                                                                                                                        -1
                                                                                                                                                        -2
                                                                                                                                                        -3))
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "on_method_exit_exceptional_MP")
                                                                                                                                                        (("2"
                                                                                                                                                          (apply
                                                                                                                                                           (branch
                                                                                                                                                            (split
                                                                                                                                                             -1)
                                                                                                                                                            ((then
                                                                                                                                                              (flatten)
                                                                                                                                                              (assert)
                                                                                                                                                              (flatten)
                                                                                                                                                              (assert)))))
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp*)
                                                                                                                                                            (("1"
                                                                                                                                                              (use
                                                                                                                                                               "monitor_related_states_preserved_by_catch")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst-cp
                                                                                                                                                                   -12
                                                                                                                                                                   "m1!2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (apply
                                                                                                                                                                       (repeat
                                                                                                                                                                        (inst?
                                                                                                                                                                         -13
                                                                                                                                                                         :where
                                                                                                                                                                         (-3
                                                                                                                                                                          -1))))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (skosimp*)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (use
                                                                                                                                                                             "monitor_related_states_preserved_by_derive")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (case
                                                                                                                                                                                 "monitor_related_states(p!1)(on_method_MVA(ExitExceptional)(p!1, md!1)
                                                                                                    (excpt(down(ex(pstate(tau6!1)))))(s2b!5), tau2!2)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "check_assertion")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -16
                                                                                                                                                                                       "m2!2 - 1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (apply
                                                                                                                                                                                           (repeat
                                                                                                                                                                                            (inst?
                                                                                                                                                                                             -16
                                                                                                                                                                                             :where
                                                                                                                                                                                             (-10
                                                                                                                                                                                              -1))))
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (name
                                                                                                                                                                                                 "s2b7"
                                                                                                                                                                                                 "IF Bool?(v!3) AND b(v!3) THEN s2b!6
                                                                                               ELSE update_PState(s2b!6, raise(JMLExc))
                                                                                               ENDIF")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   2
                                                                                                                                                                                                   "IF up?(ex(pstate(s2b7))) THEN s2b7
                                                                                                ELSE update_PState(s2b7, raise(down(ex(pstate(s2b!4)))))
                                                                                                ENDIF"
                                                                                                                                                                                                   "1 + n2!6 + n2!5 + 1")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "monitor_related_states_preserved_by_derive"
                                                                                                                                                                                                     ("s1a"
                                                                                                                                                                                                      "on_method_MVA(ExitExceptional)
                                          (p!1, md!1)
                                          (excpt(down(ex(pstate(tau6!1)))))
                                          (s2b!5)"
                                                                                                                                                                                                      "s1b"
                                                                                                                                                                                                      "tau2!2"))
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               1
                                                                                                                                                                                                               "n2!5"
                                                                                                                                                                                                               "n2!6 + 1"
                                                                                                                                                                                                               "s2b!5"
                                                                                                                                                                                                               "on_method_MVA(ExitExceptional)(p!1, md!1)
                                                                                                                       (excpt(down(ex(pstate(s2b!4)))))(s2b!5)"
                                                                                                                                                                                                               "s2b7"
                                                                                                                                                                                                               "v!2"
                                                                                                                                                                                                               "inv!1")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "return_of_stmt")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (use
                                                                                                                                                                                                                     "monitor_related_states_implies_same_exception"
                                                                                                                                                                                                                     ("s1"
                                                                                                                                                                                                                      "s2b!5"
                                                                                                                                                                                                                      "s2"
                                                                                                                                                                                                                      "tau1!2"))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (split
                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "complete_MP")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("3"
                                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 -4)
                                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("4"
                                                                                                                                                                                                                            (expand*
                                                                                                                                                                                                                             "monitor_related_states"
                                                                                                                                                                                                                             "update_PState"
                                                                                                                                                                                                                             "raise")
                                                                                                                                                                                                                            (("4"
                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                              (("4"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 -38
                                                                                                                                                                                                                                 :dir
                                                                                                                                                                                                                                 rl)
                                                                                                                                                                                                                                (("4"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   -32)
                                                                                                                                                                                                                                  (("4"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     -31)
                                                                                                                                                                                                                                    (("4"
                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                       -8
                                                                                                                                                                                                                                       :dir
                                                                                                                                                                                                                                       rl)
                                                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                                                            (("4"
                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (typepred
                                                                                                                                                                                                                 "inv!1")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "complete_MP")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -15)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (case
                                                                                                                                                                                                                 "monitor_related_states(p!1)(s2b7, tau3!2)")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (split
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 -19)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                                   "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -14)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                     -3
                                                                                                                                                                                                                     :dir
                                                                                                                                                                                                                     rl)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (split
                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (use
                                                                                                                                                                                                                               "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "inv!1")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "complete_MP"
                                                                                                                                                                                               "wf_Expr")
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -6)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "monitor_related_states"
                                                                                                                                                                                     (-1
                                                                                                                                                                                      1))
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     -2)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "on_method_MVA_yields_wf_state"
                                                                                                                                                                                                         ("mp"
                                                                                                                                                                                                          "complete_MP(p!1)"))
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "on_method_MVA")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                       "complete_MP(p!1)")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "wf_and_complete_MP")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (typepred
                                                                                                                                                                                           "md!1")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "complete_MP")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "md!1")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand*
                                                                                                                                                                           "complete_MP"
                                                                                                                                                                           "wf_Method"
                                                                                                                                                                           "method_pred")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?
                                                                                                                                                                               -6)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               1
                                                                                                                                                               "s2b!4")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (typepred
                                                                                                                                       "md!1")
                                                                                                                                      (("2"
                                                                                                                                        (expand*
                                                                                                                                         "complete_MP"
                                                                                                                                         "wf_Method"
                                                                                                                                         "method_pred")
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "md!1")
                                                                                                                    (("2"
                                                                                                                      (expand*
                                                                                                                       "complete_MP"
                                                                                                                       "wf_Method"
                                                                                                                       "method_pred")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (1
                                                                                                              2
                                                                                                              -17
                                                                                                              -7
                                                                                                              -9
                                                                                                              -24
                                                                                                              -1
                                                                                                              -2
                                                                                                              -4
                                                                                                              -5))
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "monitor_related_states_preserved_by_update_stack")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (expand*
                                                                                                                     "on_method_entry_MP"
                                                                                                                     "on_method_entry")
                                                                                                                    (("1"
                                                                                                                      (skosimp*)
                                                                                                                      (("1"
                                                                                                                        (apply
                                                                                                                         (branch
                                                                                                                          (split
                                                                                                                           -7)
                                                                                                                          ((then
                                                                                                                            (flatten)
                                                                                                                            (assert)
                                                                                                                            (flatten)
                                                                                                                            (assert)))))
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -9)
                                                                                                                          (("1"
                                                                                                                            (expand*
                                                                                                                             "update_stack"
                                                                                                                             "update_PState"
                                                                                                                             "o"
                                                                                                                             "update_local")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (skosimp*)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "check_assertion")
                                                                                                                            (("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (inst-cp
                                                                                                                                 -20
                                                                                                                                 "m1!2 - 1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -17
                                                                                                                                     :dir
                                                                                                                                     rl)
                                                                                                                                    (("1"
                                                                                                                                      (apply
                                                                                                                                       (repeat
                                                                                                                                        (inst?
                                                                                                                                         -21
                                                                                                                                         :where
                                                                                                                                         (-4
                                                                                                                                          -12))))
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("1"
                                                                                                                                            (use
                                                                                                                                             "monitor_related_states_preserved_by_derive")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "monitor_related_states(p!1)( IF Bool?(v!3) AND b(v!3) THEN s2b!3
                                                                                                                                     ELSE update_PState(s2b!3, raise(JMLExc))
                                                                                                                                     ENDIF, tau1!2)")
                                                                                                                                                (("1"
                                                                                                                                                  (inst-cp
                                                                                                                                                   -22
                                                                                                                                                   "m2!2 - 1")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (apply
                                                                                                                                                       (repeat
                                                                                                                                                        (inst?
                                                                                                                                                         -23
                                                                                                                                                         :where
                                                                                                                                                         (-1
                                                                                                                                                          -9))))
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (split
                                                                                                                                                           -23)
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp*)
                                                                                                                                                            (("1"
                                                                                                                                                              (use
                                                                                                                                                               "monitor_related_states_preserved_by_derive")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "monitor_related_states(p!1)( IF Bool?(v!4) AND b(v!4) THEN s2b!4
                                                                                                                                                       ELSE update_PState(s2b!4, raise(JMLExc))
                                                                                                                                                       ENDIF, tau2!2)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -25
                                                                                                                                                                       "m3!2")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (apply
                                                                                                                                                                           (repeat
                                                                                                                                                                            (inst?
                                                                                                                                                                             -25
                                                                                                                                                                             :where
                                                                                                                                                                             (-1
                                                                                                                                                                              -14))))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (split
                                                                                                                                                                               -25)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (use
                                                                                                                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (apply
                                                                                                                                                                                         (branch
                                                                                                                                                                                          (split
                                                                                                                                                                                           -25)
                                                                                                                                                                                          ((then
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (assert)))))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           2
                                                                                                                                                                                           "s2b!5"
                                                                                                                                                                                           "1 + n2!3 + 1 + n2!4 + 1 + n2!5")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               2
                                                                                                                                                                                               "s2b!5")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     2)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand*
                                                                                                                                                                                                       "update_stack"
                                                                                                                                                                                                       "update_PState"
                                                                                                                                                                                                       "o"
                                                                                                                                                                                                       "update_local")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         2
                                                                                                                                                                                                         "n2!3 + 1"
                                                                                                                                                                                                         "n2!4 + 1"
                                                                                                                                                                                                         "n2!5"
                                                                                                                                                                                                         _
                                                                                                                                                                                                         _
                                                                                                                                                                                                         "v!2"
                                                                                                                                                                                                         "inv!1")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           2
                                                                                                                                                                                                           "IF Bool?(v!3) AND b(v!3) THEN s2b!3
                                                                                                                                                                                                                                                         ELSE update_PState(s2b!3, raise(JMLExc))
                                                                                                                                                                                                                                                         ENDIF"
                                                                                                                                                                                                           "IF Bool?(v!4) AND b(v!4) THEN s2b!4
                                                                                                                                                                                                                                                         ELSE update_PState(s2b!4, raise(JMLExc))
                                                                                                                                                                                                                                                         ENDIF")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (split
                                                                                                                                                                                                               2)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "complete_MP")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("3"
                                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("4"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("5"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "return_of_stmt")
                                                                                                                                                                                                                (("5"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("6"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "monitor_related_states")
                                                                                                                                                                                                                (("6"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("6"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (typepred
                                                                                                                                                                                                           "inv!1")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "complete_MP")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           3
                                                                                                                                                                                           "on_method_MVA(Entry)(p!1, md!1)(val(Const(pv!1)))(s2b!5)"
                                                                                                                                                                                           "1 + n2!3 + 1 + n2!4 + 1 + n2!5")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (split
                                                                                                                                                                                               3)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     1
                                                                                                                                                                                                     "s2b!5")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (split
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand*
                                                                                                                                                                                                           "update_stack"
                                                                                                                                                                                                           "update_PState"
                                                                                                                                                                                                           "o"
                                                                                                                                                                                                           "update_local")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             2
                                                                                                                                                                                                             "n2!3 + 1"
                                                                                                                                                                                                             "n2!4 + 1"
                                                                                                                                                                                                             "n2!5"
                                                                                                                                                                                                             _
                                                                                                                                                                                                             _
                                                                                                                                                                                                             "v!2"
                                                                                                                                                                                                             "inv!1")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               2
                                                                                                                                                                                                               "IF Bool?(v!3) AND b(v!3) THEN s2b!3
                                                                                                                                                                                                                                                                 ELSE update_PState(s2b!3, raise(JMLExc))
                                                                                                                                                                                                                                                                 ENDIF"
                                                                                                                                                                                                               "IF Bool?(v!4) AND b(v!4) THEN s2b!4
                                                                                                                                                                                                                                                                 ELSE update_PState(s2b!4, raise(JMLExc))
                                                                                                                                                                                                                                                                 ENDIF")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                   2)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "complete_MP")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("3"
                                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("4"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("5"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "return_of_stmt")
                                                                                                                                                                                                                    (("5"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("6"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "monitor_related_states")
                                                                                                                                                                                                                    (("6"
                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                      (("6"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (typepred
                                                                                                                                                                                                               "inv!1")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "complete_MP")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "monitor_related_states"
                                                                                                                                                                                                 (-2
                                                                                                                                                                                                  1))
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -2)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (split
                                                                                                                                                                                                               -1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (use
                                                                                                                                                                                                                       "on_method_MVA_yields_wf_state"
                                                                                                                                                                                                                       ("mp"
                                                                                                                                                                                                                        "complete_MP(p!1)"))
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "on_method_MVA")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (typepred
                                                                                                                                                                                                                 "complete_MP(p!1)")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "wf_and_complete_MP")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                       "md!1")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "complete_MP")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "md!1")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "complete_MP")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("3"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (typepred
                                                                                                                                                                             "md!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand*
                                                                                                                                                                               "complete_MP"
                                                                                                                                                                               "wf_Method"
                                                                                                                                                                               "method_pred")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst?
                                                                                                                                                                                   -4)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -12)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (use
                                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (typepred
                                                                                                                                                         "md!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand*
                                                                                                                                                           "complete_MP"
                                                                                                                                                           "wf_Method"
                                                                                                                                                           "method_pred")
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (inst?)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (replace
                                                                                                                                                   -6)
                                                                                                                                                  (("2"
                                                                                                                                                    (lift-if)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (split
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("2"
                                                                                                                                                            (use
                                                                                                                                                             "monitor_related_states_preserved_by_raise")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (typepred
                                                                                                                                         "inv!1")
                                                                                                                                        (("2"
                                                                                                                                          (expand*
                                                                                                                                           "complete_MP"
                                                                                                                                           "wf_Expr")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "getLocalDecls")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "getLocalDecls")
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "lookup_mthd")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "complete_MP")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (inst?)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "getLocalDecls")
                                                                                                                (("2"
                                                                                                                  (inst?)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "complete_MP")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "getLocalDecls")
                                                                                                                        (("2"
                                                                                                                          (inst?)
                                                                                                                          (("2"
                                                                                                                            (use
                                                                                                                             "lookup_mthd_in_methods_class")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (typepred
                                                                                                             "md!1")
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "complete_MP")
                                                                                                              (("3"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (apply
                                                                         (then
                                                                          (use
                                                                           "wf_Body_preserved_by_proper_subterm"
                                                                           ("b2"
                                                                            "arg(b!1)"
                                                                            "b1"
                                                                            "b!1"))
                                                                          (expand
                                                                           "<<")
                                                                          (assert)))
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply
                                                           (then
                                                            (use
                                                             "wf_Body_preserved_by_proper_subterm"
                                                             ("b2"
                                                              "tgt(b!1)"
                                                              "b1"
                                                              "b!1"))
                                                            (expand "<<")
                                                            (assert)))
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (apply
                                                   (branch
                                                    (split -1)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("1"
                                                    (inst 12 "s1b!1" "0")
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (apply
                                                     (branch
                                                      (split -1)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    (("1"
                                                      (expand
                                                       "execute_CaseJML")
                                                      (("1"
                                                        (expand "extend")
                                                        (("1"
                                                          (expand
                                                           "complete_MP"
                                                           -3
                                                           1)
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -3)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (apply
                                                                 (branch
                                                                  (split -2)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (inst
                                                                   13
                                                                   "s1b!1"
                                                                   "0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "return_of_stmt")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   -8
                                                                   "x!1 - 1")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -8
                                                                         :where
                                                                         (-2
                                                                          -9))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (inst
                                                                             14
                                                                             "s2b!1"
                                                                             "n2!1 + 1")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "return_of_stmt")
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (use
                                                                                       "monitor_related_states_implies_same_exception")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "monitor_related_states")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (use
                                                                         "wf_Body_CaseJML_branches")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (apply
                                                       (branch
                                                        (split -1)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst-cp -8 "m1!1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (repeat
                                                                (inst?
                                                                 -9
                                                                 :where
                                                                 (-4 -10))))
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (expand
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (use
                                                                       "monitor_related_states_preserved_by_derive")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (use
                                                                           "monitor_related_states_implies_same_exception")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (branch
                                                                                (split
                                                                                 -7)
                                                                                ((then
                                                                                  (flatten)
                                                                                  (assert)
                                                                                  (flatten)
                                                                                  (assert)))))
                                                                              (("1"
                                                                                (inst
                                                                                 14
                                                                                 "s2b!1"
                                                                                 "n2!1 + 1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "return_of_stmt")
                                                                                    (("1"
                                                                                      (inst?
                                                                                       14
                                                                                       :where
                                                                                       -13)
                                                                                      (("1"
                                                                                        (inst
                                                                                         14
                                                                                         "0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (inst
                                                                                 -11
                                                                                 "m2!1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (apply
                                                                                     (repeat
                                                                                      (inst?
                                                                                       -11
                                                                                       :where
                                                                                       (-2
                                                                                        -4))))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -11)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (inst
                                                                                             15
                                                                                             "s2b!2"
                                                                                             "n2!1 + n2!2 + 1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "return_of_stmt")
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -1
                                                                                                       :where
                                                                                                       (-2
                                                                                                        -4))))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "monitor_related_states_implies_same_exception")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 15)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst?
                                                                                                                   1
                                                                                                                   :where
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "n2!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                                         ("b2"
                                                                                                          "else_stmt(b!1)"
                                                                                                          "b1"
                                                                                                          "b!1"))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "<<")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (skosimp*)
                                                                                                      (("3"
                                                                                                        (use
                                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                                         ("b2"
                                                                                                          "then_stmt(b!1)"
                                                                                                          "b1"
                                                                                                          "b!1"))
                                                                                                        (("3"
                                                                                                          (expand
                                                                                                           "<<")
                                                                                                          (("3"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (use
                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                         ("b2"
                                                                                          "else_stmt(b!1)"
                                                                                          "b1"
                                                                                          "b!1"))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "<<")
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (use
                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                         ("b2"
                                                                                          "then_stmt(b!1)"
                                                                                          "b1"
                                                                                          "b!1"))
                                                                                        (("3"
                                                                                          (expand
                                                                                           "<<")
                                                                                          (("3"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (apply
                                                                 (then
                                                                  (use
                                                                   "wf_Body_preserved_by_proper_subterm"
                                                                   ("b2"
                                                                    "test(b!1)"
                                                                    "b1"
                                                                    "b!1"))
                                                                  (expand
                                                                   "<<")
                                                                  (assert)))
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (apply
                                                         (branch
                                                          (split -1)
                                                          ((then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))))
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst-cp
                                                               -8
                                                               "m1!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (repeat
                                                                    (inst?
                                                                     -9
                                                                     :where
                                                                     (-4
                                                                      -10))))
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (use
                                                                         "monitor_related_states_preserved_by_derive")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (use
                                                                             "monitor_related_states_implies_same_exception")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 -10
                                                                                 "m2!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (repeat
                                                                                      (inst?
                                                                                       -10
                                                                                       :where
                                                                                       (-8
                                                                                        -2))))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (inst
                                                                                           15
                                                                                           "s2b!2"
                                                                                           "n2!1 + n2!2 + 1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "return_of_stmt")
                                                                                              (("1"
                                                                                                (use
                                                                                                 "monitor_related_states_preserved_by_derive"
                                                                                                 ("s1a"
                                                                                                  "s2b!1"
                                                                                                  "s1b"
                                                                                                  "tau!1"))
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "monitor_related_states_implies_same_exception")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           15)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (inst?
                                                                                                             1
                                                                                                             :where
                                                                                                             (-13
                                                                                                              -12))
                                                                                                            (("2"
                                                                                                              (inst?
                                                                                                               1
                                                                                                               :where
                                                                                                               (-13
                                                                                                                -12))
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (apply
                                                                                       (then
                                                                                        (use
                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                         ("b2"
                                                                                          "s2(b!1)"
                                                                                          "b1"
                                                                                          "b!1"))
                                                                                        (expand
                                                                                         "<<")
                                                                                        (assert)))
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (apply
                                                                     (then
                                                                      (use
                                                                       "wf_Body_preserved_by_proper_subterm"
                                                                       ("b2"
                                                                        "s1(b!1)"
                                                                        "b1"
                                                                        "b!1"))
                                                                      (expand
                                                                       "<<")
                                                                      (assert)))
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply
                                                           (branch
                                                            (split -1)
                                                            ((then
                                                              (flatten)
                                                              (assert)
                                                              (flatten)
                                                              (assert)))))
                                                          (("1"
                                                            (expand
                                                             "execute_set")
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (inst
                                                                 -8
                                                                 "x!1 - 1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (apply
                                                                     (repeat
                                                                      (inst?
                                                                       -8
                                                                       :where
                                                                       (-4
                                                                        -9))))
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           16
                                                                           "IF up?(ex(pstate(s2b!1))) THEN s2b!1 ELSE update_GhostVars(s2b!1, update_store(target(b!1), v!2)) ENDIF "
                                                                           "n2!1 + 1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_preserved_by_derive")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_implies_same_exception")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (split
                                                                                         16)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "return_of_stmt")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "update_GhostVars")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (branch
                                                                                                      (split
                                                                                                       1)
                                                                                                      ((then
                                                                                                        (flatten)
                                                                                                        (assert)
                                                                                                        (flatten)
                                                                                                        (assert)))))
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst?
                                                                                           1
                                                                                           :where
                                                                                           -10)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (branch
                                                                                                    (split
                                                                                                     1)
                                                                                                    ((then
                                                                                                      (flatten)
                                                                                                      (assert)
                                                                                                      (flatten)
                                                                                                      (assert)))))
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -7)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_GhostVars")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "monitor_related_states")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (apply
                                                                       (then
                                                                        (use
                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                         ("b2"
                                                                          "source(b!1)"
                                                                          "b1"
                                                                          "b!1"))
                                                                        (expand
                                                                         "<<")
                                                                        (assert)))
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (apply
                                                             (branch
                                                              (split -1)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (inst
                                                               17
                                                               "s1b!1"
                                                               "0")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "return_of_stmt")
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -1)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     -6
                                                                     "x!1 - 1")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -6
                                                                           :where
                                                                           (-4
                                                                            -7))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst
                                                                               18
                                                                               "s2b!1"
                                                                               "n2!1 + 1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (use
                                                                                       "monitor_related_states_implies_same_exception")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "return_of_stmt")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (split
                                                                                               18)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst?)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (apply
                                                                           (then
                                                                            (use
                                                                             "wf_Body_preserved_by_proper_subterm"
                                                                             ("b2"
                                                                              "expr(b!1)"
                                                                              "b1"
                                                                              "b!1"))
                                                                            (expand
                                                                             "<<")
                                                                            (assert)))
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (apply
                                                                 (branch
                                                                  (split -1)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (inst
                                                                   19
                                                                   "update_PState(s1b!1, raise(exc(b!1)))"
                                                                   "0")
                                                                  (("1"
                                                                    (expand
                                                                     "return_of_stmt")
                                                                    (("1"
                                                                      (expand
                                                                       "update_PState")
                                                                      (("1"
                                                                        (expand
                                                                         "raise")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (apply
                                                                   (branch
                                                                    (split -1)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (skosimp*)
                                                                    (("1"
                                                                      (inst-cp
                                                                       -11
                                                                       "m1!1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -12
                                                                             :where
                                                                             (-4
                                                                              -13))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (use
                                                                                 "monitor_related_states_preserved_by_derive")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (use
                                                                                     "monitor_related_states_implies_same_exception")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -8)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -16
                                                                                           "m2!1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (use
                                                                                               "monitor_related_states_preserved_by_catch")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (apply
                                                                                                   (repeat
                                                                                                    (inst?
                                                                                                     -18
                                                                                                     :where
                                                                                                     (-1
                                                                                                      -4))))
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -17
                                                                                                         "m3!1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "monitor_related_states_preserved_by_derive")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "monitor_related_states_preserved_by_catch")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (apply
                                                                                                                           (repeat
                                                                                                                            (inst?
                                                                                                                             -19
                                                                                                                             :where
                                                                                                                             (-15
                                                                                                                              -1))))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (skosimp*)
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "monitor_related_states_preserved_by_derive"
                                                                                                                                 ("s1a"
                                                                                                                                  "update_PState(s2b!2, catch)"
                                                                                                                                  "s1b"
                                                                                                                                  "
                             update_PState(tau2!1, catch)"))
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (use
                                                                                                                                     "monitor_related_states_implies_same_exception")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         20
                                                                                                                                         "IF NOT up?(ex(pstate(s2b!3))) THEN update_PState(s2b!3, LAMBDA(ptau3 : PState) : ptau3 WITH [ex := ex(pstate(s2b!2))]) ELSE s2b!3 ENDIF"
                                                                                                                                         "1 + n2!1 + n2!2 + n2!3")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (split
                                                                                                                                             20)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -19)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -4)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -13)
                                                                                                                                                      (("1"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "return_of_stmt")
                                                                                                                                                          (("1"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "update_PState")
                                                                                                                                                                (("1"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "n2!1"
                                                                                                                                               "n2!2"
                                                                                                                                               "n2!3"
                                                                                                                                               "s2b!1"
                                                                                                                                               "s2b!2"
                                                                                                                                               "s2b!3"
                                                                                                                                               "v1!1"
                                                                                                                                               "v2!1"
                                                                                                                                               "v3!1")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "return_of_stmt")
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -4)
                                                                                                                                                        (("2"
                                                                                                                                                          (split
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (apply
                                                                                                                             (then
                                                                                                                              (use
                                                                                                                               "wf_Body_preserved_by_proper_subterm"
                                                                                                                               ("b2"
                                                                                                                                "finally(b!1)"
                                                                                                                                "b1"
                                                                                                                                "b!1"))
                                                                                                                              (expand
                                                                                                                               "<<")
                                                                                                                              (assert)))
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (apply
                                                                                                     (then
                                                                                                      (use
                                                                                                       "wf_Body_preserved_by_proper_subterm"
                                                                                                       ("b2"
                                                                                                        "catch(b!1)"
                                                                                                        "b1"
                                                                                                        "b!1"))
                                                                                                      (expand
                                                                                                       "<<")
                                                                                                      (assert)))
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (use
                                                                                           "monitor_related_states_preserved_by_catch")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -2
                                                                                               :hide?
                                                                                               t)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -14
                                                                                                 "m3!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -14
                                                                                                       :where
                                                                                                       (-10
                                                                                                        -1))))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           21
                                                                                                           "IF NOT up?(ex(pstate(s2b!2))) THEN update_PState(s2b!2, LAMBDA(ptau3 : PState) : ptau3 WITH [ex := ex(pstate(s2b!1))]) ELSE s2b!2 ENDIF"
                                                                                                           "1 + n2!1 + n2!2 ")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (use
                                                                                                               "monitor_related_states_preserved_by_derive"
                                                                                                               ("s1a"
                                                                                                                "update_PState(s2b!1, catch)"
                                                                                                                "s1b"
                                                                                                                "
                             update_PState(tau2!1, catch)"))
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (use
                                                                                                                   "monitor_related_states_implies_same_exception")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       21)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -14)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -5)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -8)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "return_of_stmt")
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "update_PState")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "n2!1"
                                                                                                                         "0"
                                                                                                                         "n2!2"
                                                                                                                         "s2b!1"
                                                                                                                         "s2b!1"
                                                                                                                         "s2b!2"
                                                                                                                         "v1!1"
                                                                                                                         "Bottom"
                                                                                                                         "v3!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "return_of_stmt")
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -5)
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("4"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("4"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (apply
                                                                                                       (then
                                                                                                        (use
                                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                                         ("b2"
                                                                                                          "finally(b!1)"
                                                                                                          "b1"
                                                                                                          "b!1"))
                                                                                                        (expand
                                                                                                         "<<")
                                                                                                        (assert)))
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (apply
                                                                             (then
                                                                              (use
                                                                               "wf_Body_preserved_by_proper_subterm"
                                                                               ("b2"
                                                                                "try(b!1)"
                                                                                "b1"
                                                                                "b!1"))
                                                                              (expand
                                                                               "<<")
                                                                              (assert)))
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (apply
                                                                     (branch
                                                                      (split
                                                                       -1)
                                                                      ((then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))))
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "x!1 - 1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -6
                                                                             :where
                                                                             (-4
                                                                              -7))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 21
                                                                                 "s2b!1"
                                                                                 "n2!1 + 1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (use
                                                                                     "monitor_related_states_preserved_by_derive")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (use
                                                                                         "monitor_related_states_implies_same_exception")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "return_of_stmt")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (case-replace
                                                                             "While[Name](test[Name](b!1), body[Name](b!1)) = b!1")
                                                                            (("1"
                                                                              (use
                                                                               "wf_Body_While")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (apply-extensionality
                                                                               :hide?
                                                                               t)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "execute_assert")
                                                                      (("2"
                                                                        (expand
                                                                         "check_assertion")
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             -7
                                                                             "x!1 - 1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (apply
                                                                                 (repeat
                                                                                  (inst?
                                                                                   -7
                                                                                   :where
                                                                                   (-3
                                                                                    -8))))
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (inst
                                                                                       22
                                                                                       "IF Bool?(v!2) AND b(v!2) THEN s2b!1 ELSE update_PState(s2b!1, raise(JMLExc)) ENDIF"
                                                                                       "n2!1 + 1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (use
                                                                                           "monitor_related_states_preserved_by_derive")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (use
                                                                                               "monitor_related_states_implies_same_exception")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   22)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "return_of_stmt")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -6)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "raise")
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (inst?
                                                                                                     1
                                                                                                     :where
                                                                                                     -9)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (lift-if)
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "monitor_related_states")
                                                                                                      (("3"
                                                                                                        (flatten)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "update_PState")
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "raise")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (apply
                                                                                   (then
                                                                                    (use
                                                                                     "wf_Body_preserved_by_proper_subterm"
                                                                                     ("b2"
                                                                                      "expr(b!1)"
                                                                                      "b1"
                                                                                      "b!1"))
                                                                                    (expand
                                                                                     "<<")
                                                                                    (assert)))
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (use "wf_nat") nil nil))
      nil))
    nil)
   unfinished
   ((wf_nat formula-decl nil naturalnumbers nil)
    (monitor_related_states_implies_same_exception formula-decl nil
     CompleteMonitor nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (varname shared-adt-accessor-decl
     "[{x: Body | RefVarEval?(x) OR BoolVarEval?(x) OR NumVarEval?(x)} -> Name]"
     Body_adt nil)
    (monitor_related_states_implies_same_lookup formula-decl nil
     CompleteMonitor nil)
    (Bottom adt-constructor-decl "(Bottom?)" Val_adt nil)
    (Bottom? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (source shared-adt-accessor-decl
     "[{x: Body | Set?(x) OR Assign?(x)} -> Expr]" Body_adt nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (update const-decl "PState" State nil)
    (target shared-adt-accessor-decl
            "[{x: Body | Set?(x) OR Assign?(x)} -> Name]" Body_adt nil)
    (tgt adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (name adt-accessor-decl "[(MethodCall?) -> Name]" Body_adt nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil)
    (methods const-decl "finite_set[Method]" ProgramFunctions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil) (PRED type-eq-decl nil defined_types nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (O const-decl "T3" function_props nil)
    (update_local const-decl "PState" State nil)
    (Entry? adt-recognizer-decl "[EventType -> boolean]" EventType_adt nil)
    (Entry adt-constructor-decl "(Entry?)" EventType_adt nil)
    (monitor_related_states_preserved_by_update_stack formula-decl nil
     CompleteMonitor nil)
    (excpt? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (excpt adt-constructor-decl "[Excpt -> (excpt?)]" ValOrExcpt_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (ExitExceptional? adt-recognizer-decl "[EventType -> boolean]"
     EventType_adt nil)
    (ExitExceptional adt-constructor-decl "(ExitExceptional?)" EventType_adt
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (catch const-decl "PState" State nil)
    (monitor_related_states_preserved_by_catch formula-decl nil
     CompleteMonitor nil)
    nil (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (on_method_MVA_yields_wf_state formula-decl nil MonitoredProgramSemantics
     nil)
    (complete_MVA_never_stuck_after_on_method_MVA formula-decl nil
     MonitoredProgramSemantics nil)
    (monitor_related_astates_preserved_by_on_method_MVA formula-decl nil
     CompleteMonitor nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (monitor_related_states_preserved_by_raise formula-decl nil
     CompleteMonitor nil)
    nil (method_pred const-decl "bool" ProgramRestriction nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (ExitNormal adt-constructor-decl "(ExitNormal?)" EventType_adt nil)
    (ExitNormal? adt-recognizer-decl "[EventType -> boolean]" EventType_adt
     nil)
    (on_method_MVA const-decl "MPState" MonitoredProgramSemantics nil)
    (update_stack const-decl "FullState" Semantics nil)
    (Const adt-constructor-decl "[(defined?) -> (Const?)]" Body_adt nil)
    (val adt-constructor-decl "[Expr -> (val?)]" ValOrExcpt_adt nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (NullPointer adt-constructor-decl "(NullPointer?)" Excpt_adt nil)
    (NullPointer? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (raise const-decl "PState" State nil)
    (arg adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (extend const-decl "R" extend nil)
    (wf_Body_CaseJML_branches formula-decl nil WellFormedProgram nil)
    (IfThenElse adt-constructor-decl "[[Expr, Stmt, Stmt] -> (IfThenElse?)]"
     Body_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (branches adt-accessor-decl "[(CaseJML?) -> list[[Expr, Stmt]]]" Body_adt
     nil)
    (CaseJML adt-constructor-decl "[list[[Expr, Stmt]] -> (CaseJML?)]"
     Body_adt nil)
    (cdr adt-accessor-decl "[(cons?) -> list]" list_adt nil)
    (s2 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (s1 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (exc shared-adt-accessor-decl
     "[{x: Body | TryCatch?(x) OR Throw?(x)} -> Excpt]" Body_adt nil)
    (wf_Body_While formula-decl nil WellFormedProgram nil)
    (Body_While_extensionality formula-decl nil Body_adt nil)
    (While adt-constructor-decl "[[Expr, Stmt] -> (While?)]" Body_adt nil)
    (body adt-accessor-decl "[(While?) -> Stmt]" Body_adt nil)
    (Skip adt-constructor-decl "(Skip?)" Body_adt nil)
    (finally adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (catch adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (try adt-accessor-decl "[(TryCatch?) -> Stmt]" Body_adt nil)
    (expr shared-adt-accessor-decl
          "[{x: Body | Assert?(x) OR StmtExpr?(x)} -> Expr]" Body_adt nil)
    (update_store const-decl "Store" State nil)
    (else_stmt adt-accessor-decl "[(IfThenElse?) -> Stmt]" Body_adt nil)
    (then_stmt adt-accessor-decl "[(IfThenElse?) -> Stmt]" Body_adt nil)
    (else_expr adt-accessor-decl "[(CondExpr?) -> Expr]" Body_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (then_expr adt-accessor-decl "[(CondExpr?) -> Expr]" Body_adt nil)
    (b adt-accessor-decl "[(Bool?) -> bool]" Val_adt nil)
    (Bool? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (test shared-adt-accessor-decl
     "[{x: Body | While?(x) OR IfThenElse?(x) OR CondExpr?(x)} -> Expr]"
     Body_adt nil)
    (get_dynamic_type_name_same_in_monitor_related_states formula-decl nil
     CompleteMonitor nil)
    (get_address_same_in_monitor_related_states formula-decl nil
     CompleteMonitor nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (b adt-accessor-decl "[(Neg?) -> Expr]" Body_adt nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (monitor_related_states_preserved_by_derive formula-decl nil
     CompleteMonitor nil)
    (b2 shared-adt-accessor-decl
     "[{x: Body | Eq?(x) OR Conj?(x) OR Plus?(x)} -> Expr]" Body_adt nil)
    nil nil (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (wf_Body_preserved_by_proper_subterm formula-decl nil WellFormedProgram
     nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (b1 shared-adt-accessor-decl
     "[{x: Body | Eq?(x) OR Conj?(x) OR Plus?(x)} -> Expr]" Body_adt nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (derive def-decl "bool" Semantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (monitor_related_states const-decl "boolean" CompleteMonitor nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) nil nil
    (Transition type-eq-decl nil MVA nil) (Guard type-eq-decl nil MVA nil)
    (Action type-eq-decl nil MVA nil) (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) nil
    (Expr type-eq-decl nil Body_adt nil)
    (finite_set type-eq-decl nil finite_sets nil) nil
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil) (Body type-decl nil Body_adt nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (complete_MP_preserves_wf_body formula-decl nil CompleteMonitor nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (pred type-eq-decl nil defined_types nil)
    (well_founded? const-decl "bool" orders nil)
    (wf_induction formula-decl nil wf_induction nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil))
   78523 72290 t nil)
  (monitor_related_states_implies_derive_converse-1 nil 3413713574 nil
   (";;; Proof monitor_related_states_implies_derive-1 for formula CompleteMonitor.monitor_related_states_implies_derive"
    (skolem 1 ("p!1" _ _))
    ((";;; Proof monitor_related_states_implies_derive-1 for formula CompleteMonitor.monitor_related_states_implies_derive"
      (lemma "wf_induction[nat, LAMBDA(i, j : nat) : i < j]")
      (("1" (auto-rewrite "complete_MP_preserves_wf_body")
        (("1"
          (inst -1
           "LAMBDA(n1 : nat) :  FORALL (b: (wf_Body(program(p!1))), v : Val)
                     (s1a, s1b, s2a: MPState) :
                monitor_related_states(p!1)(s1a, s1b) IMPLIES
                 derive(complete_MP(p!1))(b, s1a, v, s2a)(n1) IMPLIES
                  (EXISTS (s2b: MPState, n2: nat):
                     derive(p!1)(b, s1b, v, s2b)(n2))")
          (("1" (split -1)
            (("1" (skosimp*)
              (("1" (inst?)
                (("1" (assert)
                  (("1" (inst?) (("1" (inst?) (("1" (assert) nil)))))))))))
             ("2" (hide 2)
              (("2" (skosimp*)
                (("2" (expand "derive" (-3 1))
                  (("2" (use "monitor_related_states_implies_same_exception")
                    (("2" (assert)
                      (("2"
                        (apply (branch (split -4)
                                ((then (flatten) (assert) (flatten)
                                  (assert)))))
                        (("1" (inst 1 "s1b!1" "0") nil)
                         ("2" (lift-if)
                          (("2" (assert)
                            (("2"
                              (apply (branch (split -1)
                                      ((then
                                        (flatten)
                                        (assert)
                                        (flatten)
                                        (assert)))))
                              (("1" (skosimp*)
                                (("1" (inst-cp -7 "m1!1")
                                  (("1" (assert)
                                    (("1"
                                      (apply
                                       (repeat (inst? -8 :where (-3 -9))))
                                      (("1"
                                        (assert)
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (use
                                             "monitor_related_states_preserved_by_derive")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst -8 "m2!1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (apply
                                                     (repeat
                                                      (inst?
                                                       -8
                                                       :where
                                                       (-1 -5))))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst
                                                           2
                                                           "s2b!2"
                                                           "1 + n2!1 + n2!2")
                                                          (("1"
                                                            (inst
                                                             2
                                                             "s2b!1"
                                                             "v1!1"
                                                             "v2!1"
                                                             "n2!1"
                                                             "n2!2")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "check_for_exception_final")
                                                                (("1"
                                                                  (expand
                                                                   "check_for_exception")
                                                                  (("1"
                                                                    (use
                                                                     "monitor_related_states_preserved_by_derive")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (use
                                                                         "monitor_related_states_implies_same_exception")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (propax)
                                                                              nil)))))))))))))))))))))))))))))))))))))))))))))))
                               ("2"
                                (apply (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                (("1" (inst 3 "s1b!1" "0")
                                  (("1" (assert)
                                    (("1"
                                      (use
                                       "monitor_related_states_implies_same_lookup")
                                      (("1" (assert) nil)))))))
                                 ("2"
                                  (apply (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                  (("1" (skosimp*)
                                    (("1" (inst -6 "x!1 - 1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (apply
                                           (repeat (inst? -6 :where (-3 -7))))
                                          (("1"
                                            (assert)
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst 4 "s2b!1" "n2!1 + 1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (use
                                                         "monitor_related_states_preserved_by_derive")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand*
                                                             "check_for_exception_final"
                                                             "check_for_exception")
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_implies_same_exception")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (propax)
                                                                    nil)))))))))))))))))))))))))))))))))
                                   ("2"
                                    (apply (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                    (("1" (skosimp*)
                                      (("1"
                                        (inst-cp -7 "m1!1")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (apply
                                             (repeat
                                              (inst? -8 :where (-3 -9))))
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (use
                                                   "monitor_related_states_preserved_by_derive")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (use
                                                       "monitor_related_states_implies_same_exception")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand*
                                                           "check_for_exception_final"
                                                           "check_for_exception")
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -6)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (inst
                                                               5
                                                               "s2b!1"
                                                               "1 + n2!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst?
                                                                   5
                                                                   :where
                                                                   -12)
                                                                  (("1"
                                                                    (inst
                                                                     5
                                                                     "Bottom"
                                                                     "0")
                                                                    (("1"
                                                                      (assert)
                                                                      nil)))))))))
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -1)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              (("1"
                                                                (inst
                                                                 -12
                                                                 "m2!1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (apply
                                                                     (repeat
                                                                      (inst?
                                                                       -12
                                                                       :where
                                                                       (-3
                                                                        -6))))
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           6
                                                                           "s2b!2"
                                                                           "n2!1 + n2!2 + 1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst?
                                                                               6
                                                                               :where
                                                                               (-12
                                                                                -13))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst?
                                                                                   6
                                                                                   :where
                                                                                   (-12
                                                                                    -13))
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (use
                                                                                       "monitor_related_states_preserved_by_derive")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (use
                                                                                           "monitor_related_states_implies_same_exception")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil)))))))))))))))))))))))))))))))))
                                                               ("2"
                                                                (inst
                                                                 7
                                                                 "s2b!1"
                                                                 "1 + n2!1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst?
                                                                     7
                                                                     :where
                                                                     -12)
                                                                    (("2"
                                                                      (inst
                                                                       7
                                                                       "Bottom"
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (split
                                                                           7)
                                                                          (("1"
                                                                            (propax)
                                                                            nil)
                                                                           ("2"
                                                                            (propax)
                                                                            nil)))))))))))))))))))))))))))))))))))))))
                                     ("2"
                                      (apply
                                       (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                      (("1"
                                        (skosimp*)
                                        (("1"
                                          (inst-cp -7 "m1!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (apply
                                               (repeat
                                                (inst? -8 :where (-3 -9))))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (use
                                                     "monitor_related_states_preserved_by_derive")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst -8 "m2!1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -8
                                                               :where
                                                               (-1 -5))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   6
                                                                   "s2b!2"
                                                                   "1 + n2!1 + n2!2")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         6
                                                                         :where
                                                                         (-8
                                                                          -9))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (use
                                                                           "monitor_related_states_preserved_by_derive")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_implies_same_exception")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand*
                                                                                   "check_for_exception_final"
                                                                                   "check_for_exception")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil)))))))))))))))))))))))))))))))))))))))))))))))
                                       ("2"
                                        (apply
                                         (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                        (("1"
                                          (inst 7 "s1b!1" "0")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (use
                                               "monitor_related_states_implies_same_lookup")
                                              (("1" (assert) nil)))))))
                                         ("2"
                                          (apply
                                           (branch
                                            (split -1)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                          (("1"
                                            (inst 8 "s1b!1" "0")
                                            (("1"
                                              (use
                                               "get_address_same_in_monitor_related_states")
                                              (("1"
                                                (use
                                                 "get_dynamic_type_name_same_in_monitor_related_states")
                                                (("1" (assert) nil)))))))
                                           ("2"
                                            (apply
                                             (branch
                                              (split -1)
                                              ((then
                                                (flatten)
                                                (assert)
                                                (flatten)
                                                (assert)))))
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst -6 "x!1 - 1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (apply
                                                     (repeat
                                                      (inst?
                                                       -6
                                                       :where
                                                       (-3 -7))))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst
                                                           9
                                                           "IF up?(ex(pstate(s2b!1))) THEN s2b!1 ELSE update_PState(s2b!1, update(target(b!1), v!1)) ENDIF"
                                                           "n2!1 + 1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst 9 "s2b!1")
                                                              nil)))))))))))))))))
                                             ("2"
                                              (apply
                                               (branch
                                                (split -1)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (inst-cp -7 "m1!1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (apply
                                                       (repeat
                                                        (inst?
                                                         -8
                                                         :where
                                                         (-3 -9))))
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (use
                                                             "monitor_related_states_preserved_by_derive")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (use
                                                                 "monitor_related_states_implies_same_exception")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand*
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (apply
                                                                       (branch
                                                                        (split
                                                                         -6)
                                                                        ((then
                                                                          (flatten)
                                                                          (assert)
                                                                          (flatten)
                                                                          (assert)))))
                                                                      (("1"
                                                                        (inst
                                                                         10
                                                                         "s2b!1"
                                                                         "1 + n2!1")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               10
                                                                               :where
                                                                               -12)))
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))))))
                                                                       ("2"
                                                                        (inst
                                                                         -10
                                                                         "m2!1")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (apply
                                                                             (repeat
                                                                              (inst?
                                                                               -10
                                                                               :where
                                                                               (-2
                                                                                -4))))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -10)
                                                                                (("1"
                                                                                  (skosimp*)
                                                                                  (("1"
                                                                                    (inst
                                                                                     11
                                                                                     "s2b!2"
                                                                                     "1 + n2!1 + n2!2")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (inst
                                                                                         11
                                                                                         "s2b!1"
                                                                                         "v1!1"
                                                                                         "n2!1"
                                                                                         "n2!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)))))))))
                                                                                 ("2"
                                                                                  (propax)
                                                                                  nil)))))
                                                                             ("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (use
                                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                                 ("b2"
                                                                                  "else_expr(b!1)"
                                                                                  "b1"
                                                                                  "b!1"))
                                                                                (("2"
                                                                                  (expand
                                                                                   "<<")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil)))))))
                                                                             ("3"
                                                                              (skosimp*)
                                                                              (("3"
                                                                                (use
                                                                                 "wf_Body_preserved_by_proper_subterm"
                                                                                 ("b2"
                                                                                  "then_expr(b!1)"
                                                                                  "b1"
                                                                                  "b!1"))
                                                                                (("3"
                                                                                  (expand
                                                                                   "<<")
                                                                                  (("3"
                                                                                    (propax)
                                                                                    nil)))))))))))))))))))))))))))))))))))))
                                               ("2"
                                                (apply
                                                 (branch
                                                  (split -1)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("1"
                                                  (skosimp*)
                                                  (("1"
                                                    (inst-cp -7 "m1!1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (apply
                                                         (repeat
                                                          (inst?
                                                           -8
                                                           :where
                                                           (-3 -9))))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (skosimp*)
                                                            (("1"
                                                              (use
                                                               "monitor_related_states_preserved_by_derive")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst-cp
                                                                   -8
                                                                   "m2!1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -9
                                                                         :where
                                                                         (-1
                                                                          -5))))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (use
                                                                             "monitor_related_states_preserved_by_derive")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (use
                                                                                 "monitor_related_states_implies_same_exception")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -8)
                                                                                      ((then
                                                                                        (flatten)
                                                                                        (assert)
                                                                                        (flatten)
                                                                                        (assert)))))
                                                                                    (("1"
                                                                                      (inst
                                                                                       11
                                                                                       "update_PState(s2b!2, raise(NullPointer))"
                                                                                       "1 + n2!1 + n2!2")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (inst
                                                                                           11
                                                                                           "n2!1"
                                                                                           "n2!2"
                                                                                           "0"
                                                                                           "0"
                                                                                           "0"
                                                                                           "0")
                                                                                          (("1"
                                                                                            (inst
                                                                                             11
                                                                                             "s2b!1"
                                                                                             "s2b!2"
                                                                                             "s2b!2"
                                                                                             "s2b!2"
                                                                                             "s2b!2"
                                                                                             "s2b!2"
                                                                                             "s2b!2")
                                                                                            (("1"
                                                                                              (inst
                                                                                               11
                                                                                               "a!1"
                                                                                               "pv!1"
                                                                                               "Bottom"
                                                                                               "Bottom")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   11
                                                                                                   "lvs(st(pstate(s2b!2)))")
                                                                                                  (("1"
                                                                                                    (inst?
                                                                                                     11)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "complete_MP")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil)))))))))))))))))))))
                                                                                     ("2"
                                                                                      (apply
                                                                                       (branch
                                                                                        (split
                                                                                         -1)
                                                                                        ((then
                                                                                          (flatten)
                                                                                          (assert)
                                                                                          (flatten)
                                                                                          (assert)))))
                                                                                      (("1"
                                                                                        (inst
                                                                                         12
                                                                                         "s2b!2"
                                                                                         "1 + n2!1 + n2!2")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (inst
                                                                                             12
                                                                                             "n2!1"
                                                                                             "n2!2"
                                                                                             "0"
                                                                                             "0"
                                                                                             "0"
                                                                                             "0")
                                                                                            (("1"
                                                                                              (inst
                                                                                               12
                                                                                               "s2b!1"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2"
                                                                                               "s2b!2")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 12
                                                                                                 "a!1"
                                                                                                 "pv!1"
                                                                                                 "Bottom"
                                                                                                 "Bottom")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     12
                                                                                                     "lvs(st(pstate(s2b!2)))")
                                                                                                    (("1"
                                                                                                      (inst?
                                                                                                       12)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "complete_MP")
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil)))))))))))))))))))))
                                                                                       ("2"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -1)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("2"
                                                                                          (copy
                                                                                           -1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "lookup_mthd"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (branch
                                                                                                    (split
                                                                                                     -1)
                                                                                                    ((then
                                                                                                      (flatten)
                                                                                                      (assert)
                                                                                                      (flatten)
                                                                                                      (assert)))))
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "get_class_in_classes")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "EXISTS(s : MPState, n : nat) :  on_method_entry_MP(complete_MP(p!1), md!1, a!1, val(Const(pv!1)), update_stack(a!1, arg(md!1), pv!1, lvars(md!1), s2b!2), s,
                                                                                         n,
                                                                                         LAMBDA (k: upto(n))
                                                                                                (p: MonitoredProgram[CP, Name])
                                                                                                (b: (wf_Body(program(p))),
                                                                                                 sigma1: MPState[CP, Name], v: Val[Name],
                                                                                                 sigma2: MPState[CP, Name])
                                                                                                (m: below(k)):
                                                                                           derive(p)(b, sigma1, v, sigma2)(m)) AND monitor_related_states(p!1)(tau4!1, s)")
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (inst-cp
                                                                                                             -26
                                                                                                             "m4!1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (apply
                                                                                                                 (repeat
                                                                                                                  (inst?
                                                                                                                   -27
                                                                                                                   :where
                                                                                                                   (-12
                                                                                                                    -2))))
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "monitor_related_states_preserved_by_derive")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "monitor_related_states_implies_same_exception")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (inst-cp
                                                                                                                               -28
                                                                                                                               "m5!1")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (apply
                                                                                                                                   (repeat
                                                                                                                                    (inst?
                                                                                                                                     -29
                                                                                                                                     :where
                                                                                                                                     (-2
                                                                                                                                      -16))))
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("1"
                                                                                                                                        (use
                                                                                                                                         "monitor_related_states_preserved_by_derive")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (use
                                                                                                                                             "monitor_related_states_implies_same_exception")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (apply
                                                                                                                                                 (branch
                                                                                                                                                  (split
                                                                                                                                                   -19)
                                                                                                                                                  ((then
                                                                                                                                                    (flatten)
                                                                                                                                                    (assert)
                                                                                                                                                    (flatten)
                                                                                                                                                    (assert)))))
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "EXISTS (s : MPState, n : nat) : on_method_exit_normal_MP(complete_MP(p!1), md!1, a!1, val(Const(w!1)), s2b!4,
                                                                                                       s, n,
                                                                                                       LAMBDA (k: upto(n))
                                                                                                              (p: MonitoredProgram[CP, Name])
                                                                                                              (b: (wf_Body(program(p))),
                                                                                                               sigma1: MPState[CP, Name],
                                                                                                               v: Val[Name],
                                                                                                               sigma2: MPState[CP, Name])
                                                                                                              (m: below(k)):
                                                                                                         derive(p)(b, sigma1, v, sigma2)(m)) AND monitor_related_states(p!1)(tau7!1, s)")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       13
                                                                                                                                                       "update_PState(s!2,
                                                                                                 LAMBDA (pstate: PState[Name]):
                                                                                                   pstate
                                                                                                     WITH [st := st(pstate) WITH [lvs := lvs(st(pstate(s2b!2)))]])"
                                                                                                                                                       "1 + n2!1 + n2!2 + n!1 + n2!3 + n2!4 + n!2")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           13
                                                                                                                                                           "n2!1"
                                                                                                                                                           "n2!2"
                                                                                                                                                           "n!1"
                                                                                                                                                           "n2!3"
                                                                                                                                                           "n2!4"
                                                                                                                                                           "n!2")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               13
                                                                                                                                                               "s2b!1"
                                                                                                                                                               "s2b!2"
                                                                                                                                                               "update_stack(a!1,
                                                                                                                  arg(md!1),
                                                                                                                  pv!1,
                                                                                                                  lvars(md!1),
                                                                                                                  s2b!2)"
                                                                                                                                                               "s!1"
                                                                                                                                                               "s2b!3"
                                                                                                                                                               "s2b!4"
                                                                                                                                                               "s!2")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   13
                                                                                                                                                                   "a!1"
                                                                                                                                                                   "pv!1"
                                                                                                                                                                   "w!1"
                                                                                                                                                                   "x!2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       13
                                                                                                                                                                       "lvs(st(pstate(s2b!2)))")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         13
                                                                                                                                                                         "md!1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (use
                                                                                                                                                                             "monitor_related_states_implies_same_exception")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "complete_MP")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "return_of_stmt")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -9)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           13)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil)))
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil)))))))))))))))))))))))))))))))))))))))))))
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      -3
                                                                                                                                                      -4
                                                                                                                                                      -5
                                                                                                                                                      -32
                                                                                                                                                      1))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "on_method_exit_normal_MP")
                                                                                                                                                      (("2"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst-cp
                                                                                                                                                           -12
                                                                                                                                                           "m1!2")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (apply
                                                                                                                                                               (repeat
                                                                                                                                                                (inst?
                                                                                                                                                                 -13
                                                                                                                                                                 :where
                                                                                                                                                                 (-3
                                                                                                                                                                  -11))))
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (skosimp*)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (use
                                                                                                                                                                     "monitor_related_states_preserved_by_derive")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (use
                                                                                                                                                                         "monitor_related_states_implies_same_exception")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "monitor_related_states(p!1)(tau2!2, on_method_MVA(ExitNormal)(complete_MP(p!1), md!1)(val(Const(w!1)))(s2b!5))")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "check_assertion")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                   -19
                                                                                                                                                                                   "m2!2 - 1")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (repeat
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -20
                                                                                                                                                                                         :where
                                                                                                                                                                                         (-1
                                                                                                                                                                                          -11))))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "monitor_related_states_preserved_by_derive")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "monitor_related_states(p!1)(tau3!2, IF Bool?(v!3) AND b(v!3) THEN s2b!6
                                                 ELSE update_PState(s2b!6, raise(JMLExc))
                                                 ENDIF)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -22
                                                                                                                                                                                                       "m3!2 -1")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (apply
                                                                                                                                                                                                           (repeat
                                                                                                                                                                                                            (inst?
                                                                                                                                                                                                             -22
                                                                                                                                                                                                             :where
                                                                                                                                                                                                             (-1
                                                                                                                                                                                                              -17))))
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (split
                                                                                                                                                                                                               -22)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       "IF Bool?(v!4) AND b(v!4) THEN s2b!7
                                                     ELSE update_PState(s2b!7, raise(JMLExc))
                                                     ENDIF"
                                                                                                                                                                                                                       "1 + n2!5 + n2!6 + 1 + n2!7 + 1")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (split
                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             1
                                                                                                                                                                                                                             "n2!5"
                                                                                                                                                                                                                             " n2!6 + 1"
                                                                                                                                                                                                                             " n2!7 + 1"
                                                                                                                                                                                                                             "s2b!5"
                                                                                                                                                                                                                             _
                                                                                                                                                                                                                             _
                                                                                                                                                                                                                             "v!2"
                                                                                                                                                                                                                             "inv!1")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 1
                                                                                                                                                                                                                                 "on_method_MVA(ExitNormal)(complete_MP(p!1), md!1)
                                                                             (val(Const(w!1)))(s2b!5)"
                                                                                                                                                                                                                                 " IF Bool?(v!3) AND b(v!3) THEN s2b!6
                                                         ELSE update_PState(s2b!6, raise(JMLExc))
                                                         ENDIF")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "return_of_stmt")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     -7)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (split
                                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "complete_MP")
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                                            nil)))
                                                                                                                                                                                                                                         ("3"
                                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("4"
                                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("5"
                                                                                                                                                                                                                                          (expand*
                                                                                                                                                                                                                                           "monitor_related_states"
                                                                                                                                                                                                                                           "update_PState"
                                                                                                                                                                                                                                           "raise")
                                                                                                                                                                                                                                          (("5"
                                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                                            (("5"
                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                              (("5"
                                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                                 -4
                                                                                                                                                                                                                                                 :dir
                                                                                                                                                                                                                                                 rl)
                                                                                                                                                                                                                                                (("5"
                                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                                   -46
                                                                                                                                                                                                                                                   :dir
                                                                                                                                                                                                                                                   rl)
                                                                                                                                                                                                                                                  (("5"
                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                     -41)
                                                                                                                                                                                                                                                    (("5"
                                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                                       -40)
                                                                                                                                                                                                                                                      (("5"
                                                                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                                                                        (("5"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          nil)))))))))))))))))))
                                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil)))))))))))
                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "complete_MP")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil)))))
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (replace
                                                                                                                                                                                                                             -20)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (split
                                                                                                                                                                                                                               -1)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                                         "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil)))))))))))
                                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil)
                                                                                                                                                                                                                               ("3"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil)))))))))))))))))
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil)))))))))))
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -14)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (use
                                                                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil)))))))))))))))))))))))))))))))
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil)))))))
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -7)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "monitor_related_states"
                                                                                                                                                                                 (1
                                                                                                                                                                                  -2))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (use
                                                                                                                                                                                     "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (split
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "on_method_MVA_yields_wf_state"
                                                                                                                                                                                                     ("mp"
                                                                                                                                                                                                      "complete_MP(p!1)"))
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "on_method_MVA")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil)))))))))))))))
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "complete_MP(p!1)")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "wf_and_complete_MP")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                                                 ("2"
                                                                                                                                                  (case
                                                                                                                                                   "EXISTS (s : MPState, n : nat) : on_method_exit_exceptional_MP(complete_MP(p!1),
                                                                        md!1,
                                                                        a!1,
                                                                        excpt(down(ex(pstate(s2b!4)))),
                                                                        s2b!4,
                                                                        s,
                                                                        n,
                                                                        LAMBDA
                                                                        (k: upto(n))
                                                                        (p: MonitoredProgram[CP, Name])
                                                                        (b: (wf_Body(program(p))),
                                                                         sigma1: MPState[CP, Name],
                                                                         v: Val[Name],
                                                                         sigma2: MPState[CP, Name])
                                                                        (m: below(k)):
                                                                        derive(p)(b, sigma1, v, sigma2)(m)) AND monitor_related_states(p!1)(tau7!1, s)")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp*)
                                                                                                                                                    (("1"
                                                                                                                                                      (use
                                                                                                                                                       "monitor_related_states_implies_same_exception")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           14
                                                                                                                                                           "update_PState(s!2,
                                                                                                 LAMBDA (pstate: PState[Name]):
                                                                                                   pstate
                                                                                                     WITH [st := st(pstate) WITH [lvs := lvs(st(pstate(s2b!2)))]])"
                                                                                                                                                           "1 + n2!1 + n2!2 + n!1 + n2!3 + n2!4 + n!2")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               14
                                                                                                                                                               "n2!1"
                                                                                                                                                               "n2!2"
                                                                                                                                                               "n!1"
                                                                                                                                                               "n2!3"
                                                                                                                                                               "n2!4"
                                                                                                                                                               "n!2")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   14
                                                                                                                                                                   "s2b!1"
                                                                                                                                                                   "s2b!2"
                                                                                                                                                                   "update_stack(a!1,
                                                                                                                  arg(md!1),
                                                                                                                  pv!1,
                                                                                                                  lvars(md!1),
                                                                                                                  s2b!2)"
                                                                                                                                                                   "s!1"
                                                                                                                                                                   "s2b!3"
                                                                                                                                                                   "s2b!4"
                                                                                                                                                                   "s!2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     14
                                                                                                                                                                     "a!1"
                                                                                                                                                                     "pv!1"
                                                                                                                                                                     "w!1"
                                                                                                                                                                     "x!2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         14
                                                                                                                                                                         "lvs(st(pstate(s2b!2)))")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst?
                                                                                                                                                                             14)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "return_of_stmt")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -7)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "complete_MP")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (apply
                                                                                                                                                                                           (branch
                                                                                                                                                                                            (split
                                                                                                                                                                                             14)
                                                                                                                                                                                            ((then
                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                              (assert)))))
                                                                                                                                                                                          nil)))))))))))))))))))))))))))))))))))))))
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (1
                                                                                                                                                      -30
                                                                                                                                                      -1
                                                                                                                                                      -2
                                                                                                                                                      -3))
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "on_method_exit_exceptional_MP")
                                                                                                                                                      (("2"
                                                                                                                                                        (apply
                                                                                                                                                         (branch
                                                                                                                                                          (split
                                                                                                                                                           -1)
                                                                                                                                                          ((then
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)))))
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("1"
                                                                                                                                                            (use
                                                                                                                                                             "monitor_related_states_preserved_by_catch")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst-cp
                                                                                                                                                                 -12
                                                                                                                                                                 "m1!2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (apply
                                                                                                                                                                     (repeat
                                                                                                                                                                      (inst?
                                                                                                                                                                       -13
                                                                                                                                                                       :where
                                                                                                                                                                       (-3
                                                                                                                                                                        -1))))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (skosimp*)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (use
                                                                                                                                                                           "monitor_related_states_preserved_by_derive")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "monitor_related_states(p!1)(tau2!2, on_method_MVA(ExitExceptional)(complete_MP(p!1), md!1)
                                                            (excpt(down(ex(pstate(tau6!1)))))(s2b!5))")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "check_assertion")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -16
                                                                                                                                                                                     "m2!2 - 1")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (apply
                                                                                                                                                                                         (repeat
                                                                                                                                                                                          (inst?
                                                                                                                                                                                           -16
                                                                                                                                                                                           :where
                                                                                                                                                                                           (-10
                                                                                                                                                                                            -1))))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (name
                                                                                                                                                                                               "s2b7"
                                                                                                                                                                                               "IF Bool?(v!3) AND b(v!3) THEN s2b!6
                                                   ELSE update_PState(s2b!6, raise(JMLExc))
                                                   ENDIF")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 2
                                                                                                                                                                                                 "IF up?(ex(pstate(s2b7))) THEN s2b7
                                                    ELSE update_PState(s2b7, raise(down(ex(pstate(s2b!4)))))
                                                    ENDIF"
                                                                                                                                                                                                 "1 + n2!6 + n2!5 + 1")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (use
                                                                                                                                                                                                       "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (split
                                                                                                                                                                                                           2)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             1
                                                                                                                                                                                                             "n2!5"
                                                                                                                                                                                                             "n2!6 + 1"
                                                                                                                                                                                                             "s2b!5"
                                                                                                                                                                                                             "on_method_MVA(ExitExceptional)(complete_MP(p!1), md!1)
                                                                         (excpt(down(ex(pstate(s2b!4)))))(s2b!5)"
                                                                                                                                                                                                             "s2b7"
                                                                                                                                                                                                             "v!2"
                                                                                                                                                                                                             "inv!1")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "return_of_stmt")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "monitor_related_states_implies_same_exception"
                                                                                                                                                                                                                   ("s1"
                                                                                                                                                                                                                    "tau1!2"
                                                                                                                                                                                                                    "s2"
                                                                                                                                                                                                                    "s2b!5"))
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "complete_MP")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                            nil)))
                                                                                                                                                                                                                         ("3"
                                                                                                                                                                                                                          (inst?)
                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -4)
                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                                nil)))))))
                                                                                                                                                                                                                         ("4"
                                                                                                                                                                                                                          (expand*
                                                                                                                                                                                                                           "monitor_related_states"
                                                                                                                                                                                                                           "update_PState"
                                                                                                                                                                                                                           "raise")
                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                            (("4"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -38
                                                                                                                                                                                                                               :dir
                                                                                                                                                                                                                               rl)
                                                                                                                                                                                                                              (("4"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 -32)
                                                                                                                                                                                                                                (("4"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   -31)
                                                                                                                                                                                                                                  (("4"
                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                     -8
                                                                                                                                                                                                                                     :dir
                                                                                                                                                                                                                                     rl)
                                                                                                                                                                                                                                    (("4"
                                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                            nil)))))))))))))))))))))))))))))))
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "complete_MP")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil)))))
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -15)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (case
                                                                                                                                                                                                               "monitor_related_states(p!1)(tau3!2, s2b7)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (use
                                                                                                                                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (split
                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -19)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (use
                                                                                                                                                                                                                                 "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil)))))))))))))))))))
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -14)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -3
                                                                                                                                                                                                                   :dir
                                                                                                                                                                                                                   rl)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                         1)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (use
                                                                                                                                                                                                                             "monitor_related_states_preserved_by_raise")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil)))))))))))))))))))))))))))))))))))))))))
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil)))))))
                                                                                                                                                                               ("2"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -6)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "monitor_related_states"
                                                                                                                                                                                   (-1
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   -2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (use
                                                                                                                                                                                                       "on_method_MVA_yields_wf_state"
                                                                                                                                                                                                       ("mp"
                                                                                                                                                                                                        "complete_MP(p!1)"))
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "on_method_MVA")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil)))))))))))
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                     "complete_MP(p!1)")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "wf_and_complete_MP")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                                                         ("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             1
                                                                                                                                                             "s2b!4")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil)))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            2
                                                                                                            -17
                                                                                                            -7
                                                                                                            -9
                                                                                                            -24
                                                                                                            -1
                                                                                                            -2
                                                                                                            -4
                                                                                                            -5))
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "monitor_related_states_preserved_by_update_stack")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (expand*
                                                                                                                   "on_method_entry_MP"
                                                                                                                   "on_method_entry")
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (apply
                                                                                                                       (branch
                                                                                                                        (split
                                                                                                                         -7)
                                                                                                                        ((then
                                                                                                                          (flatten)
                                                                                                                          (assert)
                                                                                                                          (flatten)
                                                                                                                          (assert)))))
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -9)
                                                                                                                        (("1"
                                                                                                                          (expand*
                                                                                                                           "update_stack"
                                                                                                                           "update_PState"
                                                                                                                           "o"
                                                                                                                           "update_local")
                                                                                                                          nil)))
                                                                                                                       ("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "check_assertion")
                                                                                                                          (("2"
                                                                                                                            (skosimp*)
                                                                                                                            (("2"
                                                                                                                              (inst-cp
                                                                                                                               -20
                                                                                                                               "m1!2 - 1")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -17
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("1"
                                                                                                                                    (apply
                                                                                                                                     (repeat
                                                                                                                                      (inst?
                                                                                                                                       -21
                                                                                                                                       :where
                                                                                                                                       (-4
                                                                                                                                        -12))))
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("1"
                                                                                                                                          (use
                                                                                                                                           "monitor_related_states_preserved_by_derive")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "monitor_related_states(p!1)(tau1!2, IF Bool?(v!3) AND b(v!3) THEN s2b!3
                                                                                           ELSE update_PState(s2b!3, raise(JMLExc))
                                                                                           ENDIF)")
                                                                                                                                              (("1"
                                                                                                                                                (inst-cp
                                                                                                                                                 -22
                                                                                                                                                 "m2!2 - 1")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (apply
                                                                                                                                                     (repeat
                                                                                                                                                      (inst?
                                                                                                                                                       -23
                                                                                                                                                       :where
                                                                                                                                                       (-1
                                                                                                                                                        -9))))
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (split
                                                                                                                                                         -23)
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("1"
                                                                                                                                                            (use
                                                                                                                                                             "monitor_related_states_preserved_by_derive")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (split
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "monitor_related_states(p!1)(tau2!2, IF Bool?(v!4) AND b(v!4) THEN s2b!4
                                                                                                       ELSE update_PState(s2b!4, raise(JMLExc))
                                                                                                       ENDIF)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -25
                                                                                                                                                                     "m3!2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (apply
                                                                                                                                                                         (repeat
                                                                                                                                                                          (inst?
                                                                                                                                                                           -25
                                                                                                                                                                           :where
                                                                                                                                                                           (-1
                                                                                                                                                                            -14))))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (split
                                                                                                                                                                             -25)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (use
                                                                                                                                                                                 "monitor_related_states_preserved_by_derive")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (split
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (branch
                                                                                                                                                                                        (split
                                                                                                                                                                                         -25)
                                                                                                                                                                                        ((then
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (assert)))))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         2
                                                                                                                                                                                         "s2b!5"
                                                                                                                                                                                         "1 + n2!3 + 1 + n2!4 + 1 + n2!5")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             2
                                                                                                                                                                                             "s2b!5")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "monitor_related_states_implies_same_exception")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand*
                                                                                                                                                                                                     "update_stack"
                                                                                                                                                                                                     "update_PState"
                                                                                                                                                                                                     "o"
                                                                                                                                                                                                     "update_local")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil)))
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       2
                                                                                                                                                                                                       "n2!3 + 1"
                                                                                                                                                                                                       "n2!4 + 1"
                                                                                                                                                                                                       "n2!5"
                                                                                                                                                                                                       _
                                                                                                                                                                                                       _
                                                                                                                                                                                                       "v!2"
                                                                                                                                                                                                       "inv!1")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         2
                                                                                                                                                                                                         "IF Bool?(v!3) AND b(v!3) THEN s2b!3
                                                                                                                                                                                             ELSE update_PState(s2b!3, raise(JMLExc))
                                                                                                                                                                                             ENDIF"
                                                                                                                                                                                                         "IF Bool?(v!4) AND b(v!4) THEN s2b!4
                                                                                                                                                                                             ELSE update_PState(s2b!4, raise(JMLExc))
                                                                                                                                                                                             ENDIF")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "complete_MP")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil)))
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("3"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("4"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("5"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "return_of_stmt")
                                                                                                                                                                                                              (("5"
                                                                                                                                                                                                                (propax)
                                                                                                                                                                                                                nil)))
                                                                                                                                                                                                             ("6"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "monitor_related_states")
                                                                                                                                                                                                              (("6"
                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                (("6"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil)))))))))))
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "complete_MP")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                          nil)))))))))))))))))))
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         3
                                                                                                                                                                                         "on_method_MVA(Entry)(complete_MP(p!1), md!1)(val(Const(pv!1)))(s2b!5)"
                                                                                                                                                                                         "1 + n2!3 + 1 + n2!4 + 1 + n2!5")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (split
                                                                                                                                                                                             3)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "monitor_related_states_implies_same_exception")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   1
                                                                                                                                                                                                   "s2b!5")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand*
                                                                                                                                                                                                         "update_stack"
                                                                                                                                                                                                         "update_PState"
                                                                                                                                                                                                         "o"
                                                                                                                                                                                                         "update_local")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil)))
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           2
                                                                                                                                                                                                           "n2!3 + 1"
                                                                                                                                                                                                           "n2!4 + 1"
                                                                                                                                                                                                           "n2!5"
                                                                                                                                                                                                           _
                                                                                                                                                                                                           _
                                                                                                                                                                                                           "v!2"
                                                                                                                                                                                                           "inv!1")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             2
                                                                                                                                                                                                             "IF Bool?(v!3) AND b(v!3) THEN s2b!3
                                                                                                                                                                                                 ELSE update_PState(s2b!3, raise(JMLExc))
                                                                                                                                                                                                 ENDIF"
                                                                                                                                                                                                             "IF Bool?(v!4) AND b(v!4) THEN s2b!4
                                                                                                                                                                                                 ELSE update_PState(s2b!4, raise(JMLExc))
                                                                                                                                                                                                 ENDIF")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (split
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "complete_MP")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil)))
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("3"
                                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("4"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("5"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "return_of_stmt")
                                                                                                                                                                                                                  (("5"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil)))
                                                                                                                                                                                                                 ("6"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "monitor_related_states")
                                                                                                                                                                                                                  (("6"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (("6"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil)))))))))))
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "complete_MP")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil)))))))))))))))))
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "monitor_related_states"
                                                                                                                                                                                               (-2
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "monitor_related_astates_preserved_by_on_method_MVA")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -2)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             -1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (use
                                                                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (use
                                                                                                                                                                                                                     "on_method_MVA_yields_wf_state"
                                                                                                                                                                                                                     ("mp"
                                                                                                                                                                                                                      "complete_MP(p!1)"))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "on_method_MVA")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil)))))))))))))))
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (typepred
                                                                                                                                                                                                               "complete_MP(p!1)")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "wf_and_complete_MP")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  nil)))))))))))))))))))))))))
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "complete_MP")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil)))))))
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("3"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil)))))))))
                                                                                                                                                                             ("2"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil)))))))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -12)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (propax)
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (use
                                                                                                                                                                               "monitor_related_states_preserved_by_raise")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil)))))))))))))))
                                                                                                                                                                 ("2"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil)))))))))
                                                                                                                                                         ("2"
                                                                                                                                                          (propax)
                                                                                                                                                          nil)))))))))))
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -6)
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (split
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        (("2"
                                                                                                                                                          (use
                                                                                                                                                           "monitor_related_states_preserved_by_raise")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil)))))))))))))))))))))))))))))
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                nil)))))))))))))))
                                                                                                                 ("2"
                                                                                                                  (skosimp*)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "getLocalDecls")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "getLocalDecls")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "lookup_mthd")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil)))))))))))))))))))))
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "getLocalDecls")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "getLocalDecls")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "lookup_mthd")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil)))))))))))))))))
                                                                                                         ("3"
                                                                                                          (expand
                                                                                                           "complete_MP")
                                                                                                          (("3"
                                                                                                            (propax)
                                                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                 ("2"
                                                  (apply
                                                   (branch
                                                    (split -1)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("1"
                                                    (inst 12 "s1b!1" "0")
                                                    nil)
                                                   ("2"
                                                    (apply
                                                     (branch
                                                      (split -1)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    (("1"
                                                      (expand
                                                       "execute_CaseJML")
                                                      (("1"
                                                        (expand "extend")
                                                        (("1"
                                                          (expand
                                                           "complete_MP"
                                                           13
                                                           1)
                                                          (("1"
                                                            (apply
                                                             (branch
                                                              (split -3)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (apply
                                                                 (branch
                                                                  (split -2)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (inst
                                                                   13
                                                                   "s1b!1"
                                                                   "0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "return_of_stmt")
                                                                      (("1"
                                                                        (propax)
                                                                        nil)))))))
                                                                 ("2"
                                                                  (inst
                                                                   -8
                                                                   "x!1 - 1")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (apply
                                                                       (repeat
                                                                        (inst?
                                                                         -8
                                                                         :where
                                                                         (-2
                                                                          -9))))
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             14
                                                                             "s2b!1"
                                                                             "n2!1 + 1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "return_of_stmt")
                                                                                (("2"
                                                                                  (use
                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (use
                                                                                       "monitor_related_states_implies_same_exception")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "monitor_related_states")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil)))))))))))))))))))))))))))))))))))))))))
                                                     ("2"
                                                      (apply
                                                       (branch
                                                        (split -1)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst-cp -8 "m1!1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (apply
                                                               (repeat
                                                                (inst?
                                                                 -9
                                                                 :where
                                                                 (-4 -10))))
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (expand
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (use
                                                                       "monitor_related_states_preserved_by_derive")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (use
                                                                           "monitor_related_states_implies_same_exception")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (apply
                                                                               (branch
                                                                                (split
                                                                                 -7)
                                                                                ((then
                                                                                  (flatten)
                                                                                  (assert)
                                                                                  (flatten)
                                                                                  (assert)))))
                                                                              (("1"
                                                                                (inst
                                                                                 14
                                                                                 "s2b!1"
                                                                                 "n2!1 + 1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "return_of_stmt")
                                                                                    (("1"
                                                                                      (inst?
                                                                                       14
                                                                                       :where
                                                                                       -13)
                                                                                      (("1"
                                                                                        (inst
                                                                                         14
                                                                                         "0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil)))))))))))
                                                                               ("2"
                                                                                (inst
                                                                                 -11
                                                                                 "m2!1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (apply
                                                                                     (repeat
                                                                                      (inst?
                                                                                       -11
                                                                                       :where
                                                                                       (-2
                                                                                        -4))))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -11)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (inst
                                                                                             15
                                                                                             "s2b!2"
                                                                                             "n2!1 + n2!2 + 1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "return_of_stmt")
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -1
                                                                                                       :where
                                                                                                       (-2
                                                                                                        -4))))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "monitor_related_states_implies_same_exception")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (split
                                                                                                                 15)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst?
                                                                                                                   1
                                                                                                                   :where
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "n2!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))
                                                                                                         ("2"
                                                                                                          (propax)
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (propax)
                                                                                                          nil)))))
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                                         ("b2"
                                                                                                          "else_stmt(b!1)"
                                                                                                          "b1"
                                                                                                          "b!1"))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "<<")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil)))))))
                                                                                                     ("3"
                                                                                                      (skosimp*)
                                                                                                      (("3"
                                                                                                        (use
                                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                                         ("b2"
                                                                                                          "then_stmt(b!1)"
                                                                                                          "b1"
                                                                                                          "b!1"))
                                                                                                        (("3"
                                                                                                          (expand
                                                                                                           "<<")
                                                                                                          (("3"
                                                                                                            (propax)
                                                                                                            nil)))))))))))))))))))
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil)))))
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (use
                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                         ("b2"
                                                                                          "else_stmt(b!1)"
                                                                                          "b1"
                                                                                          "b!1"))
                                                                                        (("2"
                                                                                          (expand
                                                                                           "<<")
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil)))))))
                                                                                     ("3"
                                                                                      (skosimp*)
                                                                                      (("3"
                                                                                        (use
                                                                                         "wf_Body_preserved_by_proper_subterm"
                                                                                         ("b2"
                                                                                          "then_stmt(b!1)"
                                                                                          "b1"
                                                                                          "b!1"))
                                                                                        (("3"
                                                                                          (expand
                                                                                           "<<")
                                                                                          (("3"
                                                                                            (propax)
                                                                                            nil)))))))))))))))))))))))))))))))))))))
                                                       ("2"
                                                        (apply
                                                         (branch
                                                          (split -1)
                                                          ((then
                                                            (flatten)
                                                            (assert)
                                                            (flatten)
                                                            (assert)))))
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst-cp
                                                               -8
                                                               "m1!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (apply
                                                                   (repeat
                                                                    (inst?
                                                                     -9
                                                                     :where
                                                                     (-4
                                                                      -10))))
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (use
                                                                         "monitor_related_states_preserved_by_derive")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (use
                                                                             "monitor_related_states_implies_same_exception")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 -10
                                                                                 "m2!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (apply
                                                                                     (repeat
                                                                                      (inst?
                                                                                       -10
                                                                                       :where
                                                                                       (-8
                                                                                        -2))))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skosimp*)
                                                                                        (("1"
                                                                                          (inst
                                                                                           15
                                                                                           "s2b!2"
                                                                                           "n2!1 + n2!2 + 1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "return_of_stmt")
                                                                                              (("1"
                                                                                                (use
                                                                                                 "monitor_related_states_preserved_by_derive")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "monitor_related_states_implies_same_exception")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           15)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (inst?
                                                                                                             1
                                                                                                             :where
                                                                                                             (-13
                                                                                                              -12))
                                                                                                            (("2"
                                                                                                              (inst?
                                                                                                               1
                                                                                                               :where
                                                                                                               (-13
                                                                                                                -12))
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (apply
                                                           (branch
                                                            (split -1)
                                                            ((then
                                                              (flatten)
                                                              (assert)
                                                              (flatten)
                                                              (assert)))))
                                                          (("1"
                                                            (expand
                                                             "execute_set")
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (inst
                                                                 -8
                                                                 "x!1 - 1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (apply
                                                                     (repeat
                                                                      (inst?
                                                                       -8
                                                                       :where
                                                                       (-4
                                                                        -9))))
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (skosimp*)
                                                                        (("1"
                                                                          (inst
                                                                           16
                                                                           "IF up?(ex(pstate(s2b!1))) THEN s2b!1 ELSE update_GhostVars(s2b!1, update_store(target(b!1), v!2)) ENDIF "
                                                                           "n2!1 + 1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "monitor_related_states_preserved_by_derive")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_implies_same_exception")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (split
                                                                                         16)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "return_of_stmt")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "update_GhostVars")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (apply
                                                                                                     (branch
                                                                                                      (split
                                                                                                       1)
                                                                                                      ((then
                                                                                                        (flatten)
                                                                                                        (assert)
                                                                                                        (flatten)
                                                                                                        (assert)))))
                                                                                                    nil)))))))))))
                                                                                         ("2"
                                                                                          (inst?
                                                                                           1
                                                                                           :where
                                                                                           -10)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (apply
                                                                                                   (branch
                                                                                                    (split
                                                                                                     1)
                                                                                                    ((then
                                                                                                      (flatten)
                                                                                                      (assert)
                                                                                                      (flatten)
                                                                                                      (assert)))))
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -7)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_GhostVars")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "monitor_related_states")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))))))
                                                           ("2"
                                                            (apply
                                                             (branch
                                                              (split -1)
                                                              ((then
                                                                (flatten)
                                                                (assert)
                                                                (flatten)
                                                                (assert)))))
                                                            (("1"
                                                              (inst
                                                               17
                                                               "s1b!1"
                                                               "0")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "return_of_stmt")
                                                                  (("1"
                                                                    (propax)
                                                                    nil)))))))
                                                             ("2"
                                                              (apply
                                                               (branch
                                                                (split -1)
                                                                ((then
                                                                  (flatten)
                                                                  (assert)
                                                                  (flatten)
                                                                  (assert)))))
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     -6
                                                                     "x!1 - 1")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -6
                                                                           :where
                                                                           (-4
                                                                            -7))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst
                                                                               18
                                                                               "s2b!1"
                                                                               "n2!1 + 1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "monitor_related_states_preserved_by_derive")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (use
                                                                                       "monitor_related_states_implies_same_exception")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "return_of_stmt")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (split
                                                                                               18)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst?)
                                                                                                nil)))))))))))))))))))))))))))))))))
                                                               ("2"
                                                                (apply
                                                                 (branch
                                                                  (split -1)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("1"
                                                                  (inst
                                                                   19
                                                                   "update_PState(s1b!1, raise(exc(b!1)))"
                                                                   "0")
                                                                  (("1"
                                                                    (expand
                                                                     "return_of_stmt")
                                                                    (("1"
                                                                      (expand
                                                                       "update_PState")
                                                                      (("1"
                                                                        (expand
                                                                         "raise")
                                                                        (("1"
                                                                          (assert)
                                                                          nil)))))))))
                                                                 ("2"
                                                                  (apply
                                                                   (branch
                                                                    (split -1)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("1"
                                                                    (skosimp*)
                                                                    (("1"
                                                                      (inst-cp
                                                                       -11
                                                                       "m1!1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -12
                                                                             :where
                                                                             (-4
                                                                              -13))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (use
                                                                                 "monitor_related_states_preserved_by_derive")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (use
                                                                                     "monitor_related_states_implies_same_exception")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -8)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -16
                                                                                           "m2!1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (use
                                                                                               "monitor_related_states_preserved_by_catch")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (apply
                                                                                                   (repeat
                                                                                                    (inst?
                                                                                                     -18
                                                                                                     :where
                                                                                                     (-1
                                                                                                      -4))))
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -17
                                                                                                         "m3!1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "monitor_related_states_preserved_by_derive")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "monitor_related_states_implies_same_exception")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "monitor_related_states_preserved_by_catch")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (apply
                                                                                                                           (repeat
                                                                                                                            (inst?
                                                                                                                             -19
                                                                                                                             :where
                                                                                                                             (-15
                                                                                                                              -1))))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (skosimp*)
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "monitor_related_states_preserved_by_derive")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (use
                                                                                                                                     "monitor_related_states_implies_same_exception")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         20
                                                                                                                                         "IF NOT up?(ex(pstate(s2b!3))) THEN update_PState(s2b!3, LAMBDA(ptau3 : PState) : ptau3 WITH [ex := ex(pstate(s2b!2))]) ELSE s2b!3 ENDIF"
                                                                                                                                         "1 + n2!1 + n2!2 + n2!3")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (split
                                                                                                                                             20)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -19)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -4)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -13)
                                                                                                                                                      (("1"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "return_of_stmt")
                                                                                                                                                          (("1"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "update_PState")
                                                                                                                                                                (("1"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil)))))))))))))))))))))
                                                                                                                                             ("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "n2!1"
                                                                                                                                               "n2!2"
                                                                                                                                               "n2!3"
                                                                                                                                               "s2b!1"
                                                                                                                                               "s2b!2"
                                                                                                                                               "s2b!3"
                                                                                                                                               "v1!1"
                                                                                                                                               "v2!1"
                                                                                                                                               "v3!1")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "return_of_stmt")
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -4)
                                                                                                                                                        (("2"
                                                                                                                                                          (split
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                         ("2"
                                                                                          (use
                                                                                           "monitor_related_states_preserved_by_catch")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -2
                                                                                               :hide?
                                                                                               t)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -14
                                                                                                 "m3!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (apply
                                                                                                     (repeat
                                                                                                      (inst?
                                                                                                       -14
                                                                                                       :where
                                                                                                       (-10
                                                                                                        -1))))
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           21
                                                                                                           "IF NOT up?(ex(pstate(s2b!2))) THEN update_PState(s2b!2, LAMBDA(ptau3 : PState) : ptau3 WITH [ex := ex(pstate(s2b!1))]) ELSE s2b!2 ENDIF"
                                                                                                           "1 + n2!1 + n2!2 ")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "monitor_related_states_preserved_by_derive")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (use
                                                                                                                   "monitor_related_states_implies_same_exception")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       21)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -14)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -5)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -8)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "return_of_stmt")
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "update_PState")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil)))))))))))))))))
                                                                                                                       ("2"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "n2!1"
                                                                                                                         "0"
                                                                                                                         "n2!2"
                                                                                                                         "s2b!1"
                                                                                                                         "s2b!1"
                                                                                                                         "s2b!2"
                                                                                                                         "v1!1"
                                                                                                                         "Bottom"
                                                                                                                         "v3!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "return_of_stmt")
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -5)
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil)))
                                                                                                                                 ("3"
                                                                                                                                  (propax)
                                                                                                                                  nil)
                                                                                                                                 ("4"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("4"
                                                                                                                                    (propax)
                                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                   ("2"
                                                                    (apply
                                                                     (branch
                                                                      (split
                                                                       -1)
                                                                      ((then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))))
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "x!1 - 1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -6
                                                                             :where
                                                                             (-4
                                                                              -7))))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (inst
                                                                                 21
                                                                                 "s2b!1"
                                                                                 "n2!1 + 1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (use
                                                                                     "monitor_related_states_preserved_by_derive")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (use
                                                                                         "monitor_related_states_implies_same_exception")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "return_of_stmt")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil)))))))))))))))))))))))))))
                                                                     ("2"
                                                                      (expand
                                                                       "execute_assert")
                                                                      (("2"
                                                                        (expand
                                                                         "check_assertion")
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (inst
                                                                             -7
                                                                             "x!1 - 1")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (apply
                                                                                 (repeat
                                                                                  (inst?
                                                                                   -7
                                                                                   :where
                                                                                   (-3
                                                                                    -8))))
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (inst
                                                                                       22
                                                                                       "IF Bool?(v!2) AND b(v!2) THEN s2b!1 ELSE update_PState(s2b!1, raise(JMLExc)) ENDIF"
                                                                                       "n2!1 + 1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (use
                                                                                           "monitor_related_states_preserved_by_derive")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (use
                                                                                               "monitor_related_states_implies_same_exception")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   22)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "return_of_stmt")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -6)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "raise")
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil)))))))))))))))))
                                                                                                   ("2"
                                                                                                    (inst?
                                                                                                     1
                                                                                                     :where
                                                                                                     -9)
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (lift-if)
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "monitor_related_states")
                                                                                                      (("3"
                                                                                                        (flatten)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "update_PState")
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "raise")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
       ("2" (use "wf_nat") nil))))
    ";;; developed with shostak decision procedures")
   unfinished nil nil nil nil nil))
 (correctness_of_complete_MP 0
  (correctness_of_complete_MP-1 nil 3412327298 3428746899
   ("" (skosimp*)
    (("" (expand "run_monitored_program")
      (("" (expand "run_FullProgram")
        (("" (expand "derives")
          (("" (skosimp*)
            (("" (use "monitor_related_states_initial_MP_states")
              (("" (use "monitor_related_states_implies_derive")
                (("" (assert)
                  (("" (skosimp*)
                    (("" (inst 1 "s2b!1")
                      (("" (split 1)
                        (("1" (inst?) nil nil)
                         ("2"
                          (use "monitor_related_states_preserved_by_derive")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((run_monitored_program const-decl "boolean" MonitoredProgramSemantics nil)
    (derives const-decl "bool" Semantics nil)
    (monitor_related_states_initial_MP_states formula-decl nil CompleteMonitor
     nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (monitor_related_states_preserved_by_derive formula-decl nil
     CompleteMonitor nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (Body type-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) (Excpt type-decl nil Excpt_adt nil)
    (Method type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr adt-constructor-decl "[Expr -> (StmtExpr?)]" Body_adt nil)
    (MethodCall adt-constructor-decl "[[Expr, Name, Expr] -> (MethodCall?)]"
     Body_adt nil)
    (RefVarEval adt-constructor-decl "[Name -> (RefVarEval?)]" Body_adt nil)
    (This const-decl "Name" Program nil)
    (Const adt-constructor-decl "[(defined?) -> (Const?)]" Body_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (Int? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Int adt-constructor-decl "[int -> (Int?)]" Val_adt nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (initial_MP_state const-decl "MPState" MonitoredProgramSemantics nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (monitor_related_states_implies_derive formula-decl nil CompleteMonitor
     nil)
    (run_FullProgram const-decl "boolean" Semantics nil))
   2454 1000 t shostak))
 (correctness_of_complete_MP_converse 0
  (correctness_of_complete_MP_converse-1 nil 3414142965 3428746901
   ("" (skosimp*)
    (("" (expand "run_monitored_program")
      (("" (expand "run_FullProgram")
        (("" (expand "derives")
          (("" (skosimp*)
            (("" (use "monitor_related_states_initial_MP_states")
              (("" (assert)
                (("" (use "monitor_related_states_implies_derive_converse")
                  (("1" (assert)
                    (("1" (skosimp*)
                      (("1" (use "monitor_related_states_preserved_by_derive")
                        (("1" (assert)
                          (("1" (inst?)
                            (("1" (assert) (("1" (inst?) nil nil)) nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide-all-but 1)
                    (("2" (expand "wf_Body")
                      (("2" (split 1)
                        (("1" (skosimp*)
                          (("1"
                            (auto-rewrite "var_names" "member" "union"
                                          "singleton" "emptyset" "add")
                            (("1" (assert)
                              (("1" (expand "ext_declared_var_names")
                                (("1" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skosimp*)
                          (("2"
                            (auto-rewrite "subterm" "member" "union"
                                          "singleton" "emptyset" "add")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((run_monitored_program const-decl "boolean" MonitoredProgramSemantics nil)
    (derives const-decl "bool" Semantics nil)
    (monitor_related_states_initial_MP_states formula-decl nil CompleteMonitor
     nil)
    (wf_and_partial_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (CP formal-nonempty-type-decl nil CompleteMonitor nil)
    (Name formal-nonempty-type-decl nil CompleteMonitor nil)
    (complete_MP_wf_and_complete application-judgement "(wf_and_complete_MP)"
     CompleteMonitor nil)
    (monitor_related_states_implies_derive_converse formula-decl nil
     CompleteMonitor nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (complete_MP const-decl "MonitoredProgram" CompleteMonitor nil)
    (initial_MP_state const-decl "MPState" MonitoredProgramSemantics nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (mp!1 skolem-const-decl "(wf_and_partial_MP)" CompleteMonitor nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr adt-constructor-decl "[Expr -> (StmtExpr?)]" Body_adt nil)
    (MethodCall adt-constructor-decl "[[Expr, Name, Expr] -> (MethodCall?)]"
     Body_adt nil)
    (RefVarEval adt-constructor-decl "[Name -> (RefVarEval?)]" Body_adt nil)
    (This const-decl "Name" Program nil)
    (main!1 skolem-const-decl "Name" CompleteMonitor nil)
    (Const adt-constructor-decl "[(defined?) -> (Const?)]" Body_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (Int? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Int adt-constructor-decl "[int -> (Int?)]" Val_adt nil)
    (arg!1 skolem-const-decl "int" CompleteMonitor nil)
    (monitor_related_states_preserved_by_derive formula-decl nil
     CompleteMonitor nil)
    (subterm adt-def-decl "boolean" Body_adt nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (nonempty_singleton_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (singleton const-decl "(singleton?)" sets nil)
    (member const-decl "bool" sets nil) (emptyset const-decl "set" sets nil)
    (union const-decl "set" sets nil)
    (var_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (ext_declared_var_names const-decl "finite_set[Name]" ProgramFunctions
     nil)
    (run_FullProgram const-decl "boolean" Semantics nil))
   1566 1440 t shostak)))

