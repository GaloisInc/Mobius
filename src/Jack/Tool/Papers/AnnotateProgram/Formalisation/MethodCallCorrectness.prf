(MethodCallsPreserveRelatedState
 (IMP_VariableNames_TCC1 0
  (IMP_VariableNames_TCC1-2 nil 3430821378 3433216903
   ("" (use "infinite_namespace") nil nil) proved
   ((infinite_namespace formula-decl nil MethodCallsPreserveRelatedState nil))
   1411 1410 t nil)
  (IMP_VariableNames_TCC1-1 nil 3430821302 nil ("" (assuming-tcc) nil nil) nil
   nil nil nil nil nil))
 (IMP_AnnEventPreservesMPModeled_TCC1 0
  (IMP_AnnEventPreservesMPModeled_TCC1-2 nil 3430821426 3433216905
   ("" (use "CP_is_enumerable") nil nil) proved
   ((CP_is_enumerable formula-decl nil MethodCallsPreserveRelatedState nil))
   1408 1390 nil nil)
  (IMP_AnnEventPreservesMPModeled_TCC1-1 nil 3430821302 nil
   ("" (assuming-tcc) nil nil) nil nil nil nil nil nil))
 (IMP_AnnEventPreservesMPModeled_TCC2 0
  (IMP_AnnEventPreservesMPModeled_TCC2-2 nil 3430821496 3433216906
   ("" (use "name_of_exists") nil nil) proved
   ((name_of_exists formula-decl nil MethodCallsPreserveRelatedState nil))
   1418 1390 nil nil)
  (IMP_AnnEventPreservesMPModeled_TCC2-1 nil 3430821302 nil
   ("" (assuming-tcc) nil nil) nil nil nil nil nil nil))
 (on_method_entry_preserves_related_states_annotated_TCC1 0
  (on_method_entry_preserves_related_states_annotated_TCC1-2 nil 3430821527
   3433216908
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "b!1")
        (("" (use "ann_program_preserves_wf_body") nil))))))
    nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (ann_program_preserves_wf_body formula-decl nil AnnotateProgramProperties
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil))
   1999 1980 nil nil)
  (on_method_entry_preserves_related_states_annotated_TCC1-1 nil 3430821302
   nil ("" (subtype-tcc) nil nil) nil nil nil nil nil nil))
 (on_method_entry_preserves_related_states_annotated_TCC2 0
  (on_method_entry_preserves_related_states_annotated_TCC2-2 nil 3430821557
   3433216910
   ("" (skosimp*)
    (("" (expand "id") (("" (use "ann_program_preserves_wf_method") nil))))
    nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (ann_program_preserves_wf_method formula-decl nil
     AnnotateProgramProperties nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil))
   2122 2090 nil nil)
  (on_method_entry_preserves_related_states_annotated_TCC2-1 nil 3430821302
   nil ("" (subtype-tcc) nil nil) nil nil nil nil nil nil))
 (on_method_entry_preserves_related_states_annotated 0
  (on_method_entry_preserves_related_states_annotated-2 nil 3431169214
   3433217068
   ("" (skosimp*)
    (("" (expand* "on_method_entry_MP" "on_method_entry")
      (("" (assert)
        (("" (skosimp*)
          (("" (use "related_states_implies_same_exception")
            (("" (assert)
              (("" (skosimp*)
                (("" (expand* "id" "check_assertion")
                  (("" (skosimp*)
                    (("" (expand "lookup_inv")
                      (("" (use "get_class_equivalence")
                        (("" (assert)
                          (("" (replace -1)
                            (("" (assert)
                              (("" (expand "ann_class" -25)
                                (("" (assert)
                                  (("" (lift-if -25)
                                    (("" (use "get_class_in_classes")
                                      ((""
                                        (assert)
                                        ((""
                                          (replace -13 :dir rl)
                                          ((""
                                            (replace -26)
                                            ((""
                                              (rewrite "derive" -28)
                                              ((""
                                                (skosimp*)
                                                ((""
                                                  (rewrite "derive" -29)
                                                  ((""
                                                    (skosimp*)
                                                    ((""
                                                      (rewrite "derive" -30)
                                                      ((""
                                                        (skosimp*)
                                                        ((""
                                                          (rewrite
                                                           "derive"
                                                           -31)
                                                          ((""
                                                            (flatten)
                                                            ((""
                                                              (rewrite
                                                               "derive"
                                                               -34)
                                                              ((""
                                                                (assert)
                                                                ((""
                                                                  (flatten)
                                                                  ((""
                                                                    (expand*
                                                                     "check_for_exception_final"
                                                                     "check_for_exception")
                                                                    ((""
                                                                      (assert)
                                                                      ((""
                                                                        (flatten)
                                                                        ((""
                                                                          (replace
                                                                           -39
                                                                           :hide?
                                                                           t)
                                                                          ((""
                                                                            (replace
                                                                             -37
                                                                             :hide?
                                                                             t)
                                                                            ((""
                                                                              (replace
                                                                               -36
                                                                               :hide?
                                                                               t)
                                                                              ((""
                                                                                (replace
                                                                                 -33
                                                                                 :hide?
                                                                                 t)
                                                                                ((""
                                                                                  (assert)
                                                                                  ((""
                                                                                    (typepred
                                                                                     "mp!1")
                                                                                    ((""
                                                                                      (expand
                                                                                       "wf_and_complete_MP")
                                                                                      ((""
                                                                                        (flatten)
                                                                                        ((""
                                                                                          (case
                                                                                           "related_states(mp!1)(sMP1!1, tau!1)")
                                                                                          (("1"
                                                                                            (use
                                                                                             "related_states_lookup_correspondence")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "halted")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (copy
                                                                                                         -16)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (repeat
                                                                                                            (inst?
                                                                                                             -1
                                                                                                             :where
                                                                                                             (-21
                                                                                                              -42))))
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "cp(astate(tau1!3)) = halted")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "related_states"
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "derive_never_leaves_halted")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "derive_yields_wf_state_MP")
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "complete_MVA_never_stuck_after_derive")
                                                                                                                                  (("1"
                                                                                                                                    (inst?
                                                                                                                                     -1
                                                                                                                                     :where
                                                                                                                                     -32)
                                                                                                                                    (("1"
                                                                                                                                      (inst?
                                                                                                                                       -2
                                                                                                                                       :where
                                                                                                                                       -32)
                                                                                                                                      (("1"
                                                                                                                                        (inst?
                                                                                                                                         -3
                                                                                                                                         :where
                                                                                                                                         -32)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "derive_never_leaves_halted")
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "derive_yields_wf_state_MP")
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "complete_MVA_never_stuck_after_derive")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?
                                                                                                                                                   -1
                                                                                                                                                   :where
                                                                                                                                                   -37)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?
                                                                                                                                                     -2
                                                                                                                                                     :where
                                                                                                                                                     -37)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?
                                                                                                                                                       -3
                                                                                                                                                       :where
                                                                                                                                                       -37)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "cp(astate(sMP2!1)) = halted AND wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "derive_yields_wf_state_AP")
                                                                                                                                                            (("1"
                                                                                                                                                              (copy
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst?
                                                                                                                                                                 -1
                                                                                                                                                                 :where
                                                                                                                                                                 -60)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst?
                                                                                                                                                                   -2
                                                                                                                                                                   :where
                                                                                                                                                                   -62)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (use
                                                                                                                                                                       "derive_after_raise"
                                                                                                                                                                       ("sigma1"
                                                                                                                                                                        "tau1!5"
                                                                                                                                                                        "sigma2"
                                                                                                                                                                        "tau1!6"))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (use
                                                                                                                                                                               "derive_after_raise"
                                                                                                                                                                               ("sigma1"
                                                                                                                                                                                "tau1!6"
                                                                                                                                                                                "sigma2"
                                                                                                                                                                                "sAP2!1"))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "related_states")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -66)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "update_PState"
                                                                                                                                                                                             6
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "update_PState"
                                                                                                                                                                                               6
                                                                                                                                                                                               2)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "raise"
                                                                                                                                                                                                 6
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "raise"
                                                                                                                                                                                                   6
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -3)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -62)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                          "ann_program(mp!1)"))
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (case
                                                                                                                                                                                                             "wf_state(ann_program(mp!1))(update_PState(tau1!5, raise(JMLExc)))")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "update_PState"
                                                                                                                                                                                                                   1
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (use
                                                                                                                                                                                                                     "wf_state_raise")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "wf_update_PState"
                                                                                                                                                                                                               ("p"
                                                                                                                                                                                                                "ann_program(mp!1)"))
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "update_PState"
                                                                                                                                                                                                                     1
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (use
                                                                                                                                                                                                                       "wf_state_raise")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (use
                                                                                                                                                                     "ann_program_preserves_wf_method")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand*
                                                                                                                                                                       "wf_Method"
                                                                                                                                                                       "method_pred")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst?
                                                                                                                                                                           -4)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (use
                                                                                                                                                                   "ann_program_preserves_wf_method")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand*
                                                                                                                                                                     "wf_Method"
                                                                                                                                                                     "method_pred")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (case
                                                                                                                                                             "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -34)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -36)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "update_PState")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lift-if
                                                                                                                                                                         (-4
                                                                                                                                                                          -7))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (apply
                                                                                                                                                                               (branch
                                                                                                                                                                                (split
                                                                                                                                                                                 -40)
                                                                                                                                                                                ((then
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (assert)))))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (use
                                                                                                                                                                                   "on_method_MVA_never_leaves_halted")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (case
                                                                                                                                                               "wf_state(mp!1)(s_new!1) AND NOT stuck(s_new!1)")
                                                                                                                                                              (("1"
                                                                                                                                                                (apply
                                                                                                                                                                 (branch
                                                                                                                                                                  (split
                                                                                                                                                                   -41)
                                                                                                                                                                  ((then
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (assert)
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (assert)))))
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (use
                                                                                                                                                                     "on_method_MVA_yields_wf_state")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (use
                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (case
                                                                                                                                                                 "wf_state(mp!1)(tau1!2)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "wf_state(mp!1)(tau2!2)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (split
                                                                                                                                                                         -7)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -38)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (lift-if
                                                                                                                                                                               -4)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "update_PState")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -36)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lift-if
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "update_PState")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -37)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (use
                                                                                                                                                                                 "wf_update_PState"
                                                                                                                                                                                 ("p"
                                                                                                                                                                                  "mp!1"))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "update_PState")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -33)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (split
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (apply
                                                                                                                                                                           (then
                                                                                                                                                                            (use
                                                                                                                                                                             "wf_update_PState"
                                                                                                                                                                             ("p"
                                                                                                                                                                              "mp!1"))
                                                                                                                                                                            (assert)
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            (expand
                                                                                                                                                                             "update_PState")
                                                                                                                                                                            (use
                                                                                                                                                                             "wf_state_raise")
                                                                                                                                                                            (assert)))
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "related_states(mp!1)(tau1!2, tau1!1)")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "ann_method_pre")
                                                                                                                        (("1"
                                                                                                                          (copy
                                                                                                                           -19)
                                                                                                                          (("1"
                                                                                                                            (apply
                                                                                                                             (repeat
                                                                                                                              (inst?
                                                                                                                               -1
                                                                                                                               :where
                                                                                                                               (-27
                                                                                                                                -49))))
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "cp(astate(tau1!4)) = halted")
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "derive_never_leaves_halted")
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "derive_yields_wf_state_MP")
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "complete_MVA_never_stuck_after_derive")
                                                                                                                                          (("1"
                                                                                                                                            (inst?
                                                                                                                                             -1
                                                                                                                                             :where
                                                                                                                                             -34)
                                                                                                                                            (("1"
                                                                                                                                              (inst?
                                                                                                                                               -2
                                                                                                                                               :where
                                                                                                                                               -34)
                                                                                                                                              (("1"
                                                                                                                                                (inst?
                                                                                                                                                 -3
                                                                                                                                                 :where
                                                                                                                                                 -34)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "related_states"
                                                                                                                                                     -5)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "cp(astate(sMP2!1)) = halted AND wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "derive_yields_wf_state_AP")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst?
                                                                                                                                                               -1
                                                                                                                                                               :where
                                                                                                                                                               -61)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "related_states"
                                                                                                                                                                       7)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "wf_state(ann_program(mp!1))(sAP2!1)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "up?(ex(pstate(tau2!1))) AND down(ex(pstate(tau2!1))) = JMLExc")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "derive"
                                                                                                                                                                                 -65)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -62)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "update_PState")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "raise")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -60)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   2)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (then
                                                                                                                                                                                        (use
                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                         ("p"
                                                                                                                                                                                          "ann_program(mp!1)"
                                                                                                                                                                                          "s1"
                                                                                                                                                                                          "tau1!6"))
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                        (use
                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                        (assert)))
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (use
                                                                                                                                                                 "ann_program_preserves_wf_method")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand*
                                                                                                                                                                   "wf_Method"
                                                                                                                                                                   "method_pred")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?
                                                                                                                                                                       -4)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -36)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "update_PState"
                                                                                                                                                               -3)
                                                                                                                                                              (("2"
                                                                                                                                                                (lift-if
                                                                                                                                                                 (-1
                                                                                                                                                                  -2
                                                                                                                                                                  -3))
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "wf_state(mp!1)(update_PState(tau1!4, raise(JMLExc)))")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "update_PState"
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (apply
                                                                                                                                                                             (branch
                                                                                                                                                                              (split
                                                                                                                                                                               -39)
                                                                                                                                                                              ((then
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (assert)
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (assert)))))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (use
                                                                                                                                                                                 "on_method_MVA_never_leaves_halted")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (use
                                                                                                                                                                                     "on_method_MVA_yields_wf_state")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (apply
                                                                                                                                                                       (then
                                                                                                                                                                        (use
                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                         ("p"
                                                                                                                                                                          "mp!1"))
                                                                                                                                                                        (assert)
                                                                                                                                                                        (skosimp*)
                                                                                                                                                                        (expand
                                                                                                                                                                         "update_PState")
                                                                                                                                                                        (use
                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                        (assert)))
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (case
                                                                                                                                       "related_states(mp!1)(tau2!2, tau2!1)")
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "cp(astate(tau2!2)) = halted")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "related_states"
                                                                                                                                           -2)
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "derive"
                                                                                                                                                     -57)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "derive_never_leaves_halted")
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           "derive_yields_wf_state_MP")
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "complete_MVA_never_stuck_after_derive")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst?
                                                                                                                                                               -1
                                                                                                                                                               :where
                                                                                                                                                               -38)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst?
                                                                                                                                                                 -2
                                                                                                                                                                 :where
                                                                                                                                                                 -38)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst?
                                                                                                                                                                   -3
                                                                                                                                                                   :where
                                                                                                                                                                   -38)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (apply
                                                                                                                                                                       (branch
                                                                                                                                                                        (split
                                                                                                                                                                         -40)
                                                                                                                                                                        ((then
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (assert)
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (assert)))))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "related_states")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "related_states")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (use
                                                                                                                                                                               "on_method_MVA_never_leaves_halted")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (use
                                                                                                                                                                                   "on_method_MVA_yields_wf_state")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (use
                                                                                                                                           "related_states_implies_same_exception")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (use
                                                                                                                                               "ann_method_pre_set")
                                                                                                                                              (("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "derive"
                                                                                                                                                   -56)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (apply
                                                                                                                                                       (branch
                                                                                                                                                        (split
                                                                                                                                                         -56)
                                                                                                                                                        ((then
                                                                                                                                                          (flatten)
                                                                                                                                                          (assert)
                                                                                                                                                          (flatten)
                                                                                                                                                          (assert)))))
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "derive"
                                                                                                                                                         -38)
                                                                                                                                                        (("1"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -38)
                                                                                                                                                            (("1"
                                                                                                                                                              (apply
                                                                                                                                                               (branch
                                                                                                                                                                (split
                                                                                                                                                                 -43)
                                                                                                                                                                ((then
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (assert)
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (assert)))))
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -6)
                                                                                                                                                          (("2"
                                                                                                                                                            (apply
                                                                                                                                                             (repeat
                                                                                                                                                              (inst?
                                                                                                                                                               -29
                                                                                                                                                               :where
                                                                                                                                                               (-38
                                                                                                                                                                -2))))
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (split
                                                                                                                                                                 -29)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT cp(astate(s_new!1)) = halted")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     -41)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (use
                                                                                                                                                                         "related_states_implies_same_exception")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "derive"
                                                                                                                                                                               -9)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "ann_method"
                                                                                                                                                                         -7)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "derive"
                                                                                                                                                                             -7)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (use
                                                                                                                                                                               "related_states_implies_same_exception")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "methods(get_monitored_class(mp!1))(md!1)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "ann_event_does_not_throw_exception")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "ann_event_preserves_MP_modeled"
                                                                                                                                                                                               ("sMP2"
                                                                                                                                                                                                "sMP2!1"))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "wf_state(mp!1)(sMP2!1)")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "wf_state(ann_program(mp!1))(tau!4)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "derive"
                                                                                                                                                                                                             -16)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand*
                                                                                                                                                                                                               "execute_assert"
                                                                                                                                                                                                               "check_assertion")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (apply
                                                                                                                                                                                                                 (branch
                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                   -16)
                                                                                                                                                                                                                  ((then
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (assert)))))
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                                     "derive"
                                                                                                                                                                                                                     -18)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                         "derive"
                                                                                                                                                                                                                         -19)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                             "derive"
                                                                                                                                                                                                                             -20)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                                   "derive"
                                                                                                                                                                                                                                   -23)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (expand*
                                                                                                                                                                                                                                         "check_for_exception_final"
                                                                                                                                                                                                                                         "check_for_exception")
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (replace
                                                                                                                                                                                                                                             -26
                                                                                                                                                                                                                                             :hide?
                                                                                                                                                                                                                                             t)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                                 -25
                                                                                                                                                                                                                                                 :hide?
                                                                                                                                                                                                                                                 t)
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                                   -23
                                                                                                                                                                                                                                                   :hide?
                                                                                                                                                                                                                                                   t)
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                     -22
                                                                                                                                                                                                                                                     :hide?
                                                                                                                                                                                                                                                     t)
                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                                         -24
                                                                                                                                                                                                                                                         :hide?
                                                                                                                                                                                                                                                         t)
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                             "halted")
                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                                               -20
                                                                                                                                                                                                                                                               :hide?
                                                                                                                                                                                                                                                               t)
                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                (use
                                                                                                                                                                                                                                                                 "MP_modeled_lookup_correspondence"
                                                                                                                                                                                                                                                                 ("sMP"
                                                                                                                                                                                                                                                                  "sMP2!1"
                                                                                                                                                                                                                                                                  "q1"
                                                                                                                                                                                                                                                                  "cp(astate(sMP2!1))"))
                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                       "related_states"
                                                                                                                                                                                                                                                                       11)
                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                            (split
                                                                                                                                                                                                                                                                             11)
                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                                                               -24)
                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                                                                                                          "ann_program(mp!1)"))
                                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                                                               "update_PState")
                                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                                (use
                                                                                                                                                                                                                                                                                                 "wf_state_raise")
                                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                                                               -9)
                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                (use
                                                                                                                                                                                                                                                                                 "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                                     "related_states"
                                                                                                                                                                                                                                                                                     -11)
                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                                                                             ("3"
                                                                                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                                                                   -25)
                                                                                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                                     "update_PState")
                                                                                                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                                       "raise")
                                                                                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                                                                             ("4"
                                                                                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                                                                                              (("4"
                                                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                       "complete")
                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                                                                                      (expand*
                                                                                                                                                                                                                                                                       "wf_state"
                                                                                                                                                                                                                                                                       "wf_AState")
                                                                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "derive_yields_wf_state_AP")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst?
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             :where
                                                                                                                                                                                                             -14)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "related_states")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "ann_event_wf_Body")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand*
                                                                                                                                                                                                                   "subset?"
                                                                                                                                                                                                                   "member"
                                                                                                                                                                                                                   "filter_event")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "related_states")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -5
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (case-replace
                                                                                                                                                                                                     "val(v(v!1)) = v!1")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (apply-extensionality
                                                                                                                                                                                                       :hide?
                                                                                                                                                                                                       t)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "get_monitored_class(mp!1) = down(get_class(program(mp!1))(a!1))")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "lookup_mthd_in_methods_class")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "name_get_monitored_class")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "get_monitored_class_in_classes")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "program(mp!1)")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "wf_Program"
                                                                                                                                                                                               "wf_program_has_unique_class_names_def")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "related_states"
                                                                                                                                                                     -2)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "derive"
                                                                                                                                                                           -9)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (use
                                                                                                                                                                                   "on_method_MVA_never_leaves_halted")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (apply
                                                                                                                                                                                           (branch
                                                                                                                                                                                            (split
                                                                                                                                                                                             -48)
                                                                                                                                                                                            ((then
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (assert)))))
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "related_states")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "related_states")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand*
                                                                                                                                                                   "legal_Program_AP"
                                                                                                                                                                   "legal_Program")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "program_pred")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -23
                                                                                                                                                                       "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           -23)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -2
                                                                                                                                                                               "ann_method(mp!1)(md!1)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (split
                                                                                                                                                                                   -2)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "method_pred")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "ann_method_pre_set")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -2
                                                                                                                                                                                             :dir
                                                                                                                                                                                             rl)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "legal_Body_preserved_by_proper_subterm")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 "ann_program(mp!1)"
                                                                                                                                                                                                 "pre_set(ann_method(mp!1)(md!1))(v(v!1))"
                                                                                                                                                                                                 "s1(pre_set(ann_method(mp!1)(md!1))(v(v!1)))")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "<<")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst?
                                                                                                                                                                                                       -6)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "ann_class")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "ann_methods")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "ann_program")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "id")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "md!1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (expand
                                                                                                                                                                     "wf_Method")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("3"
                                                                                                                                                                        (expand
                                                                                                                                                                         "method_pred")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (inst?
                                                                                                                                                                             -4)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (expand*
                                                                                                                                                                               "wf_Body"
                                                                                                                                                                               "subset?"
                                                                                                                                                                               "member")
                                                                                                                                                                              (("3"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (replace
                                                                                                                                         -29)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -51)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -2)
                                                                                                                                              (("2"
                                                                                                                                                (lift-if)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (split
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (skosimp*)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (use
                                                                                                                                                           "related_states_preserved_by_raise")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand*
                                                                                                                                   "legal_Program_AP"
                                                                                                                                   "legal_Program")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "program_pred")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -13
                                                                                                                                       "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (split
                                                                                                                                           -13)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "method_pred")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -2
                                                                                                                                                 "ann_method(mp!1)(md!1)")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "ann_method_pre")
                                                                                                                                                  (("1"
                                                                                                                                                    (split
                                                                                                                                                     -2)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst?)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (expand
                                                                                                                                                       "ann_class")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "ann_methods")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (use
                                                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (expand
                                                                                                                                             "ann_program")
                                                                                                                                            (("2"
                                                                                                                                              (inst?)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "id")
                                                                                                                                                (("2"
                                                                                                                                                  (inst?)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (typepred
                                                                                                                                   "md!1")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "wf_Method")
                                                                                                                                    (("3"
                                                                                                                                      (flatten)
                                                                                                                                      (("3"
                                                                                                                                        (expand
                                                                                                                                         "method_pred")
                                                                                                                                        (("3"
                                                                                                                                          (flatten)
                                                                                                                                          (("3"
                                                                                                                                            (inst?)
                                                                                                                                            (("3"
                                                                                                                                              (assert)
                                                                                                                                              (("3"
                                                                                                                                                (expand*
                                                                                                                                                 "wf_Body"
                                                                                                                                                 "subset?"
                                                                                                                                                 "member")
                                                                                                                                                (("3"
                                                                                                                                                  (flatten)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -45)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -23)
                                                                                                                            (("2"
                                                                                                                              (case-replace
                                                                                                                               "v!4 = v!6")
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("2"
                                                                                                                                        (use
                                                                                                                                         "related_states_preserved_by_raise")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (split
                                                                                                                                 -44)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "derive_bottom_iff_exception_step"
                                                                                                                                     ("p"
                                                                                                                                      "ann_program(mp!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (inst?
                                                                                                                                       -1
                                                                                                                                       :where
                                                                                                                                       -46)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -4)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (apply-extensionality
                                                                                                                                             :hide?
                                                                                                                                             t)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand*
                                                                                                                 "legal_Program_AP"
                                                                                                                 "legal_Program")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "program_pred")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -10
                                                                                                                     "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (split
                                                                                                                         -10)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "method_pred")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "ann_class")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "legal_Body_preserved_by_proper_subterm")
                                                                                                                                (("1"
                                                                                                                                  (inst?
                                                                                                                                   -1
                                                                                                                                   :where
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (inst?
                                                                                                                                     -1
                                                                                                                                     :where
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "<<")
                                                                                                                                        (("1"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "ann_program")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "id")
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (typepred
                                                                                                                 "program(mp!1)")
                                                                                                                (("3"
                                                                                                                  (expand*
                                                                                                                   "wf_Program"
                                                                                                                   "program_pred")
                                                                                                                  (("3"
                                                                                                                    (flatten)
                                                                                                                    (("3"
                                                                                                                      (inst?)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (flatten)
                                                                                                                          (("3"
                                                                                                                            (replace
                                                                                                                             -25
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("3"
                                                                                                                              (expand*
                                                                                                                               "wf_Body"
                                                                                                                               "subset?"
                                                                                                                               "member")
                                                                                                                              (("3"
                                                                                                                                (flatten)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "complete")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (assert)
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "related_states"
                                                                                                     -)
                                                                                                    (("3"
                                                                                                      (expand*
                                                                                                       "wf_state"
                                                                                                       "wf_AState")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (apply
                                                                                             (branch
                                                                                              (split
                                                                                               -40)
                                                                                              ((then
                                                                                                (flatten)
                                                                                                (assert)
                                                                                                (flatten)
                                                                                                (assert)))))
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (id_preserves application-judgement "S" identity_props nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (lookup_inv const-decl "Expr" ProgramFunctions nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (derive def-decl "bool" Semantics nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (Conj adt-constructor-decl "[[Expr, Expr] -> (Conj?)]" Body_adt nil)
    (Neg adt-constructor-decl "[Expr -> (Neg?)]" Body_adt nil)
    (Eq adt-constructor-decl "[[Expr, Expr] -> (Eq?)]" Body_adt nil)
    (NumVarEval adt-constructor-decl "[Name -> (NumVarEval?)]" Body_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (forbidden_names const-decl "set[Name]" VariableNames nil)
    (cp const-decl "{n: Name | NOT forbidden_names(mp)(n)}" VariableNames nil)
    (halted const-decl "Name" NewVariableDeclarations nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (bijective? const-decl "bool" functions nil)
    (update_PState const-decl "(update_PState_type)" AnnotatedProgramSemantics
     nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (on_method_exit_normal const-decl "(on_method_event_type)" SemanticsJML
     nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (related_states const-decl "boolean" Equivalence nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (derive_never_leaves_halted formula-decl nil MonitoredProgramSemantics
     nil)
    (complete_MVA_never_stuck_after_derive formula-decl nil
     MonitoredProgramSemantics nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (derive_after_raise formula-decl nil SemanticsProofs nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (wf_state_raise formula-decl nil State nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (wf_update_PState formula-decl nil AnnotatedProgramSemantics nil)
    (raise const-decl "PState" State nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (ann_program_preserves_wf_method formula-decl nil
     AnnotateProgramProperties nil)
    (v!1 skolem-const-decl "ValOrExcpt[Name]" MethodCallsPreserveRelatedState
     nil)
    (md!1 skolem-const-decl "(wf_Method(program(mp!1)))"
     MethodCallsPreserveRelatedState nil)
    (ann_method const-decl "Method" AnnotateMethod nil)
    (mp!1 skolem-const-decl
     "({mp: MonitoredProgram | wf_and_complete_MP(mp) AND wf_set_stmts(mp)})"
     MethodCallsPreserveRelatedState nil)
    (derive_yields_wf_state_AP formula-decl nil AnnotatedProgramSemantics nil)
    (complete_MVA_never_stuck_after_on_method_MVA formula-decl nil
     MonitoredProgramSemantics nil)
    (on_method_MVA_yields_wf_state formula-decl nil MonitoredProgramSemantics
     nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (Entry? adt-recognizer-decl "[EventType -> boolean]" EventType_adt nil)
    (Entry adt-constructor-decl "(Entry?)" EventType_adt nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (v adt-accessor-decl "[(val?) -> Expr[Name]]" ValOrExcpt_adt nil)
    (derive_yields_wf_state_MP formula-decl nil MonitoredProgramSemantics nil)
    (ann_method_pre_set formula-decl nil AnnotateMethod nil)
    (legal_Program const-decl "bool" LegalProgramRestriction nil)
    (legal_Program_AP const-decl "boolean" LegalAnnotatedProgramRestriction
     nil)
    (legal_Body_preserved_by_proper_subterm formula-decl nil
     LegalProgramRestriction nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (s1 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (method_pred const-decl "bool" FullProgramRestriction nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (ann_methods const-decl "finite_set[Method]" AnnotateMethod nil)
    (program_pred const-decl "bool" FullProgramRestriction nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (get_monitored_class_in_classes formula-decl nil MonitoredProgram nil)
    (wf_program_has_unique_class_names_def const-decl "boolean"
     WellFormedProgram nil)
    (name_get_monitored_class formula-decl nil MonitoredProgram nil)
    (ann_event_does_not_throw_exception formula-decl nil
     AnnEventPreservesMPModeled nil)
    (val adt-constructor-decl "[Expr -> (val?)]" ValOrExcpt_adt nil)
    (ann_event_preserves_MP_modeled formula-decl nil
     AnnEventPreservesMPModeled nil)
    (ann_event_wf_Body formula-decl nil AnnotateProgramProperties nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (Unit? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Unit adt-constructor-decl "(Unit?)" Val_adt nil)
    (filter_event const-decl "finite_set[Transition]" AnnotateMethod nil)
    (ann_event const-decl "Stmt" AnnotateEvent nil)
    (is_finite const-decl "bool" finite_sets nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (complete const-decl "boolean" MVAProperties nil)
    (MP_modeled_lookup_correspondence formula-decl nil RelatedStatesProperties
     nil)
    (ValOrExcpt_val_extensionality formula-decl nil ValOrExcpt_adt nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (m1!6 skolem-const-decl "nat" MethodCallsPreserveRelatedState nil)
    (m2!1 skolem-const-decl "nat" MethodCallsPreserveRelatedState nil)
    (related_states_preserved_by_raise formula-decl nil
     RelatedStatesProperties nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (ann_method_pre formula-decl nil AnnotateMethod nil)
    (b adt-accessor-decl "[(Bool?) -> bool]" Val_adt nil)
    (Bool adt-constructor-decl "[bool -> (Bool?)]" Val_adt nil)
    (Bool? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Val_Bool_extensionality formula-decl nil Val_adt nil)
    (derive_bottom_iff_exception_step formula-decl nil SemanticsProofs nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (halted const-decl "CP" MVA nil)
    (related_states_lookup_correspondence formula-decl nil
     RelatedStatesProperties nil)
    (check_for_exception_final const-decl "bool" SemanticsAuxiliaryFunctions
     nil)
    (check_for_exception const-decl "bool" SemanticsAuxiliaryFunctions nil)
    (ann_class const-decl "Class" AnnotateClass nil)
    (get_class_equivalence formula-decl nil AnnotateProgramProperties nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (related_states_implies_same_exception formula-decl nil
     RelatedStatesProperties nil))
   157150 248310 t nil)
  (on_method_entry_preserves_related_states_annotated-1 nil 3430821647
   3431168056
   ("" (skosimp*)
    (("" (expand* "on_method_entry_MP" "on_method_entry")
      (("" (assert)
        (("" (skosimp*)
          (("" (use "related_states_implies_same_exception")
            (("" (assert)
              (("" (skosimp*)
                (("" (expand* "id" "check_assertion")
                  (("" (skosimp*)
                    (("" (expand "lookup_inv")
                      (("" (use "get_class_equivalence")
                        (("" (assert)
                          (("" (replace -1)
                            (("" (assert)
                              (("" (expand "ann_class" -25)
                                (("" (assert)
                                  (("" (lift-if -25)
                                    (("" (use "get_class_in_classes")
                                      ((""
                                        (assert)
                                        ((""
                                          (replace -13 :dir rl)
                                          ((""
                                            (replace -26)
                                            ((""
                                              (rewrite "derive" -28)
                                              ((""
                                                (skosimp*)
                                                ((""
                                                  (rewrite "derive" -29)
                                                  ((""
                                                    (skosimp*)
                                                    ((""
                                                      (rewrite "derive" -30)
                                                      ((""
                                                        (skosimp*)
                                                        ((""
                                                          (rewrite
                                                           "derive"
                                                           -31)
                                                          ((""
                                                            (flatten)
                                                            ((""
                                                              (rewrite
                                                               "derive"
                                                               -34)
                                                              ((""
                                                                (assert)
                                                                ((""
                                                                  (flatten)
                                                                  ((""
                                                                    (expand*
                                                                     "check_for_exception_final"
                                                                     "check_for_exception")
                                                                    ((""
                                                                      (assert)
                                                                      ((""
                                                                        (flatten)
                                                                        ((""
                                                                          (replace
                                                                           -39
                                                                           :hide?
                                                                           t)
                                                                          ((""
                                                                            (replace
                                                                             -37
                                                                             :hide?
                                                                             t)
                                                                            ((""
                                                                              (replace
                                                                               -36
                                                                               :hide?
                                                                               t)
                                                                              ((""
                                                                                (replace
                                                                                 -33
                                                                                 :hide?
                                                                                 t)
                                                                                ((""
                                                                                  (assert)
                                                                                  ((""
                                                                                    (typepred
                                                                                     "mp!1")
                                                                                    ((""
                                                                                      (expand
                                                                                       "wf_and_complete_MP")
                                                                                      ((""
                                                                                        (flatten)
                                                                                        ((""
                                                                                          (case
                                                                                           "related_states(mp!1)(sMP1!1, tau!1)")
                                                                                          (("1"
                                                                                            (use
                                                                                             "related_states_lookup_correspondence")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "halted")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (copy
                                                                                                         -16)
                                                                                                        (("1"
                                                                                                          (apply
                                                                                                           (repeat
                                                                                                            (inst?
                                                                                                             -1
                                                                                                             :where
                                                                                                             (-21
                                                                                                              -42))))
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "cp(astate(tau1!3)) = halted")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "related_states"
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "derive_never_leaves_halted")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "derive_yields_wf_state_MP")
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "complete_MVA_never_stuck_after_derive")
                                                                                                                                  (("1"
                                                                                                                                    (inst?
                                                                                                                                     -1
                                                                                                                                     :where
                                                                                                                                     -32)
                                                                                                                                    (("1"
                                                                                                                                      (inst?
                                                                                                                                       -2
                                                                                                                                       :where
                                                                                                                                       -32)
                                                                                                                                      (("1"
                                                                                                                                        (inst?
                                                                                                                                         -3
                                                                                                                                         :where
                                                                                                                                         -32)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "derive_never_leaves_halted")
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "derive_yields_wf_state_MP")
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "complete_MVA_never_stuck_after_derive")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?
                                                                                                                                                   -1
                                                                                                                                                   :where
                                                                                                                                                   -37)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?
                                                                                                                                                     -2
                                                                                                                                                     :where
                                                                                                                                                     -37)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?
                                                                                                                                                       -3
                                                                                                                                                       :where
                                                                                                                                                       -37)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "cp(astate(sMP2!1)) = halted AND wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "derive_yields_wf_state_AP")
                                                                                                                                                            (("1"
                                                                                                                                                              (copy
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst?
                                                                                                                                                                 -1
                                                                                                                                                                 :where
                                                                                                                                                                 -60)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst?
                                                                                                                                                                   -2
                                                                                                                                                                   :where
                                                                                                                                                                   -62)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (use
                                                                                                                                                                       "derive_after_raise"
                                                                                                                                                                       ("sigma1"
                                                                                                                                                                        "tau1!5"
                                                                                                                                                                        "sigma2"
                                                                                                                                                                        "tau1!6"))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (use
                                                                                                                                                                               "derive_after_raise"
                                                                                                                                                                               ("sigma1"
                                                                                                                                                                                "tau1!6"
                                                                                                                                                                                "sigma2"
                                                                                                                                                                                "sAP2!1"))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "related_states")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -66)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "update_PState"
                                                                                                                                                                                             6
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "update_PState"
                                                                                                                                                                                               6
                                                                                                                                                                                               2)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "raise"
                                                                                                                                                                                                 6
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "raise"
                                                                                                                                                                                                   6
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -3)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -62)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                          "ann_program(mp!1)"))
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (case
                                                                                                                                                                                                             "wf_state(ann_program(mp!1))(update_PState(tau1!5, raise(JMLExc)))")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "update_PState"
                                                                                                                                                                                                                   1
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (use
                                                                                                                                                                                                                     "wf_state_raise")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil)))))))))
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "wf_update_PState"
                                                                                                                                                                                                               ("p"
                                                                                                                                                                                                                "ann_program(mp!1)"))
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "update_PState"
                                                                                                                                                                                                                     1
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (use
                                                                                                                                                                                                                       "wf_state_raise")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (use
                                                                                                                                                                     "ann_program_preserves_wf_method")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand*
                                                                                                                                                                       "wf_Method"
                                                                                                                                                                       "method_pred")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst?
                                                                                                                                                                           -4)
                                                                                                                                                                          nil)))))))))
                                                                                                                                                                 ("2"
                                                                                                                                                                  (use
                                                                                                                                                                   "ann_program_preserves_wf_method")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand*
                                                                                                                                                                     "wf_Method"
                                                                                                                                                                     "method_pred")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst?)
                                                                                                                                                                        nil)))))))))))))
                                                                                                                                                           ("2"
                                                                                                                                                            (case
                                                                                                                                                             "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -34)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -36)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "update_PState")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lift-if
                                                                                                                                                                         (-4
                                                                                                                                                                          -7))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (apply
                                                                                                                                                                               (branch
                                                                                                                                                                                (split
                                                                                                                                                                                 -40)
                                                                                                                                                                                ((then
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (assert)))))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (use
                                                                                                                                                                                   "on_method_MVA_never_leaves_halted")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil)))))))))))))))))))))))
                                                                                                                                                             ("2"
                                                                                                                                                              (case
                                                                                                                                                               "wf_state(mp!1)(s_new!1) AND NOT stuck(s_new!1)")
                                                                                                                                                              (("1"
                                                                                                                                                                (apply
                                                                                                                                                                 (branch
                                                                                                                                                                  (split
                                                                                                                                                                   -41)
                                                                                                                                                                  ((then
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (assert)
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (assert)))))
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (use
                                                                                                                                                                     "on_method_MVA_yields_wf_state")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (use
                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil)))))))))))
                                                                                                                                                               ("2"
                                                                                                                                                                (case
                                                                                                                                                                 "wf_state(mp!1)(tau1!2)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "wf_state(mp!1)(tau2!2)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (split
                                                                                                                                                                         -7)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -38)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (lift-if
                                                                                                                                                                               -4)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "update_PState")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil)))))))))
                                                                                                                                                                         ("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -36)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lift-if
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "update_PState")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil)))))))))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -37)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (skosimp*)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (use
                                                                                                                                                                                 "wf_update_PState"
                                                                                                                                                                                 ("p"
                                                                                                                                                                                  "mp!1"))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "update_PState")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil)))))))))))))))))))))))))
                                                                                                                                                                 ("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -33)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (split
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (apply
                                                                                                                                                                           (then
                                                                                                                                                                            (use
                                                                                                                                                                             "wf_update_PState"
                                                                                                                                                                             ("p"
                                                                                                                                                                              "mp!1"))
                                                                                                                                                                            (assert)
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            (expand
                                                                                                                                                                             "update_PState")
                                                                                                                                                                            (use
                                                                                                                                                                             "wf_state_raise")
                                                                                                                                                                            (assert)))
                                                                                                                                                                          nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "related_states(mp!1)(tau1!2, tau1!1)")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "ann_method_pre")
                                                                                                                        (("1"
                                                                                                                          (copy
                                                                                                                           -19)
                                                                                                                          (("1"
                                                                                                                            (apply
                                                                                                                             (repeat
                                                                                                                              (inst?
                                                                                                                               -1
                                                                                                                               :where
                                                                                                                               (-27
                                                                                                                                -49))))
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "cp(astate(tau1!4)) = halted")
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "derive_never_leaves_halted")
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "derive_yields_wf_state_MP")
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "complete_MVA_never_stuck_after_derive")
                                                                                                                                          (("1"
                                                                                                                                            (inst?
                                                                                                                                             -1
                                                                                                                                             :where
                                                                                                                                             -34)
                                                                                                                                            (("1"
                                                                                                                                              (inst?
                                                                                                                                               -2
                                                                                                                                               :where
                                                                                                                                               -34)
                                                                                                                                              (("1"
                                                                                                                                                (inst?
                                                                                                                                                 -3
                                                                                                                                                 :where
                                                                                                                                                 -34)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "related_states"
                                                                                                                                                     -5)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "cp(astate(sMP2!1)) = halted AND wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "derive_yields_wf_state_AP")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst?
                                                                                                                                                               -1
                                                                                                                                                               :where
                                                                                                                                                               -61)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "related_states"
                                                                                                                                                                       7)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "wf_state(ann_program(mp!1))(sAP2!1)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "up?(ex(pstate(tau2!1))) AND down(ex(pstate(tau2!1))) = JMLExc")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "derive"
                                                                                                                                                                                 -65)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil)))))))))
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -62)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "update_PState")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "raise")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil)))))))))))))
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -60)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   2)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (then
                                                                                                                                                                                        (use
                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                         ("p"
                                                                                                                                                                                          "ann_program(mp!1)"
                                                                                                                                                                                          "s1"
                                                                                                                                                                                          "tau1!6"))
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                        (use
                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                        (assert)))
                                                                                                                                                                                      nil)))))))))))))))))))))))
                                                                                                                                                               ("2"
                                                                                                                                                                (use
                                                                                                                                                                 "ann_program_preserves_wf_method")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand*
                                                                                                                                                                   "wf_Method"
                                                                                                                                                                   "method_pred")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?
                                                                                                                                                                       -4)
                                                                                                                                                                      nil)))))))))))
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -36)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "update_PState"
                                                                                                                                                               -3)
                                                                                                                                                              (("2"
                                                                                                                                                                (lift-if
                                                                                                                                                                 (-1
                                                                                                                                                                  -2
                                                                                                                                                                  -3))
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "wf_state(mp!1)(update_PState(tau1!4, raise(JMLExc)))")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "update_PState"
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (apply
                                                                                                                                                                             (branch
                                                                                                                                                                              (split
                                                                                                                                                                               -39)
                                                                                                                                                                              ((then
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (assert)
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (assert)))))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (use
                                                                                                                                                                                 "on_method_MVA_never_leaves_halted")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (use
                                                                                                                                                                                     "on_method_MVA_yields_wf_state")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil)))))))))))))))))))))
                                                                                                                                                                     ("2"
                                                                                                                                                                      (apply
                                                                                                                                                                       (then
                                                                                                                                                                        (use
                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                         ("p"
                                                                                                                                                                          "mp!1"))
                                                                                                                                                                        (assert)
                                                                                                                                                                        (skosimp*)
                                                                                                                                                                        (expand
                                                                                                                                                                         "update_PState")
                                                                                                                                                                        (use
                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                        (assert)))
                                                                                                                                                                      nil)))))))))))))))))))))))))))))))))
                                                                                                                                     ("2"
                                                                                                                                      (case
                                                                                                                                       "related_states(mp!1)(tau2!2, tau2!1)")
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "cp(astate(tau2!2)) = halted")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "related_states"
                                                                                                                                           -2)
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "derive"
                                                                                                                                                     -57)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "derive_never_leaves_halted")
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           "derive_yields_wf_state_MP")
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "complete_MVA_never_stuck_after_derive")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst?
                                                                                                                                                               -1
                                                                                                                                                               :where
                                                                                                                                                               -38)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst?
                                                                                                                                                                 -2
                                                                                                                                                                 :where
                                                                                                                                                                 -38)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst?
                                                                                                                                                                   -3
                                                                                                                                                                   :where
                                                                                                                                                                   -38)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (apply
                                                                                                                                                                       (branch
                                                                                                                                                                        (split
                                                                                                                                                                         -40)
                                                                                                                                                                        ((then
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (assert)
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (assert)))))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "related_states")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil)))
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "related_states")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (use
                                                                                                                                                                               "on_method_MVA_never_leaves_halted")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (use
                                                                                                                                                                                   "on_method_MVA_yields_wf_state")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                                         ("2"
                                                                                                                                          (use
                                                                                                                                           "related_states_implies_same_exception")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (use
                                                                                                                                               "ann_method_pre_set")
                                                                                                                                              (("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "derive"
                                                                                                                                                   -56)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (apply
                                                                                                                                                       (branch
                                                                                                                                                        (split
                                                                                                                                                         -56)
                                                                                                                                                        ((then
                                                                                                                                                          (flatten)
                                                                                                                                                          (assert)
                                                                                                                                                          (flatten)
                                                                                                                                                          (assert)))))
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "derive"
                                                                                                                                                         -38)
                                                                                                                                                        (("1"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -38)
                                                                                                                                                            (("1"
                                                                                                                                                              (apply
                                                                                                                                                               (branch
                                                                                                                                                                (split
                                                                                                                                                                 -43)
                                                                                                                                                                ((then
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (assert)
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (assert)))))
                                                                                                                                                              nil)))))))
                                                                                                                                                       ("2"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -6)
                                                                                                                                                          (("2"
                                                                                                                                                            (apply
                                                                                                                                                             (repeat
                                                                                                                                                              (inst?
                                                                                                                                                               -29
                                                                                                                                                               :where
                                                                                                                                                               (-38
                                                                                                                                                                -2))))
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (split
                                                                                                                                                                 -29)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT cp(astate(s_new!1)) = halted")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     -41)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (use
                                                                                                                                                                         "related_states_implies_same_exception")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "derive"
                                                                                                                                                                               -9)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil)))))))))))
                                                                                                                                                                     ("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "ann_method"
                                                                                                                                                                         -7)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "derive"
                                                                                                                                                                             -7)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (use
                                                                                                                                                                               "related_states_implies_same_exception")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "methods(get_monitored_class(mp!1))(md!1)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "ann_event_does_not_throw_exception")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "ann_event_preserves_MP_modeled"
                                                                                                                                                                                               ("sMP2"
                                                                                                                                                                                                "sMP2!1"))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "wf_state(mp!1)(sMP2!1)")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "wf_state(ann_program(mp!1))(tau!4)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "derive"
                                                                                                                                                                                                             -16)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand*
                                                                                                                                                                                                               "execute_assert"
                                                                                                                                                                                                               "check_assertion")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (apply
                                                                                                                                                                                                                 (branch
                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                   -16)
                                                                                                                                                                                                                  ((then
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (assert)))))
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                                     "derive"
                                                                                                                                                                                                                     -18)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                                         "derive"
                                                                                                                                                                                                                         -19)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                             "derive"
                                                                                                                                                                                                                             -20)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (rewrite
                                                                                                                                                                                                                                   "derive"
                                                                                                                                                                                                                                   -23)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (expand*
                                                                                                                                                                                                                                         "check_for_exception_final"
                                                                                                                                                                                                                                         "check_for_exception")
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (replace
                                                                                                                                                                                                                                             -26
                                                                                                                                                                                                                                             :hide?
                                                                                                                                                                                                                                             t)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                                 -25
                                                                                                                                                                                                                                                 :hide?
                                                                                                                                                                                                                                                 t)
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                                   -23
                                                                                                                                                                                                                                                   :hide?
                                                                                                                                                                                                                                                   t)
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                                                     -22
                                                                                                                                                                                                                                                     :hide?
                                                                                                                                                                                                                                                     t)
                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                                         -24
                                                                                                                                                                                                                                                         :hide?
                                                                                                                                                                                                                                                         t)
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                             "halted")
                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                                               -20
                                                                                                                                                                                                                                                               :hide?
                                                                                                                                                                                                                                                               t)
                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                (use
                                                                                                                                                                                                                                                                 "MP_modeled_lookup_correspondence"
                                                                                                                                                                                                                                                                 ("sMP"
                                                                                                                                                                                                                                                                  "sMP2!1"
                                                                                                                                                                                                                                                                  "q1"
                                                                                                                                                                                                                                                                  "cp(astate(sMP2!1))"))
                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                       "related_states"
                                                                                                                                                                                                                                                                       11)
                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                            (split
                                                                                                                                                                                                                                                                             11)
                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                                                               -24)
                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                                                                                                          "ann_program(mp!1)"))
                                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                                                               "update_PState")
                                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                                (use
                                                                                                                                                                                                                                                                                                 "wf_state_raise")
                                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                                                  nil)))))))))))))))))))))
                                                                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                                                                               -9)
                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                (use
                                                                                                                                                                                                                                                                                 "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                                     "related_states"
                                                                                                                                                                                                                                                                                     -11)
                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                                                                        nil)))))))))))
                                                                                                                                                                                                                                                                             ("3"
                                                                                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                                                                   -25)
                                                                                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                                     "update_PState")
                                                                                                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                                       "raise")
                                                                                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                                                                        nil)))))))))))
                                                                                                                                                                                                                                                                             ("4"
                                                                                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                                                                                              (("4"
                                                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                                                nil)))))))))))
                                                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                       "complete")
                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                                                        nil)))
                                                                                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                                                                                      (expand*
                                                                                                                                                                                                                                                                       "wf_state"
                                                                                                                                                                                                                                                                       "wf_AState")
                                                                                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "derive_yields_wf_state_AP")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst?
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             :where
                                                                                                                                                                                                             -14)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "related_states")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil)))))
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "ann_event_wf_Body")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand*
                                                                                                                                                                                                                   "subset?"
                                                                                                                                                                                                                   "member"
                                                                                                                                                                                                                   "filter_event")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    nil)))))))))))))
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "related_states")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -5
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil)))))))))))))
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (case-replace
                                                                                                                                                                                                     "val(v(v!1)) = v!1")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (apply-extensionality
                                                                                                                                                                                                       :hide?
                                                                                                                                                                                                       t)
                                                                                                                                                                                                      nil)))))))))))))))))
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "get_monitored_class(mp!1) = down(get_class(program(mp!1))(a!1))")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "lookup_mthd_in_methods_class")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil)))))
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "name_get_monitored_class")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "get_monitored_class_in_classes")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "program(mp!1)")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "wf_Program"
                                                                                                                                                                                               "wf_program_has_unique_class_names_def")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil)))))))))))))))))))))))))))))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "related_states"
                                                                                                                                                                     -2)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "derive"
                                                                                                                                                                           -9)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (use
                                                                                                                                                                                   "on_method_MVA_never_leaves_halted")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (apply
                                                                                                                                                                                           (branch
                                                                                                                                                                                            (split
                                                                                                                                                                                             -48)
                                                                                                                                                                                            ((then
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (assert)))))
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "related_states")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil)))
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "related_states")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil)))))))))))))))))))))))))))))))))
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand*
                                                                                                                                                                   "legal_Program_AP"
                                                                                                                                                                   "legal_Program")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "program_pred")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -23
                                                                                                                                                                       "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           -23)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -2
                                                                                                                                                                               "ann_method(mp!1)(md!1)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (split
                                                                                                                                                                                   -2)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "method_pred")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "ann_method_pre_set")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -2
                                                                                                                                                                                             :dir
                                                                                                                                                                                             rl)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "legal_Body_preserved_by_proper_subterm")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 "wf_state"
                                                                                                                                                                                                 "ann_program(mp!1)"
                                                                                                                                                                                                 "pre_set(ann_method(mp!1)(md!1))(v(v!1))"
                                                                                                                                                                                                 "s1(pre_set(ann_method(mp!1)(md!1))(v(v!1)))")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "<<")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst?
                                                                                                                                                                                                       -6)
                                                                                                                                                                                                      nil)))))))))))))))))))
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "ann_class")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "ann_methods")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil)))))))))))))))))))))
                                                                                                                                                                           ("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "ann_program")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst?)
                                                                                                                                                                              nil)))))))))))))
                                                                                                                                                                 ("3"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "md!1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (expand
                                                                                                                                                                     "wf_Method")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (expand
                                                                                                                                                                       "method_pred")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (inst?
                                                                                                                                                                           -4)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (expand*
                                                                                                                                                                             "wf_Body"
                                                                                                                                                                             "subset?"
                                                                                                                                                                             "member")
                                                                                                                                                                            (("3"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              nil)))))))))))))))))
                                                                                                                                                             ("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil)))))))))))))))))))))))
                                                                                                                                       ("2"
                                                                                                                                        (replace
                                                                                                                                         -29)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -51)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -2)
                                                                                                                                              (("2"
                                                                                                                                                (lift-if)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (split
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (propax)
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (skosimp*)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (use
                                                                                                                                                           "related_states_preserved_by_raise")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil)))))))))))))))))))))))))))
                                                                                                                                 ("2"
                                                                                                                                  (expand*
                                                                                                                                   "legal_Program_AP"
                                                                                                                                   "legal_Program")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "program_pred")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -13
                                                                                                                                       "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (split
                                                                                                                                           -13)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "method_pred")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -2
                                                                                                                                                 "ann_method(mp!1)(md!1)")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "ann_method_pre")
                                                                                                                                                  (("1"
                                                                                                                                                    (split
                                                                                                                                                     -2)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst?)
                                                                                                                                                        nil)))
                                                                                                                                                     ("2"
                                                                                                                                                      (expand
                                                                                                                                                       "ann_class")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "ann_methods")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (use
                                                                                                                                                               "lookup_mthd_in_methods_class")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil)))))))))))))))))))))
                                                                                                                                           ("2"
                                                                                                                                            (expand
                                                                                                                                             "ann_program")
                                                                                                                                            (("2"
                                                                                                                                              (inst?)
                                                                                                                                              nil)))))))))))))
                                                                                                                                 ("3"
                                                                                                                                  (typepred
                                                                                                                                   "md!1")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "wf_Method")
                                                                                                                                    (("3"
                                                                                                                                      (expand
                                                                                                                                       "method_pred")
                                                                                                                                      (("3"
                                                                                                                                        (flatten)
                                                                                                                                        (("3"
                                                                                                                                          (inst?)
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            (("3"
                                                                                                                                              (expand*
                                                                                                                                               "wf_Body"
                                                                                                                                               "subset?"
                                                                                                                                               "member")
                                                                                                                                              (("3"
                                                                                                                                                (flatten)
                                                                                                                                                nil)))))))))))))))))))))))))
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -45)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -23)
                                                                                                                            (("2"
                                                                                                                              (case-replace
                                                                                                                               "v!4 = v!6")
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("2"
                                                                                                                                        (use
                                                                                                                                         "related_states_preserved_by_raise")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil)))))))))))
                                                                                                                               ("2"
                                                                                                                                (split
                                                                                                                                 -44)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "derive_bottom_iff_exception_step"
                                                                                                                                     ("p"
                                                                                                                                      "ann_program(mp!1)"))
                                                                                                                                    (("1"
                                                                                                                                      (inst?
                                                                                                                                       -1
                                                                                                                                       :where
                                                                                                                                       -46)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil)))))))
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -4)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (apply-extensionality
                                                                                                                                             :hide?
                                                                                                                                             t)
                                                                                                                                            nil)))))))))))))))))))))))))))))
                                                                                                               ("2"
                                                                                                                (expand*
                                                                                                                 "legal_Program_AP"
                                                                                                                 "legal_Program")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "program_pred")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -10
                                                                                                                     "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (split
                                                                                                                         -10)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "method_pred")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "ann_class")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "legal_Body_preserved_by_proper_subterm")
                                                                                                                                (("1"
                                                                                                                                  (inst?
                                                                                                                                   -1
                                                                                                                                   :where
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (inst?
                                                                                                                                     -1
                                                                                                                                     :where
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "<<")
                                                                                                                                        (("1"
                                                                                                                                          (propax)
                                                                                                                                          nil)))))))))))))))))
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "ann_program")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            nil)))))))))))))
                                                                                                               ("3"
                                                                                                                (typepred
                                                                                                                 "program(mp!1)")
                                                                                                                (("3"
                                                                                                                  (expand*
                                                                                                                   "wf_Program"
                                                                                                                   "program_pred")
                                                                                                                  (("3"
                                                                                                                    (flatten)
                                                                                                                    (("3"
                                                                                                                      (inst?)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (flatten)
                                                                                                                          (("3"
                                                                                                                            (replace
                                                                                                                             -24
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("3"
                                                                                                                              (expand*
                                                                                                                               "wf_Body"
                                                                                                                               "subset?"
                                                                                                                               "member")
                                                                                                                              (("3"
                                                                                                                                (flatten)
                                                                                                                                nil)))))))))))))))))))))))))))))))
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "complete")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    nil)))
                                                                                                 ("3"
                                                                                                  (assert)
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "related_states"
                                                                                                     -)
                                                                                                    (("3"
                                                                                                      (expand*
                                                                                                       "wf_state"
                                                                                                       "wf_AState")
                                                                                                      nil)))))))))))
                                                                                           ("2"
                                                                                            (apply
                                                                                             (branch
                                                                                              (split
                                                                                               -40)
                                                                                              ((then
                                                                                                (flatten)
                                                                                                (assert)
                                                                                                (flatten)
                                                                                                (assert)))))
                                                                                            nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   unfinished nil 102215 97750 nil nil))
 (on_method_entry_preserves_related_states_halted_reached 0
  (on_method_entry_preserves_related_states_halted_reached-1 nil 3430821877
   3433217073
   ("" (skosimp*)
    (("" (expand "on_method_entry_MP")
      (("" (skosimp*)
        (("" (expand "on_method_entry")
          ((""
            (apply (branch (split -2)
                    ((then (flatten) (assert) (flatten) (assert)))))
            (("" (skosimp*)
              (("" (expand "check_assertion")
                (("" (skosimp*)
                  (("" (use "derive_never_leaves_halted")
                    (("" (assert)
                      (("" (hide -11)
                        (("" (use "derive_never_leaves_halted")
                          (("" (assert)
                            (("" (hide -7)
                              (("" (use "derive_never_leaves_halted")
                                (("" (assert)
                                  (("" (replace -8 -1)
                                    (("" (replace -11 -3)
                                      ((""
                                        (lift-if)
                                        ((""
                                          (assert)
                                          ((""
                                            (expand "update_PState")
                                            ((""
                                              (assert)
                                              ((""
                                                (apply
                                                 (branch
                                                  (split -15)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                ((""
                                                  (replace -1)
                                                  ((""
                                                    (use
                                                     "on_method_MVA_never_leaves_halted")
                                                    ((""
                                                      (assert)
                                                      ((""
                                                        (typepred "mp!1")
                                                        ((""
                                                          (expand
                                                           "wf_and_complete_MP")
                                                          ((""
                                                            (propax)
                                                            nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   proved
   ((on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Entry adt-constructor-decl "(Entry?)" EventType_adt nil)
    (Entry? adt-recognizer-decl "[EventType -> boolean]" EventType_adt nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (v adt-accessor-decl "[(val?) -> Expr[Name]]" ValOrExcpt_adt nil)
    (derive_never_leaves_halted formula-decl nil MonitoredProgramSemantics
     nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   5015 4850 nil nil))
 (on_method_entry_preserves_related_states_not_annotated_TCC1 0
  (on_method_entry_preserves_related_states_not_annotated_TCC1-2 nil
   3430821703 3433217075
   ("" (expand "id")
    (("" (skosimp*)
      (("" (typepred "b!1")
        (("" (use "ann_program_preserves_wf_body") nil))))))
    nil)
   proved
   ((ann_program_preserves_wf_body formula-decl nil AnnotateProgramProperties
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (id const-decl "(bijective?[T, T])" identity nil))
   2000 1930 nil nil)
  (on_method_entry_preserves_related_states_not_annotated_TCC1-1 nil
   3430821302 nil ("" (subtype-tcc) nil nil) nil nil nil nil nil nil))
 (on_method_entry_preserves_related_states_not_annotated_TCC2 0
  (on_method_entry_preserves_related_states_not_annotated_TCC2-2 nil
   3430821735 3433217079
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "md!1")
        (("" (expand "wf_Method")
          (("" (expand "method_pred")
            (("" (expand "wf_Body")
              (("" (rewrite "ann_program_ext_declared_var_names")
                (("" (auto-rewrite "union" "member")
                  (("" (assert)
                    (("" (flatten)
                      (("" (rewrite "ann_program_add_ghost_var_decls")
                        (("" (rewrite "var_names_union")
                          (("" (assert)
                            (("" (split 4)
                              (("1"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst?)
                                  (("1" (flatten)
                                    (("1" (inst?) (("1" (assert) nil)))))))
                                 ("2" (inst?)
                                  (("2" (flatten)
                                    (("2" (inst? -4)
                                      (("2" (assert) nil)))))))))
                               ("2"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -3)
                                  (("1" (flatten)
                                    (("1" (inst? -3) (("1" (assert) nil)))))))
                                 ("2" (inst? -4)
                                  (("2" (flatten)
                                    (("2" (inst? -5)
                                      (("2" (assert) nil)))))))))
                               ("3" (skosimp*)
                                (("3" (inst? -4) (("3" (assert) nil)))))
                               ("4" (skosimp*)
                                (("4" (inst? -6) (("4" (assert) nil)))))
                               ("5"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -6)
                                  (("1" (flatten)
                                    (("1" (inst? -6) (("1" (assert) nil)))))))
                                 ("2" (inst? -7)
                                  (("2" (flatten)
                                    (("2" (inst? -8)
                                      (("2" (assert) nil)))))))))
                               ("6"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -7)
                                  (("1" (flatten)
                                    (("1" (inst? -7) (("1" (assert) nil)))))))
                                 ("2" (inst? -8)
                                  (("2" (flatten)
                                    (("2" (inst? -9)
                                      (("2" (assert) nil)))))))))
                               ("7"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -8)
                                  (("1" (flatten)
                                    (("1" (inst? -8) (("1" (assert) nil)))))))
                                 ("2" (inst? -9)
                                  (("2" (flatten)
                                    (("2" (inst? -10)
                                      (("2" (assert) nil)))))))))
                               ("8" (skosimp*)
                                (("8" (inst? -9) (("8" (assert) nil)))))
                               ("9" (skosimp*)
                                (("9" (inst? -11)
                                  (("9" (assert)
                                    nil))))))))))))))))))))))))))))))))
    nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (new_gvds const-decl "finite_set[Decl]" NewVariableDeclarations nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (var_names_union formula-decl nil ProgramFunctions nil)
    (ann_program_add_ghost_var_decls formula-decl nil
     AnnotateProgramProperties nil)
    (union const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (ann_program_ext_declared_var_names formula-decl nil
     AnnotateProgramProperties nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil))
   4596 4410 nil nil)
  (on_method_entry_preserves_related_states_not_annotated_TCC2-1 nil
   3430821302 nil ("" (subtype-tcc) nil nil) nil nil nil nil nil nil))
 (on_method_entry_preserves_related_states_not_annotated 0
  (on_method_entry_preserves_related_states_not_annotated-2 nil 3431169726
   3433217128
   ("" (skosimp*)
    (("" (expand "on_method_entry_MP")
      (("" (expand "on_method_entry")
        ((""
          (apply (then (use "related_states_implies_same_exception") (assert)
                  (replace -1)))
          (("" (skosimp*)
            (("" (expand "check_assertion")
              (("" (skosimp*)
                (("" (expand "lookup_inv")
                  (("" (expand "id")
                    (("" (use "get_class_equivalence")
                      (("" (assert)
                        (("" (replace -1)
                          (("" (replace -24 :dir rl)
                            (("" (replace -11)
                              (("" (copy -8)
                                ((""
                                  (apply (repeat (inst? -1 :where (-14 -27))))
                                  (("" (assert)
                                    (("" (split -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (case "cp(astate(tau1!3)) = halted")
                                          (("1"
                                            (lemma
                                             "derive_never_leaves_halted")
                                            (("1"
                                              (copy -1)
                                              (("1"
                                                (lemma
                                                 "derive_yields_wf_state_MP")
                                                (("1"
                                                  (copy -1)
                                                  (("1"
                                                    (lemma
                                                     "complete_MVA_never_stuck_after_derive")
                                                    (("1"
                                                      (copy -1)
                                                      (("1"
                                                        (inst? -1 :where -25)
                                                        (("1"
                                                          (inst?
                                                           -3
                                                           :where
                                                           -25)
                                                          (("1"
                                                            (inst?
                                                             -5
                                                             :where
                                                             -25)
                                                            (("1"
                                                              (inst?
                                                               -2
                                                               :where
                                                               -27)
                                                              (("1"
                                                                (inst?
                                                                 -4
                                                                 :where
                                                                 -27)
                                                                (("1"
                                                                  (inst?
                                                                   -6
                                                                   :where
                                                                   -27)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (typepred
                                                                       "mp!1")
                                                                      (("1"
                                                                        (expand
                                                                         "wf_and_complete_MP")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (lemma
                                                                               "derive_yields_wf_state_AP")
                                                                              (("1"
                                                                                (copy
                                                                                 -1)
                                                                                (("1"
                                                                                  (inst?
                                                                                   -1
                                                                                   :where
                                                                                   -44)
                                                                                  (("1"
                                                                                    (inst?
                                                                                     -2
                                                                                     :where
                                                                                     -46)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "related_states"
                                                                                         -14)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "cp(astate(sMP2!1)) = halted")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "up?(ex(pstate(tau1!1))) AND down(ex(pstate(tau1!1))) = JMLExc")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "derive"
                                                                                                       -51)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "up?(ex(pstate(tau2!1))) AND down(ex(pstate(tau2!1))) = JMLExc")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "derive"
                                                                                                                 -57)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "related_states"
                                                                                                                       +)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -8)
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replace
                                                                                                                             -52)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -49)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -54)
                                                                                                                                (("2"
                                                                                                                                  (lift-if)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("1"
                                                                                                                                          (apply
                                                                                                                                           (then
                                                                                                                                            (use
                                                                                                                                             "wf_update_PState"
                                                                                                                                             ("p"
                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                            (assert)
                                                                                                                                            (skosimp*)
                                                                                                                                            (expand
                                                                                                                                             "update_PState")
                                                                                                                                            (use
                                                                                                                                             "wf_state_raise")
                                                                                                                                            (assert)))
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (use
                                                                                                                                           "wf_update_PState"
                                                                                                                                           ("p"
                                                                                                                                            "ann_program(mp!1)"))
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "wf_state(ann_program(mp!1))(update_PState(tau1!5, raise(JMLExc)))")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "update_PState"
                                                                                                                                                     1
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (use
                                                                                                                                                       "wf_state_raise")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (apply
                                                                                                                                                 (then
                                                                                                                                                  (use
                                                                                                                                                   "wf_update_PState"
                                                                                                                                                   ("p"
                                                                                                                                                    "ann_program(mp!1)"))
                                                                                                                                                  (assert)
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (expand
                                                                                                                                                   "update_PState")
                                                                                                                                                  (use
                                                                                                                                                   "wf_state_raise")
                                                                                                                                                  (assert)))
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (replace
                                                                                                               -54)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "raise")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -47)
                                                                                                    (("2"
                                                                                                      (expand*
                                                                                                       "update_PState"
                                                                                                       "raise")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "wf_state(mp!1)(tau1!2)")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "wf_state(mp!1)(tau2!2)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -35)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -37)
                                                                                                          (("1"
                                                                                                            (lift-if
                                                                                                             (-10
                                                                                                              -11))
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "update_PState"
                                                                                                               (-10
                                                                                                                -11))
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (apply
                                                                                                                   (branch
                                                                                                                    (split
                                                                                                                     -39)
                                                                                                                    ((then
                                                                                                                      (flatten)
                                                                                                                      (assert)
                                                                                                                      (flatten)
                                                                                                                      (assert)))))
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "on_method_MVA_yields_wf_state")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -37)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "wf_update_PState"
                                                                                                                 ("p"
                                                                                                                  "mp!1"))
                                                                                                                (assert)
                                                                                                                (skosimp*)
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (use
                                                                                                                 "wf_state_raise")
                                                                                                                (assert)))
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -33)
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "wf_update_PState"
                                                                                                                 ("p"
                                                                                                                  "mp!1"))
                                                                                                                (assert)
                                                                                                                (skosimp*)
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (use
                                                                                                                 "wf_state_raise")
                                                                                                                (assert)))
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -32)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -34)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "update_PState")
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (apply
                                                                                                           (branch
                                                                                                            (split
                                                                                                             -38)
                                                                                                            ((then
                                                                                                              (flatten)
                                                                                                              (assert)
                                                                                                              (flatten)
                                                                                                              (assert)))))
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "on_method_MVA_never_leaves_halted")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "md!1")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "wf_Method")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "method_pred")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -4)
                                                                                                (("2"
                                                                                                  (expand*
                                                                                                   "wf_Body"
                                                                                                   "subset?"
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (auto-rewrite
                                                                                                     "union"
                                                                                                     "member")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "ann_program_ext_declared_var_names")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (inst?
                                                                                                                   -6)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "ann_program_add_ghost_var_decls")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "var_names_union")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (inst?
                                                                                                                       -8)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "md!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "wf_Method")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "method_pred")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 "wf_Body"
                                                                                                 "subset?"
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (auto-rewrite
                                                                                                     "union"
                                                                                                     "member")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "ann_program_ext_declared_var_names")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (inst?
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "ann_program_add_ghost_var_decls")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "var_names_union")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (inst?
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case
                                             "related_states(mp!1)(tau1!2, tau1!1)")
                                            (("1"
                                              (copy -11)
                                              (("1"
                                                (apply
                                                 (repeat
                                                  (inst?
                                                   -1
                                                   :where
                                                   (-20 -33))))
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split -1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (case
                                                         "cp(astate(tau1!4)) = halted")
                                                        (("1"
                                                          (lemma
                                                           "derive_never_leaves_halted")
                                                          (("1"
                                                            (lemma
                                                             "derive_yields_wf_state_MP")
                                                            (("1"
                                                              (lemma
                                                               "complete_MVA_never_stuck_after_derive")
                                                              (("1"
                                                                (inst?
                                                                 -1
                                                                 :where
                                                                 -27)
                                                                (("1"
                                                                  (inst?
                                                                   -2
                                                                   :where
                                                                   -27)
                                                                  (("1"
                                                                    (inst?
                                                                     -3
                                                                     :where
                                                                     -27)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (typepred
                                                                         "mp!1")
                                                                        (("1"
                                                                          (expand
                                                                           "wf_and_complete_MP")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "derive_yields_wf_state_AP")
                                                                                (("1"
                                                                                  (inst?
                                                                                   -1
                                                                                   :where
                                                                                   -45)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "related_states"
                                                                                       -10)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "cp(astate(sMP2!1)) = halted")
                                                                                            (("1"
                                                                                              (case
                                                                                               "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "up?(ex(pstate(tau2!1))) AND down(ex(pstate(tau2!1))) = JMLExc")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "derive"
                                                                                                     -52)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "related_states"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -5)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (replace
                                                                                                                 -50)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (apply
                                                                                                                           (then
                                                                                                                            (use
                                                                                                                             "wf_update_PState"
                                                                                                                             ("p"
                                                                                                                              "ann_program(mp!1)"))
                                                                                                                            (assert)
                                                                                                                            (skosimp*)
                                                                                                                            (expand
                                                                                                                             "update_PState")
                                                                                                                            (use
                                                                                                                             "wf_state_raise")
                                                                                                                            (assert)))
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   -49)
                                                                                                  (("2"
                                                                                                    (expand*
                                                                                                     "update_PState"
                                                                                                     "raise")
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "wf_state(mp!1)(tau2!2)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (apply
                                                                                                       (branch
                                                                                                        (split
                                                                                                         -39)
                                                                                                        ((then
                                                                                                          (flatten)
                                                                                                          (assert)
                                                                                                          (flatten)
                                                                                                          (assert)))))
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "on_method_MVA_yields_wf_state")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -36)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (expand*
                                                                                                           "update_PState")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   -35)
                                                                                                  (("2"
                                                                                                    (lift-if)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (apply
                                                                                                             (then
                                                                                                              (use
                                                                                                               "wf_update_PState"
                                                                                                               ("p"
                                                                                                                "mp!1"))
                                                                                                              (assert)
                                                                                                              (skosimp*)
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (use
                                                                                                               "wf_state_raise")
                                                                                                              (assert)))
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -34)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "update_PState")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (apply
                                                                                                       (branch
                                                                                                        (split
                                                                                                         -37)
                                                                                                        ((then
                                                                                                          (flatten)
                                                                                                          (assert)
                                                                                                          (flatten)
                                                                                                          (assert)))))
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "on_method_MVA_never_leaves_halted")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "md!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "wf_Method")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "method_pred")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -4)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 "wf_Body"
                                                                                                 "subset?"
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (auto-rewrite
                                                                                                   "union"
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "ann_program_ext_declared_var_names")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst?
                                                                                                               -6)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "ann_program_add_ghost_var_decls")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "var_names_union")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (inst?
                                                                                                                   -8)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case
                                                           "related_states(mp!1)(tau2!2, tau2!1)")
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -14
                                                               :where
                                                               (-24 -37))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split -14)
                                                                (("1"
                                                                  (split -27)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "on_method_MVA")
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (use
                                                                                 "lookup_mthd_in_methods_class")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -20)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "program(mp!1)")
                                                                                      (("1"
                                                                                        (use
                                                                                         "wf_program_methods_only_in_one_class")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "wf_program_methods_only_in_one_class")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "get_monitored_class(mp!1)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "get_class_in_classes")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "get_monitored_class_in_classes")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -3
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "name_get_monitored_class")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (case-replace
                                                                                 "sMP2!1 = s_new!1"
                                                                                 :hide?
                                                                                 t)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand*
                                                                   "legal_Program_AP"
                                                                   "legal_Program")
                                                                  (("2"
                                                                    (expand
                                                                     "program_pred")
                                                                    (("2"
                                                                      (inst?
                                                                       -9)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (split
                                                                           -9)
                                                                          (("1"
                                                                            (expand
                                                                             "method_pred")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (inst?
                                                                                         -4)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (use
                                                                                       "lookup_mthd_in_methods_class")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "ann_program"
                                                                             1)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "ann_class"
                                                                                 1)
                                                                                (("2"
                                                                                  (use
                                                                                   "get_class_in_classes")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "id")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (typepred
                                                                   "md!1")
                                                                  (("3"
                                                                    (expand
                                                                     "wf_Method")
                                                                    (("3"
                                                                      (flatten)
                                                                      (("3"
                                                                        (expand
                                                                         "method_pred")
                                                                        (("3"
                                                                          (flatten)
                                                                          (("3"
                                                                            (inst?
                                                                             -4)
                                                                            (("3"
                                                                              (expand*
                                                                               "wf_Body"
                                                                               "subset?"
                                                                               "member")
                                                                              (("3"
                                                                                (flatten)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (replace -22)
                                                            (("2"
                                                              (replace -35)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split
                                                                       1)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (replace
                                                                         -2)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (split
                                                                               2)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (use
                                                                                   "related_states_preserved_by_raise")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand*
                                                       "legal_Program_AP"
                                                       "legal_Program")
                                                      (("2"
                                                        (expand
                                                         "program_pred")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (split -6)
                                                              (("1"
                                                                (expand
                                                                 "method_pred")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -2)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (inst?)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (use
                                                                           "lookup_mthd_in_methods_class")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "ann_program"
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "ann_class"
                                                                   1)
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (use
                                                                         "get_class_in_classes")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "id")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (typepred "md!1")
                                                      (("3"
                                                        (expand "wf_Method")
                                                        (("3"
                                                          (flatten)
                                                          (("3"
                                                            (expand
                                                             "method_pred")
                                                            (("3"
                                                              (flatten)
                                                              (("3"
                                                                (inst?)
                                                                (("3"
                                                                  (expand*
                                                                   "wf_Body"
                                                                   "subset?"
                                                                   "member")
                                                                  (("3"
                                                                    (flatten)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (replace -16)
                                              (("2"
                                                (replace -29)
                                                (("2"
                                                  (lift-if)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (split 1)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (replace -2)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (split 2)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (use
                                                                     "related_states_preserved_by_raise")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand*
                                         "legal_Program_AP"
                                         "legal_Program")
                                        (("2"
                                          (expand "program_pred")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "ann_program" 2)
                                                (("2"
                                                  (expand "ann_class" 2)
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (use
                                                         "get_class_in_classes")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand "id")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (typepred "program(mp!1)")
                                        (("3"
                                          (expand "wf_Program")
                                          (("3"
                                            (flatten)
                                            (("3"
                                              (expand "program_pred")
                                              (("3"
                                                (inst?)
                                                (("3"
                                                  (assert)
                                                  (("3"
                                                    (use
                                                     "get_class_in_classes")
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (flatten)
                                                        (("3"
                                                          (replace
                                                           -32
                                                           :dir
                                                           rl)
                                                          (("3"
                                                            (expand*
                                                             "wf_Body"
                                                             "subset?"
                                                             "member")
                                                            (("3"
                                                              (flatten)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (related_states_implies_same_exception formula-decl nil
     RelatedStatesProperties nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (lookup_inv const-decl "Expr" ProgramFunctions nil)
    (get_class_equivalence formula-decl nil AnnotateProgramProperties nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (bijective? const-decl "bool" functions nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (halted const-decl "CP" MVA nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (derive_yields_wf_state_AP formula-decl nil AnnotatedProgramSemantics nil)
    (mp!1 skolem-const-decl
     "({mp: MonitoredProgram | wf_and_complete_MP(mp) AND wf_set_stmts(mp)})"
     MethodCallsPreserveRelatedState nil)
    (md!1 skolem-const-decl "(wf_Method(program(mp!1)))"
     MethodCallsPreserveRelatedState nil)
    (v!1 skolem-const-decl "ValOrExcpt[Name]" MethodCallsPreserveRelatedState
     nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (var_names_union formula-decl nil ProgramFunctions nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (new_gvds const-decl "finite_set[Decl]" NewVariableDeclarations nil)
    (ann_program_add_ghost_var_decls formula-decl nil
     AnnotateProgramProperties nil)
    (union const-decl "set" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (ann_program_ext_declared_var_names formula-decl nil
     AnnotateProgramProperties nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (on_method_MVA_yields_wf_state formula-decl nil MonitoredProgramSemantics
     nil)
    (Entry? adt-recognizer-decl "[EventType -> boolean]" EventType_adt nil)
    (Entry adt-constructor-decl "(Entry?)" EventType_adt nil)
    (complete_MVA_never_stuck_after_on_method_MVA formula-decl nil
     MonitoredProgramSemantics nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (derive def-decl "bool" Semantics nil)
    (update_PState const-decl "(update_PState_type)" AnnotatedProgramSemantics
     nil)
    (wf_state_raise formula-decl nil State nil)
    (raise const-decl "PState" State nil)
    (wf_update_PState formula-decl nil AnnotatedProgramSemantics nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (related_states const-decl "boolean" Equivalence nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (v adt-accessor-decl "[(val?) -> Expr[Name]]" ValOrExcpt_adt nil)
    (complete_MVA_never_stuck_after_derive formula-decl nil
     MonitoredProgramSemantics nil)
    (derive_yields_wf_state_MP formula-decl nil MonitoredProgramSemantics nil)
    (derive_never_leaves_halted formula-decl nil MonitoredProgramSemantics
     nil)
    (legal_Program const-decl "bool" LegalProgramRestriction nil)
    (legal_Program_AP const-decl "boolean" LegalAnnotatedProgramRestriction
     nil)
    (method_pred const-decl "bool" FullProgramRestriction nil)
    (ann_class const-decl "Class" AnnotateClass nil)
    (id_preserves application-judgement "S" identity_props nil)
    (program_pred const-decl "bool" FullProgramRestriction nil)
    (wf_program_methods_only_in_one_class const-decl "boolean"
     WellFormedProgram nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (get_monitored_class_in_classes formula-decl nil MonitoredProgram nil)
    (name_get_monitored_class formula-decl nil MonitoredProgram nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (wf_program_methods_only_in_one_class formula-decl nil WellFormedProgram
     nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (on_method_MVA const-decl "MPState" MonitoredProgramSemantics nil)
    (related_states_preserved_by_raise formula-decl nil
     RelatedStatesProperties nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil))
   48675 45460 t nil)
  (on_method_entry_preserves_related_states_not_annotated-1 nil 3430821938
   3431168110
   ("" (skosimp*)
    (("" (expand "on_method_entry_MP")
      (("" (expand "on_method_entry")
        ((""
          (apply (then (use "related_states_implies_same_exception") (assert)
                  (replace -1)))
          (("" (skosimp*)
            (("" (expand "check_assertion")
              (("" (skosimp*)
                (("" (expand "lookup_inv")
                  (("" (expand "id")
                    (("" (use "get_class_equivalence")
                      (("" (assert)
                        (("" (replace -1)
                          (("" (replace -24 :dir rl)
                            (("" (replace -11)
                              (("" (copy -8)
                                (("1"
                                  (apply (repeat (inst? -1 :where (-14 -27))))
                                  (("1" (assert)
                                    (("1" (split -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (case "cp(astate(tau1!3)) = halted")
                                          (("1"
                                            (lemma
                                             "derive_never_leaves_halted")
                                            (("1"
                                              (copy -1)
                                              (("1"
                                                (lemma
                                                 "derive_yields_wf_state_MP")
                                                (("1"
                                                  (copy -1)
                                                  (("1"
                                                    (lemma
                                                     "complete_MVA_never_stuck_after_derive")
                                                    (("1"
                                                      (copy -1)
                                                      (("1"
                                                        (inst? -1 :where -25)
                                                        (("1"
                                                          (inst?
                                                           -3
                                                           :where
                                                           -25)
                                                          (("1"
                                                            (inst?
                                                             -5
                                                             :where
                                                             -25)
                                                            (("1"
                                                              (inst?
                                                               -2
                                                               :where
                                                               -27)
                                                              (("1"
                                                                (inst?
                                                                 -4
                                                                 :where
                                                                 -27)
                                                                (("1"
                                                                  (inst?
                                                                   -6
                                                                   :where
                                                                   -27)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (typepred
                                                                       "mp!1")
                                                                      (("1"
                                                                        (expand
                                                                         "wf_and_complete_MP")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (lemma
                                                                               "derive_yields_wf_state_AP")
                                                                              (("1"
                                                                                (copy
                                                                                 -1)
                                                                                (("1"
                                                                                  (inst?
                                                                                   -1
                                                                                   :where
                                                                                   -44)
                                                                                  (("1"
                                                                                    (inst?
                                                                                     -2
                                                                                     :where
                                                                                     -46)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "related_states"
                                                                                         -14)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "cp(astate(sMP2!1)) = halted")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "up?(ex(pstate(tau1!1))) AND down(ex(pstate(tau1!1))) = JMLExc")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "derive"
                                                                                                       -51)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "up?(ex(pstate(tau2!1))) AND down(ex(pstate(tau2!1))) = JMLExc")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "derive"
                                                                                                                 -57)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "related_states"
                                                                                                                       +)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -8)
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replace
                                                                                                                             -52)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -49)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -54)
                                                                                                                                (("2"
                                                                                                                                  (lift-if)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("1"
                                                                                                                                          (apply
                                                                                                                                           (then
                                                                                                                                            (use
                                                                                                                                             "wf_update_PState"
                                                                                                                                             ("p"
                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                            (assert)
                                                                                                                                            (skosimp*)
                                                                                                                                            (expand
                                                                                                                                             "update_PState")
                                                                                                                                            (use
                                                                                                                                             "wf_state_raise")
                                                                                                                                            (assert)))
                                                                                                                                          nil)))
                                                                                                                                       ("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (use
                                                                                                                                           "wf_update_PState"
                                                                                                                                           ("p"
                                                                                                                                            "ann_program(mp!1)"))
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "wf_state(ann_program(mp!1))(update_PState(tau1!5, raise(JMLExc)))")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "update_PState"
                                                                                                                                                     1
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (use
                                                                                                                                                       "wf_state_raise")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil)))))))))
                                                                                                                                               ("2"
                                                                                                                                                (apply
                                                                                                                                                 (then
                                                                                                                                                  (use
                                                                                                                                                   "wf_update_PState"
                                                                                                                                                   ("p"
                                                                                                                                                    "ann_program(mp!1)"))
                                                                                                                                                  (assert)
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (expand
                                                                                                                                                   "update_PState")
                                                                                                                                                  (use
                                                                                                                                                   "wf_state_raise")
                                                                                                                                                  (assert)))
                                                                                                                                                nil)))))))))))))))))))))))))))))))))))
                                                                                                             ("2"
                                                                                                              (replace
                                                                                                               -54)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "raise")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))))))
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -47)
                                                                                                    (("2"
                                                                                                      (expand*
                                                                                                       "update_PState"
                                                                                                       "raise")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil)))))))))))
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "wf_state(mp!1)(tau1!2)")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "wf_state(mp!1)(tau2!2)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -35)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -37)
                                                                                                          (("1"
                                                                                                            (lift-if
                                                                                                             (-10
                                                                                                              -11))
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "update_PState"
                                                                                                               (-10
                                                                                                                -11))
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (apply
                                                                                                                   (branch
                                                                                                                    (split
                                                                                                                     -39)
                                                                                                                    ((then
                                                                                                                      (flatten)
                                                                                                                      (assert)
                                                                                                                      (flatten)
                                                                                                                      (assert)))))
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "on_method_MVA_yields_wf_state")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil)))))))))))))))))))))))
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -37)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (skosimp*)
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "wf_update_PState"
                                                                                                                 ("p"
                                                                                                                  "mp!1"))
                                                                                                                (assert)
                                                                                                                (skosimp*)
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (use
                                                                                                                 "wf_state_raise")
                                                                                                                (assert)))
                                                                                                              nil)))))))))))
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -33)
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (apply
                                                                                                               (then
                                                                                                                (use
                                                                                                                 "wf_update_PState"
                                                                                                                 ("p"
                                                                                                                  "mp!1"))
                                                                                                                (assert)
                                                                                                                (skosimp*)
                                                                                                                (expand
                                                                                                                 "update_PState")
                                                                                                                (use
                                                                                                                 "wf_state_raise")
                                                                                                                (assert)))
                                                                                                              nil)))))))))))))))
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -32)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -34)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "update_PState")
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (apply
                                                                                                           (branch
                                                                                                            (split
                                                                                                             -38)
                                                                                                            ((then
                                                                                                              (flatten)
                                                                                                              (assert)
                                                                                                              (flatten)
                                                                                                              (assert)))))
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "on_method_MVA_never_leaves_halted")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))))))))))
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "md!1")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "wf_Method")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "method_pred")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -4)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 "wf_Body"
                                                                                                 "subset?"
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (auto-rewrite
                                                                                                   "union"
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "ann_program_ext_declared_var_names")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (inst?
                                                                                                                 -6)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "ann_program_add_ghost_var_decls")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "var_names_union")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (inst?
                                                                                                                     -8)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))))))))))))))))))))))
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "md!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "wf_Method")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "method_pred")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (expand*
                                                                                               "wf_Body"
                                                                                               "subset?"
                                                                                               "member")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (auto-rewrite
                                                                                                   "union"
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "ann_program_ext_declared_var_names")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst?
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil)))))))))))
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "ann_program_add_ghost_var_decls")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "var_names_union")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (inst?
                                                                                                                 -4)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (expand
                                                                                   "id")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil)))))))))))))))))))))))))))))))))))))))))
                                           ("2"
                                            (case
                                             "related_states(mp!1)(tau1!2, tau1!1)")
                                            (("1"
                                              (copy -11)
                                              (("1"
                                                (apply
                                                 (repeat
                                                  (inst?
                                                   -1
                                                   :where
                                                   (-20 -33))))
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split -1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (case
                                                         "cp(astate(tau1!4)) = halted")
                                                        (("1"
                                                          (lemma
                                                           "derive_never_leaves_halted")
                                                          (("1"
                                                            (lemma
                                                             "derive_yields_wf_state_MP")
                                                            (("1"
                                                              (lemma
                                                               "complete_MVA_never_stuck_after_derive")
                                                              (("1"
                                                                (inst?
                                                                 -1
                                                                 :where
                                                                 -27)
                                                                (("1"
                                                                  (inst?
                                                                   -2
                                                                   :where
                                                                   -27)
                                                                  (("1"
                                                                    (inst?
                                                                     -3
                                                                     :where
                                                                     -27)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (typepred
                                                                         "mp!1")
                                                                        (("1"
                                                                          (expand
                                                                           "wf_and_complete_MP")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "derive_yields_wf_state_AP")
                                                                                (("1"
                                                                                  (inst?
                                                                                   -1
                                                                                   :where
                                                                                   -45)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "related_states"
                                                                                       -10)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "cp(astate(sMP2!1)) = halted")
                                                                                            (("1"
                                                                                              (case
                                                                                               "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "up?(ex(pstate(tau2!1))) AND down(ex(pstate(tau2!1))) = JMLExc")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "derive"
                                                                                                     -52)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "related_states"
                                                                                                           +)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -5)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (replace
                                                                                                                 -50)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (apply
                                                                                                                           (then
                                                                                                                            (use
                                                                                                                             "wf_update_PState"
                                                                                                                             ("p"
                                                                                                                              "ann_program(mp!1)"))
                                                                                                                            (assert)
                                                                                                                            (skosimp*)
                                                                                                                            (expand
                                                                                                                             "update_PState")
                                                                                                                            (use
                                                                                                                             "wf_state_raise")
                                                                                                                            (assert)))
                                                                                                                          nil)))))))))))))))))))))))))
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   -49)
                                                                                                  (("2"
                                                                                                    (expand*
                                                                                                     "update_PState"
                                                                                                     "raise")
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil)))))))))
                                                                                               ("2"
                                                                                                (case
                                                                                                 "wf_state(mp!1)(tau2!2)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (apply
                                                                                                       (branch
                                                                                                        (split
                                                                                                         -39)
                                                                                                        ((then
                                                                                                          (flatten)
                                                                                                          (assert)
                                                                                                          (flatten)
                                                                                                          (assert)))))
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "on_method_MVA_yields_wf_state")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil)))))))))
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -36)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (expand*
                                                                                                           "update_PState")
                                                                                                          nil)))))))))
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   -35)
                                                                                                  (("2"
                                                                                                    (lift-if)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (apply
                                                                                                             (then
                                                                                                              (use
                                                                                                               "wf_update_PState"
                                                                                                               ("p"
                                                                                                                "mp!1"))
                                                                                                              (assert)
                                                                                                              (skosimp*)
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (use
                                                                                                               "wf_state_raise")
                                                                                                              (assert)))
                                                                                                            nil)))))))))))))))
                                                                                             ("2"
                                                                                              (replace
                                                                                               -34)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "update_PState")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (apply
                                                                                                       (branch
                                                                                                        (split
                                                                                                         -37)
                                                                                                        ((then
                                                                                                          (flatten)
                                                                                                          (assert)
                                                                                                          (flatten)
                                                                                                          (assert)))))
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "on_method_MVA_never_leaves_halted")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil)))))))))))))))))))))))))
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "md!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "wf_Method")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "method_pred")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -4)
                                                                                            (("2"
                                                                                              (expand*
                                                                                               "wf_Body"
                                                                                               "subset?"
                                                                                               "member")
                                                                                              (("2"
                                                                                                (auto-rewrite
                                                                                                 "union"
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (split
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (skosimp*)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "ann_program_ext_declared_var_names")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (inst?
                                                                                                             -6)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil)))))))))))
                                                                                                   ("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "ann_program_add_ghost_var_decls")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "var_names_union")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (inst?
                                                                                                                 -8)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                         ("2"
                                                          (case
                                                           "related_states(mp!1)(tau2!2, tau2!1)")
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -14
                                                               :where
                                                               (-24 -37))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split -14)
                                                                (("1"
                                                                  (split -27)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      nil)))
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "on_method_MVA")
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (use
                                                                                 "lookup_mthd_in_methods_class")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -20)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "program(mp!1)")
                                                                                      (("1"
                                                                                        (use
                                                                                         "wf_program_methods_only_in_one_class")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "wf_program_methods_only_in_one_class")
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "get_monitored_class(mp!1)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "get_class_in_classes")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "get_monitored_class_in_classes")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -3
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "name_get_monitored_class")
                                                                                                            nil)))))))))))))))))))))))))))))))
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (case-replace
                                                                                 "sMP2!1 = s_new!1"
                                                                                 :hide?
                                                                                 t)
                                                                                nil)))))))))))))))
                                                                 ("2"
                                                                  (expand*
                                                                   "legal_Program_AP"
                                                                   "legal_Program")
                                                                  (("2"
                                                                    (expand
                                                                     "program_pred")
                                                                    (("2"
                                                                      (inst?
                                                                       -9)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (split
                                                                           -9)
                                                                          (("1"
                                                                            (expand
                                                                             "method_pred")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (inst?
                                                                                         -4)
                                                                                        nil)))
                                                                                     ("2"
                                                                                      (use
                                                                                       "lookup_mthd_in_methods_class")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil)))))))))))))
                                                                           ("2"
                                                                            (expand
                                                                             "ann_program"
                                                                             1)
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "ann_class"
                                                                                   1)
                                                                                  (("2"
                                                                                    (use
                                                                                     "get_class_in_classes")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil)))))))))))))))))))))
                                                                 ("3"
                                                                  (typepred
                                                                   "md!1")
                                                                  (("3"
                                                                    (expand
                                                                     "wf_Method")
                                                                    (("3"
                                                                      (expand
                                                                       "method_pred")
                                                                      (("3"
                                                                        (flatten)
                                                                        (("3"
                                                                          (inst?
                                                                           -4)
                                                                          (("3"
                                                                            (expand*
                                                                             "wf_Body"
                                                                             "subset?"
                                                                             "member")
                                                                            (("3"
                                                                              (flatten)
                                                                              nil)))))))))))))))))))
                                                           ("2"
                                                            (replace -22)
                                                            (("2"
                                                              (replace -35)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split
                                                                       1)
                                                                      (("1"
                                                                        (propax)
                                                                        nil)
                                                                       ("2"
                                                                        (replace
                                                                         -2)
                                                                        (("2"
                                                                          (skosimp*)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (split
                                                                               2)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (use
                                                                                   "related_states_preserved_by_raise")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil)))))))))))))))))))))))))))))))
                                                     ("2"
                                                      (expand*
                                                       "legal_Program_AP"
                                                       "legal_Program")
                                                      (("2"
                                                        (expand
                                                         "program_pred")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (split -6)
                                                              (("1"
                                                                (expand
                                                                 "method_pred")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -2)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (inst?)
                                                                            nil)))
                                                                         ("2"
                                                                          (use
                                                                           "lookup_mthd_in_methods_class")
                                                                          (("2"
                                                                            (assert)
                                                                            nil)))))))))))))
                                                               ("2"
                                                                (expand
                                                                 "ann_program"
                                                                 1)
                                                                (("2"
                                                                  (expand
                                                                   "ann_class"
                                                                   1)
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (use
                                                                         "get_class_in_classes")
                                                                        (("2"
                                                                          (assert)
                                                                          nil)))))))))))))))))))))
                                                     ("3"
                                                      (typepred "md!1")
                                                      (("3"
                                                        (expand "wf_Method")
                                                        (("3"
                                                          (expand
                                                           "method_pred")
                                                          (("3"
                                                            (flatten)
                                                            (("3"
                                                              (inst?)
                                                              (("3"
                                                                (expand*
                                                                 "wf_Body"
                                                                 "subset?"
                                                                 "member")
                                                                (("3"
                                                                  (flatten)
                                                                  nil)))))))))))))))))))
                                               ("2"
                                                (skosimp*)
                                                (("2"
                                                  (expand "id")
                                                  (("2"
                                                    (use
                                                     "ann_program_preserves_wf_body")
                                                    nil)))))))
                                             ("2"
                                              (replace -16)
                                              (("2"
                                                (replace -29)
                                                (("2"
                                                  (lift-if)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (split 1)
                                                        (("1" (propax) nil)
                                                         ("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (replace -2)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (split 2)
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (assert)
                                                                    nil)))
                                                                 ("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (use
                                                                     "related_states_preserved_by_raise")
                                                                    (("2"
                                                                      (assert)
                                                                      nil)))))))))))))))))))))))))))))))
                                       ("2"
                                        (expand*
                                         "legal_Program_AP"
                                         "legal_Program")
                                        (("2"
                                          (expand "program_pred")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "ann_program" 2)
                                                (("2"
                                                  (expand "ann_class" 2)
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (use
                                                         "get_class_in_classes")
                                                        (("2"
                                                          (assert)
                                                          nil)))))))))))))))))))
                                       ("3"
                                        (typepred "program(mp!1)")
                                        (("3"
                                          (expand "wf_Program")
                                          (("3"
                                            (flatten)
                                            (("3"
                                              (expand "program_pred")
                                              (("3"
                                                (inst?)
                                                (("3"
                                                  (assert)
                                                  (("3"
                                                    (use
                                                     "get_class_in_classes")
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (flatten)
                                                        (("3"
                                                          (replace
                                                           -31
                                                           :dir
                                                           rl)
                                                          (("3"
                                                            (expand*
                                                             "wf_Body"
                                                             "subset?"
                                                             "member")
                                                            (("3"
                                                              (flatten)
                                                              nil)))))))))))))))))))))))))))))
                                 ("2" (skosimp*)
                                  (("2" (expand "id")
                                    (("2"
                                      (use "ann_program_preserves_wf_body")
                                      nil))))))))))))))))))))))))))))))))))
    nil)
   unfinished nil 42452 38910 nil nil))
 (on_method_exit_normal_preserves_related_states_annotated_TCC1 0
  (on_method_exit_normal_preserves_related_states_annotated_TCC1-2 nil
   3430839491 3433217130
   ("" (skosimp*)
    (("" (expand "id") (("" (use "ann_program_preserves_wf_method") nil))))
    nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (ann_program_preserves_wf_method formula-decl nil
     AnnotateProgramProperties nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil))
   2059 2040 nil nil)
  (on_method_exit_normal_preserves_related_states_annotated_TCC1-1 nil
   3430821302 nil ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (on_method_exit_normal_preserves_related_states_annotated 0
  (on_method_exit_normal_preserves_related_states_annotated-2 nil 3431169949
   3433219249
   ("" (skosimp*)
    (("" (expand* "on_method_exit_normal_MP" "on_method_exit_normal")
      (("" (assert)
        (("" (skosimp*)
          (("" (use "related_states_implies_same_exception")
            (("" (assert)
              (("" (skosimp*)
                (("" (use "ann_method_post_set")
                  (("" (flatten)
                    (("" (rewrite "derive" -22)
                      (("" (assert)
                        (("" (skosimp*)
                          (("" (replace -2 :hide? t)
                            (("" (use "get_class_in_classes")
                              (("" (assert)
                                (("" (copy -11)
                                  ((""
                                    (apply (repeat
                                            (inst? -12 :where (-14 -24))))
                                    (("" (assert)
                                      ((""
                                        (split -12)
                                        (("1"
                                          (case "cp(astate(tau1!2)) = halted")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "related_states" -2)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (case
                                                         "cp(astate(sMP2!1)) = halted")
                                                        (("1"
                                                          (case
                                                           "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                          (("1"
                                                            (case
                                                             "wf_state(ann_program(mp!1))(sAP2!1)")
                                                            (("1"
                                                              (expand
                                                               "derive"
                                                               -34)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (replace
                                                                   -34)
                                                                  (("1"
                                                                    (expand
                                                                     "check_assertion")
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (expand
                                                                         "derive"
                                                                         -43)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (replace
                                                                               -43)
                                                                              (("1"
                                                                                (case
                                                                                 "up?(ex(pstate(tau2!1))) AND down(ex(pstate(tau2!1))) = JMLExc")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "derive"
                                                                                     -50)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -50)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -53)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "related_states")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "raise")
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replace
                                                                                   -46)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "update_PState")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "raise")
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "check_assertion")
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (lemma
                                                                   "derive_yields_wf_state_AP")
                                                                  (("2"
                                                                    (copy -1)
                                                                    (("2"
                                                                      (copy
                                                                       -1)
                                                                      (("2"
                                                                        (inst?
                                                                         -1
                                                                         :where
                                                                         -44)
                                                                        (("1"
                                                                          (rewrite
                                                                           "ann_method_post")
                                                                          (("1"
                                                                            (inst?
                                                                             -2
                                                                             :where
                                                                             -46)
                                                                            (("1"
                                                                              (inst?
                                                                               -3
                                                                               :where
                                                                               -39)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -47)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (apply
                                                                                                 (then
                                                                                                  (use
                                                                                                   "wf_update_PState"
                                                                                                   ("p"
                                                                                                    "ann_program(mp!1)"))
                                                                                                  (assert)
                                                                                                  (skosimp*)
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (use
                                                                                                   "wf_state_raise")
                                                                                                  (assert)))
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -43)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (apply
                                                                                               (then
                                                                                                (use
                                                                                                 "wf_update_PState"
                                                                                                 ("p"
                                                                                                  "ann_program(mp!1)"))
                                                                                                (assert)
                                                                                                (skosimp*)
                                                                                                (expand
                                                                                                 "update_PState")
                                                                                                (use
                                                                                                 "wf_state_raise")
                                                                                                (assert)))
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (use
                                                                                 "ann_program_preserves_wf_method")
                                                                                (("2"
                                                                                  (expand*
                                                                                   "wf_Method"
                                                                                   "method_pred")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (inst?
                                                                                         -5)
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_Body_preserved_by_proper_subterm"
                                                                                           ("b1"
                                                                                            "post_set(ann_method(mp!1)(md!1))(v(v!1))"
                                                                                            "b2"
                                                                                            "s2[Name](post_set(ann_method[CP, Name](mp!1)(md!1))(v(v!1)))"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "<<")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("3"
                                                                              (use
                                                                               "ann_program_preserves_wf_method")
                                                                              (("3"
                                                                                (expand*
                                                                                 "wf_Method"
                                                                                 "method_pred")
                                                                                (("3"
                                                                                  (flatten)
                                                                                  (("3"
                                                                                    (inst
                                                                                     -2
                                                                                     "v(v!1)")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (rewrite
                                                                                         "ann_method_post")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("3"
                                                                          (typepred
                                                                           "ann_program(mp!1)")
                                                                          (("3"
                                                                            (expand
                                                                             "wf_Program")
                                                                            (("3"
                                                                              (flatten)
                                                                              (("3"
                                                                                (hide
                                                                                 -6)
                                                                                (("3"
                                                                                  (expand
                                                                                   "program_pred")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (expand
                                                                                       "lookup_inv")
                                                                                      (("3"
                                                                                        (assert)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "id")
                                                                                          (("3"
                                                                                            (lift-if)
                                                                                            (("3"
                                                                                              (apply
                                                                                               (branch
                                                                                                (split
                                                                                                 -46)
                                                                                                ((then
                                                                                                  (flatten)
                                                                                                  (assert)
                                                                                                  (flatten)
                                                                                                  (assert)))))
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -7
                                                                                                 "down(get_class(ann_program(mp!1))(a!1))")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "get_class_in_classes")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "wf_Body")
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "var_names"
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "emptyset")
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "subterm")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "check_assertion")
                                                            (("2"
                                                              (lemma
                                                               "derive_yields_wf_state_MP")
                                                              (("2"
                                                                (copy -1)
                                                                (("2"
                                                                  (lemma
                                                                   "complete_MVA_never_stuck_after_derive")
                                                                  (("2"
                                                                    (copy -1)
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (inst?
                                                                         -1
                                                                         :where
                                                                         -29)
                                                                        (("1"
                                                                          (inst?
                                                                           -3
                                                                           :where
                                                                           -29)
                                                                          (("1"
                                                                            (inst?
                                                                             -2
                                                                             :where
                                                                             -32)
                                                                            (("1"
                                                                              (inst?
                                                                               -4
                                                                               :where
                                                                               -32)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "mp!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "wf_and_complete_MP")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "wf_state(mp!1)(tau2!2)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "wf_state(mp!1)(tau3!1)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -36)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -31)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -38)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (apply
                                                                                                                   (then
                                                                                                                    (use
                                                                                                                     "wf_update_PState"
                                                                                                                     ("p"
                                                                                                                      "mp!1"))
                                                                                                                    (assert)
                                                                                                                    (skosimp*)
                                                                                                                    (expand
                                                                                                                     "update_PState")
                                                                                                                    (use
                                                                                                                     "wf_state_raise")
                                                                                                                    (assert)))
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "update_PState")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -35)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (apply
                                                                                                           (then
                                                                                                            (use
                                                                                                             "wf_update_PState"
                                                                                                             ("p"
                                                                                                              "mp!1"))
                                                                                                            (assert)
                                                                                                            (skosimp*)
                                                                                                            (expand
                                                                                                             "update_PState")
                                                                                                            (use
                                                                                                             "wf_state_raise")
                                                                                                            (assert)))
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replace
                                                                                             -30)
                                                                                            (("2"
                                                                                              (use
                                                                                               "on_method_MVA_yields_wf_state")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "check_assertion")
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (use
                                                               "on_method_MVA_never_leaves_halted")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (lemma
                                                                   "derive_never_leaves_halted")
                                                                  (("2"
                                                                    (copy -1)
                                                                    (("2"
                                                                      (inst?
                                                                       -1
                                                                       :where
                                                                       -27)
                                                                      (("2"
                                                                        (inst?
                                                                         -2
                                                                         :where
                                                                         -30)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (split
                                                                             -2)
                                                                            (("1"
                                                                              (replace
                                                                               -31)
                                                                              (("1"
                                                                                (expand
                                                                                 "update_PState")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replace
                                                                               -27)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (expand
                                                                                   "update_PState")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -20)
                                                                                      (("2"
                                                                                        (use
                                                                                         "on_method_MVA_never_leaves_halted")
                                                                                        (("2"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("3"
                                                                                            (typepred
                                                                                             "mp!1")
                                                                                            (("3"
                                                                                              (expand
                                                                                               "wf_and_complete_MP")
                                                                                              (("3"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case "up?(ex(pstate(tau!1)))")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (typepred "mp!1")
                                                  (("1"
                                                    (expand "wf_set_stmts")
                                                    (("1"
                                                      (expand
                                                       "program_method_pred")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split -3)
                                                                (("1"
                                                                  (expand
                                                                   "wf_set_stmts")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst?
                                                                       -4)
                                                                      (("1"
                                                                        (expand
                                                                         "no_exc")
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -4
                                                                             :where
                                                                             -24)))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "related_states_implies_same_exception")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "related_states")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "wf_state")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "wf_ap_state")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (replace
                                                                   -16
                                                                   :dir
                                                                   rl)
                                                                  (("2"
                                                                    (expand
                                                                     "lookup_mthd")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (apply
                                                                         (branch
                                                                          (split
                                                                           1)
                                                                          ((then
                                                                            (flatten)
                                                                            (assert)
                                                                            (flatten)
                                                                            (assert)))))
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "ann_method" -26)
                                              (("2"
                                                (use
                                                 "ann_event_does_not_throw_exception")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (replace -1)
                                                      (("2"
                                                        (use
                                                         "ann_event_preserves_MP_modeled"
                                                         ("sMP2" "tau2!2"))
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (auto-rewrite
                                                               "id")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "lookup_inv")
                                                                  (("1"
                                                                    (use
                                                                     "get_class_equivalence")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "ann_class"
                                                                             -32)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -21
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (replace
                                                                                   -32
                                                                                   :hide?
                                                                                   t)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "check_assertion")
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      (("1"
                                                                                        (case
                                                                                         "up?(ex(pstate(tau1!1)))")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (rewrite
                                                                                           "derive"
                                                                                           -37)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "derive"
                                                                                                 -38)
                                                                                                (("2"
                                                                                                  (skosimp*)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "derive"
                                                                                                     -39)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "derive"
                                                                                                         -40)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "derive"
                                                                                                               -43)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "check_for_exception_final")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "check_for_exception")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -48
                                                                                                                           :hide?
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -46
                                                                                                                               :hide?
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -45
                                                                                                                                   :hide?
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -42
                                                                                                                                     :hide?
                                                                                                                                     t)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -42
                                                                                                                                         :hide?
                                                                                                                                         t)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -40
                                                                                                                                           :hide?
                                                                                                                                           t)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "halted")
                                                                                                                                              (("2"
                                                                                                                                                (use
                                                                                                                                                 "MP_modeled_lookup_correspondence"
                                                                                                                                                 ("q1"
                                                                                                                                                  "cp(astate(tau2!2))"
                                                                                                                                                  "sMP"
                                                                                                                                                  "tau2!2"))
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (split
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1
                                                                                                                                                       :dir
                                                                                                                                                       rl
                                                                                                                                                       :hide?
                                                                                                                                                       t)
                                                                                                                                                      (("1"
                                                                                                                                                        (apply
                                                                                                                                                         (branch
                                                                                                                                                          (split
                                                                                                                                                           -43)
                                                                                                                                                          ((then
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)))))
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "related_states(mp!1)(tau2!2, tau!2)")
                                                                                                                                                          (("1"
                                                                                                                                                            (copy
                                                                                                                                                             -9)
                                                                                                                                                            (("1"
                                                                                                                                                              (apply
                                                                                                                                                               (repeat
                                                                                                                                                                (inst?
                                                                                                                                                                 -1
                                                                                                                                                                 :where
                                                                                                                                                                 (-3
                                                                                                                                                                  -27))))
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "cp(astate(tau1!3)) = halted")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "related_states"
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "cp(astate(sMP2!1)) = halted")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "wf_state(ann_program(mp!1))(sAP2!1)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "derive_after_raise"
                                                                                                                                                                                         ("sigma1"
                                                                                                                                                                                          "tau1!5"
                                                                                                                                                                                          "sigma2"
                                                                                                                                                                                          "tau1!6"))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -59)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "related_states")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "update_PState")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "raise")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "derive_yields_wf_state_AP")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst?
                                                                                                                                                                                           -1
                                                                                                                                                                                           :where
                                                                                                                                                                                           -57)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -58)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (apply
                                                                                                                                                                                                           (then
                                                                                                                                                                                                            (use
                                                                                                                                                                                                             "wf_update_PState"
                                                                                                                                                                                                             ("p"
                                                                                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "update_PState")
                                                                                                                                                                                                            (use
                                                                                                                                                                                                             "wf_state_raise")
                                                                                                                                                                                                            (assert)))
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -53)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (apply
                                                                                                                                                                                                       (then
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                          "ann_program(mp!1)"))
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                                        (assert)))
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "ann_program_preserves_wf_method")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "wf_Method"
                                                                                                                                                                                               "method_pred")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst?
                                                                                                                                                                                                   -2)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "derive_yields_wf_state_MP")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -1
                                                                                                                                                                                         :where
                                                                                                                                                                                         -37)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "complete_MVA_never_stuck_after_derive")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst?
                                                                                                                                                                                             -1
                                                                                                                                                                                             :where
                                                                                                                                                                                             -38)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (typepred
                                                                                                                                                                                                 "mp!1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "wf_and_complete_MP")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "wf_state(mp!1)(tau3!1)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -44)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (apply
                                                                                                                                                                                                                         (then
                                                                                                                                                                                                                          (use
                                                                                                                                                                                                                           "wf_update_PState"
                                                                                                                                                                                                                           ("p"
                                                                                                                                                                                                                            "mp!1"))
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                                          (use
                                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                                          (assert)))
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (split
                                                                                                                                                                                                                 -7)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -44)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "update_PState")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -42)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "update_PState")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -40)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (split
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (apply
                                                                                                                                                                                                                     (then
                                                                                                                                                                                                                      (use
                                                                                                                                                                                                                       "wf_update_PState"
                                                                                                                                                                                                                       ("p"
                                                                                                                                                                                                                        "mp!1"))
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "update_PState")
                                                                                                                                                                                                                      (use
                                                                                                                                                                                                                       "wf_state_raise")
                                                                                                                                                                                                                      (assert)))
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "derive_never_leaves_halted")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst?
                                                                                                                                                                                       -1
                                                                                                                                                                                       :where
                                                                                                                                                                                       -36)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -37)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -33)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "update_PState")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case
                                                                                                                                                                           "related_states(mp!1)(tau3!1, tau2!1)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "ann_method_post")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (apply
                                                                                                                                                                               (repeat
                                                                                                                                                                                (inst?
                                                                                                                                                                                 -12
                                                                                                                                                                                 :where
                                                                                                                                                                                 (-51
                                                                                                                                                                                  -32))))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (split
                                                                                                                                                                                   -12)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "cp(astate(tau1!4)) = halted")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "related_states")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -47)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -65)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "update_PState"
                                                                                                                                                                                                       15
                                                                                                                                                                                                       3)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "update_PState"
                                                                                                                                                                                                         15
                                                                                                                                                                                                         3)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "update_PState"
                                                                                                                                                                                                           15
                                                                                                                                                                                                           3)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "raise"
                                                                                                                                                                                                             15
                                                                                                                                                                                                             3)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "raise"
                                                                                                                                                                                                               15
                                                                                                                                                                                                               3)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                   15)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (apply
                                                                                                                                                                                                                       (then
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                                          "mp!1"))
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                                                        (assert)))
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("3"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("4"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    (("4"
                                                                                                                                                                                                                      (apply
                                                                                                                                                                                                                       (then
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                                          "ann_program(mp!1)"))
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                                                        (assert)))
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("5"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("5"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("6"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("6"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("6"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                                        (("6"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -53)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -34)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   10)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -2)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (split
                                                                                                                                                                                                           2)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "related_states_preserved_by_raise")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand*
                                                                                                                                                                                     "legal_Program_AP"
                                                                                                                                                                                     "legal_Program")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "program_pred")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -16
                                                                                                                                                                                         "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (split
                                                                                                                                                                                             -16)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "method_pred")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -2
                                                                                                                                                                                                   "ann_method(mp!1)(md!1)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       -2)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -2
                                                                                                                                                                                                           "v(v!1)")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                             "ann_method_post")
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "ann_class")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "ann_methods")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "lookup_mthd_in_methods_class")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "ann_program"
                                                                                                                                                                                               "id")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("3"
                                                                                                                                                                                    (typepred
                                                                                                                                                                                     "md!1")
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "wf_Method")
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("3"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "method_pred")
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (inst?
                                                                                                                                                                                               -2)
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (expand*
                                                                                                                                                                                                 "wf_Body"
                                                                                                                                                                                                 "subset?"
                                                                                                                                                                                                 "member")
                                                                                                                                                                                                (("3"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -29)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -48)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (case-replace
                                                                                                                                                                                 "v!6 = v!4")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "related_states_preserved_by_raise")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   -5)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "related_states_implies_same_exception"
                                                                                                                                                                                       ("sMP"
                                                                                                                                                                                        "tau1!3"
                                                                                                                                                                                        "sAP"
                                                                                                                                                                                        "tau1!5"))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -1
                                                                                                                                                                                           :dir
                                                                                                                                                                                           rl)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "derive_bottom_iff_exception_step"
                                                                                                                                                                                             ("p"
                                                                                                                                                                                              "mp!1"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst?
                                                                                                                                                                                               -1
                                                                                                                                                                                               :where
                                                                                                                                                                                               -31)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -4)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -2)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (apply-extensionality
                                                                                                                                                                                             :hide?
                                                                                                                                                                                             t)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand*
                                                                                                                                                                     "legal_Program_AP"
                                                                                                                                                                     "legal_Program")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "program_pred")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -14
                                                                                                                                                                         "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             -14)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "method_pred")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "ann_class")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "legal_Body_preserved_by_proper_subterm")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst?
                                                                                                                                                                                       -1
                                                                                                                                                                                       :where
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -1
                                                                                                                                                                                         :where
                                                                                                                                                                                         -2)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "<<")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (expand*
                                                                                                                                                                               "ann_program"
                                                                                                                                                                               "id")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "program(mp!1)")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (expand*
                                                                                                                                                                       "wf_Program"
                                                                                                                                                                       "program_pred")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("3"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -31
                                                                                                                                                                                 :dir
                                                                                                                                                                                 rl)
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (expand*
                                                                                                                                                                                   "wf_Body"
                                                                                                                                                                                   "subset?"
                                                                                                                                                                                   "member")
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "related_states")
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (split
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (use
                                                                                                                                                                   "on_method_MVA_yields_wf_state")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "derive_yields_wf_state_AP")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst?
                                                                                                                                                                     -1
                                                                                                                                                                     :where
                                                                                                                                                                     -41)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (use
                                                                                                                                                                       "ann_event_wf_Body")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand*
                                                                                                                                                                           "subset?"
                                                                                                                                                                           "member"
                                                                                                                                                                           "filter_event")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (replace
                                                                                                                                                                   -27)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (use
                                                                                                                                                                     "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("3"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "mp!1")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (expand
                                                                                                                                                                           "wf_and_complete_MP")
                                                                                                                                                                          (("3"
                                                                                                                                                                            (propax)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (case
                                                                                                                                                           "related_states(mp!1)(tau3!1, tau2!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "ann_method_post")
                                                                                                                                                            (("1"
                                                                                                                                                              (apply
                                                                                                                                                               (repeat
                                                                                                                                                                (inst?
                                                                                                                                                                 -11
                                                                                                                                                                 :where
                                                                                                                                                                 (-31
                                                                                                                                                                  -50))))
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -11)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "cp(astate(tau1!4)) = halted")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "related_states")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -43)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -61)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "update_PState"
                                                                                                                                                                                       11
                                                                                                                                                                                       3)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "update_PState"
                                                                                                                                                                                         11
                                                                                                                                                                                         3)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "update_PState"
                                                                                                                                                                                           11
                                                                                                                                                                                           3)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "update_PState"
                                                                                                                                                                                             11
                                                                                                                                                                                             3)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "raise"
                                                                                                                                                                                               11
                                                                                                                                                                                               3)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "raise"
                                                                                                                                                                                                 11
                                                                                                                                                                                                 3)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     11)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (apply
                                                                                                                                                                                                         (then
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_update_PState"
                                                                                                                                                                                                           ("p"
                                                                                                                                                                                                            "mp!1"))
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                          (assert)))
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("4"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                        (apply
                                                                                                                                                                                                         (then
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_update_PState"
                                                                                                                                                                                                           ("p"
                                                                                                                                                                                                            "ann_program(mp!1)"))
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                          (assert)))
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("5"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("5"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("6"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("6"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -52)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -33)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   8)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -2)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (split
                                                                                                                                                                                           2)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "related_states_preserved_by_raise")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand*
                                                                                                                                                                     "legal_Program_AP"
                                                                                                                                                                     "legal_Program")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "program_pred")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -15
                                                                                                                                                                         "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             -15)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "method_pred")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -2
                                                                                                                                                                                   "ann_method(mp!1)(md!1)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       -2)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -2
                                                                                                                                                                                           "v(v!1)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "ann_method_post")
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "ann_class")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "ann_methods")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst?)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "lookup_mthd_in_methods_class")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (expand*
                                                                                                                                                                               "ann_program"
                                                                                                                                                                               "id")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "md!1")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (expand
                                                                                                                                                                       "wf_Method")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (expand
                                                                                                                                                                           "method_pred")
                                                                                                                                                                          (("3"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (inst?
                                                                                                                                                                               -2)
                                                                                                                                                                              (("3"
                                                                                                                                                                                (expand*
                                                                                                                                                                                 "wf_Body"
                                                                                                                                                                                 "subset?"
                                                                                                                                                                                 "member")
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (case
                                                                                                                                                             "cp(astate(tau3!1)) = halted")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -3)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -48)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "related_states")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "update_PState"
                                                                                                                                                                         1
                                                                                                                                                                         3)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "update_PState"
                                                                                                                                                                           1
                                                                                                                                                                           2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "raise"
                                                                                                                                                                             1
                                                                                                                                                                             2)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "raise"
                                                                                                                                                                               1
                                                                                                                                                                               2)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (case
                                                                                                                                                                                 "wf_state(mp!1)(tau3!1)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (split
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "derive_yields_wf_state_AP")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -1
                                                                                                                                                                                         :where
                                                                                                                                                                                         -45)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "wf_update_PState"
                                                                                                                                                                                             ("p"
                                                                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "update_PState")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "wf_state_raise")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "ann_event_wf_Body")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "subset?")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "member")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "filter_event")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("3"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                        (("3"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "mp!1")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "wf_and_complete_MP")
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("3"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "complete_MVA_never_stuck_after_derive")
                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                      (inst?
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       :where
                                                                                                                                                                                                       -39)
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -40)
                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "update_PState")
                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "derive_yields_wf_state_MP")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst?
                                                                                                                                                                                       -1
                                                                                                                                                                                       :where
                                                                                                                                                                                       -33)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -34)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (apply
                                                                                                                                                                                                       (then
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                          "mp!1"))
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                                        (assert)))
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -29)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "mp!1")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "wf_and_complete_MP")
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "derive_never_leaves_halted")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst?
                                                                                                                                                                 -1
                                                                                                                                                                 :where
                                                                                                                                                                 -28)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -29)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "update_PState")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "mp!1")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_and_complete_MP")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "complete")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (use
                                                                                                                                                       "on_method_MVA_yields_wf_AState")
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        (("3"
                                                                                                                                                          (expand
                                                                                                                                                           "related_states")
                                                                                                                                                          (("3"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              (("3"
                                                                                                                                                                (expand
                                                                                                                                                                 "wf_AState")
                                                                                                                                                                (("3"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("4"
                                                                                                                                                      (lemma
                                                                                                                                                       "derive_yields_wf_state_AP")
                                                                                                                                                      (("4"
                                                                                                                                                        (inst?
                                                                                                                                                         -1
                                                                                                                                                         :where
                                                                                                                                                         -35)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "related_states")
                                                                                                                                                            (("1"
                                                                                                                                                              (propax)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (use
                                                                                                                                                           "ann_event_wf_Body")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand*
                                                                                                                                                               "subset?"
                                                                                                                                                               "member"
                                                                                                                                                               "filter_event")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp*)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (replace -18)
                                                              (("2"
                                                                (case-replace
                                                                 "val(v(v!1)) = v!1")
                                                                (("2"
                                                                  (apply-extensionality
                                                                   :hide?
                                                                   t)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (case-replace
                                                               "get_monitored_class(mp!1) = down(get_class(program(mp!1))(a!1))")
                                                              (("1"
                                                                (use
                                                                 "lookup_mthd_in_methods_class")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "program(mp!1)")
                                                                (("2"
                                                                  (expand*
                                                                   "wf_Program"
                                                                   "wf_program_has_unique_class_names_def")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (split
                                                                           -3)
                                                                          (("1"
                                                                            (rewrite
                                                                             "name_get_monitored_class")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (use
                                                                             "get_monitored_class_in_classes")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand*
                                           "legal_Program_AP"
                                           "legal_Program")
                                          (("2"
                                            (expand "program_pred")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (inst
                                                 -6
                                                 "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (split -6)
                                                    (("1"
                                                      (expand "method_pred")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (inst
                                                           -2
                                                           "ann_method(mp!1)(md!1)")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (split -2)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst
                                                                   -5
                                                                   "v(v!1)")
                                                                  (("1"
                                                                    (use
                                                                     "ann_method_post_set")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (replace
                                                                         -2
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (lemma
                                                                           "legal_Body_preserved_by_proper_subterm")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "ann_program(mp!1)"
                                                                             "post_set(ann_method(mp!1)(md!1))(v(v!1))"
                                                                             "s1(post_set(ann_method(mp!1)(md!1))(v(v!1)))")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "<<")
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "ann_class")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "ann_methods")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (use
                                                                           "lookup_mthd_in_methods_class")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand*
                                                       "ann_program"
                                                       "id")
                                                      (("2" (inst?) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (typepred "md!1")
                                          (("3"
                                            (expand "wf_Method")
                                            (("3"
                                              (flatten)
                                              (("3"
                                                (expand "method_pred")
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (inst? -5)
                                                    (("3"
                                                      (expand*
                                                       "wf_Body"
                                                       "subset?"
                                                       "member")
                                                      (("3"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((related_states_implies_same_exception formula-decl nil
     RelatedStatesProperties nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (Method type-eq-decl nil Program nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Body type-decl nil Body_adt nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil) (lift type-decl nil lift_adt nil)
    (Excpt type-decl nil Excpt_adt nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (no_exc const-decl "bool" WfSetStmts nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil)
    (program_method_pred const-decl "bool" ProgramRestriction nil)
    (ann_event_does_not_throw_exception formula-decl nil
     AnnEventPreservesMPModeled nil)
    (val adt-constructor-decl "[Expr -> (val?)]" ValOrExcpt_adt nil)
    (ann_event_preserves_MP_modeled formula-decl nil
     AnnEventPreservesMPModeled nil)
    (get_class_equivalence formula-decl nil AnnotateProgramProperties nil)
    (ann_class const-decl "Class" AnnotateClass nil)
    (check_for_exception_final const-decl "bool" SemanticsAuxiliaryFunctions
     nil)
    (MP_modeled_lookup_correspondence formula-decl nil RelatedStatesProperties
     nil)
    (is_finite const-decl "bool" finite_sets nil)
    (ann_event const-decl "Stmt" AnnotateEvent nil)
    (filter_event const-decl "finite_set[Transition]" AnnotateMethod nil)
    (Unit adt-constructor-decl "(Unit?)" Val_adt nil)
    (Unit? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (ann_event_wf_Body formula-decl nil AnnotateProgramProperties nil)
    (legal_Body_preserved_by_proper_subterm formula-decl nil
     LegalProgramRestriction nil)
    (b adt-accessor-decl "[(Bool?) -> bool]" Val_adt nil)
    (Val_Bool_extensionality formula-decl nil Val_adt nil)
    (derive_bottom_iff_exception_step formula-decl nil SemanticsProofs nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (legal_Program const-decl "bool" LegalProgramRestriction nil)
    (legal_Program_AP const-decl "boolean" LegalAnnotatedProgramRestriction
     nil)
    (ann_methods const-decl "finite_set[Method]" AnnotateMethod nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (method_pred const-decl "bool" FullProgramRestriction nil)
    (program_pred const-decl "bool" FullProgramRestriction nil)
    (related_states_preserved_by_raise formula-decl nil
     RelatedStatesProperties nil)
    (derive_after_raise formula-decl nil SemanticsProofs nil)
    (complete const-decl "boolean" MVAProperties nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (on_method_MVA_yields_wf_AState formula-decl nil MonitoredProgramSemantics
     nil)
    (check_for_exception const-decl "bool" SemanticsAuxiliaryFunctions nil)
    (Conj adt-constructor-decl "[[Expr, Expr] -> (Conj?)]" Body_adt nil)
    (Neg adt-constructor-decl "[Expr -> (Neg?)]" Body_adt nil)
    (Eq adt-constructor-decl "[[Expr, Expr] -> (Eq?)]" Body_adt nil)
    (NumVarEval adt-constructor-decl "[Name -> (NumVarEval?)]" Body_adt nil)
    (set type-eq-decl nil sets nil)
    (forbidden_names const-decl "set[Name]" VariableNames nil)
    (cp const-decl "{n: Name | NOT forbidden_names(mp)(n)}" VariableNames nil)
    (halted const-decl "Name" NewVariableDeclarations nil)
    (ValOrExcpt_val_extensionality formula-decl nil ValOrExcpt_adt nil)
    (get_monitored_class_in_classes formula-decl nil MonitoredProgram nil)
    (name_get_monitored_class formula-decl nil MonitoredProgram nil)
    (wf_program_has_unique_class_names_def const-decl "boolean"
     WellFormedProgram nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (m2!3 skolem-const-decl "nat" MethodCallsPreserveRelatedState nil)
    (m3!2 skolem-const-decl "nat" MethodCallsPreserveRelatedState nil)
    (on_method_MVA_yields_wf_state formula-decl nil MonitoredProgramSemantics
     nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (ExitNormal adt-constructor-decl "(ExitNormal?)" EventType_adt nil)
    (ExitNormal? adt-recognizer-decl "[EventType -> boolean]" EventType_adt
     nil)
    (complete_MVA_never_stuck_after_on_method_MVA formula-decl nil
     MonitoredProgramSemantics nil)
    (complete_MVA_never_stuck_after_derive formula-decl nil
     MonitoredProgramSemantics nil)
    (derive_yields_wf_state_MP formula-decl nil MonitoredProgramSemantics nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (raise const-decl "PState" State nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (mp!1 skolem-const-decl
     "({mp: MonitoredProgram | wf_and_complete_MP(mp) AND wf_set_stmts(mp)})"
     MethodCallsPreserveRelatedState nil)
    (inv!1 skolem-const-decl "(wf_Expr(id(ann_program(mp!1))))"
     MethodCallsPreserveRelatedState nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (m2!2 skolem-const-decl "nat" MethodCallsPreserveRelatedState nil)
    (md!1 skolem-const-decl "(wf_Method(program(mp!1)))"
     MethodCallsPreserveRelatedState nil)
    (v!1 skolem-const-decl "ValOrExcpt[Name]" MethodCallsPreserveRelatedState
     nil)
    (m3!1 skolem-const-decl "nat" MethodCallsPreserveRelatedState nil)
    (ann_program_preserves_wf_method formula-decl nil
     AnnotateProgramProperties nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (wf_Body_preserved_by_proper_subterm formula-decl nil WellFormedProgram
     nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (wf_state_raise formula-decl nil State nil)
    (wf_update_PState formula-decl nil AnnotatedProgramSemantics nil)
    (s2 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (ann_method_post formula-decl nil AnnotateMethod nil)
    (TRUE const-decl "bool" booleans nil)
    (Bool adt-constructor-decl "[bool -> (Bool?)]" Val_adt nil)
    (Bool? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Const adt-constructor-decl "[(defined?) -> (Const?)]" Body_adt nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (subterm adt-def-decl "boolean" Body_adt nil)
    (emptyset const-decl "set" sets nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (lookup_inv const-decl "Expr" ProgramFunctions nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (derive_yields_wf_state_AP formula-decl nil AnnotatedProgramSemantics nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (derive_never_leaves_halted formula-decl nil MonitoredProgramSemantics
     nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (related_states const-decl "boolean" Equivalence nil)
    (halted const-decl "CP" MVA nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (s1 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (update_PState const-decl "(update_PState_type)" AnnotatedProgramSemantics
     nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (ann_method const-decl "Method" AnnotateMethod nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (derive def-decl "bool" Semantics nil)
    (v adt-accessor-decl "[(val?) -> Expr[Name]]" ValOrExcpt_adt nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (ann_method_post_set formula-decl nil AnnotateMethod nil)
    (id_preserves application-judgement "S" identity_props nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (on_method_exit_normal const-decl "(on_method_event_type)" SemanticsJML
     nil))
   1168022 131950 t nil)
  (on_method_exit_normal_preserves_related_states_annotated-1 nil 3430839912
   3431168233
   ("" (skosimp*)
    (("" (expand* "on_method_exit_normal_MP" "on_method_exit_normal")
      (("" (assert)
        (("" (skosimp*)
          (("" (use "related_states_implies_same_exception")
            (("" (assert)
              (("" (skosimp*)
                (("" (use "ann_method_post_set")
                  (("" (flatten)
                    (("" (rewrite "derive" -22)
                      (("" (assert)
                        (("" (skosimp*)
                          (("" (replace -2 :hide? t)
                            (("" (use "get_class_in_classes")
                              (("" (assert)
                                (("" (copy -11)
                                  ((""
                                    (apply (repeat
                                            (inst? -12 :where (-14 -24))))
                                    (("" (assert)
                                      ((""
                                        (split -12)
                                        (("1"
                                          (case "cp(astate(tau1!2)) = halted")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "related_states" -2)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (case
                                                         "cp(astate(sMP2!1)) = halted")
                                                        (("1"
                                                          (case
                                                           "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                          (("1"
                                                            (case
                                                             "wf_state(ann_program(mp!1))(sAP2!1)")
                                                            (("1"
                                                              (expand
                                                               "derive"
                                                               -34)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (replace
                                                                   -34)
                                                                  (("1"
                                                                    (expand
                                                                     "check_assertion")
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (expand
                                                                         "derive"
                                                                         -43)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (replace
                                                                               -43)
                                                                              (("1"
                                                                                (case
                                                                                 "up?(ex(pstate(tau2!1))) AND down(ex(pstate(tau2!1))) = JMLExc")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "derive"
                                                                                     -50)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -50)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -53)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "related_states")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "raise")
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil)))))))))))))))))))))
                                                                                 ("2"
                                                                                  (replace
                                                                                   -46)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "update_PState")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "raise")
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil)))))))))))))))))))))))))))))
                                                             ("2"
                                                              (expand
                                                               "check_assertion")
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (lemma
                                                                   "derive_yields_wf_state_AP")
                                                                  (("2"
                                                                    (copy -1)
                                                                    (("2"
                                                                      (copy
                                                                       -1)
                                                                      (("2"
                                                                        (inst?
                                                                         -1
                                                                         :where
                                                                         -44)
                                                                        (("1"
                                                                          (rewrite
                                                                           "ann_method_post")
                                                                          (("1"
                                                                            (inst?
                                                                             -2
                                                                             :where
                                                                             -46)
                                                                            (("1"
                                                                              (inst?
                                                                               -3
                                                                               :where
                                                                               -39)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -47)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (apply
                                                                                                 (then
                                                                                                  (use
                                                                                                   "wf_update_PState"
                                                                                                   ("p"
                                                                                                    "ann_program(mp!1)"))
                                                                                                  (assert)
                                                                                                  (skosimp*)
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (use
                                                                                                   "wf_state_raise")
                                                                                                  (assert)))
                                                                                                nil)))))))))))
                                                                                     ("2"
                                                                                      (replace
                                                                                       -43)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (apply
                                                                                               (then
                                                                                                (use
                                                                                                 "wf_update_PState"
                                                                                                 ("p"
                                                                                                  "ann_program(mp!1)"))
                                                                                                (assert)
                                                                                                (skosimp*)
                                                                                                (expand
                                                                                                 "update_PState")
                                                                                                (use
                                                                                                 "wf_state_raise")
                                                                                                (assert)))
                                                                                              nil)))))))))))))))
                                                                               ("2"
                                                                                (use
                                                                                 "ann_program_preserves_wf_method")
                                                                                (("2"
                                                                                  (expand*
                                                                                   "wf_Method"
                                                                                   "method_pred")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (inst?
                                                                                         -5)
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_Body_preserved_by_proper_subterm"
                                                                                           ("b1"
                                                                                            "post_set(ann_method(mp!1)(md!1))(v(v!1))"
                                                                                            "b2"
                                                                                            "s2[Name](post_set(ann_method[CP, Name](mp!1)(md!1))(v(v!1)))"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "<<")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))))))))))
                                                                             ("2"
                                                                              (assert)
                                                                              nil)
                                                                             ("3"
                                                                              (use
                                                                               "ann_program_preserves_wf_method")
                                                                              (("3"
                                                                                (expand*
                                                                                 "wf_Method"
                                                                                 "method_pred")
                                                                                (("3"
                                                                                  (flatten)
                                                                                  (("3"
                                                                                    (inst
                                                                                     -2
                                                                                     "v(v!1)")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (rewrite
                                                                                         "ann_method_post")
                                                                                        nil)))))))))))))))
                                                                         ("2"
                                                                          (assert)
                                                                          nil)
                                                                         ("3"
                                                                          (typepred
                                                                           "ann_program(mp!1)")
                                                                          (("3"
                                                                            (expand
                                                                             "wf_Program")
                                                                            (("3"
                                                                              (flatten)
                                                                              (("3"
                                                                                (expand
                                                                                 "program_pred")
                                                                                (("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "lookup_inv")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "id")
                                                                                        (("3"
                                                                                          (lift-if)
                                                                                          (("3"
                                                                                            (apply
                                                                                             (branch
                                                                                              (split
                                                                                               -46)
                                                                                              ((then
                                                                                                (flatten)
                                                                                                (assert)
                                                                                                (flatten)
                                                                                                (assert)))))
                                                                                            (("1"
                                                                                              (inst
                                                                                               -7
                                                                                               "down(get_class(ann_program(mp!1))(a!1))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "get_class_in_classes")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil)))))))
                                                                                             ("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "wf_Body")
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "var_names"
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "emptyset")
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "subterm")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))))))))))))))))))))))))))))))))))))
                                                           ("2"
                                                            (expand
                                                             "check_assertion")
                                                            (("2"
                                                              (lemma
                                                               "derive_yields_wf_state_MP")
                                                              (("2"
                                                                (copy -1)
                                                                (("2"
                                                                  (lemma
                                                                   "complete_MVA_never_stuck_after_derive")
                                                                  (("2"
                                                                    (copy -1)
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (inst?
                                                                         -1
                                                                         :where
                                                                         -29)
                                                                        (("1"
                                                                          (inst?
                                                                           -3
                                                                           :where
                                                                           -29)
                                                                          (("1"
                                                                            (inst?
                                                                             -2
                                                                             :where
                                                                             -32)
                                                                            (("1"
                                                                              (inst?
                                                                               -4
                                                                               :where
                                                                               -32)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "mp!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "wf_and_complete_MP")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "wf_state(mp!1)(tau2!2)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "wf_state(mp!1)(tau3!1)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -36)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -31)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -38)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (apply
                                                                                                                   (then
                                                                                                                    (use
                                                                                                                     "wf_update_PState"
                                                                                                                     ("p"
                                                                                                                      "mp!1"))
                                                                                                                    (assert)
                                                                                                                    (skosimp*)
                                                                                                                    (expand
                                                                                                                     "update_PState")
                                                                                                                    (use
                                                                                                                     "wf_state_raise")
                                                                                                                    (assert)))
                                                                                                                  nil)))))))))
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "update_PState")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil)))))))))))))))))))
                                                                                             ("2"
                                                                                              (replace
                                                                                               -35)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (apply
                                                                                                           (then
                                                                                                            (use
                                                                                                             "wf_update_PState"
                                                                                                             ("p"
                                                                                                              "mp!1"))
                                                                                                            (assert)
                                                                                                            (skosimp*)
                                                                                                            (expand
                                                                                                             "update_PState")
                                                                                                            (use
                                                                                                             "wf_state_raise")
                                                                                                            (assert)))
                                                                                                          nil)))))))))))))))
                                                                                           ("2"
                                                                                            (replace
                                                                                             -30)
                                                                                            (("2"
                                                                                              (use
                                                                                               "on_method_MVA_yields_wf_state")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))
                                                                               ("2"
                                                                                (assert)
                                                                                nil)))
                                                                             ("2"
                                                                              (assert)
                                                                              nil)))
                                                                           ("2"
                                                                            (assert)
                                                                            nil)))
                                                                         ("2"
                                                                          (assert)
                                                                          nil)))))))))))))))))
                                                         ("2"
                                                          (expand
                                                           "check_assertion")
                                                          (("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (use
                                                               "on_method_MVA_never_leaves_halted")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (lemma
                                                                   "derive_never_leaves_halted")
                                                                  (("2"
                                                                    (copy -1)
                                                                    (("2"
                                                                      (inst?
                                                                       -1
                                                                       :where
                                                                       -27)
                                                                      (("2"
                                                                        (inst?
                                                                         -2
                                                                         :where
                                                                         -30)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (split
                                                                             -2)
                                                                            (("1"
                                                                              (replace
                                                                               -31)
                                                                              (("1"
                                                                                (expand
                                                                                 "update_PState")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)))))
                                                                             ("2"
                                                                              (replace
                                                                               -27)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (expand
                                                                                   "update_PState")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -20)
                                                                                      (("2"
                                                                                        (use
                                                                                         "on_method_MVA_never_leaves_halted")
                                                                                        (("2"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (propax)
                                                                                            nil)
                                                                                           ("3"
                                                                                            (typepred
                                                                                             "mp!1")
                                                                                            (("3"
                                                                                              (expand
                                                                                               "wf_and_complete_MP")
                                                                                              (("3"
                                                                                                (propax)
                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))))))))))
                                           ("2"
                                            (case "up?(ex(pstate(tau!1)))")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (typepred "mp!1")
                                                  (("1"
                                                    (expand "wf_set_stmts")
                                                    (("1"
                                                      (expand
                                                       "program_method_pred")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split -3)
                                                                (("1"
                                                                  (expand
                                                                   "wf_set_stmts")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst?
                                                                       -2)
                                                                      (("1"
                                                                        (expand
                                                                         "no_exc")
                                                                        (("1"
                                                                          (apply
                                                                           (repeat
                                                                            (inst?
                                                                             -2
                                                                             :where
                                                                             -22)))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "related_states_implies_same_exception")
                                                                              (("1"
                                                                                (assert)
                                                                                nil)))))))))))))))
                                                                 ("2"
                                                                  (replace
                                                                   -16
                                                                   :dir
                                                                   rl)
                                                                  (("2"
                                                                    (expand
                                                                     "lookup_mthd")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (apply
                                                                         (branch
                                                                          (split
                                                                           1)
                                                                          ((then
                                                                            (flatten)
                                                                            (assert)
                                                                            (flatten)
                                                                            (assert)))))
                                                                        nil)))))))))))))))))))))))))))
                                             ("2"
                                              (expand "ann_method" -26)
                                              (("2"
                                                (use
                                                 "ann_event_does_not_throw_exception")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (replace -1)
                                                      (("2"
                                                        (use
                                                         "ann_event_preserves_MP_modeled"
                                                         ("sMP2" "tau2!2"))
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (auto-rewrite
                                                               "id")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "lookup_inv")
                                                                  (("1"
                                                                    (use
                                                                     "get_class_equivalence")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "ann_class"
                                                                             -32)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -21
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (replace
                                                                                   -32
                                                                                   :hide?
                                                                                   t)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "check_assertion")
                                                                                    (("1"
                                                                                      (skosimp*)
                                                                                      (("1"
                                                                                        (case
                                                                                         "up?(ex(pstate(tau1!1)))")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil)
                                                                                         ("2"
                                                                                          (rewrite
                                                                                           "derive"
                                                                                           -37)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "derive"
                                                                                                 -38)
                                                                                                (("2"
                                                                                                  (skosimp*)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "derive"
                                                                                                     -39)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "derive"
                                                                                                         -40)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "derive"
                                                                                                               -43)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "check_for_exception_final")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "check_for_exception")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -48
                                                                                                                           :hide?
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -46
                                                                                                                               :hide?
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -45
                                                                                                                                   :hide?
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -42
                                                                                                                                     :hide?
                                                                                                                                     t)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -42
                                                                                                                                         :hide?
                                                                                                                                         t)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -40
                                                                                                                                           :hide?
                                                                                                                                           t)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "halted")
                                                                                                                                              (("2"
                                                                                                                                                (use
                                                                                                                                                 "MP_modeled_lookup_correspondence"
                                                                                                                                                 ("q1"
                                                                                                                                                  "cp(astate(tau2!2))"
                                                                                                                                                  "sMP"
                                                                                                                                                  "tau2!2"))
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (split
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1
                                                                                                                                                       :dir
                                                                                                                                                       rl
                                                                                                                                                       :hide?
                                                                                                                                                       t)
                                                                                                                                                      (("1"
                                                                                                                                                        (apply
                                                                                                                                                         (branch
                                                                                                                                                          (split
                                                                                                                                                           -43)
                                                                                                                                                          ((then
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)))))
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "related_states(mp!1)(tau2!2, tau!2)")
                                                                                                                                                          (("1"
                                                                                                                                                            (copy
                                                                                                                                                             -9)
                                                                                                                                                            (("1"
                                                                                                                                                              (apply
                                                                                                                                                               (repeat
                                                                                                                                                                (inst?
                                                                                                                                                                 -1
                                                                                                                                                                 :where
                                                                                                                                                                 (-3
                                                                                                                                                                  -27))))
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "cp(astate(tau1!3)) = halted")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "related_states"
                                                                                                                                                                         -2)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "cp(astate(sMP2!1)) = halted")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "wf_state(ann_program(mp!1))(sAP2!1)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "derive_after_raise"
                                                                                                                                                                                         ("sigma1"
                                                                                                                                                                                          "tau1!5"
                                                                                                                                                                                          "sigma2"
                                                                                                                                                                                          "tau1!6"))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -59)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "related_states")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "update_PState")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "raise")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                          nil)))))))))))))))))))
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "derive_yields_wf_state_AP")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst?
                                                                                                                                                                                           -1
                                                                                                                                                                                           :where
                                                                                                                                                                                           -57)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -58)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (apply
                                                                                                                                                                                                           (then
                                                                                                                                                                                                            (use
                                                                                                                                                                                                             "wf_update_PState"
                                                                                                                                                                                                             ("p"
                                                                                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "update_PState")
                                                                                                                                                                                                            (use
                                                                                                                                                                                                             "wf_state_raise")
                                                                                                                                                                                                            (assert)))
                                                                                                                                                                                                          nil)))))))
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -53)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (apply
                                                                                                                                                                                                       (then
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                          "ann_program(mp!1)"))
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                                        (assert)))
                                                                                                                                                                                                      nil)))))))))))
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "ann_program_preserves_wf_method")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "wf_Method"
                                                                                                                                                                                               "method_pred")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst?
                                                                                                                                                                                                   -2)
                                                                                                                                                                                                  nil)))))))))))))
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "derive_yields_wf_state_MP")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -1
                                                                                                                                                                                         :where
                                                                                                                                                                                         -37)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "complete_MVA_never_stuck_after_derive")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst?
                                                                                                                                                                                             -1
                                                                                                                                                                                             :where
                                                                                                                                                                                             -38)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (typepred
                                                                                                                                                                                                 "mp!1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "wf_and_complete_MP")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "wf_state(mp!1)(tau3!1)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -44)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (apply
                                                                                                                                                                                                                         (then
                                                                                                                                                                                                                          (use
                                                                                                                                                                                                                           "wf_update_PState"
                                                                                                                                                                                                                           ("p"
                                                                                                                                                                                                                            "mp!1"))
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                                          (use
                                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                                          (assert)))
                                                                                                                                                                                                                        nil)))))))))))
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (split
                                                                                                                                                                                                                 -7)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -44)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "update_PState")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil)))))))
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -42)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "update_PState")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil)))))))))))))))
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -40)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (split
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (skosimp*)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (apply
                                                                                                                                                                                                                     (then
                                                                                                                                                                                                                      (use
                                                                                                                                                                                                                       "wf_update_PState"
                                                                                                                                                                                                                       ("p"
                                                                                                                                                                                                                        "mp!1"))
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "update_PState")
                                                                                                                                                                                                                      (use
                                                                                                                                                                                                                       "wf_state_raise")
                                                                                                                                                                                                                      (assert)))
                                                                                                                                                                                                                    nil)))))))))))))))))))))))))))))))))
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "derive_never_leaves_halted")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst?
                                                                                                                                                                                       -1
                                                                                                                                                                                       :where
                                                                                                                                                                                       -36)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -37)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -33)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "update_PState")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil)))))))))))))))))))))))))))
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case
                                                                                                                                                                           "related_states(mp!1)(tau3!1, tau2!1)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "ann_method_post")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (apply
                                                                                                                                                                               (repeat
                                                                                                                                                                                (inst?
                                                                                                                                                                                 -12
                                                                                                                                                                                 :where
                                                                                                                                                                                 (-51
                                                                                                                                                                                  -32))))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (split
                                                                                                                                                                                   -12)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "cp(astate(tau1!4)) = halted")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "related_states")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -47)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (replace
                                                                                                                                                                                                     -65)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "update_PState"
                                                                                                                                                                                                       15
                                                                                                                                                                                                       3)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "update_PState"
                                                                                                                                                                                                         15
                                                                                                                                                                                                         3)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "update_PState"
                                                                                                                                                                                                           15
                                                                                                                                                                                                           3)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "raise"
                                                                                                                                                                                                             15
                                                                                                                                                                                                             3)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "raise"
                                                                                                                                                                                                               15
                                                                                                                                                                                                               3)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                   15)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (apply
                                                                                                                                                                                                                       (then
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                                          "mp!1"))
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                                                        (assert)))
                                                                                                                                                                                                                      nil)))
                                                                                                                                                                                                                   ("3"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("4"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    (("4"
                                                                                                                                                                                                                      (apply
                                                                                                                                                                                                                       (then
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                                          "ann_program(mp!1)"))
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                                        (use
                                                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                                                        (assert)))
                                                                                                                                                                                                                      nil)))
                                                                                                                                                                                                                   ("5"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("5"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil)))
                                                                                                                                                                                                                   ("6"
                                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                                    (("6"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("6"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                                        (("6"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil)))))))))))))))))))))))))))))))))))
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -53)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -34)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   10)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -2)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (split
                                                                                                                                                                                                           2)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil)))
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (use
                                                                                                                                                                                                               "related_states_preserved_by_raise")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil)))))))))))))))))))))))))))))
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand*
                                                                                                                                                                                     "legal_Program_AP"
                                                                                                                                                                                     "legal_Program")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "program_pred")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -16
                                                                                                                                                                                         "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (split
                                                                                                                                                                                             -16)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "method_pred")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -2
                                                                                                                                                                                                   "ann_method(mp!1)(md!1)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (split
                                                                                                                                                                                                       -2)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -2
                                                                                                                                                                                                           "v(v!1)")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                             "ann_method_post")
                                                                                                                                                                                                            nil)))))
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "ann_class")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "ann_methods")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (use
                                                                                                                                                                                                                   "lookup_mthd_in_methods_class")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil)))))))))))))))))))))))
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "ann_program")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst?)
                                                                                                                                                                                                nil)))))))))))))
                                                                                                                                                                                   ("3"
                                                                                                                                                                                    (typepred
                                                                                                                                                                                     "md!1")
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "wf_Method")
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "method_pred")
                                                                                                                                                                                        (("3"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (inst?
                                                                                                                                                                                             -2)
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "wf_Body"
                                                                                                                                                                                               "subset?"
                                                                                                                                                                                               "member")
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                nil)))))))))))))))))))))
                                                                                                                                                                           ("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -29)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -48)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (case-replace
                                                                                                                                                                                 "v!6 = v!4")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "related_states_preserved_by_raise")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil)))))))))))
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   -5)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (use
                                                                                                                                                                                       "related_states_implies_same_exception"
                                                                                                                                                                                       ("sMP"
                                                                                                                                                                                        "tau1!3"
                                                                                                                                                                                        "sAP"
                                                                                                                                                                                        "tau1!5"))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -1
                                                                                                                                                                                           :dir
                                                                                                                                                                                           rl)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "derive_bottom_iff_exception_step"
                                                                                                                                                                                             ("p"
                                                                                                                                                                                              "mp!1"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst?
                                                                                                                                                                                               -1
                                                                                                                                                                                               :where
                                                                                                                                                                                               -31)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil)))))))))))))
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -4)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -2)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (apply-extensionality
                                                                                                                                                                                             :hide?
                                                                                                                                                                                             t)
                                                                                                                                                                                            nil)))))))))))))))))))))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand*
                                                                                                                                                                     "legal_Program_AP"
                                                                                                                                                                     "legal_Program")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "program_pred")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -14
                                                                                                                                                                         "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             -14)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "method_pred")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "ann_class")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "legal_Body_preserved_by_proper_subterm")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst?
                                                                                                                                                                                       -1
                                                                                                                                                                                       :where
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -1
                                                                                                                                                                                         :where
                                                                                                                                                                                         -2)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "<<")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil)))))))))))))))))
                                                                                                                                                                             ("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "ann_program")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                nil)))))))))))))
                                                                                                                                                                   ("3"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "program(mp!1)")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (expand*
                                                                                                                                                                       "wf_Program"
                                                                                                                                                                       "program_pred")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("3"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -30
                                                                                                                                                                                 :dir
                                                                                                                                                                                 rl)
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (expand*
                                                                                                                                                                                   "wf_Body"
                                                                                                                                                                                   "subset?"
                                                                                                                                                                                   "member")
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    nil)))))))))))))))))))))))))
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "related_states")
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (split
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (use
                                                                                                                                                                   "on_method_MVA_yields_wf_state")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil)))
                                                                                                                                                                 ("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "derive_yields_wf_state_AP")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst?
                                                                                                                                                                     -1
                                                                                                                                                                     :where
                                                                                                                                                                     -41)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (use
                                                                                                                                                                       "ann_event_wf_Body")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand*
                                                                                                                                                                           "subset?"
                                                                                                                                                                           "member"
                                                                                                                                                                           "filter_event")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            nil)))))))))))
                                                                                                                                                                 ("3"
                                                                                                                                                                  (replace
                                                                                                                                                                   -27)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (use
                                                                                                                                                                     "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("3"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "mp!1")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (expand
                                                                                                                                                                           "wf_and_complete_MP")
                                                                                                                                                                          (("3"
                                                                                                                                                                            (propax)
                                                                                                                                                                            nil)))))))))))))))))))
                                                                                                                                                         ("2"
                                                                                                                                                          (case
                                                                                                                                                           "related_states(mp!1)(tau3!1, tau2!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "ann_method_post")
                                                                                                                                                            (("1"
                                                                                                                                                              (apply
                                                                                                                                                               (repeat
                                                                                                                                                                (inst?
                                                                                                                                                                 -11
                                                                                                                                                                 :where
                                                                                                                                                                 (-31
                                                                                                                                                                  -50))))
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -11)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "cp(astate(tau1!4)) = halted")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "related_states")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -43)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -61)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "update_PState"
                                                                                                                                                                                       11
                                                                                                                                                                                       3)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "update_PState"
                                                                                                                                                                                         11
                                                                                                                                                                                         3)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "update_PState"
                                                                                                                                                                                           11
                                                                                                                                                                                           3)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "update_PState"
                                                                                                                                                                                             11
                                                                                                                                                                                             3)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "raise"
                                                                                                                                                                                               11
                                                                                                                                                                                               3)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "raise"
                                                                                                                                                                                                 11
                                                                                                                                                                                                 3)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     11)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (apply
                                                                                                                                                                                                         (then
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_update_PState"
                                                                                                                                                                                                           ("p"
                                                                                                                                                                                                            "mp!1"))
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                          (assert)))
                                                                                                                                                                                                        nil)))
                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("4"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                        (apply
                                                                                                                                                                                                         (then
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_update_PState"
                                                                                                                                                                                                           ("p"
                                                                                                                                                                                                            "ann_program(mp!1)"))
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                          (assert)))
                                                                                                                                                                                                        nil)))
                                                                                                                                                                                                     ("5"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("5"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil)))
                                                                                                                                                                                                     ("6"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("6"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil)))))))))))))))))))))))))))))))))
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -52)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -33)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (split
                                                                                                                                                                                   8)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -2)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (split
                                                                                                                                                                                           2)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil)))
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (skosimp*)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "related_states_preserved_by_raise")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil)))))))))))))))))))))))))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand*
                                                                                                                                                                     "legal_Program_AP"
                                                                                                                                                                     "legal_Program")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "program_pred")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -15
                                                                                                                                                                         "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             -15)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "method_pred")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -2
                                                                                                                                                                                   "ann_method(mp!1)(md!1)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (split
                                                                                                                                                                                       -2)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -2
                                                                                                                                                                                           "v(v!1)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "ann_method_post")
                                                                                                                                                                                            nil)))))
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "ann_class")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "ann_methods")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst?)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "lookup_mthd_in_methods_class")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil)))))))))))))))))))))))
                                                                                                                                                                             ("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "ann_program")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                nil)))))))))))))
                                                                                                                                                                   ("3"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "md!1")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (expand
                                                                                                                                                                       "wf_Method")
                                                                                                                                                                      (("3"
                                                                                                                                                                        (expand
                                                                                                                                                                         "method_pred")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (inst?
                                                                                                                                                                             -2)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (expand*
                                                                                                                                                                               "wf_Body"
                                                                                                                                                                               "subset?"
                                                                                                                                                                               "member")
                                                                                                                                                                              (("3"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                nil)))))))))))))))))))))
                                                                                                                                                           ("2"
                                                                                                                                                            (case
                                                                                                                                                             "cp(astate(tau3!1)) = halted")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -3)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -48)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "related_states")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "update_PState"
                                                                                                                                                                         1
                                                                                                                                                                         3)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "update_PState"
                                                                                                                                                                           1
                                                                                                                                                                           2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "raise"
                                                                                                                                                                             1
                                                                                                                                                                             2)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "raise"
                                                                                                                                                                               1
                                                                                                                                                                               2)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (case
                                                                                                                                                                                 "wf_state(mp!1)(tau3!1)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (split
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "derive_yields_wf_state_AP")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -1
                                                                                                                                                                                         :where
                                                                                                                                                                                         -45)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "wf_update_PState"
                                                                                                                                                                                             ("p"
                                                                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "update_PState")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (use
                                                                                                                                                                                                     "wf_state_raise")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil)))))))))))))
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "ann_event_wf_Body")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "subset?")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "member")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "filter_event")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                    nil)))))))))))))))))
                                                                                                                                                                                   ("3"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (use
                                                                                                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                        (("3"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "mp!1")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "wf_and_complete_MP")
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("3"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "complete_MVA_never_stuck_after_derive")
                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                      (inst?
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       :where
                                                                                                                                                                                                       -39)
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "on_method_MVA_yields_wf_state")
                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -40)
                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "update_PState")
                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil)))))))))))))))))))))))))))))))))))
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "derive_yields_wf_state_MP")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst?
                                                                                                                                                                                       -1
                                                                                                                                                                                       :where
                                                                                                                                                                                       -33)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -34)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (apply
                                                                                                                                                                                                       (then
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_update_PState"
                                                                                                                                                                                                         ("p"
                                                                                                                                                                                                          "mp!1"))
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                        (use
                                                                                                                                                                                                         "wf_state_raise")
                                                                                                                                                                                                        (assert)))
                                                                                                                                                                                                      nil)))))))))))
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -29)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (use
                                                                                                                                                                                               "on_method_MVA_yields_wf_state")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil)))))
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "mp!1")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "wf_and_complete_MP")
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                nil)))))))))))))))))))))))))))))))))))
                                                                                                                                                             ("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "derive_never_leaves_halted")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst?
                                                                                                                                                                 -1
                                                                                                                                                                 :where
                                                                                                                                                                 -28)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -29)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "update_PState")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil)))))))))))))))))))))
                                                                                                                                                     ("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "mp!1")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "wf_and_complete_MP")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "complete")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil)))))))
                                                                                                                                                     ("3"
                                                                                                                                                      (use
                                                                                                                                                       "on_method_MVA_yields_wf_AState")
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        (("3"
                                                                                                                                                          (expand
                                                                                                                                                           "related_states")
                                                                                                                                                          (("3"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              (("3"
                                                                                                                                                                (expand
                                                                                                                                                                 "wf_AState")
                                                                                                                                                                (("3"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil)))))))))))))
                                                                                                                                                     ("4"
                                                                                                                                                      (lemma
                                                                                                                                                       "derive_yields_wf_state_AP")
                                                                                                                                                      (("4"
                                                                                                                                                        (inst?
                                                                                                                                                         -1
                                                                                                                                                         :where
                                                                                                                                                         -35)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "related_states")
                                                                                                                                                            (("1"
                                                                                                                                                              (propax)
                                                                                                                                                              nil)))))
                                                                                                                                                         ("2"
                                                                                                                                                          (use
                                                                                                                                                           "ann_event_wf_Body")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand*
                                                                                                                                                               "subset?"
                                                                                                                                                               "member"
                                                                                                                                                               "filter_event")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp*)
                                                                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                             ("2"
                                                              (replace -18)
                                                              (("2"
                                                                (case-replace
                                                                 "val(v(v!1)) = v!1")
                                                                (("2"
                                                                  (apply-extensionality
                                                                   :hide?
                                                                   t)
                                                                  nil)))))
                                                             ("3"
                                                              (case-replace
                                                               "get_monitored_class(mp!1) = down(get_class(program(mp!1))(a!1))")
                                                              (("1"
                                                                (use
                                                                 "lookup_mthd_in_methods_class")
                                                                (("1"
                                                                  (assert)
                                                                  nil)))
                                                               ("2"
                                                                (typepred
                                                                 "program(mp!1)")
                                                                (("2"
                                                                  (expand*
                                                                   "wf_Program"
                                                                   "wf_program_has_unique_class_names_def")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (split
                                                                           -3)
                                                                          (("1"
                                                                            (rewrite
                                                                             "name_get_monitored_class")
                                                                            (("1"
                                                                              (assert)
                                                                              nil)))
                                                                           ("2"
                                                                            (use
                                                                             "get_monitored_class_in_classes")
                                                                            nil)))))))))))))))))))))))))))))))))))
                                         ("2"
                                          (expand*
                                           "legal_Program_AP"
                                           "legal_Program")
                                          (("2"
                                            (expand "program_pred")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (inst
                                                 -6
                                                 "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (split -6)
                                                    (("1"
                                                      (expand "method_pred")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (inst
                                                           -2
                                                           "ann_method(mp!1)(md!1)")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (split -2)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst
                                                                   -5
                                                                   "v(v!1)")
                                                                  (("1"
                                                                    (use
                                                                     "ann_method_post_set")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (replace
                                                                         -2
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (lemma
                                                                           "legal_Body_preserved_by_proper_subterm")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "ann_program(mp!1)"
                                                                             "post_set(ann_method(mp!1)(md!1))(v(v!1))"
                                                                             "s1(post_set(ann_method(mp!1)(md!1))(v(v!1)))")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "<<")
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil)))))))))))))))))))
                                                               ("2"
                                                                (expand
                                                                 "ann_class")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "ann_methods")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (use
                                                                           "lookup_mthd_in_methods_class")
                                                                          (("2"
                                                                            (assert)
                                                                            nil)))))))))))))))))))))))
                                                     ("2"
                                                      (expand*
                                                       "ann_program"
                                                       "id")
                                                      (("2"
                                                        (inst?)
                                                        nil)))))))))))))))
                                         ("3"
                                          (typepred "md!1")
                                          (("3"
                                            (expand "wf_Method")
                                            (("3"
                                              (expand "method_pred")
                                              (("3"
                                                (flatten)
                                                (("3"
                                                  (inst? -5)
                                                  (("3"
                                                    (expand*
                                                     "wf_Body"
                                                     "subset?"
                                                     "member")
                                                    (("3"
                                                      (flatten)
                                                      nil))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   unfinished nil 120991 113820 nil nil))
 (on_method_exit_normal_preserves_related_states_halted_reached 0
  (on_method_exit_normal_preserves_related_states_halted_reached-1 nil
   3430839949 3433217253
   ("" (skosimp*)
    (("" (expand* "on_method_exit_normal" "on_method_exit_normal_MP")
      ((""
        (apply (branch (split -2)
                ((then (flatten) (assert) (flatten) (assert)))))
        (("" (skosimp*)
          (("" (expand "check_assertion")
            (("" (skosimp*)
              (("" (use "derive_never_leaves_halted")
                (("" (assert)
                  (("" (hide -4)
                    (("" (use "derive_never_leaves_halted")
                      (("" (assert)
                        (("" (hide -9)
                          (("" (use "derive_never_leaves_halted")
                            (("" (assert)
                              (("" (replace -13 2)
                                (("" (replace -10 -1)
                                  (("" (lift-if)
                                    (("" (expand "update_PState")
                                      ((""
                                        (assert)
                                        ((""
                                          (replace -5)
                                          ((""
                                            (use
                                             "on_method_MVA_never_leaves_halted")
                                            ((""
                                              (assert)
                                              ((""
                                                (typepred "mp!1")
                                                ((""
                                                  (expand
                                                   "wf_and_complete_MP")
                                                  ((""
                                                    (propax)
                                                    nil))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   proved
   ((on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (ExitNormal adt-constructor-decl "(ExitNormal?)" EventType_adt nil)
    (ExitNormal? adt-recognizer-decl "[EventType -> boolean]" EventType_adt
     nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (v adt-accessor-decl "[(val?) -> Expr[Name]]" ValOrExcpt_adt nil)
    (derive_never_leaves_halted formula-decl nil MonitoredProgramSemantics
     nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   4585 4390 nil nil))
 (on_method_exit_normal_preserves_related_states_not_annotated_TCC1 0
  (on_method_exit_normal_preserves_related_states_not_annotated_TCC1-2 nil
   3430840030 3433217259
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "md!1")
        (("" (expand "wf_Method")
          (("" (expand "method_pred")
            (("" (expand "wf_Body")
              (("" (rewrite "ann_program_ext_declared_var_names")
                (("" (auto-rewrite "union" "member")
                  (("" (assert)
                    (("" (flatten)
                      (("" (rewrite "ann_program_add_ghost_var_decls")
                        (("" (rewrite "var_names_union")
                          (("" (assert)
                            (("" (split 4)
                              (("1"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst?)
                                  (("1" (flatten)
                                    (("1" (inst?) (("1" (assert) nil)))))))
                                 ("2" (inst?)
                                  (("2" (flatten)
                                    (("2" (inst? -4)
                                      (("2" (assert) nil)))))))))
                               ("2"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -3)
                                  (("1" (flatten)
                                    (("1" (inst? -3) (("1" (assert) nil)))))))
                                 ("2" (inst? -4)
                                  (("2" (flatten)
                                    (("2" (inst? -5)
                                      (("2" (assert) nil)))))))))
                               ("3" (skosimp*)
                                (("3" (inst? -4) (("3" (assert) nil)))))
                               ("4" (skosimp*)
                                (("4" (inst? -6) (("4" (assert) nil)))))
                               ("5"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -6)
                                  (("1" (flatten)
                                    (("1" (inst? -6) (("1" (assert) nil)))))))
                                 ("2" (inst? -7)
                                  (("2" (flatten)
                                    (("2" (inst? -8)
                                      (("2" (assert) nil)))))))))
                               ("6"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -7)
                                  (("1" (flatten)
                                    (("1" (inst? -7) (("1" (assert) nil)))))))
                                 ("2" (inst? -8)
                                  (("2" (flatten)
                                    (("2" (inst? -9)
                                      (("2" (assert) nil)))))))))
                               ("7"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -8)
                                  (("1" (flatten)
                                    (("1" (inst? -8) (("1" (assert) nil)))))))
                                 ("2" (inst? -9)
                                  (("2" (flatten)
                                    (("2" (inst? -10)
                                      (("2" (assert) nil)))))))))
                               ("8" (skosimp*)
                                (("8" (inst? -9) (("8" (assert) nil)))))
                               ("9" (skosimp*)
                                (("9" (inst? -11)
                                  (("9" (assert)
                                    nil))))))))))))))))))))))))))))))))
    nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (new_gvds const-decl "finite_set[Decl]" NewVariableDeclarations nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (var_names_union formula-decl nil ProgramFunctions nil)
    (ann_program_add_ghost_var_decls formula-decl nil
     AnnotateProgramProperties nil)
    (union const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (ann_program_ext_declared_var_names formula-decl nil
     AnnotateProgramProperties nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil))
   6280 4400 nil nil)
  (on_method_exit_normal_preserves_related_states_not_annotated_TCC1-1 nil
   3430821302 nil ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (on_method_exit_normal_preserves_related_states_not_annotated 0
  (on_method_exit_normal_preserves_related_states_not_annotated-2 nil
   3431170289 3433217307
   ("" (skosimp*)
    (("" (expand "on_method_exit_normal_MP")
      (("" (expand "on_method_exit_normal")
        ((""
          (apply (then (use "related_states_implies_same_exception") (assert)
                  (replace -1)))
          (("" (skosimp*)
            (("" (expand "check_assertion")
              (("" (flatten)
                (("" (expand "lookup_inv")
                  (("" (expand "id")
                    (("" (use "get_class_equivalence")
                      (("" (assert)
                        (("" (replace -1)
                          (("" (replace -14 :dir rl)
                            (("" (replace -24)
                              (("" (skosimp*)
                                (("" (copy -8)
                                  ((""
                                    (apply (repeat
                                            (inst? -1 :where (-12 -25))))
                                    (("" (assert)
                                      ((""
                                        (split -1)
                                        (("1"
                                          (case "cp(astate(tau1!1)) = halted")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (use
                                               "on_method_MVA_never_leaves_halted")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "related_states" -3)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (use
                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (typepred "mp!1")
                                                            (("1"
                                                              (expand
                                                               "wf_and_complete_MP")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (use
                                                                     "on_method_MVA_yields_wf_state")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "derive_never_leaves_halted")
                                                                        (("1"
                                                                          (copy
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "derive_yields_wf_state_MP")
                                                                            (("1"
                                                                              (copy
                                                                               -1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "complete_MVA_never_stuck_after_derive")
                                                                                (("1"
                                                                                  (copy
                                                                                   -1)
                                                                                  (("1"
                                                                                    (inst?
                                                                                     -1
                                                                                     :where
                                                                                     -34)
                                                                                    (("1"
                                                                                      (inst?
                                                                                       -3
                                                                                       :where
                                                                                       -34)
                                                                                      (("1"
                                                                                        (inst?
                                                                                         -5
                                                                                         :where
                                                                                         -34)
                                                                                        (("1"
                                                                                          (inst?
                                                                                           -2
                                                                                           :where
                                                                                           -37)
                                                                                          (("1"
                                                                                            (inst?
                                                                                             -4
                                                                                             :where
                                                                                             -37)
                                                                                            (("1"
                                                                                              (inst?
                                                                                               -6
                                                                                               :where
                                                                                               -37)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "cp(astate(sMP2!1)) = halted")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "derive_yields_wf_state_AP")
                                                                                                      (("1"
                                                                                                        (copy
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           -1
                                                                                                           :where
                                                                                                           -49)
                                                                                                          (("1"
                                                                                                            (inst?
                                                                                                             -2
                                                                                                             :where
                                                                                                             -52)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "derive"
                                                                                                                 -49)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "up?(ex(pstate(tau1!5))) AND down(ex(pstate(tau1!5))) = JMLExc")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "derive_after_raise"
                                                                                                                           ("sigma1"
                                                                                                                            "tau1!5"
                                                                                                                            "sigma2"
                                                                                                                            "tau1!6"))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "related_states")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -58)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "update_PState"
                                                                                                                                         8
                                                                                                                                         2)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "update_PState"
                                                                                                                                           8
                                                                                                                                           2)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "raise"
                                                                                                                                             8
                                                                                                                                             2)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "raise"
                                                                                                                                               8
                                                                                                                                               2)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -52)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -55)
                                                                                                                                                  (("1"
                                                                                                                                                    (use
                                                                                                                                                     "wf_update_PState"
                                                                                                                                                     ("p"
                                                                                                                                                      "ann_program(mp!1)"
                                                                                                                                                      "s1"
                                                                                                                                                      "update_PState(tau1!5, raise(JMLExc))"))
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "wf_state(ann_program(mp!1))(update_PState(tau1!5, raise(JMLExc)))")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp*)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "update_PState"
                                                                                                                                                               1
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (use
                                                                                                                                                                 "wf_state_raise")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (apply
                                                                                                                                                           (then
                                                                                                                                                            (use
                                                                                                                                                             "wf_update_PState"
                                                                                                                                                             ("p"
                                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                                            (assert)
                                                                                                                                                            (skosimp*)
                                                                                                                                                            (expand
                                                                                                                                                             "update_PState")
                                                                                                                                                            (use
                                                                                                                                                             "wf_state_raise")
                                                                                                                                                            (assert)))
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "md!1")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "wf_Method")
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "method_pred")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (inst?
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (expand*
                                                                                                                           "wf_Body"
                                                                                                                           "subset?"
                                                                                                                           "member")
                                                                                                                          (("2"
                                                                                                                            (auto-rewrite
                                                                                                                             "union"
                                                                                                                             "member")
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (skosimp*)
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "ann_program_ext_declared_var_names")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (inst?
                                                                                                                                         -3)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "ann_program_add_ghost_var_decls")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "var_names_union")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (inst?
                                                                                                                                             -5)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "program(mp!1)")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "wf_Program")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -6)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "program_pred")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (use
                                                                                                                         "get_class_in_classes")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -34)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "wf_Body")
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (auto-rewrite
                                                                                                                                       "union"
                                                                                                                                       "member")
                                                                                                                                      (("2"
                                                                                                                                        (split
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "ann_program_ext_declared_var_names")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (inst?
                                                                                                                                                   -7)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("2"
                                                                                                                                            (rewrite
                                                                                                                                             "ann_program_add_ghost_var_decls")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (rewrite
                                                                                                                                                 "var_names_union")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst?
                                                                                                                                                       -9)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (case
                                                                                                       "wf_state(mp!1)(tau3!1)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -39)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (apply
                                                                                                                       (then
                                                                                                                        (use
                                                                                                                         "wf_update_PState"
                                                                                                                         ("p"
                                                                                                                          "mp!1"))
                                                                                                                        (assert)
                                                                                                                        (skosimp*)
                                                                                                                        (expand
                                                                                                                         "update_PState")
                                                                                                                        (use
                                                                                                                         "wf_state_raise")
                                                                                                                        (assert)))
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replace
                                                                                                             -40)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -36)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (replace
                                                                                                         -35)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (apply
                                                                                                                   (then
                                                                                                                    (use
                                                                                                                     "wf_update_PState"
                                                                                                                     ("p"
                                                                                                                      "mp!1"))
                                                                                                                    (assert)
                                                                                                                    (skosimp*)
                                                                                                                    (expand
                                                                                                                     "update_PState")
                                                                                                                    (use
                                                                                                                     "wf_state_raise")
                                                                                                                    (assert)))
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -37)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_PState")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -32)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "on_method_MVA")
                                            (("2"
                                              (lift-if -14)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split -14)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (use
                                                       "lookup_mthd_in_methods_class")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (typepred
                                                           "program(mp!1)")
                                                          (("1"
                                                            (use
                                                             "wf_program_methods_only_in_one_class")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "wf_program_methods_only_in_one_class")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "get_monitored_class(mp!1)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (use
                                                                         "get_class_in_classes")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (use
                                                                             "get_monitored_class_in_classes")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -3
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (use
                                                                                   "name_get_monitored_class")
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case-replace
                                                         "tau2!1 = tau1!1"
                                                         :hide?
                                                         t)
                                                        (("2"
                                                          (copy -10)
                                                          (("2"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -1
                                                               :where
                                                               (-18 -30))))
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (split -1)
                                                                (("1"
                                                                  (case
                                                                   "cp(astate(tau1!3)) = halted")
                                                                  (("1"
                                                                    (lemma
                                                                     "derive_never_leaves_halted")
                                                                    (("1"
                                                                      (lemma
                                                                       "derive_yields_wf_state_MP")
                                                                      (("1"
                                                                        (lemma
                                                                         "complete_MVA_never_stuck_after_derive")
                                                                        (("1"
                                                                          (inst?
                                                                           -1
                                                                           :where
                                                                           -25)
                                                                          (("1"
                                                                            (inst?
                                                                             -2
                                                                             :where
                                                                             -25)
                                                                            (("1"
                                                                              (inst?
                                                                               -3
                                                                               :where
                                                                               -25)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "derive_yields_wf_state_AP")
                                                                                  (("1"
                                                                                    (inst?
                                                                                     -1
                                                                                     :where
                                                                                     -38)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "cp(astate(sMP2!1)) = halted")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "related_states"
                                                                                             -7)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "up?(ex(pstate(tau2!2))) AND down(ex(pstate(tau2!2))) = JMLExc")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "derive"
                                                                                                       -44)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "related_states")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "mp!1")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "wf_and_complete_MP")
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           9)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -41)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -10)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("2"
                                                                                                                                        (apply
                                                                                                                                         (then
                                                                                                                                          (use
                                                                                                                                           "wf_update_PState"
                                                                                                                                           ("p"
                                                                                                                                            "mp!1"))
                                                                                                                                          (assert)
                                                                                                                                          (skosimp*)
                                                                                                                                          (expand
                                                                                                                                           "update_PState")
                                                                                                                                          (use
                                                                                                                                           "wf_state_raise")
                                                                                                                                          (assert)))
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (replace
                                                                                                                                 -37)
                                                                                                                                (("2"
                                                                                                                                  (lift-if)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (apply
                                                                                                                                           (then
                                                                                                                                            (use
                                                                                                                                             "wf_update_PState"
                                                                                                                                             ("p"
                                                                                                                                              "mp!1"))
                                                                                                                                            (assert)
                                                                                                                                            (skosimp*)
                                                                                                                                            (expand
                                                                                                                                             "update_PState")
                                                                                                                                            (use
                                                                                                                                             "wf_state_raise")
                                                                                                                                            (assert)))
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (split
                                                                                                                             -8)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -55)
                                                                                                                                (("1"
                                                                                                                                  (apply
                                                                                                                                   (then
                                                                                                                                    (use
                                                                                                                                     "wf_update_PState"
                                                                                                                                     ("p"
                                                                                                                                      "ann_program(mp!1)"))
                                                                                                                                    (assert)
                                                                                                                                    (skosimp*)
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (use
                                                                                                                                     "wf_state_raise")
                                                                                                                                    (assert)))
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -49)
                                                                                                                                (("2"
                                                                                                                                  (lift-if)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (apply
                                                                                                                                           (then
                                                                                                                                            (use
                                                                                                                                             "wf_update_PState"
                                                                                                                                             ("p"
                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                            (assert)
                                                                                                                                            (skosimp*)
                                                                                                                                            (expand
                                                                                                                                             "update_PState")
                                                                                                                                            (use
                                                                                                                                             "wf_state_raise")
                                                                                                                                            (assert)))
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (replace
                                                                                                                             -42)
                                                                                                                            (("3"
                                                                                                                              (expand
                                                                                                                               "update_PState"
                                                                                                                               -1)
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                (("3"
                                                                                                                                  (split
                                                                                                                                   -10)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -38)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (split
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (skosimp*)
                                                                                                                                            (("2"
                                                                                                                                              (apply
                                                                                                                                               (then
                                                                                                                                                (use
                                                                                                                                                 "wf_update_PState"
                                                                                                                                                 ("p"
                                                                                                                                                  "mp!1"))
                                                                                                                                                (assert)
                                                                                                                                                (skosimp*)
                                                                                                                                                (expand
                                                                                                                                                 "update_PState")
                                                                                                                                                (use
                                                                                                                                                 "wf_state_raise")
                                                                                                                                                (assert)))
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (replace
                                                                                                                                     -39)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "update_PState")
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("4"
                                                                                                                            (replace
                                                                                                                             -55)
                                                                                                                            (("4"
                                                                                                                              (expand
                                                                                                                               "update_PState")
                                                                                                                              (("4"
                                                                                                                                (expand
                                                                                                                                 "raise")
                                                                                                                                (("4"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("5"
                                                                                                                            (replace
                                                                                                                             -55)
                                                                                                                            (("5"
                                                                                                                              (expand
                                                                                                                               "update_PState")
                                                                                                                              (("5"
                                                                                                                                (expand
                                                                                                                                 "raise")
                                                                                                                                (("5"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -40)
                                                                                                    (("2"
                                                                                                      (expand*
                                                                                                       "update_PState"
                                                                                                       "raise")
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           -27)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "update_PState")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -23)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "md!1")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "wf_Method")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "method_pred")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (expand*
                                                                                                   "wf_Body"
                                                                                                   "subset?"
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (auto-rewrite
                                                                                                     "union"
                                                                                                     "member")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "ann_program_ext_declared_var_names")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (inst?
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "ann_program_add_ghost_var_decls")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "var_names_union")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (inst?
                                                                                                                     -5)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (case
                                                                       "related_states(mp!1)(tau3!1, tau2!2)")
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -13
                                                                           :where
                                                                           (-23
                                                                            -35))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             -13)
                                                                            (("1"
                                                                              (case
                                                                               "cp(astate(tau1!4)) = halted")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand
                                                                                   "related_states"
                                                                                   -2)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -29)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -40)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "related_states")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "update_PState"
                                                                                                     8
                                                                                                     3)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "update_PState"
                                                                                                       8
                                                                                                       3)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "update_PState"
                                                                                                         8
                                                                                                         3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "raise"
                                                                                                           8
                                                                                                           3)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             8)
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (apply
                                                                                                                 (then
                                                                                                                  (use
                                                                                                                   "wf_update_PState"
                                                                                                                   ("p"
                                                                                                                    "mp!1"))
                                                                                                                  (assert)
                                                                                                                  (skosimp*)
                                                                                                                  (expand
                                                                                                                   "update_PState")
                                                                                                                  (use
                                                                                                                   "wf_state_raise")
                                                                                                                  (assert)))
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("4"
                                                                                                              (skosimp*)
                                                                                                              (("4"
                                                                                                                (apply
                                                                                                                 (then
                                                                                                                  (use
                                                                                                                   "wf_update_PState"
                                                                                                                   ("p"
                                                                                                                    "ann_program(mp!1)"))
                                                                                                                  (assert)
                                                                                                                  (skosimp*)
                                                                                                                  (expand
                                                                                                                   "update_PState")
                                                                                                                  (use
                                                                                                                   "wf_state_raise")
                                                                                                                  (assert)))
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("5"
                                                                                                              (lift-if)
                                                                                                              (("5"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("6"
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (("6"
                                                                                                                (expand
                                                                                                                 "raise")
                                                                                                                (("6"
                                                                                                                  (lift-if)
                                                                                                                  (("6"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -24)
                                                                                (("2"
                                                                                  (replace
                                                                                   -36)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             8)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     2)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "related_states_preserved_by_raise")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand*
                                                                               "legal_Program_AP"
                                                                               "legal_Program")
                                                                              (("2"
                                                                                (expand
                                                                                 "program_pred")
                                                                                (("2"
                                                                                  (inst
                                                                                   -8
                                                                                   "down(get_class(program(mp!1))(a!1))")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       -8)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "method_pred")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst?
                                                                                                     -2)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (use
                                                                                                   "lookup_mthd_in_methods_class")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "ann_program"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "ann_class"
                                                                                           1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (use
                                                                                               "get_class_in_classes")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "id")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (typepred
                                                                               "md!1")
                                                                              (("3"
                                                                                (expand
                                                                                 "wf_Method")
                                                                                (("3"
                                                                                  (flatten)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "method_pred")
                                                                                    (("3"
                                                                                      (flatten)
                                                                                      (("3"
                                                                                        (inst?
                                                                                         -2)
                                                                                        (("3"
                                                                                          (expand*
                                                                                           "wf_Body"
                                                                                           "subset?"
                                                                                           "member")
                                                                                          (("3"
                                                                                            (flatten)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (replace
                                                                         -32)
                                                                        (("2"
                                                                          (replace
                                                                           -20)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -2)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (split
                                                                                           2)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (use
                                                                                               "related_states_preserved_by_raise")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand*
                                                                   "legal_Program_AP"
                                                                   "legal_Program")
                                                                  (("2"
                                                                    (expand
                                                                     "program_pred")
                                                                    (("2"
                                                                      (inst
                                                                       -5
                                                                       "(down(get_class(program(mp!1))(a!1))) ")
                                                                      (("2"
                                                                        (split
                                                                         -5)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "ann_program"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "ann_class"
                                                                             1)
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (use
                                                                                   "get_class_in_classes")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "id")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (typepred
                                                                   "program(mp!1)")
                                                                  (("3"
                                                                    (expand*
                                                                     "wf_Program"
                                                                     "program_pred")
                                                                    (("3"
                                                                      (flatten)
                                                                      (("3"
                                                                        (use
                                                                         "get_class_in_classes")
                                                                        (("3"
                                                                          (inst?)
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (flatten)
                                                                              (("3"
                                                                                (replace
                                                                                 -23
                                                                                 :dir
                                                                                 rl)
                                                                                (("3"
                                                                                  (expand*
                                                                                   "wf_Body"
                                                                                   "subset?"
                                                                                   "member")
                                                                                  (("3"
                                                                                    (flatten)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand*
                                           "legal_Program_AP"
                                           "legal_Program")
                                          (("2"
                                            (expand "program_pred")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split -3)
                                                  (("1"
                                                    (expand "method_pred")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -2)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (inst? -5)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (use
                                                               "lookup_mthd_in_methods_class")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "ann_program" 1)
                                                    (("2"
                                                      (expand "ann_class" 1)
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (use
                                                             "get_class_in_classes")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand "id")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (typepred "md!1")
                                          (("3"
                                            (expand "wf_Method")
                                            (("3"
                                              (flatten)
                                              (("3"
                                                (expand "method_pred")
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (inst? -5)
                                                    (("3"
                                                      (expand*
                                                       "wf_Body"
                                                       "subset?"
                                                       "member")
                                                      (("3"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (related_states_implies_same_exception formula-decl nil
     RelatedStatesProperties nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (lookup_inv const-decl "Expr" ProgramFunctions nil)
    (get_class_equivalence formula-decl nil AnnotateProgramProperties nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (halted const-decl "CP" MVA nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (ExitNormal? adt-recognizer-decl "[EventType -> boolean]" EventType_adt
     nil)
    (ExitNormal adt-constructor-decl "(ExitNormal?)" EventType_adt nil)
    (related_states const-decl "boolean" Equivalence nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (derive_yields_wf_state_AP formula-decl nil AnnotatedProgramSemantics nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (mp!1 skolem-const-decl
     "({mp: MonitoredProgram | wf_and_complete_MP(mp) AND wf_set_stmts(mp)})"
     MethodCallsPreserveRelatedState nil)
    (inv!1 skolem-const-decl "(wf_Expr(program(mp!1)))"
     MethodCallsPreserveRelatedState nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (ann_program_ext_declared_var_names formula-decl nil
     AnnotateProgramProperties nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (union const-decl "set" sets nil)
    (ann_program_add_ghost_var_decls formula-decl nil
     AnnotateProgramProperties nil)
    (new_gvds const-decl "finite_set[Decl]" NewVariableDeclarations nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (var_names_union formula-decl nil ProgramFunctions nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (update_PState const-decl "(update_PState_type)" AnnotatedProgramSemantics
     nil)
    (bijective? const-decl "bool" functions nil)
    (derive_after_raise formula-decl nil SemanticsProofs nil)
    (wf_state_raise formula-decl nil State nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (wf_update_PState formula-decl nil AnnotatedProgramSemantics nil)
    (raise const-decl "PState" State nil)
    (derive def-decl "bool" Semantics nil)
    (v!1 skolem-const-decl "ValOrExcpt[Name]" MethodCallsPreserveRelatedState
     nil)
    (md!1 skolem-const-decl "(wf_Method(program(mp!1)))"
     MethodCallsPreserveRelatedState nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (complete_MVA_never_stuck_after_derive formula-decl nil
     MonitoredProgramSemantics nil)
    (derive_yields_wf_state_MP formula-decl nil MonitoredProgramSemantics nil)
    (derive_never_leaves_halted formula-decl nil MonitoredProgramSemantics
     nil)
    (on_method_MVA_yields_wf_state formula-decl nil MonitoredProgramSemantics
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (complete_MVA_never_stuck_after_on_method_MVA formula-decl nil
     MonitoredProgramSemantics nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil)
    (methods const-decl "finite_set[Method]" ProgramFunctions nil)
    (every adt-def-decl "boolean" lift_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (name_get_monitored_class formula-decl nil MonitoredProgram nil)
    (get_monitored_class_in_classes formula-decl nil MonitoredProgram nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (wf_program_methods_only_in_one_class const-decl "boolean"
     WellFormedProgram nil)
    (wf_program_methods_only_in_one_class formula-decl nil WellFormedProgram
     nil)
    (legal_Program const-decl "bool" LegalProgramRestriction nil)
    (legal_Program_AP const-decl "boolean" LegalAnnotatedProgramRestriction
     nil)
    (method_pred const-decl "bool" FullProgramRestriction nil)
    (ann_class const-decl "Class" AnnotateClass nil)
    (id_preserves application-judgement "S" identity_props nil)
    (program_pred const-decl "bool" FullProgramRestriction nil)
    (related_states_preserved_by_raise formula-decl nil
     RelatedStatesProperties nil)
    (on_method_MVA const-decl "MPState" MonitoredProgramSemantics nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (v adt-accessor-decl "[(val?) -> Expr[Name]]" ValOrExcpt_adt nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (on_method_exit_normal const-decl "(on_method_event_type)" SemanticsJML
     nil))
   48087 46370 t nil)
  (on_method_exit_normal_preserves_related_states_not_annotated-1 nil
   3430840118 3431168275
   ("" (skosimp*)
    (("" (expand "on_method_exit_normal_MP")
      (("" (expand "on_method_exit_normal")
        ((""
          (apply (then (use "related_states_implies_same_exception") (assert)
                  (replace -1)))
          (("" (skosimp*)
            (("" (expand "check_assertion")
              (("" (flatten)
                (("" (expand "lookup_inv")
                  (("" (expand "id")
                    (("" (use "get_class_equivalence")
                      (("" (assert)
                        (("" (replace -1)
                          (("" (replace -14 :dir rl)
                            (("" (replace -24)
                              (("" (skosimp*)
                                (("" (copy -8)
                                  (("1"
                                    (apply (repeat
                                            (inst? -1 :where (-12 -25))))
                                    (("1" (assert)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (case "cp(astate(tau1!1)) = halted")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (use
                                               "on_method_MVA_never_leaves_halted")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "related_states" -3)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (use
                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (typepred "mp!1")
                                                            (("1"
                                                              (expand
                                                               "wf_and_complete_MP")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (use
                                                                     "on_method_MVA_yields_wf_state")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "derive_never_leaves_halted")
                                                                        (("1"
                                                                          (copy
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "derive_yields_wf_state_MP")
                                                                            (("1"
                                                                              (copy
                                                                               -1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "complete_MVA_never_stuck_after_derive")
                                                                                (("1"
                                                                                  (copy
                                                                                   -1)
                                                                                  (("1"
                                                                                    (inst?
                                                                                     -1
                                                                                     :where
                                                                                     -34)
                                                                                    (("1"
                                                                                      (inst?
                                                                                       -3
                                                                                       :where
                                                                                       -34)
                                                                                      (("1"
                                                                                        (inst?
                                                                                         -5
                                                                                         :where
                                                                                         -34)
                                                                                        (("1"
                                                                                          (inst?
                                                                                           -2
                                                                                           :where
                                                                                           -37)
                                                                                          (("1"
                                                                                            (inst?
                                                                                             -4
                                                                                             :where
                                                                                             -37)
                                                                                            (("1"
                                                                                              (inst?
                                                                                               -6
                                                                                               :where
                                                                                               -37)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "cp(astate(sMP2!1)) = halted")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "derive_yields_wf_state_AP")
                                                                                                      (("1"
                                                                                                        (copy
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           -1
                                                                                                           :where
                                                                                                           -49)
                                                                                                          (("1"
                                                                                                            (inst?
                                                                                                             -2
                                                                                                             :where
                                                                                                             -52)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "derive"
                                                                                                                 -49)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "up?(ex(pstate(tau1!5))) AND down(ex(pstate(tau1!5))) = JMLExc")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "derive_after_raise"
                                                                                                                           ("sigma1"
                                                                                                                            "tau1!5"
                                                                                                                            "sigma2"
                                                                                                                            "tau1!6"))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "related_states")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -58)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "update_PState"
                                                                                                                                         8
                                                                                                                                         2)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "update_PState"
                                                                                                                                           8
                                                                                                                                           2)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "raise"
                                                                                                                                             8
                                                                                                                                             2)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "raise"
                                                                                                                                               8
                                                                                                                                               2)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -52)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -55)
                                                                                                                                                  (("1"
                                                                                                                                                    (use
                                                                                                                                                     "wf_update_PState"
                                                                                                                                                     ("p"
                                                                                                                                                      "ann_program(mp!1)"
                                                                                                                                                      "s1"
                                                                                                                                                      "update_PState(tau1!5, raise(JMLExc))"))
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "wf_state(ann_program(mp!1))(update_PState(tau1!5, raise(JMLExc)))")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp*)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "update_PState"
                                                                                                                                                               1
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (use
                                                                                                                                                                 "wf_state_raise")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil)))))))))
                                                                                                                                                         ("2"
                                                                                                                                                          (apply
                                                                                                                                                           (then
                                                                                                                                                            (use
                                                                                                                                                             "wf_update_PState"
                                                                                                                                                             ("p"
                                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                                            (assert)
                                                                                                                                                            (skosimp*)
                                                                                                                                                            (expand
                                                                                                                                                             "update_PState")
                                                                                                                                                            (use
                                                                                                                                                             "wf_state_raise")
                                                                                                                                                            (assert)))
                                                                                                                                                          nil)))))))))))))))))))))))))))))))))))
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil)))))))))))
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "md!1")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "wf_Method")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "method_pred")
                                                                                                                  (("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (inst?
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (expand*
                                                                                                                         "wf_Body"
                                                                                                                         "subset?"
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (auto-rewrite
                                                                                                                           "union"
                                                                                                                           "member")
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (skosimp*)
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "ann_program_ext_declared_var_names")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (inst?
                                                                                                                                       -3)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil)))))))))))
                                                                                                                             ("2"
                                                                                                                              (skosimp*)
                                                                                                                              (("2"
                                                                                                                                (rewrite
                                                                                                                                 "ann_program_add_ghost_var_decls")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "var_names_union")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (flatten)
                                                                                                                                        (("2"
                                                                                                                                          (inst?
                                                                                                                                           -5)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil)))))))))))))))))))))))))))))))))
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "program(mp!1)")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "wf_Program")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "program_pred")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (use
                                                                                                                       "get_class_in_classes")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -34)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "wf_Body")
                                                                                                                                (("2"
                                                                                                                                  (skosimp*)
                                                                                                                                  (("2"
                                                                                                                                    (auto-rewrite
                                                                                                                                     "union"
                                                                                                                                     "member")
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "ann_program_ext_declared_var_names")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (inst?
                                                                                                                                                 -7)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)))))))))))
                                                                                                                                       ("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (rewrite
                                                                                                                                           "ann_program_add_ghost_var_decls")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "var_names_union")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst?
                                                                                                                                                     -9)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil)))))))))))))))))))))))))))))))))))))))))))))
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "id")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil)))))))
                                                                                                     ("2"
                                                                                                      (case
                                                                                                       "wf_state(mp!1)(tau3!1)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -39)
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (apply
                                                                                                                       (then
                                                                                                                        (use
                                                                                                                         "wf_update_PState"
                                                                                                                         ("p"
                                                                                                                          "mp!1"))
                                                                                                                        (assert)
                                                                                                                        (skosimp*)
                                                                                                                        (expand
                                                                                                                         "update_PState")
                                                                                                                        (use
                                                                                                                         "wf_state_raise")
                                                                                                                        (assert)))
                                                                                                                      nil)))))))))))
                                                                                                           ("2"
                                                                                                            (replace
                                                                                                             -40)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -36)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))
                                                                                                       ("2"
                                                                                                        (replace
                                                                                                         -35)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (skosimp*)
                                                                                                                (("2"
                                                                                                                  (apply
                                                                                                                   (then
                                                                                                                    (use
                                                                                                                     "wf_update_PState"
                                                                                                                     ("p"
                                                                                                                      "mp!1"))
                                                                                                                    (assert)
                                                                                                                    (skosimp*)
                                                                                                                    (expand
                                                                                                                     "update_PState")
                                                                                                                    (use
                                                                                                                     "wf_state_raise")
                                                                                                                    (assert)))
                                                                                                                  nil)))))))))))))))
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -37)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_PState")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -32)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                           ("2"
                                            (expand "on_method_MVA")
                                            (("2"
                                              (lift-if -14)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split -14)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (use
                                                       "lookup_mthd_in_methods_class")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (typepred
                                                           "program(mp!1)")
                                                          (("1"
                                                            (use
                                                             "wf_program_methods_only_in_one_class")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "wf_program_methods_only_in_one_class")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "get_monitored_class(mp!1)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (use
                                                                         "get_class_in_classes")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (use
                                                                             "get_monitored_class_in_classes")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -3
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (use
                                                                                   "name_get_monitored_class")
                                                                                  nil)))))))))))))))))))))))))))))))
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case-replace
                                                         "tau2!1 = tau1!1"
                                                         :hide?
                                                         t)
                                                        (("2"
                                                          (copy -10)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (inst?
                                                               -1
                                                               :where
                                                               (-18 -30))))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split -1)
                                                                (("1"
                                                                  (case
                                                                   "cp(astate(tau1!3)) = halted")
                                                                  (("1"
                                                                    (lemma
                                                                     "derive_never_leaves_halted")
                                                                    (("1"
                                                                      (lemma
                                                                       "derive_yields_wf_state_MP")
                                                                      (("1"
                                                                        (lemma
                                                                         "complete_MVA_never_stuck_after_derive")
                                                                        (("1"
                                                                          (inst?
                                                                           -1
                                                                           :where
                                                                           -25)
                                                                          (("1"
                                                                            (inst?
                                                                             -2
                                                                             :where
                                                                             -25)
                                                                            (("1"
                                                                              (inst?
                                                                               -3
                                                                               :where
                                                                               -25)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "derive_yields_wf_state_AP")
                                                                                  (("1"
                                                                                    (inst?
                                                                                     -1
                                                                                     :where
                                                                                     -38)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "cp(astate(sMP2!1)) = halted")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "related_states"
                                                                                             -7)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "up?(ex(pstate(tau2!2))) AND down(ex(pstate(tau2!2))) = JMLExc")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "derive"
                                                                                                       -44)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "related_states")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "mp!1")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "wf_and_complete_MP")
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           9)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -41)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -10)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("2"
                                                                                                                                        (apply
                                                                                                                                         (then
                                                                                                                                          (use
                                                                                                                                           "wf_update_PState"
                                                                                                                                           ("p"
                                                                                                                                            "mp!1"))
                                                                                                                                          (assert)
                                                                                                                                          (skosimp*)
                                                                                                                                          (expand
                                                                                                                                           "update_PState")
                                                                                                                                          (use
                                                                                                                                           "wf_state_raise")
                                                                                                                                          (assert)))
                                                                                                                                        nil)))))))))
                                                                                                                               ("2"
                                                                                                                                (replace
                                                                                                                                 -37)
                                                                                                                                (("2"
                                                                                                                                  (lift-if)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (apply
                                                                                                                                           (then
                                                                                                                                            (use
                                                                                                                                             "wf_update_PState"
                                                                                                                                             ("p"
                                                                                                                                              "mp!1"))
                                                                                                                                            (assert)
                                                                                                                                            (skosimp*)
                                                                                                                                            (expand
                                                                                                                                             "update_PState")
                                                                                                                                            (use
                                                                                                                                             "wf_state_raise")
                                                                                                                                            (assert)))
                                                                                                                                          nil)))))))))))))))
                                                                                                                           ("2"
                                                                                                                            (split
                                                                                                                             -8)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -55)
                                                                                                                                (("1"
                                                                                                                                  (apply
                                                                                                                                   (then
                                                                                                                                    (use
                                                                                                                                     "wf_update_PState"
                                                                                                                                     ("p"
                                                                                                                                      "ann_program(mp!1)"))
                                                                                                                                    (assert)
                                                                                                                                    (skosimp*)
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (use
                                                                                                                                     "wf_state_raise")
                                                                                                                                    (assert)))
                                                                                                                                  nil)))))
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -49)
                                                                                                                                (("2"
                                                                                                                                  (lift-if)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (apply
                                                                                                                                           (then
                                                                                                                                            (use
                                                                                                                                             "wf_update_PState"
                                                                                                                                             ("p"
                                                                                                                                              "ann_program(mp!1)"))
                                                                                                                                            (assert)
                                                                                                                                            (skosimp*)
                                                                                                                                            (expand
                                                                                                                                             "update_PState")
                                                                                                                                            (use
                                                                                                                                             "wf_state_raise")
                                                                                                                                            (assert)))
                                                                                                                                          nil)))))))))))))))
                                                                                                                           ("3"
                                                                                                                            (replace
                                                                                                                             -42)
                                                                                                                            (("3"
                                                                                                                              (expand
                                                                                                                               "update_PState"
                                                                                                                               -1)
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                (("3"
                                                                                                                                  (split
                                                                                                                                   -10)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -38)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (split
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (skosimp*)
                                                                                                                                            (("2"
                                                                                                                                              (apply
                                                                                                                                               (then
                                                                                                                                                (use
                                                                                                                                                 "wf_update_PState"
                                                                                                                                                 ("p"
                                                                                                                                                  "mp!1"))
                                                                                                                                                (assert)
                                                                                                                                                (skosimp*)
                                                                                                                                                (expand
                                                                                                                                                 "update_PState")
                                                                                                                                                (use
                                                                                                                                                 "wf_state_raise")
                                                                                                                                                (assert)))
                                                                                                                                              nil)))))))))))
                                                                                                                                   ("2"
                                                                                                                                    (replace
                                                                                                                                     -39)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "update_PState")
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil)))))))))))))))
                                                                                                                           ("4"
                                                                                                                            (replace
                                                                                                                             -55)
                                                                                                                            (("4"
                                                                                                                              (expand
                                                                                                                               "update_PState")
                                                                                                                              (("4"
                                                                                                                                (expand
                                                                                                                                 "raise")
                                                                                                                                (("4"
                                                                                                                                  (propax)
                                                                                                                                  nil)))))))
                                                                                                                           ("5"
                                                                                                                            (replace
                                                                                                                             -55)
                                                                                                                            (("5"
                                                                                                                              (expand
                                                                                                                               "update_PState")
                                                                                                                              (("5"
                                                                                                                                (expand
                                                                                                                                 "raise")
                                                                                                                                (("5"
                                                                                                                                  (propax)
                                                                                                                                  nil)))))))))))))))))))))))))))))))
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -40)
                                                                                                    (("2"
                                                                                                      (expand*
                                                                                                       "update_PState"
                                                                                                       "raise")
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))))))
                                                                                         ("2"
                                                                                          (replace
                                                                                           -27)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "update_PState")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -23)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil)))))))))))))))
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "md!1")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "wf_Method")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "method_pred")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -2)
                                                                                              (("2"
                                                                                                (expand*
                                                                                                 "wf_Body"
                                                                                                 "subset?"
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (auto-rewrite
                                                                                                   "union"
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "ann_program_ext_declared_var_names")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst?
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil)))))))))))
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "ann_program_add_ghost_var_decls")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "var_names_union")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (inst?
                                                                                                                   -5)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))))))))
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (case
                                                                       "related_states(mp!1)(tau3!1, tau2!2)")
                                                                      (("1"
                                                                        (apply
                                                                         (repeat
                                                                          (inst?
                                                                           -13
                                                                           :where
                                                                           (-23
                                                                            -35))))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (split
                                                                             -13)
                                                                            (("1"
                                                                              (case
                                                                               "cp(astate(tau1!4)) = halted")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand
                                                                                   "related_states"
                                                                                   -2)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -29)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -40)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "related_states")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "update_PState"
                                                                                                     8
                                                                                                     3)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "update_PState"
                                                                                                       8
                                                                                                       3)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "update_PState"
                                                                                                         8
                                                                                                         3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "raise"
                                                                                                           8
                                                                                                           3)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             8)
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp*)
                                                                                                              (("2"
                                                                                                                (apply
                                                                                                                 (then
                                                                                                                  (use
                                                                                                                   "wf_update_PState"
                                                                                                                   ("p"
                                                                                                                    "mp!1"))
                                                                                                                  (assert)
                                                                                                                  (skosimp*)
                                                                                                                  (expand
                                                                                                                   "update_PState")
                                                                                                                  (use
                                                                                                                   "wf_state_raise")
                                                                                                                  (assert)))
                                                                                                                nil)))
                                                                                                             ("3"
                                                                                                              (propax)
                                                                                                              nil)
                                                                                                             ("4"
                                                                                                              (skosimp*)
                                                                                                              (("4"
                                                                                                                (apply
                                                                                                                 (then
                                                                                                                  (use
                                                                                                                   "wf_update_PState"
                                                                                                                   ("p"
                                                                                                                    "ann_program(mp!1)"))
                                                                                                                  (assert)
                                                                                                                  (skosimp*)
                                                                                                                  (expand
                                                                                                                   "update_PState")
                                                                                                                  (use
                                                                                                                   "wf_state_raise")
                                                                                                                  (assert)))
                                                                                                                nil)))
                                                                                                             ("5"
                                                                                                              (lift-if)
                                                                                                              (("5"
                                                                                                                (assert)
                                                                                                                nil)))
                                                                                                             ("6"
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (("6"
                                                                                                                (expand
                                                                                                                 "raise")
                                                                                                                (("6"
                                                                                                                  (lift-if)
                                                                                                                  (("6"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))))))))))))))))))))))))))
                                                                               ("2"
                                                                                (replace
                                                                                 -24)
                                                                                (("2"
                                                                                  (replace
                                                                                   -36)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             8)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     2)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil)))
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "related_states_preserved_by_raise")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))))))))))))))))))
                                                                             ("2"
                                                                              (expand*
                                                                               "legal_Program_AP"
                                                                               "legal_Program")
                                                                              (("2"
                                                                                (expand
                                                                                 "program_pred")
                                                                                (("2"
                                                                                  (inst
                                                                                   -8
                                                                                   "down(get_class(program(mp!1))(a!1))")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       -8)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "method_pred")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst?
                                                                                                     -2)
                                                                                                    nil)))
                                                                                                 ("2"
                                                                                                  (use
                                                                                                   "lookup_mthd_in_methods_class")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil)))))))))))))
                                                                                       ("2"
                                                                                        (expand
                                                                                         "ann_program"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "ann_class"
                                                                                           1)
                                                                                          (("2"
                                                                                            (inst?)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "get_class_in_classes")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))))
                                                                             ("3"
                                                                              (typepred
                                                                               "md!1")
                                                                              (("3"
                                                                                (expand
                                                                                 "wf_Method")
                                                                                (("3"
                                                                                  (expand
                                                                                   "method_pred")
                                                                                  (("3"
                                                                                    (flatten)
                                                                                    (("3"
                                                                                      (inst?
                                                                                       -2)
                                                                                      (("3"
                                                                                        (expand*
                                                                                         "wf_Body"
                                                                                         "subset?"
                                                                                         "member")
                                                                                        (("3"
                                                                                          (flatten)
                                                                                          nil)))))))))))))))))))
                                                                       ("2"
                                                                        (replace
                                                                         -32)
                                                                        (("2"
                                                                          (replace
                                                                           -20)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -2)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (split
                                                                                           2)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil)))
                                                                                           ("2"
                                                                                            (skosimp*)
                                                                                            (("2"
                                                                                              (use
                                                                                               "related_states_preserved_by_raise")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))))))))))))))))
                                                                 ("2"
                                                                  (expand*
                                                                   "legal_Program_AP"
                                                                   "legal_Program")
                                                                  (("2"
                                                                    (expand
                                                                     "program_pred")
                                                                    (("2"
                                                                      (inst
                                                                       -5
                                                                       "(down(get_class(program(mp!1))(a!1))) ")
                                                                      (("2"
                                                                        (split
                                                                         -5)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            nil)))
                                                                         ("2"
                                                                          (expand
                                                                           "ann_program"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "ann_class"
                                                                             1)
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (use
                                                                                   "get_class_in_classes")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil)))))))))))))))))))
                                                                 ("3"
                                                                  (typepred
                                                                   "program(mp!1)")
                                                                  (("3"
                                                                    (expand*
                                                                     "wf_Program"
                                                                     "program_pred")
                                                                    (("3"
                                                                      (flatten)
                                                                      (("3"
                                                                        (use
                                                                         "get_class_in_classes")
                                                                        (("3"
                                                                          (inst?)
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (flatten)
                                                                              (("3"
                                                                                (replace
                                                                                 -22
                                                                                 :dir
                                                                                 rl)
                                                                                (("3"
                                                                                  (expand*
                                                                                   "wf_Body"
                                                                                   "subset?"
                                                                                   "member")
                                                                                  (("3"
                                                                                    (flatten)
                                                                                    nil)))))))))))))))))))))))))
                                                           ("2"
                                                            (skosimp*)
                                                            (("2"
                                                              (expand "id")
                                                              (("2"
                                                                (use
                                                                 "ann_program_preserves_wf_body")
                                                                nil)))))))))))))))))))))))
                                         ("2"
                                          (expand*
                                           "legal_Program_AP"
                                           "legal_Program")
                                          (("2"
                                            (expand "program_pred")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split -3)
                                                  (("1"
                                                    (expand "method_pred")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -2)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (inst? -5)
                                                                nil)))
                                                             ("2"
                                                              (use
                                                               "lookup_mthd_in_methods_class")
                                                              (("2"
                                                                (assert)
                                                                nil)))))))))))))
                                                   ("2"
                                                    (expand "ann_program" 1)
                                                    (("2"
                                                      (expand "ann_class" 1)
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (use
                                                             "get_class_in_classes")
                                                            (("2"
                                                              (assert)
                                                              nil)))))))))))))))))))))
                                         ("3"
                                          (typepred "md!1")
                                          (("3"
                                            (expand "wf_Method")
                                            (("3"
                                              (expand "method_pred")
                                              (("3"
                                                (flatten)
                                                (("3"
                                                  (inst? -5)
                                                  (("3"
                                                    (expand*
                                                     "wf_Body"
                                                     "subset?"
                                                     "member")
                                                    (("3"
                                                      (flatten)
                                                      nil)))))))))))))))))))
                                   ("2" (skosimp*)
                                    (("2" (expand "id")
                                      (("2"
                                        (use "ann_program_preserves_wf_body")
                                        nil))))))))))))))))))))))))))))))))))))
    nil)
   unfinished nil 33719 31030 nil nil))
 (on_method_exit_exceptional_preserves_related_states_annotated_TCC1 0
  (on_method_exit_exceptional_preserves_related_states_annotated_TCC1-2 nil
   3430840150 3433217309
   ("" (expand "id")
    (("" (skosimp*)
      (("" (typepred "b!1")
        (("" (use "ann_program_preserves_wf_body") nil))))))
    nil)
   proved
   ((ann_program_preserves_wf_body formula-decl nil AnnotateProgramProperties
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (id const-decl "(bijective?[T, T])" identity nil))
   1968 1920 nil nil)
  (on_method_exit_exceptional_preserves_related_states_annotated_TCC1-1 nil
   3430821302 nil ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (on_method_exit_exceptional_preserves_related_states_annotated_TCC2 0
  (on_method_exit_exceptional_preserves_related_states_annotated_TCC2-2 nil
   3430840202 3433217311
   ("" (skosimp*)
    (("" (expand "id") (("" (use "ann_program_preserves_wf_method") nil))))
    nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (ann_program_preserves_wf_method formula-decl nil
     AnnotateProgramProperties nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil))
   2094 2030 nil nil)
  (on_method_exit_exceptional_preserves_related_states_annotated_TCC2-1 nil
   3430821302 nil ("" (subtype-tcc) nil nil) unchecked nil nil nil nil nil))
 (on_method_exit_exceptional_preserves_related_states_annotated 0
  (on_method_exit_exceptional_preserves_related_states_annotated-2 nil
   3431170518 3433219876
   ("" (skosimp*)
    (("" (expand "on_method_exit_exceptional_MP")
      (("" (expand "on_method_exit_exceptional")
        (("" (assert)
          ((""
            (apply (then (use "related_states_implies_same_exception")
                    (assert) (replace -1)))
            ((""
              (apply (branch (split -11)
                      ((then (flatten) (assert) (flatten) (assert)))))
              (("" (skosimp*)
                (("" (auto-rewrite "id")
                  (("" (expand "check_assertion")
                    (("" (flatten)
                      (("" (skosimp*)
                        (("" (expand "lookup_inv")
                          (("" (use "get_class_equivalence")
                            (("" (assert)
                              (("" (replace -1)
                                (("" (assert)
                                  (("" (expand "ann_class" -27)
                                    (("" (assert)
                                      ((""
                                        (lift-if -27)
                                        ((""
                                          (use "get_class_in_classes")
                                          ((""
                                            (assert)
                                            ((""
                                              (case
                                               "related_states(mp!1)(update_PState(sMP1!1, catch), update_PState(sAP1!1, catch))")
                                              (("1"
                                                (case
                                                 "wf_state(mp!1)(tau2!1)")
                                                (("1"
                                                  (case
                                                   "wf_state(mp!1)(tau1!3)")
                                                  (("1"
                                                    (case
                                                     "wf_state(mp!1)(tau3!1)")
                                                    (("1"
                                                      (case
                                                       "wf_state(ann_program(mp!1))(tau1!2)")
                                                      (("1"
                                                        (case
                                                         "wf_state(ann_program(mp!1))(tau1!4)")
                                                        (("1"
                                                          (case
                                                           "wf_state(ann_program(mp!1))(tau2!2)")
                                                          (("1"
                                                            (use
                                                             "ann_method_exc_set")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (rewrite
                                                                 "derive"
                                                                 -35)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split
                                                                     -35)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "update_PState")
                                                                        (("1"
                                                                          (expand
                                                                           "catch")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (replace
                                                                           -6)
                                                                          (("2"
                                                                            (copy
                                                                             -36)
                                                                            (("2"
                                                                              (apply
                                                                               (repeat
                                                                                (inst?
                                                                                 -1
                                                                                 :where
                                                                                 (-3
                                                                                  -19))))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (case
                                                                                       "cp(astate(tau1!1)) = halted")
                                                                                      (("1"
                                                                                        (case
                                                                                         "cp(astate(sMP2!1)) = halted")
                                                                                        (("1"
                                                                                          (case
                                                                                           "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "wf_state(ann_program(mp!1))(sAP2!1)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "related_states"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "derive"
                                                                                                         -13)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "derive"
                                                                                                             -53)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "up?(ex(pstate(tau2!2))) AND down(ex(pstate(tau2!2))) = JMLExc")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -59)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "related_states")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replace
                                                                                                                     -56)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "update_PState")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "raise")
                                                                                                                          (("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -49)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "wf_update_PState"
                                                                                                         ("p"
                                                                                                          "ann_program(mp!1)"))
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (("2"
                                                                                                                (use
                                                                                                                 "wf_state_raise")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -29)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "wf_update_PState"
                                                                                                         ("p"
                                                                                                          "mp!1"))
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (("2"
                                                                                                                (use
                                                                                                                 "wf_state_raise")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "related_states"
                                                                                               -4)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "complete_MVA_never_stuck_after_derive")
                                                                                                  (("2"
                                                                                                    (inst?
                                                                                                     -1
                                                                                                     :where
                                                                                                     -31)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -31)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -31)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "update_PState")
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "mp!1")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "wf_and_complete_MP")
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "derive_never_leaves_halted")
                                                                                          (("2"
                                                                                            (use
                                                                                             "on_method_MVA_never_leaves_halted")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -2
                                                                                                 :where
                                                                                                 -28)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -30)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "update_PState")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -28)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "mp!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_and_complete_MP")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (apply
                                                                                           (then
                                                                                            (use
                                                                                             "related_states_implies_same_exception")
                                                                                            (assert)
                                                                                            (replace
                                                                                             -1)))
                                                                                          (("2"
                                                                                            (case
                                                                                             "up?(ex(pstate(tau1!1)))")
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "mp!1")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "wf_set_stmts")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "program_method_pred")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "wf_set_stmts")
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (inst?
                                                                                                                     -6)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "no_exc")
                                                                                                                      (("1"
                                                                                                                        (apply
                                                                                                                         (repeat
                                                                                                                          (inst?
                                                                                                                           -6
                                                                                                                           :where
                                                                                                                           -30)))
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             -6)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "related_states_implies_same_exception"
                                                                                                                                 ("sMP"
                                                                                                                                  "update_PState(sMP1!1, catch)"
                                                                                                                                  "sAP"
                                                                                                                                  "update_PState(sAP1!1, catch)"))
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "related_states")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "wf_state")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "wf_ap_state")
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (use
                                                                                                                 "lookup_mthd_in_methods_class")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "ann_method"
                                                                                               -7)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "ann_event_does_not_throw_exception")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "ann_event_preserves_MP_modeled"
                                                                                                         ("sMP2"
                                                                                                          "tau2!1"))
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (use
                                                                                                               "MP_modeled_implies_same_exception")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "up?(ex(pstate(tau2!1)))")
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "derive_bottom_iff_exception_step"
                                                                                                                     ("p"
                                                                                                                      "ann_program(mp!1)"))
                                                                                                                    (("1"
                                                                                                                      (inst?
                                                                                                                       -1
                                                                                                                       :where
                                                                                                                       -12)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replace
                                                                                                                     -46)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "derive"
                                                                                                                       -48)
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "derive"
                                                                                                                           -49)
                                                                                                                          (("2"
                                                                                                                            (skosimp*)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "derive"
                                                                                                                               -50)
                                                                                                                              (("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "derive"
                                                                                                                                   -51)
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "derive"
                                                                                                                                       -54)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "check_for_exception")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "check_for_exception_final")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "check_for_exception")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -59
                                                                                                                                                       :hide?
                                                                                                                                                       t)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -57
                                                                                                                                                         :hide?
                                                                                                                                                         t)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -56
                                                                                                                                                           :hide?
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -53
                                                                                                                                                             :hide?
                                                                                                                                                             t)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -51)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "halted")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (use
                                                                                                                                                                     "MP_modeled_lookup_correspondence"
                                                                                                                                                                     ("q1"
                                                                                                                                                                      "cp(astate(tau2!1))"
                                                                                                                                                                      "sMP"
                                                                                                                                                                      "tau2!1"))
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (split
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -1
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case-replace
                                                                                                                                                                               "related_states(mp!1)(tau3!1, tau2!2)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -60)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -33)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "cp(astate(tau3!1)) = halted")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "related_states"
                                                                                                                                                                                       (8
                                                                                                                                                                                        -2))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (split
                                                                                                                                                                                               9)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "wf_update_PState"
                                                                                                                                                                                                   ("p"
                                                                                                                                                                                                    "mp!1"))
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("3"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("4"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("4"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "update_PState")
                                                                                                                                                                                                  (("4"
                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("5"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("6"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "update_PState")
                                                                                                                                                                                                (("6"
                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (then
                                                                                                                                                                                        (use
                                                                                                                                                                                         "related_states_implies_same_exception")
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)))
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (split
                                                                                                                                                                                             9)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "related_states_preserved_by_raise")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (case
                                                                                                                                                                                 "related_states(mp!1)(tau2!1, tau!2)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (apply
                                                                                                                                                                                   (branch
                                                                                                                                                                                    (split
                                                                                                                                                                                     -58)
                                                                                                                                                                                    ((then
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (assert)))))
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -30
                                                                                                                                                                                     :dir
                                                                                                                                                                                     rl)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (repeat
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -45
                                                                                                                                                                                         :where
                                                                                                                                                                                         (-32
                                                                                                                                                                                          -1))))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -45)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -60
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -35
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "cp(astate(tau1!3)) = halted")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "related_states"
                                                                                                                                                                                                       (-2
                                                                                                                                                                                                        2))
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                   3)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "update_PState")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "raise")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (split
                                                                                                                                                                                                                       2)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (apply
                                                                                                                                                                                                                         (then
                                                                                                                                                                                                                          (use
                                                                                                                                                                                                                           "wf_update_PState"
                                                                                                                                                                                                                           ("p"
                                                                                                                                                                                                                            "mp!1"))
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                                          (use
                                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                                          (assert)))
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "raise")
                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("4"
                                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (case-replace
                                                                                                                                                                                                       "v!4 = v!5")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             3)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (use
                                                                                                                                                                                                                 "related_states_preserved_by_raise")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (apply
                                                                                                                                                                                                         (then
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "related_states_implies_same_exception"
                                                                                                                                                                                                           ("sMP"
                                                                                                                                                                                                            "tau1!3"
                                                                                                                                                                                                            "sAP"
                                                                                                                                                                                                            "tau1!4"))
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -1)))
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (split
                                                                                                                                                                                                           -5)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "derive_bottom_iff_exception_step"
                                                                                                                                                                                                             ("p"
                                                                                                                                                                                                              "mp!1"))
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst?
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               :where
                                                                                                                                                                                                               -36)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -4
                                                                                                                                                                                                                       :dir
                                                                                                                                                                                                                       rl)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -2)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -5)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (apply-extensionality
                                                                                                                                                                                                                     :hide?
                                                                                                                                                                                                                     t)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (expand*
                                                                                                                                                                                             "legal_Program_AP"
                                                                                                                                                                                             "legal_Program")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "program_pred")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -38
                                                                                                                                                                                                 "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     -38)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "method_pred")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "ann_class")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "legal_Body_preserved_by_proper_subterm")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst?
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               :where
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst?
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 :where
                                                                                                                                                                                                                 -2)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "<<")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (expand*
                                                                                                                                                                                                       "ann_program"
                                                                                                                                                                                                       "id")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "program(mp!1)")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "wf_Program"
                                                                                                                                                                                               "program_pred")
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("3"
                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -37
                                                                                                                                                                                                         :dir
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (expand*
                                                                                                                                                                                                           "wf_Body"
                                                                                                                                                                                                           "subset?"
                                                                                                                                                                                                           "member")
                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "derive_never_leaves_halted")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst?
                                                                                                                                                                                       -1
                                                                                                                                                                                       :where
                                                                                                                                                                                       -36)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "related_states")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "related_states")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (use
                                                                                                                                                                                     "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "on_method_MVA_yields_wf_state")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (split
                                                                                                                                                                                               -2)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "derive_never_leaves_halted")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst?
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       :where
                                                                                                                                                                                                       -37)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -38)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "complete_MVA_never_stuck_after_derive")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst?
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 :where
                                                                                                                                                                                                                 -37)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "update_PState"
                                                                                                                                                                                                                     3)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -66)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState"
                                                                                                                                                                                                                         3)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "raise"
                                                                                                                                                                                                                           3)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -66)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (split
                                                                                                                                                                                                                                       3)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                         -66)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (typepred
                                                                                                                                                                                                 "mp!1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "wf_and_complete_MP")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "mp!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "wf_and_complete_MP")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "complete")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("3"
                                                                                                                                                                          (use
                                                                                                                                                                           "on_method_MVA_yields_wf_AState")
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (expand
                                                                                                                                                                               "related_states")
                                                                                                                                                                              (("3"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "wf_AState")
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (replace
                                                                                                               -24)
                                                                                                              (("2"
                                                                                                                (case-replace
                                                                                                                 "excpt(e(v!1)) = v!1")
                                                                                                                (("2"
                                                                                                                  (apply-extensionality
                                                                                                                   :hide?
                                                                                                                   t)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (case-replace
                                                                                                               "get_monitored_class(mp!1) = down(get_class(program(mp!1))(a!1))")
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "lookup_mthd_in_methods_class")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "program(mp!1)")
                                                                                                                (("2"
                                                                                                                  (expand*
                                                                                                                   "wf_Program"
                                                                                                                   "wf_program_has_unique_class_names_def")
                                                                                                                  (("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (split
                                                                                                                           -3)
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "name_get_monitored_class")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (rewrite
                                                                                                                             "get_monitored_class_in_classes")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand*
                                                                                     "legal_Program_AP"
                                                                                     "legal_Program")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "program_pred")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -29
                                                                                         "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -29)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "method_pred")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   "ann_method(mp!1)(md!1)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           -6)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "ann_method_exc_set")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -2
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "legal_Body_preserved_by_proper_subterm")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "ann_program(mp!1)"
                                                                                                                     "exc_set(ann_method(mp!1)(md!1))(e(v!1))"
                                                                                                                     "s1(exc_set(ann_method(mp!1)(md!1))(e(v!1)))")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "<<")
                                                                                                                        (("1"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "ann_class")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "ann_methods")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (use
                                                                                                                   "lookup_mthd_in_methods_class")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand*
                                                                                               "ann_program"
                                                                                               "id")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (typepred
                                                                                     "md!1")
                                                                                    (("3"
                                                                                      (expand
                                                                                       "wf_Method")
                                                                                      (("3"
                                                                                        (flatten)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "method_pred")
                                                                                          (("3"
                                                                                            (flatten)
                                                                                            (("3"
                                                                                              (inst?
                                                                                               -6)
                                                                                              (("3"
                                                                                                (expand*
                                                                                                 "wf_Body"
                                                                                                 "subset?"
                                                                                                 "member")
                                                                                                (("3"
                                                                                                  (flatten)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (replace -37)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (split 1)
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (apply
                                                                       (then
                                                                        (use
                                                                         "wf_update_PState"
                                                                         ("p"
                                                                          "ann_program(mp!1)"))
                                                                        (assert)
                                                                        (skosimp*)
                                                                        (expand
                                                                         "update_PState")
                                                                        (use
                                                                         "wf_state_raise")
                                                                        (assert)))
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "derive_yields_wf_state_AP")
                                                          (("2"
                                                            (replace -34)
                                                            (("2"
                                                              (expand
                                                               "derive"
                                                               -36)
                                                              (("2"
                                                                (apply
                                                                 (branch
                                                                  (split -36)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "check_for_exception")
                                                                    (("2"
                                                                      (copy
                                                                       -5)
                                                                      (("2"
                                                                        (inst?
                                                                         -1
                                                                         :where
                                                                         -3)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (branch
                                                                              (split
                                                                               -4)
                                                                              ((then
                                                                                (flatten)
                                                                                (assert)
                                                                                (flatten)
                                                                                (assert)))))
                                                                            (("1"
                                                                              (apply
                                                                               (branch
                                                                                (split
                                                                                 -1)
                                                                                ((then
                                                                                  (flatten)
                                                                                  (assert)
                                                                                  (flatten)
                                                                                  (assert)))))
                                                                              (("1"
                                                                                (inst?
                                                                                 -9
                                                                                 :where
                                                                                 -3)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (typepred
                                                                                   "program(mp!1)")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "wf_Program")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "program_pred")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -6)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -5
                                                                                             "down(get_class(program(mp!1))(a!1))")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -25
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_Body")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "ann_program_ext_declared_var_names")
                                                                                                          (("1"
                                                                                                            (auto-rewrite
                                                                                                             "union"
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (inst?
                                                                                                                 -6)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "ann_program_add_ghost_var_decls")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "var_names_union")
                                                                                                            (("2"
                                                                                                              (auto-rewrite
                                                                                                               "union"
                                                                                                               "member")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (inst?
                                                                                                                   -8)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "wf_Body")
                                                                          (("2"
                                                                            (auto-rewrite
                                                                             "union"
                                                                             "member")
                                                                            (("2"
                                                                              (split
                                                                               1)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "ann_program_ext_declared_var_names")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (repeat
                                                                                        (rewrite
                                                                                         "var_names"
                                                                                         -1)))
                                                                                      (("1"
                                                                                        (expand
                                                                                         "singleton")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (use
                                                                                                 "cp_new_ghostvar")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "halted_new_ghostvar")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (apply
                                                                                   (repeat
                                                                                    (rewrite
                                                                                     "subterm"
                                                                                     -2)))
                                                                                  (("2"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -2)
                                                                                      ((assert))))
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (lemma
                                                         "derive_yields_wf_state_AP")
                                                        (("2"
                                                          (inst?
                                                           -1
                                                           :where
                                                           -31)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (use
                                                               "wf_update_PState"
                                                               ("p"
                                                                "ann_program(mp!1)"))
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "related_states")
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (use
                                                             "ann_program_preserves_wf_method")
                                                            (("2"
                                                              (expand*
                                                               "wf_Method"
                                                               "method_pred")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (inst? -6)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (replace -14)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 1)
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (apply
                                                                 (then
                                                                  (use
                                                                   "wf_update_PState"
                                                                   ("p"
                                                                    "mp!1"))
                                                                  (assert)
                                                                  (skosimp*)
                                                                  (expand
                                                                   "update_PState")
                                                                  (use
                                                                   "wf_state_raise")
                                                                  (assert)))
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "derive_yields_wf_state_MP")
                                                    (("2"
                                                      (inst? -1 :where -13)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (typepred "mp!1")
                                                          (("2"
                                                            (expand
                                                             "wf_and_complete_MP")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace -8)
                                                  (("2"
                                                    (use
                                                     "on_method_MVA_yields_wf_state")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (lemma
                                                         "derive_yields_wf_state_MP")
                                                        (("2"
                                                          (inst? -1 :where -7)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split -1)
                                                              (("1"
                                                                (expand
                                                                 "related_states"
                                                                 -)
                                                                (("1"
                                                                  (flatten)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "mp!1")
                                                                (("2"
                                                                  (expand
                                                                   "wf_and_complete_MP")
                                                                  (("2"
                                                                    (flatten)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (use
                                                 "related_states_preserved_by_catch")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (related_states_implies_same_exception formula-decl nil
     RelatedStatesProperties nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (get_class_equivalence formula-decl nil AnnotateProgramProperties nil)
    (ann_class const-decl "Class" AnnotateClass nil)
    (related_states_preserved_by_catch formula-decl nil
     RelatedStatesProperties nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (derive_yields_wf_state_MP formula-decl nil MonitoredProgramSemantics nil)
    (ann_program_preserves_wf_method formula-decl nil
     AnnotateProgramProperties nil)
    (v!1 skolem-const-decl "ValOrExcpt[Name]" MethodCallsPreserveRelatedState
     nil)
    (md!1 skolem-const-decl "(wf_Method(program(mp!1)))"
     MethodCallsPreserveRelatedState nil)
    (ann_method_exc_set formula-decl nil AnnotateMethod nil)
    (excpt? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (e adt-accessor-decl "[(excpt?) -> Excpt]" ValOrExcpt_adt nil)
    (on_method_exit_normal const-decl "(on_method_event_type)" SemanticsJML
     nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (ann_method const-decl "Method" AnnotateMethod nil)
    (derive def-decl "bool" Semantics nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (ann_methods const-decl "finite_set[Method]" AnnotateMethod nil)
    (s1 adt-accessor-decl "[(Sequence?) -> Stmt]" Body_adt nil)
    (program_method_pred const-decl "bool" ProgramRestriction nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (no_exc const-decl "bool" WfSetStmts nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (ann_event_does_not_throw_exception formula-decl nil
     AnnEventPreservesMPModeled nil)
    (excpt adt-constructor-decl "[Excpt -> (excpt?)]" ValOrExcpt_adt nil)
    (ann_event_preserves_MP_modeled formula-decl nil
     AnnEventPreservesMPModeled nil)
    (check_for_exception const-decl "bool" SemanticsAuxiliaryFunctions nil)
    (MP_modeled_lookup_correspondence formula-decl nil RelatedStatesProperties
     nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (legal_Program const-decl "bool" LegalProgramRestriction nil)
    (legal_Program_AP const-decl "boolean" LegalAnnotatedProgramRestriction
     nil)
    (legal_Body_preserved_by_proper_subterm formula-decl nil
     LegalProgramRestriction nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (method_pred const-decl "bool" FullProgramRestriction nil)
    (program_pred const-decl "bool" FullProgramRestriction nil)
    (Val_Bool_extensionality formula-decl nil Val_adt nil)
    (Bool? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Bool adt-constructor-decl "[bool -> (Bool?)]" Val_adt nil)
    (b adt-accessor-decl "[(Bool?) -> bool]" Val_adt nil)
    (on_method_MVA_yields_wf_state formula-decl nil MonitoredProgramSemantics
     nil)
    (related_states_preserved_by_raise formula-decl nil
     RelatedStatesProperties nil)
    (complete const-decl "boolean" MVAProperties nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (on_method_MVA_yields_wf_AState formula-decl nil MonitoredProgramSemantics
     nil)
    (check_for_exception_final const-decl "bool" SemanticsAuxiliaryFunctions
     nil)
    (Conj adt-constructor-decl "[[Expr, Expr] -> (Conj?)]" Body_adt nil)
    (Neg adt-constructor-decl "[Expr -> (Neg?)]" Body_adt nil)
    (Eq adt-constructor-decl "[[Expr, Expr] -> (Eq?)]" Body_adt nil)
    (NumVarEval adt-constructor-decl "[Name -> (NumVarEval?)]" Body_adt nil)
    (forbidden_names const-decl "set[Name]" VariableNames nil)
    (cp const-decl "{n: Name | NOT forbidden_names(mp)(n)}" VariableNames nil)
    (halted const-decl "Name" NewVariableDeclarations nil)
    (derive_bottom_iff_exception_step formula-decl nil SemanticsProofs nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (ann_event const-decl "Stmt" AnnotateEvent nil)
    (filter_event const-decl "finite_set[Transition]" AnnotateMethod nil)
    (Unit? adt-recognizer-decl "[Val -> boolean]" Val_adt nil)
    (Unit adt-constructor-decl "(Unit?)" Val_adt nil)
    (MP_modeled_implies_same_exception formula-decl nil
     RelatedStatesProperties nil)
    (ValOrExcpt_excpt_extensionality formula-decl nil ValOrExcpt_adt nil)
    (get_monitored_class_in_classes formula-decl nil MonitoredProgram nil)
    (name_get_monitored_class formula-decl nil MonitoredProgram nil)
    (wf_program_has_unique_class_names_def const-decl "boolean"
     WellFormedProgram nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (complete_MVA_never_stuck_after_on_method_MVA formula-decl nil
     MonitoredProgramSemantics nil)
    (ExitExceptional? adt-recognizer-decl "[EventType -> boolean]"
     EventType_adt nil)
    (ExitExceptional adt-constructor-decl "(ExitExceptional?)" EventType_adt
     nil)
    (complete_MVA_never_stuck_after_derive formula-decl nil
     MonitoredProgramSemantics nil)
    (raise const-decl "PState" State nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (wf_update_PState formula-decl nil AnnotatedProgramSemantics nil)
    (wf_state_raise formula-decl nil State nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (derive_never_leaves_halted formula-decl nil MonitoredProgramSemantics
     nil)
    (halted const-decl "CP" MVA nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (m1!4 skolem-const-decl "nat" MethodCallsPreserveRelatedState nil)
    (m2!1 skolem-const-decl "nat" MethodCallsPreserveRelatedState nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (mp!1 skolem-const-decl
     "({mp: MonitoredProgram | wf_and_complete_MP(mp) AND wf_set_stmts(mp)})"
     MethodCallsPreserveRelatedState nil)
    (a!1 skolem-const-decl "(defined?)" MethodCallsPreserveRelatedState nil)
    (new_gvds const-decl "finite_set[Decl]" NewVariableDeclarations nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (var_names_union formula-decl nil ProgramFunctions nil)
    (ann_program_add_ghost_var_decls formula-decl nil
     AnnotateProgramProperties nil)
    (union const-decl "set" sets nil)
    (ann_program_ext_declared_var_names formula-decl nil
     AnnotateProgramProperties nil)
    (subterm adt-def-decl "boolean" Body_adt nil)
    (singleton const-decl "(singleton?)" sets nil)
    (cp_new_ghostvar formula-decl nil NewVariableDeclarations nil)
    (halted_new_ghostvar formula-decl nil NewVariableDeclarations nil)
    (nonempty_singleton_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (derive_yields_wf_state_AP formula-decl nil AnnotatedProgramSemantics nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (update_PState const-decl "(update_PState_type)" AnnotatedProgramSemantics
     nil)
    (bijective? const-decl "bool" functions nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (catch const-decl "PState" State nil)
    (related_states const-decl "boolean" Equivalence nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (id_preserves application-judgement "S" identity_props nil)
    (lookup_inv const-decl "Expr" ProgramFunctions nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil))
   613901 116910 t nil)
  (on_method_exit_exceptional_preserves_related_states_annotated-1 nil
   3430840274 3431168367
   ("" (skosimp*)
    (("" (expand "on_method_exit_exceptional_MP")
      (("" (expand "on_method_exit_exceptional")
        (("" (assert)
          ((""
            (apply (then (use "related_states_implies_same_exception")
                    (assert) (replace -1)))
            ((""
              (apply (branch (split -11)
                      ((then (flatten) (assert) (flatten) (assert)))))
              (("" (skosimp*)
                (("" (auto-rewrite "id")
                  (("" (expand "check_assertion")
                    (("" (flatten)
                      (("" (skosimp*)
                        (("" (expand "lookup_inv")
                          (("" (use "get_class_equivalence")
                            (("" (assert)
                              (("" (replace -1)
                                (("" (assert)
                                  (("" (expand "ann_class" -27)
                                    (("" (assert)
                                      ((""
                                        (lift-if -27)
                                        ((""
                                          (use "get_class_in_classes")
                                          ((""
                                            (assert)
                                            ((""
                                              (case
                                               "related_states(mp!1)(update_PState(sMP1!1, catch), update_PState(sAP1!1, catch))")
                                              (("1"
                                                (case
                                                 "wf_state(mp!1)(tau2!1)")
                                                (("1"
                                                  (case
                                                   "wf_state(mp!1)(tau1!3)")
                                                  (("1"
                                                    (case
                                                     "wf_state(mp!1)(tau3!1)")
                                                    (("1"
                                                      (case
                                                       "wf_state(ann_program(mp!1))(tau1!2)")
                                                      (("1"
                                                        (case
                                                         "wf_state(ann_program(mp!1))(tau1!4)")
                                                        (("1"
                                                          (case
                                                           "wf_state(ann_program(mp!1))(tau2!2)")
                                                          (("1"
                                                            (use
                                                             "ann_method_exc_set")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (rewrite
                                                                 "derive"
                                                                 -35)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split
                                                                     -35)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "update_PState")
                                                                        (("1"
                                                                          (expand
                                                                           "catch")
                                                                          (("1"
                                                                            (propax)
                                                                            nil)))))))
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (skosimp*)
                                                                        (("2"
                                                                          (replace
                                                                           -6)
                                                                          (("2"
                                                                            (copy
                                                                             -36)
                                                                            (("2"
                                                                              (apply
                                                                               (repeat
                                                                                (inst?
                                                                                 -1
                                                                                 :where
                                                                                 (-3
                                                                                  -19))))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (case
                                                                                       "cp(astate(tau1!1)) = halted")
                                                                                      (("1"
                                                                                        (case
                                                                                         "cp(astate(sMP2!1)) = halted")
                                                                                        (("1"
                                                                                          (case
                                                                                           "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "wf_state(ann_program(mp!1))(sAP2!1)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "related_states"
                                                                                               -5)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "derive"
                                                                                                         -13)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "derive"
                                                                                                             -53)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "up?(ex(pstate(tau2!2))) AND down(ex(pstate(tau2!2))) = JMLExc")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -59)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "related_states")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil)))))))
                                                                                                                   ("2"
                                                                                                                    (replace
                                                                                                                     -56)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "update_PState")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "raise")
                                                                                                                          (("2"
                                                                                                                            (propax)
                                                                                                                            nil)))))))))))))))))))))))))))))))
                                                                                             ("2"
                                                                                              (replace
                                                                                               -49)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "wf_update_PState"
                                                                                                         ("p"
                                                                                                          "ann_program(mp!1)"))
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (("2"
                                                                                                                (use
                                                                                                                 "wf_state_raise")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))))
                                                                                           ("2"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -29)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "wf_update_PState"
                                                                                                         ("p"
                                                                                                          "mp!1"))
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skosimp*)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (("2"
                                                                                                                (use
                                                                                                                 "wf_state_raise")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))
                                                                                             ("2"
                                                                                              (expand
                                                                                               "related_states"
                                                                                               -4)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "complete_MVA_never_stuck_after_derive")
                                                                                                  (("2"
                                                                                                    (inst?
                                                                                                     -1
                                                                                                     :where
                                                                                                     -31)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -31)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -31)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "update_PState")
                                                                                                                    (("1"
                                                                                                                      (lift-if)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil)))))))))))
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "mp!1")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "wf_and_complete_MP")
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  nil)))))))))))))))))))))))))
                                                                                         ("2"
                                                                                          (lemma
                                                                                           "derive_never_leaves_halted")
                                                                                          (("2"
                                                                                            (use
                                                                                             "on_method_MVA_never_leaves_halted")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -2
                                                                                                 :where
                                                                                                 -28)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -30)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "update_PState")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -28)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "mp!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_and_complete_MP")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          nil)))))))))))))))))))
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (apply
                                                                                           (then
                                                                                            (use
                                                                                             "related_states_implies_same_exception")
                                                                                            (assert)
                                                                                            (replace
                                                                                             -1)))
                                                                                          (("2"
                                                                                            (case
                                                                                             "up?(ex(pstate(tau1!1)))")
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "mp!1")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "wf_set_stmts")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "program_method_pred")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "wf_set_stmts")
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (inst?
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "no_exc")
                                                                                                                      (("1"
                                                                                                                        (apply
                                                                                                                         (repeat
                                                                                                                          (inst?
                                                                                                                           -3
                                                                                                                           :where
                                                                                                                           -28)))
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (use
                                                                                                                             "related_states_implies_same_exception"
                                                                                                                             ("sMP"
                                                                                                                              "update_PState(sMP1!1, catch)"
                                                                                                                              "sAP"
                                                                                                                              "update_PState(sAP1!1, catch)"))
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "update_PState")
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil)))))))))))))))))))
                                                                                                               ("2"
                                                                                                                (use
                                                                                                                 "lookup_mthd_in_methods_class")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))))))))))
                                                                                             ("2"
                                                                                              (expand
                                                                                               "ann_method"
                                                                                               -7)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "ann_event_does_not_throw_exception")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "ann_event_preserves_MP_modeled"
                                                                                                         ("sMP2"
                                                                                                          "tau2!1"))
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (use
                                                                                                               "MP_modeled_implies_same_exception")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "up?(ex(pstate(tau2!1)))")
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "derive_bottom_iff_exception_step"
                                                                                                                     ("p"
                                                                                                                      "ann_program(mp!1)"))
                                                                                                                    (("1"
                                                                                                                      (inst?
                                                                                                                       -1
                                                                                                                       :where
                                                                                                                       -12)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil)))))
                                                                                                                   ("2"
                                                                                                                    (replace
                                                                                                                     -46)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "derive"
                                                                                                                       -48)
                                                                                                                      (("2"
                                                                                                                        (skosimp*)
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "derive"
                                                                                                                           -49)
                                                                                                                          (("2"
                                                                                                                            (skosimp*)
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "derive"
                                                                                                                               -50)
                                                                                                                              (("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (rewrite
                                                                                                                                   "derive"
                                                                                                                                   -51)
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "derive"
                                                                                                                                       -54)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "check_for_exception")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "check_for_exception_final")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "check_for_exception")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -59
                                                                                                                                                       :hide?
                                                                                                                                                       t)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -57
                                                                                                                                                         :hide?
                                                                                                                                                         t)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -56
                                                                                                                                                           :hide?
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -53
                                                                                                                                                             :hide?
                                                                                                                                                             t)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -51)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "halted")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (use
                                                                                                                                                                     "MP_modeled_lookup_correspondence"
                                                                                                                                                                     ("q1"
                                                                                                                                                                      "cp(astate(tau2!1))"
                                                                                                                                                                      "sMP"
                                                                                                                                                                      "tau2!1"))
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (split
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -1
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case-replace
                                                                                                                                                                               "related_states(mp!1)(tau3!1, tau2!2)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -60)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -33)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "cp(astate(tau3!1)) = halted")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "related_states"
                                                                                                                                                                                       (8
                                                                                                                                                                                        -2))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (split
                                                                                                                                                                                               9)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (skosimp*)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "wf_update_PState"
                                                                                                                                                                                                   ("p"
                                                                                                                                                                                                    "mp!1"))
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil)))))))))))))
                                                                                                                                                                                               ("3"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("4"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("4"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "update_PState")
                                                                                                                                                                                                  (("4"
                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                    nil)))))
                                                                                                                                                                                               ("5"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("6"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "update_PState")
                                                                                                                                                                                                (("6"
                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                  nil)))))))))))))
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (then
                                                                                                                                                                                        (use
                                                                                                                                                                                         "related_states_implies_same_exception")
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)))
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (split
                                                                                                                                                                                             9)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "related_states_preserved_by_raise")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil)))))))))))))))))))
                                                                                                                                                                               ("2"
                                                                                                                                                                                (case
                                                                                                                                                                                 "related_states(mp!1)(tau2!1, tau!2)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (apply
                                                                                                                                                                                   (branch
                                                                                                                                                                                    (split
                                                                                                                                                                                     -58)
                                                                                                                                                                                    ((then
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (assert)))))
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -30
                                                                                                                                                                                     :dir
                                                                                                                                                                                     rl)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (apply
                                                                                                                                                                                       (repeat
                                                                                                                                                                                        (inst?
                                                                                                                                                                                         -45
                                                                                                                                                                                         :where
                                                                                                                                                                                         (-32
                                                                                                                                                                                          -1))))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (split
                                                                                                                                                                                           -45)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -60
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -35
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "cp(astate(tau1!3)) = halted")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "related_states"
                                                                                                                                                                                                       (-2
                                                                                                                                                                                                        2))
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (split
                                                                                                                                                                                                                   3)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "update_PState")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "raise")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil)))))))
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (split
                                                                                                                                                                                                                       2)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (apply
                                                                                                                                                                                                                         (then
                                                                                                                                                                                                                          (use
                                                                                                                                                                                                                           "wf_update_PState"
                                                                                                                                                                                                                           ("p"
                                                                                                                                                                                                                            "mp!1"))
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                                          (use
                                                                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                                                                          (assert)))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                          nil)))
                                                                                                                                                                                                                       ("3"
                                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "raise")
                                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                              nil)))))))
                                                                                                                                                                                                                       ("4"
                                                                                                                                                                                                                        (skosimp*)
                                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "update_PState")
                                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                            nil)))))))))))))))))))))))
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (case-replace
                                                                                                                                                                                                       "v!4 = v!5")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (split
                                                                                                                                                                                                             3)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (use
                                                                                                                                                                                                                 "related_states_preserved_by_raise")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil)))))))))))
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (apply
                                                                                                                                                                                                         (then
                                                                                                                                                                                                          (use
                                                                                                                                                                                                           "related_states_implies_same_exception"
                                                                                                                                                                                                           ("sMP"
                                                                                                                                                                                                            "tau1!3"
                                                                                                                                                                                                            "sAP"
                                                                                                                                                                                                            "tau1!4"))
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -1)))
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (split
                                                                                                                                                                                                           -5)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "derive_bottom_iff_exception_step"
                                                                                                                                                                                                             ("p"
                                                                                                                                                                                                              "mp!1"))
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst?
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               :where
                                                                                                                                                                                                               -36)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -4
                                                                                                                                                                                                                       :dir
                                                                                                                                                                                                                       rl)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil)))))))))))))
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -2)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -5)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (apply-extensionality
                                                                                                                                                                                                                     :hide?
                                                                                                                                                                                                                     t)
                                                                                                                                                                                                                    nil)))))))))))))))))))))))))
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (expand*
                                                                                                                                                                                             "legal_Program_AP"
                                                                                                                                                                                             "legal_Program")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "program_pred")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -38
                                                                                                                                                                                                 "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (split
                                                                                                                                                                                                     -38)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "method_pred")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "ann_class")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "legal_Body_preserved_by_proper_subterm")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst?
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               :where
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst?
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 :where
                                                                                                                                                                                                                 -2)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "<<")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil)))))))))))))))))
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "ann_program")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                        nil)))))))))))))
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "program(mp!1)")
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (expand*
                                                                                                                                                                                               "wf_Program"
                                                                                                                                                                                               "program_pred")
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("3"
                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -36
                                                                                                                                                                                                         :dir
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (expand*
                                                                                                                                                                                                           "wf_Body"
                                                                                                                                                                                                           "subset?"
                                                                                                                                                                                                           "member")
                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                            nil)))))))))))))))))))))))))
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "derive_never_leaves_halted")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst?
                                                                                                                                                                                       -1
                                                                                                                                                                                       :where
                                                                                                                                                                                       -36)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "related_states")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil)))))))))))
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "related_states")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (use
                                                                                                                                                                                     "complete_MVA_never_stuck_after_on_method_MVA")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (use
                                                                                                                                                                                           "on_method_MVA_yields_wf_state")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (split
                                                                                                                                                                                               -2)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (split
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "derive_never_leaves_halted")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst?
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       :where
                                                                                                                                                                                                       -37)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -38)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "complete_MVA_never_stuck_after_derive")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst?
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 :where
                                                                                                                                                                                                                 -37)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "update_PState"
                                                                                                                                                                                                                     3)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -66)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "update_PState"
                                                                                                                                                                                                                         3)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "raise"
                                                                                                                                                                                                                           3)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (flatten)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -66)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (split
                                                                                                                                                                                                                                       3)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                         -66)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil)))
                                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                        nil)))))))))))))))))))))))))))))))))))))
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                    nil)))))
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (typepred
                                                                                                                                                                                                 "mp!1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "wf_and_complete_MP")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    nil)))))))))))))))))))))))))))
                                                                                                                                                                         ("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "mp!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "wf_and_complete_MP")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "complete")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil)))))))
                                                                                                                                                                         ("3"
                                                                                                                                                                          (use
                                                                                                                                                                           "on_method_MVA_yields_wf_AState")
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (expand
                                                                                                                                                                               "related_states")
                                                                                                                                                                              (("3"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "wf_AState")
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                             ("2"
                                                                                                              (replace
                                                                                                               -24)
                                                                                                              (("2"
                                                                                                                (case-replace
                                                                                                                 "excpt(e(v!1)) = v!1")
                                                                                                                (("2"
                                                                                                                  (apply-extensionality
                                                                                                                   :hide?
                                                                                                                   t)
                                                                                                                  nil)))))
                                                                                                             ("3"
                                                                                                              (case-replace
                                                                                                               "get_monitored_class(mp!1) = down(get_class(program(mp!1))(a!1))")
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "lookup_mthd_in_methods_class")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "program(mp!1)")
                                                                                                                (("2"
                                                                                                                  (expand*
                                                                                                                   "wf_Program"
                                                                                                                   "wf_program_has_unique_class_names_def")
                                                                                                                  (("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (split
                                                                                                                           -3)
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "name_get_monitored_class")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil)))
                                                                                                                           ("2"
                                                                                                                            (rewrite
                                                                                                                             "get_monitored_class_in_classes")
                                                                                                                            nil)))))))))))))))))))))))))))))))))))))))))
                                                                                   ("2"
                                                                                    (expand*
                                                                                     "legal_Program_AP"
                                                                                     "legal_Program")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "program_pred")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -29
                                                                                         "ann_class(mp!1)(down(get_class(program(mp!1))(a!1)))")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -29)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "method_pred")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   "ann_method(mp!1)(md!1)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           -6)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "ann_method_exc_set")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -2
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "legal_Body_preserved_by_proper_subterm")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "ann_program(mp!1)"
                                                                                                                     "exc_set(ann_method(mp!1)(md!1))(e(v!1))"
                                                                                                                     "s1(exc_set(ann_method(mp!1)(md!1))(e(v!1)))")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "<<")
                                                                                                                        (("1"
                                                                                                                          (propax)
                                                                                                                          nil)))))))))))))))))))
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "ann_class")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "ann_methods")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (use
                                                                                                                   "lookup_mthd_in_methods_class")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))))))))))))
                                                                                             ("2"
                                                                                              (expand
                                                                                               "ann_program")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                nil)))))))))))))
                                                                                   ("3"
                                                                                    (typepred
                                                                                     "md!1")
                                                                                    (("3"
                                                                                      (expand
                                                                                       "wf_Method")
                                                                                      (("3"
                                                                                        (expand
                                                                                         "method_pred")
                                                                                        (("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (inst?
                                                                                             -6)
                                                                                            (("3"
                                                                                              (expand*
                                                                                               "wf_Body"
                                                                                               "subset?"
                                                                                               "member")
                                                                                              (("3"
                                                                                                (flatten)
                                                                                                nil)))))))))))))))))
                                                                               ("2"
                                                                                (assert)
                                                                                nil)))))))))))))))))))))
                                                           ("2"
                                                            (replace -37)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (split 1)
                                                                  (("1"
                                                                    (propax)
                                                                    nil)
                                                                   ("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (apply
                                                                       (then
                                                                        (use
                                                                         "wf_update_PState"
                                                                         ("p"
                                                                          "ann_program(mp!1)"))
                                                                        (assert)
                                                                        (skosimp*)
                                                                        (expand
                                                                         "update_PState")
                                                                        (use
                                                                         "wf_state_raise")
                                                                        (assert)))
                                                                      nil)))))))))))))
                                                         ("2"
                                                          (lemma
                                                           "derive_yields_wf_state_AP")
                                                          (("2"
                                                            (replace -34)
                                                            (("2"
                                                              (expand
                                                               "derive"
                                                               -36)
                                                              (("2"
                                                                (apply
                                                                 (branch
                                                                  (split -36)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "check_for_exception")
                                                                    (("2"
                                                                      (copy
                                                                       -5)
                                                                      (("2"
                                                                        (inst?
                                                                         -1
                                                                         :where
                                                                         -3)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (apply
                                                                             (branch
                                                                              (split
                                                                               -4)
                                                                              ((then
                                                                                (flatten)
                                                                                (assert)
                                                                                (flatten)
                                                                                (assert)))))
                                                                            (("1"
                                                                              (apply
                                                                               (branch
                                                                                (split
                                                                                 -1)
                                                                                ((then
                                                                                  (flatten)
                                                                                  (assert)
                                                                                  (flatten)
                                                                                  (assert)))))
                                                                              (("1"
                                                                                (inst?
                                                                                 -9
                                                                                 :where
                                                                                 -3)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil)
                                                                                 ("2"
                                                                                  (typepred
                                                                                   "program(mp!1)")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "wf_Program")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "program_pred")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -5
                                                                                           "down(get_class(program(mp!1))(a!1))")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -25
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "wf_Body")
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "ann_program_ext_declared_var_names")
                                                                                                        (("1"
                                                                                                          (auto-rewrite
                                                                                                           "union"
                                                                                                           "member")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst?
                                                                                                               -6)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil)))))))))))))
                                                                                                     ("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "ann_program_add_ghost_var_decls")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "var_names_union")
                                                                                                          (("2"
                                                                                                            (auto-rewrite
                                                                                                             "union"
                                                                                                             "member")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst?
                                                                                                                 -8)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil)))))))))))))))))))))))))))))))))))))))))))
                                                                         ("2"
                                                                          (expand
                                                                           "wf_Body")
                                                                          (("2"
                                                                            (auto-rewrite
                                                                             "union"
                                                                             "member")
                                                                            (("2"
                                                                              (split
                                                                               1)
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "ann_program_ext_declared_var_names")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (apply
                                                                                       (repeat
                                                                                        (rewrite
                                                                                         "var_names"
                                                                                         -1)))
                                                                                      (("1"
                                                                                        (expand
                                                                                         "singleton")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (use
                                                                                                 "cp_new_ghostvar")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil)))))
                                                                                             ("2"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "halted_new_ghostvar")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))))))
                                                                               ("2"
                                                                                (skosimp*)
                                                                                (("2"
                                                                                  (apply
                                                                                   (repeat
                                                                                    (rewrite
                                                                                     "subterm"
                                                                                     -2)))
                                                                                  (("2"
                                                                                    (apply
                                                                                     (branch
                                                                                      (split
                                                                                       -2)
                                                                                      ((assert))))
                                                                                    nil)))))))))))))))))))))))))))))
                                                       ("2"
                                                        (lemma
                                                         "derive_yields_wf_state_AP")
                                                        (("2"
                                                          (inst?
                                                           -1
                                                           :where
                                                           -31)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (use
                                                               "wf_update_PState"
                                                               ("p"
                                                                "ann_program(mp!1)"))
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "related_states")
                                                                  (("1"
                                                                    (propax)
                                                                    nil)))))))))
                                                           ("2"
                                                            (use
                                                             "ann_program_preserves_wf_method")
                                                            (("2"
                                                              (expand*
                                                               "wf_Method"
                                                               "method_pred")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (inst? -6)
                                                                    nil)))))))))))))))
                                                     ("2"
                                                      (replace -14)
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split 1)
                                                            (("1"
                                                              (propax)
                                                              nil)
                                                             ("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (apply
                                                                 (then
                                                                  (use
                                                                   "wf_update_PState"
                                                                   ("p"
                                                                    "mp!1"))
                                                                  (assert)
                                                                  (skosimp*)
                                                                  (expand
                                                                   "update_PState")
                                                                  (use
                                                                   "wf_state_raise")
                                                                  (assert)))
                                                                nil)))))))))))))
                                                   ("2"
                                                    (lemma
                                                     "derive_yields_wf_state_MP")
                                                    (("2"
                                                      (inst? -1 :where -13)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (typepred "mp!1")
                                                          (("2"
                                                            (expand
                                                             "wf_and_complete_MP")
                                                            (("2"
                                                              (propax)
                                                              nil)))))))))))))
                                                 ("2"
                                                  (replace -8)
                                                  (("2"
                                                    (use
                                                     "on_method_MVA_yields_wf_state")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (lemma
                                                         "derive_yields_wf_state_MP")
                                                        (("2"
                                                          (inst? -1 :where -7)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split -1)
                                                              (("1"
                                                                (expand
                                                                 "related_states"
                                                                 -)
                                                                (("1"
                                                                  (flatten)
                                                                  nil)))
                                                               ("2"
                                                                (typepred
                                                                 "mp!1")
                                                                (("2"
                                                                  (expand
                                                                   "wf_and_complete_MP")
                                                                  (("2"
                                                                    (flatten)
                                                                    nil)))))))))))))))))))))
                                               ("2"
                                                (use
                                                 "related_states_preserved_by_catch")
                                                (("2"
                                                  (assert)
                                                  nil))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   unfinished nil 87612 83720 nil nil))
 (on_method_exit_exceptional_preserves_related_states_halted_reached 0
  (on_method_exit_exceptional_preserves_related_states_halted_reached-1 nil
   3430840309 3433217424
   ("" (skosimp*)
    (("" (expand "on_method_exit_exceptional_MP")
      ((""
        (apply (branch (split -2)
                ((then (flatten) (assert) (flatten) (assert)))))
        (("" (skosimp*)
          (("" (expand "check_assertion")
            (("" (skosimp*)
              (("" (use "derive_never_leaves_halted")
                (("" (assert)
                  (("" (hide -5)
                    (("" (use "derive_never_leaves_halted")
                      (("" (assert)
                        (("" (replace -12 2)
                          (("" (replace -11 2)
                            (("" (lift-if)
                              (("" (lift-if)
                                (("" (assert)
                                  (("" (expand "update_PState")
                                    (("" (assert)
                                      ((""
                                        (replace -6)
                                        ((""
                                          (use
                                           "on_method_MVA_never_leaves_halted")
                                          ((""
                                            (assert)
                                            ((""
                                              (typepred "mp!1")
                                              ((""
                                                (expand "wf_and_complete_MP")
                                                ((""
                                                  (propax)
                                                  nil))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   proved
   ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (on_method_MVA_never_leaves_halted formula-decl nil
     MonitoredProgramSemantics nil)
    (ExitExceptional? adt-recognizer-decl "[EventType -> boolean]"
     EventType_adt nil)
    (ExitExceptional adt-constructor-decl "(ExitExceptional?)" EventType_adt
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (excpt? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (e adt-accessor-decl "[(excpt?) -> Excpt]" ValOrExcpt_adt nil)
    (catch const-decl "PState" State nil)
    (derive_never_leaves_halted formula-decl nil MonitoredProgramSemantics
     nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   4116 4000 nil nil))
 (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC1 0
  (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC1-2
   nil 3430840371 3433217426
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "b!1")
        (("" (use "ann_program_preserves_wf_body") nil))))))
    nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (ann_program_preserves_wf_body formula-decl nil AnnotateProgramProperties
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (Body type-decl nil Body_adt nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil))
   2001 1940 nil nil)
  (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC1-1
   nil 3430821302 nil ("" (subtype-tcc) nil nil) unchecked nil nil nil nil
   nil))
 (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC2 0
  (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC2-2
   nil 3430840415 3433217431
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "md!1")
        (("" (expand "wf_Method")
          (("" (expand "method_pred")
            (("" (expand "wf_Body")
              (("" (rewrite "ann_program_ext_declared_var_names")
                (("" (auto-rewrite "union" "member")
                  (("" (assert)
                    (("" (flatten)
                      (("" (rewrite "ann_program_add_ghost_var_decls")
                        (("" (rewrite "var_names_union")
                          (("" (assert)
                            (("" (split 3)
                              (("1"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst?)
                                  (("1" (flatten)
                                    (("1" (inst?) (("1" (assert) nil)))))))
                                 ("2" (inst?)
                                  (("2" (flatten)
                                    (("2" (inst? -4)
                                      (("2" (assert) nil)))))))))
                               ("2"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -3)
                                  (("1" (flatten)
                                    (("1" (inst? -3) (("1" (assert) nil)))))))
                                 ("2" (inst? -4)
                                  (("2" (flatten)
                                    (("2" (inst? -5)
                                      (("2" (assert) nil)))))))))
                               ("3" (skosimp*)
                                (("3" (inst? -4) (("3" (assert) nil)))))
                               ("4" (skosimp*)
                                (("4" (inst? -6) (("4" (assert) nil)))))
                               ("5"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -6)
                                  (("1" (flatten)
                                    (("1" (inst? -6) (("1" (assert) nil)))))))
                                 ("2" (inst? -7)
                                  (("2" (flatten)
                                    (("2" (inst? -8)
                                      (("2" (assert) nil)))))))))
                               ("6"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -7)
                                  (("1" (flatten)
                                    (("1" (inst? -7) (("1" (assert) nil)))))))
                                 ("2" (inst? -8)
                                  (("2" (flatten)
                                    (("2" (inst? -9)
                                      (("2" (assert) nil)))))))))
                               ("7"
                                (apply (then
                                        (skosimp*)
                                        (branch (split 1) ((skosimp*)))))
                                (("1" (inst? -8)
                                  (("1" (flatten)
                                    (("1" (inst? -8) (("1" (assert) nil)))))))
                                 ("2" (inst? -9)
                                  (("2" (flatten)
                                    (("2" (inst? -10)
                                      (("2" (assert) nil)))))))))
                               ("8" (skosimp*)
                                (("8" (inst? -9) (("8" (assert) nil)))))
                               ("9" (skosimp*)
                                (("9" (inst? -11)
                                  (("9" (assert)
                                    nil))))))))))))))))))))))))))))))))
    nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (new_gvds const-decl "finite_set[Decl]" NewVariableDeclarations nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (var_names_union formula-decl nil ProgramFunctions nil)
    (ann_program_add_ghost_var_decls formula-decl nil
     AnnotateProgramProperties nil)
    (union const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (ann_program_ext_declared_var_names formula-decl nil
     AnnotateProgramProperties nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil))
   4724 4490 nil nil)
  (on_method_exit_exceptional_preserves_related_states_not_annotated_TCC2-1
   nil 3430821302 nil ("" (subtype-tcc) nil nil) unchecked nil nil nil nil
   nil))
 (on_method_exit_exceptional_preserves_related_states_not_annotated 0
  (on_method_exit_exceptional_preserves_related_states_not_annotated-2 nil
   3431170789 3433217458
   ("" (skosimp*)
    (("" (expand "on_method_exit_exceptional_MP")
      (("" (expand "on_method_exit_exceptional")
        (("" (assert)
          ((""
            (apply (then (use "related_states_implies_same_exception")
                    (assert) (replace -1)))
            (("" (expand "check_assertion")
              (("" (split -9)
                (("1" (flatten)
                  (("1" (assert)
                    (("1" (skosimp*)
                      (("1" (expand "lookup_inv")
                        (("1" (expand "id")
                          (("1" (use "get_class_equivalence")
                            (("1" (assert)
                              (("1" (replace -1)
                                (("1" (replace -25 :dir rl)
                                  (("1" (replace -7)
                                    (("1"
                                      (case
                                       "related_states(mp!1)(update_PState(sMP1!1, catch), update_PState(sAP1!1, catch))")
                                      (("1"
                                        (copy -21)
                                        (("1"
                                          (apply
                                           (repeat
                                            (inst? -1 :where (-6 -25))))
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (expand "on_method_MVA")
                                                (("1"
                                                  (lift-if -8)
                                                  (("1"
                                                    (split -8)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (use
                                                           "lookup_mthd_in_methods_class")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace -26)
                                                              (("1"
                                                                (typepred
                                                                 "program(mp!1)")
                                                                (("1"
                                                                  (use
                                                                   "wf_program_methods_only_in_one_class")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "wf_program_methods_only_in_one_class")
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "get_monitored_class(mp!1)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "get_class_in_classes")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "get_monitored_class_in_classes")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3
                                                                                       :dir
                                                                                       rl)
                                                                                      (("1"
                                                                                        (use
                                                                                         "name_get_monitored_class")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (case-replace
                                                         "tau2!1 = tau1!1"
                                                         :hide?
                                                         t)
                                                        (("2"
                                                          (apply
                                                           (repeat
                                                            (inst?
                                                             -22
                                                             :where
                                                             (-11 -29))))
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split -22)
                                                              (("1"
                                                                (case
                                                                 "cp(astate(tau1!2)) = halted")
                                                                (("1"
                                                                  (expand
                                                                   "related_states")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (case
                                                                             "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   10)
                                                                                  (("1"
                                                                                    (case
                                                                                     "wf_state(ann_program(mp!1))(tau2!2)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -44)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "wf_update_PState"
                                                                                                 ("p"
                                                                                                  "ann_program(mp!1)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_PState")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "wf_state_raise")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -42)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (apply
                                                                                                 (then
                                                                                                  (use
                                                                                                   "wf_update_PState"
                                                                                                   ("p"
                                                                                                    "ann_program(mp!1)"))
                                                                                                  (assert)
                                                                                                  (skosimp*)
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (use
                                                                                                   "wf_state_raise")
                                                                                                  (assert)))
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -44)
                                                                                      (("2"
                                                                                        (lift-if
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand*
                                                                                           "update_PState"
                                                                                           "raise")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -42)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (skosimp*)
                                                                                    (("3"
                                                                                      (replace
                                                                                       -24)
                                                                                      (("3"
                                                                                        (lift-if
                                                                                         1)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "update_PState")
                                                                                          (("3"
                                                                                            (replace
                                                                                             -22)
                                                                                            (("3"
                                                                                              (lift-if)
                                                                                              (("3"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (case
                                                                               "wf_state(mp!1)(tau3!1)")
                                                                              (("1"
                                                                                (replace
                                                                                 -24)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_update_PState"
                                                                                           ("p"
                                                                                            "mp!1"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "update_PState")
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "wf_state_raise")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (replace
                                                                                         -23)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "update_PState")
                                                                                          (("3"
                                                                                            (lift-if)
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("4"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("4"
                                                                                          (flatten)
                                                                                          (("4"
                                                                                            (replace
                                                                                             -23)
                                                                                            (("4"
                                                                                              (lift-if)
                                                                                              (("4"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -22)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (apply
                                                                                           (then
                                                                                            (use
                                                                                             "wf_update_PState"
                                                                                             ("p"
                                                                                              "mp!1"))
                                                                                            (assert)
                                                                                            (skosimp*)
                                                                                            (expand
                                                                                             "update_PState")
                                                                                            (use
                                                                                             "wf_state_raise")
                                                                                            (assert)))
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (case
                                                                     "related_states(mp!1)(tau3!1, tau2!2)")
                                                                    (("1"
                                                                      (case
                                                                       "cp(astate(tau3!1)) = halted")
                                                                      (("1"
                                                                        (expand
                                                                         "related_states")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               11)
                                                                              (("1"
                                                                                (replace
                                                                                 -25)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_update_PState"
                                                                                           ("p"
                                                                                            "mp!1"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "update_PState")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -44)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (replace
                                                                                 -26)
                                                                                (("3"
                                                                                  (expand
                                                                                   "update_PState")
                                                                                  (("3"
                                                                                    (lift-if)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (skosimp*)
                                                                                (("4"
                                                                                  (replace
                                                                                   -46)
                                                                                  (("4"
                                                                                    (lift-if)
                                                                                    (("4"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("5"
                                                                                (skosimp*)
                                                                                (("5"
                                                                                  (replace
                                                                                   -26)
                                                                                  (("5"
                                                                                    (lift-if)
                                                                                    (("5"
                                                                                      (assert)
                                                                                      (("5"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("5"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (apply
                                                                         (then
                                                                          (use
                                                                           "related_states_implies_same_exception")
                                                                          (assert)
                                                                          (replace
                                                                           -1)))
                                                                        (("2"
                                                                          (replace
                                                                           -34)
                                                                          (("2"
                                                                            (replace
                                                                             -17)
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (split
                                                                                   7)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (use
                                                                                       "related_states_preserved_by_raise")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replace
                                                                       -31)
                                                                      (("2"
                                                                        (replace
                                                                         -14)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (split
                                                                                 1)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (split
                                                                                         2)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skosimp*)
                                                                                          (("2"
                                                                                            (use
                                                                                             "related_states_preserved_by_raise")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand*
                                                                 "legal_Program_AP"
                                                                 "legal_Program")
                                                                (("2"
                                                                  (expand
                                                                   "program_pred")
                                                                  (("2"
                                                                    (inst
                                                                     -16
                                                                     "down(get_class(program(mp!1))(a!1))")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "ann_program"
                                                                         4)
                                                                        (("2"
                                                                          (expand
                                                                           "id")
                                                                          (("2"
                                                                            (expand
                                                                             "ann_class"
                                                                             4)
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (use
                                                                                   "get_class_in_classes")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (typepred
                                                                 "program(mp!1)")
                                                                (("3"
                                                                  (expand*
                                                                   "wf_Program"
                                                                   "program_pred")
                                                                  (("3"
                                                                    (flatten)
                                                                    (("3"
                                                                      (use
                                                                       "get_class_in_classes")
                                                                      (("3"
                                                                        (inst?)
                                                                        (("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (flatten)
                                                                            (("3"
                                                                              (replace
                                                                               -34
                                                                               :dir
                                                                               rl)
                                                                              (("3"
                                                                                (expand*
                                                                                 "wf_Body"
                                                                                 "subset?"
                                                                                 "member")
                                                                                (("3"
                                                                                  (flatten)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand*
                                                 "legal_Program_AP"
                                                 "legal_Program")
                                                (("2"
                                                  (expand "program_pred")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (split -15)
                                                      (("1"
                                                        (expand "method_pred")
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split -2)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst? -6)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (use
                                                                   "lookup_mthd_in_methods_class")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "ann_program"
                                                         1)
                                                        (("2"
                                                          (expand "id")
                                                          (("2"
                                                            (expand
                                                             "ann_class"
                                                             1)
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (use
                                                                   "get_class_in_classes")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (typepred "md!1")
                                                (("3"
                                                  (expand "wf_Method")
                                                  (("3"
                                                    (flatten)
                                                    (("3"
                                                      (expand "method_pred")
                                                      (("3"
                                                        (flatten)
                                                        (("3"
                                                          (inst? -6)
                                                          (("3"
                                                            (expand*
                                                             "wf_Body"
                                                             "subset?"
                                                             "member")
                                                            (("3"
                                                              (flatten)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (use
                                         "related_states_preserved_by_catch")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten) (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (related_states const-decl "boolean" Equivalence nil)
    (catch const-decl "PState" State nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (bijective? const-decl "bool" functions nil)
    (update_PState const-decl "(update_PState_type)" AnnotatedProgramSemantics
     nil)
    (excpt? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (e adt-accessor-decl "[(excpt?) -> Excpt]" ValOrExcpt_adt nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (related_states_preserved_by_raise formula-decl nil
     RelatedStatesProperties nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (wf_state_raise formula-decl nil State nil)
    (raise const-decl "PState" State nil)
    (wf_update_PState formula-decl nil AnnotatedProgramSemantics nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (halted const-decl "CP" MVA nil)
    (program_pred const-decl "bool" FullProgramRestriction nil)
    (id_preserves application-judgement "S" identity_props nil)
    (ann_class const-decl "Class" AnnotateClass nil)
    (legal_Program_AP const-decl "boolean" LegalAnnotatedProgramRestriction
     nil)
    (legal_Program const-decl "bool" LegalProgramRestriction nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (wf_program_methods_only_in_one_class formula-decl nil WellFormedProgram
     nil)
    (wf_program_methods_only_in_one_class const-decl "boolean"
     WellFormedProgram nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (get_monitored_class_in_classes formula-decl nil MonitoredProgram nil)
    (name_get_monitored_class formula-decl nil MonitoredProgram nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (on_method_MVA const-decl "MPState" MonitoredProgramSemantics nil)
    (method_pred const-decl "bool" FullProgramRestriction nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (related_states_preserved_by_catch formula-decl nil
     RelatedStatesProperties nil)
    (get_class_equivalence formula-decl nil AnnotateProgramProperties nil)
    (lookup_inv const-decl "Expr" ProgramFunctions nil)
    (related_states_implies_same_exception formula-decl nil
     RelatedStatesProperties nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (Method type-eq-decl nil Program nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Body type-decl nil Body_adt nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil) (lift type-decl nil lift_adt nil)
    (Excpt type-decl nil Excpt_adt nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil))
   27451 26540 t nil)
  (on_method_exit_exceptional_preserves_related_states_not_annotated-1 nil
   3430840486 3431168394
   ("" (skosimp*)
    (("" (expand "on_method_exit_exceptional_MP")
      (("" (expand "on_method_exit_exceptional")
        (("" (assert)
          ((""
            (apply (then (use "related_states_implies_same_exception")
                    (assert) (replace -1)))
            (("" (expand "check_assertion")
              (("" (split -9)
                (("1" (flatten)
                  (("1" (assert)
                    (("1" (skosimp*)
                      (("1" (expand "lookup_inv")
                        (("1" (expand "id")
                          (("1" (use "get_class_equivalence")
                            (("1" (assert)
                              (("1" (replace -1)
                                (("1" (replace -25 :dir rl)
                                  (("1" (replace -7)
                                    (("1"
                                      (case
                                       "related_states(mp!1)(update_PState(sMP1!1, catch), update_PState(sAP1!1, catch))")
                                      (("1"
                                        (copy -21)
                                        (("1"
                                          (apply
                                           (repeat
                                            (inst? -1 :where (-6 -25))))
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (expand "on_method_MVA")
                                                (("1"
                                                  (lift-if -8)
                                                  (("1"
                                                    (split -8)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (use
                                                           "lookup_mthd_in_methods_class")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace -26)
                                                              (("1"
                                                                (typepred
                                                                 "program(mp!1)")
                                                                (("1"
                                                                  (use
                                                                   "wf_program_methods_only_in_one_class")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "wf_program_methods_only_in_one_class")
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "get_monitored_class(mp!1)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (use
                                                                               "get_class_in_classes")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (use
                                                                                   "get_monitored_class_in_classes")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3
                                                                                       :dir
                                                                                       rl)
                                                                                      (("1"
                                                                                        (use
                                                                                         "name_get_monitored_class")
                                                                                        nil)))))))))))))))))))))))))))))))))))
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (case-replace
                                                         "tau2!1 = tau1!1"
                                                         :hide?
                                                         t)
                                                        (("2"
                                                          (apply
                                                           (repeat
                                                            (inst?
                                                             -22
                                                             :where
                                                             (-11 -29))))
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (split -22)
                                                              (("1"
                                                                (case
                                                                 "cp(astate(tau1!2)) = halted")
                                                                (("1"
                                                                  (expand
                                                                   "related_states")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (case
                                                                             "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   10)
                                                                                  (("1"
                                                                                    (case
                                                                                     "wf_state(ann_program(mp!1))(tau2!2)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -44)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "wf_update_PState"
                                                                                                 ("p"
                                                                                                  "ann_program(mp!1)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "update_PState")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "wf_state_raise")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil)))))))))))))))))))))
                                                                                     ("2"
                                                                                      (replace
                                                                                       -42)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (apply
                                                                                                 (then
                                                                                                  (use
                                                                                                   "wf_update_PState"
                                                                                                   ("p"
                                                                                                    "ann_program(mp!1)"))
                                                                                                  (assert)
                                                                                                  (skosimp*)
                                                                                                  (expand
                                                                                                   "update_PState")
                                                                                                  (use
                                                                                                   "wf_state_raise")
                                                                                                  (assert)))
                                                                                                nil)))))))))))))
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -44)
                                                                                      (("2"
                                                                                        (lift-if
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand*
                                                                                           "update_PState"
                                                                                           "raise")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -42)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil)))))))))))))))
                                                                                   ("3"
                                                                                    (skosimp*)
                                                                                    (("3"
                                                                                      (replace
                                                                                       -24)
                                                                                      (("3"
                                                                                        (lift-if
                                                                                         1)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "update_PState")
                                                                                          (("3"
                                                                                            (replace
                                                                                             -22)
                                                                                            (("3"
                                                                                              (lift-if)
                                                                                              (("3"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))))
                                                                             ("2"
                                                                              (case
                                                                               "wf_state(mp!1)(tau3!1)")
                                                                              (("1"
                                                                                (replace
                                                                                 -24)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_update_PState"
                                                                                           ("p"
                                                                                            "mp!1"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "update_PState")
                                                                                                (("2"
                                                                                                  (use
                                                                                                   "wf_state_raise")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil)))))))))))))
                                                                                       ("3"
                                                                                        (replace
                                                                                         -23)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "update_PState")
                                                                                          (("3"
                                                                                            (lift-if)
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil)))))))
                                                                                       ("4"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("4"
                                                                                          (flatten)
                                                                                          (("4"
                                                                                            (replace
                                                                                             -23)
                                                                                            (("4"
                                                                                              (lift-if)
                                                                                              (("4"
                                                                                                (assert)
                                                                                                nil)))))))))))))))))
                                                                               ("2"
                                                                                (replace
                                                                                 -22)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (apply
                                                                                           (then
                                                                                            (use
                                                                                             "wf_update_PState"
                                                                                             ("p"
                                                                                              "mp!1"))
                                                                                            (assert)
                                                                                            (skosimp*)
                                                                                            (expand
                                                                                             "update_PState")
                                                                                            (use
                                                                                             "wf_state_raise")
                                                                                            (assert)))
                                                                                          nil)))))))))))))))))))))))))
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (case
                                                                     "related_states(mp!1)(tau3!1, tau2!2)")
                                                                    (("1"
                                                                      (case
                                                                       "cp(astate(tau3!1)) = halted")
                                                                      (("1"
                                                                        (expand
                                                                         "related_states")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               11)
                                                                              (("1"
                                                                                (replace
                                                                                 -25)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_update_PState"
                                                                                           ("p"
                                                                                            "mp!1"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "update_PState")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil)))))))))))))))))))
                                                                               ("2"
                                                                                (replace
                                                                                 -44)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        nil)))))))))
                                                                               ("3"
                                                                                (replace
                                                                                 -26)
                                                                                (("3"
                                                                                  (expand
                                                                                   "update_PState")
                                                                                  (("3"
                                                                                    (lift-if)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil)))))))
                                                                               ("4"
                                                                                (skosimp*)
                                                                                (("4"
                                                                                  (replace
                                                                                   -46)
                                                                                  (("4"
                                                                                    (lift-if)
                                                                                    (("4"
                                                                                      (assert)
                                                                                      nil)))))))
                                                                               ("5"
                                                                                (skosimp*)
                                                                                (("5"
                                                                                  (replace
                                                                                   -26)
                                                                                  (("5"
                                                                                    (lift-if)
                                                                                    (("5"
                                                                                      (assert)
                                                                                      (("5"
                                                                                        (expand
                                                                                         "update_PState")
                                                                                        (("5"
                                                                                          (propax)
                                                                                          nil)))))))))))))))))))
                                                                       ("2"
                                                                        (apply
                                                                         (then
                                                                          (use
                                                                           "related_states_implies_same_exception")
                                                                          (assert)
                                                                          (replace
                                                                           -1)))
                                                                        (("2"
                                                                          (replace
                                                                           -34)
                                                                          (("2"
                                                                            (replace
                                                                             -17)
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (split
                                                                                   7)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (use
                                                                                       "related_states_preserved_by_raise")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil)))))))))))))))))))
                                                                     ("2"
                                                                      (replace
                                                                       -31)
                                                                      (("2"
                                                                        (replace
                                                                         -14)
                                                                        (("2"
                                                                          (lift-if)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (split
                                                                                 1)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil)
                                                                                 ("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (split
                                                                                         2)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil)))
                                                                                         ("2"
                                                                                          (skosimp*)
                                                                                          (("2"
                                                                                            (use
                                                                                             "related_states_preserved_by_raise")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil)))))))))))))))))))))))))))))))
                                                               ("2"
                                                                (expand*
                                                                 "legal_Program_AP"
                                                                 "legal_Program")
                                                                (("2"
                                                                  (expand
                                                                   "program_pred")
                                                                  (("2"
                                                                    (inst
                                                                     -16
                                                                     "down(get_class(program(mp!1))(a!1))")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "ann_program"
                                                                         4)
                                                                        (("2"
                                                                          (expand
                                                                           "ann_class"
                                                                           4)
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (use
                                                                                 "get_class_in_classes")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))))))))))))
                                                               ("3"
                                                                (typepred
                                                                 "program(mp!1)")
                                                                (("3"
                                                                  (expand*
                                                                   "wf_Program"
                                                                   "program_pred")
                                                                  (("3"
                                                                    (flatten)
                                                                    (("3"
                                                                      (use
                                                                       "get_class_in_classes")
                                                                      (("3"
                                                                        (inst?)
                                                                        (("3"
                                                                          (assert)
                                                                          (("3"
                                                                            (flatten)
                                                                            (("3"
                                                                              (replace
                                                                               -33
                                                                               :dir
                                                                               rl)
                                                                              (("3"
                                                                                (expand*
                                                                                 "wf_Body"
                                                                                 "subset?"
                                                                                 "member")
                                                                                (("3"
                                                                                  (flatten)
                                                                                  nil)))))))))))))))))))))))))))))))))))
                                               ("2"
                                                (expand*
                                                 "legal_Program_AP"
                                                 "legal_Program")
                                                (("2"
                                                  (expand "program_pred")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (split -15)
                                                      (("1"
                                                        (expand "method_pred")
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split -2)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst? -6)
                                                                    nil)))
                                                                 ("2"
                                                                  (use
                                                                   "lookup_mthd_in_methods_class")
                                                                  (("2"
                                                                    (assert)
                                                                    nil)))))))))))))
                                                       ("2"
                                                        (expand
                                                         "ann_program"
                                                         1)
                                                        (("2"
                                                          (expand
                                                           "ann_class"
                                                           1)
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (use
                                                                 "get_class_in_classes")
                                                                (("2"
                                                                  (assert)
                                                                  nil)))))))))))))))))))
                                               ("3"
                                                (typepred "md!1")
                                                (("3"
                                                  (expand "wf_Method")
                                                  (("3"
                                                    (expand "method_pred")
                                                    (("3"
                                                      (flatten)
                                                      (("3"
                                                        (inst? -6)
                                                        (("3"
                                                          (expand*
                                                           "wf_Body"
                                                           "subset?"
                                                           "member")
                                                          (("3"
                                                            (flatten)
                                                            nil)))))))))))))))))))
                                         ("2"
                                          (skosimp*)
                                          (("2"
                                            (expand "id")
                                            (("2"
                                              (use
                                               "ann_program_preserves_wf_body")
                                              nil)))))))
                                       ("2"
                                        (use
                                         "related_states_preserved_by_catch")
                                        (("2"
                                          (assert)
                                          nil)))))))))))))))))))))))))
                 ("2" (flatten) (("2" (assert) nil))))))))))))))))
    nil)
   unfinished nil 17487 15390 nil nil))
 (method_call_lemma_TCC1 0
  (method_call_lemma_TCC1-2 nil 3430840524 3433217462
   ("" (skosimp*)
    (("" (typepred "b!1")
      ((""
        (use "wf_Body_preserved_by_proper_subterm"
             ("b1" "b!1" "b2" "tgt(b!1)"))
        (("" (assert) (("" (expand "<<") (("" (propax) nil))))))))))
    nil)
   proved
   ((wf_set_stmts const-decl "bool" WfSetStmts nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (Body type-decl nil Body_adt nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Decl type-eq-decl nil Program nil) (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (tgt adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (wf_Body_preserved_by_proper_subterm formula-decl nil WellFormedProgram
     nil))
   3702 1780 nil nil)
  (method_call_lemma_TCC1-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC2 0
  (method_call_lemma_TCC2-2 nil 3430840550 3433217464
   ("" (skosimp*)
    (("" (typepred "b!1")
      ((""
        (use "wf_Body_preserved_by_proper_subterm"
             ("b1" "b!1" "b2" "arg(b!1)"))
        (("" (assert) (("" (expand "<<") (("" (propax) nil))))))))))
    nil)
   proved
   ((wf_set_stmts const-decl "bool" WfSetStmts nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (Body type-decl nil Body_adt nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Decl type-eq-decl nil Program nil) (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (arg adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (wf_Body_preserved_by_proper_subterm formula-decl nil WellFormedProgram
     nil))
   1861 1800 nil nil)
  (method_call_lemma_TCC2-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC3 0
  (method_call_lemma_TCC3-3 nil 3431170871 3433217467
   ("" (skosimp*)
    (("" (typepred "program(mp!1)")
      (("" (expand "wf_Program")
        (("" (flatten)
          (("" (hide -6)
            (("" (expand "program_pred")
              (("" (copy -11)
                (("" (copy -11)
                  (("" (expand "lookup_mthd" (-1 -2))
                    (("" (lift-if)
                      (("" (assert)
                        (("" (split -2)
                          (("1" (flatten)
                            (("1" (assert)
                              (("1"
                                (inst -8
                                 "down(get_class(program(mp!1))(a1!1))")
                                (("1" (assert)
                                  (("1" (flatten)
                                    (("1" (inst? -9)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "method_pred")
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((wf_set_stmts const-decl "bool" WfSetStmts nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Body type-decl nil Body_adt nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Decl type-eq-decl nil Program nil) (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil))
   2655 2570 t nil)
  (method_call_lemma_TCC3-2 nil 3430840578 3431168400
   ("" (skosimp*)
    (("" (typepred "program(mp!1)")
      (("" (expand "wf_Program")
        (("" (flatten)
          (("" (expand "program_pred")
            (("" (copy -11)
              (("" (copy -11)
                (("" (expand "lookup_mthd" (-1 -2))
                  (("" (lift-if)
                    (("" (assert)
                      (("" (split -2)
                        (("1" (flatten)
                          (("1" (assert)
                            (("1"
                              (inst -8 "down(get_class(program(mp!1))(a1!1))")
                              (("1" (assert)
                                (("1" (flatten)
                                  (("1" (inst? -9)
                                    (("1" (assert)
                                      (("1"
                                        (expand "method_pred")
                                        (("1" (propax) nil)))))))))))))))))
                         ("2" (propax) nil))))))))))))))))))))))
    nil)
   unfinished nil 2334 2270 nil nil)
  (method_call_lemma_TCC3-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC4 0
  (method_call_lemma_TCC4-3 nil 3431170892 3433217469
   (";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
    (skosimp*)
    ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
      (typepred "program(mp!1)")
      ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
        (expand "wf_Program")
        ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
          (flatten)
          ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
            (hide -6)
            ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
              (expand "program_pred")
              ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
                (copy -13)
                ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
                  (copy -13)
                  ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
                    (expand "lookup_mthd" (-1 -2))
                    ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
                      (lift-if)
                      ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
                        (assert)
                        ((";;; Proof method_call_lemma_TCC4-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC4"
                          (split -2)
                          (("1" (flatten)
                            (("1" (assert)
                              (("1"
                                (inst -8
                                 "down(get_class(program(mp!1))(a1!1))")
                                (("1" (assert)
                                  (("1" (flatten)
                                    (("1" (inst? -9)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "method_pred")
                                          (("1" (propax) nil)))))))))))))))))
                           ("2" (propax) nil))))))))))))))))))))))))
    ";;; developed with shostak decision procedures")
   proved
   ((wf_set_stmts const-decl "bool" WfSetStmts nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Body type-decl nil Body_adt nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Decl type-eq-decl nil Program nil) (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil))
   2680 2590 nil nil)
  (method_call_lemma_TCC4-2 nil 3430840619 3431168402
   ("" (skosimp*)
    (("" (typepred "program(mp!1)")
      (("" (expand "wf_Program")
        (("" (flatten)
          (("" (expand "program_pred")
            (("" (copy -13)
              (("" (copy -13)
                (("" (expand "lookup_mthd" (-1 -2))
                  (("" (lift-if)
                    (("" (assert)
                      (("" (split -2)
                        (("1" (flatten)
                          (("1" (assert)
                            (("1"
                              (inst -8 "down(get_class(program(mp!1))(a1!1))")
                              (("1" (assert)
                                (("1" (flatten)
                                  (("1" (inst? -9)
                                    (("1" (assert)
                                      (("1"
                                        (expand "method_pred")
                                        (("1" (propax) nil)))))))))))))))))
                         ("2" (propax) nil))))))))))))))))))))))
    nil)
   unfinished nil 2331 2280 nil nil)
  (method_call_lemma_TCC4-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC5 0
  (method_call_lemma_TCC5-2 nil 3430840660 3433217471
   ("" (skosimp*) (("" (assert) nil)) nil) proved
   ((posint_plus_nnint_is_posint application-judgement "posint" integers nil))
   1585 1530 nil nil)
  (method_call_lemma_TCC5-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC6 0
  (method_call_lemma_TCC6-2 nil 3430840685 3433217473
   ("" (skosimp*)
    (("" (expand "id") (("" (use "ann_program_preserves_wf_body") nil)))) nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (ann_program_preserves_wf_body formula-decl nil AnnotateProgramProperties
     nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil))
   2057 2000 nil nil)
  (method_call_lemma_TCC6-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC7 0
  (method_call_lemma_TCC7-2 nil 3430840711 3433217475
   ("" (skosimp*)
    (("" (expand "id") (("" (use "ann_program_preserves_wf_body") nil)))) nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (ann_program_preserves_wf_body formula-decl nil AnnotateProgramProperties
     nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (tgt adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil))
   2041 1960 nil nil)
  (method_call_lemma_TCC7-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC8 0
  (method_call_lemma_TCC8-2 nil 3430840735 3433217477
   ("" (skosimp*)
    (("" (expand "id") (("" (use "ann_program_preserves_wf_body") nil)))) nil)
   proved
   ((id const-decl "(bijective?[T, T])" identity nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (ann_program_preserves_wf_body formula-decl nil AnnotateProgramProperties
     nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Val type-decl nil Val_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Excpt type-decl nil Excpt_adt nil) (lift type-decl nil lift_adt nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (Body type-decl nil Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Method type-eq-decl nil Program nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (arg adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil))
   2073 1980 nil nil)
  (method_call_lemma_TCC8-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC9 0
  (method_call_lemma_TCC9-2 nil 3430840775 3433217479
   ("" (skosimp*)
    (("" (expand "id")
      (("" (typepred "ann_program(mp!1)")
        (("" (expand "wf_Program")
          (("" (flatten)
            (("" (expand "program_pred")
              (("" (copy -10)
                (("" (copy -10)
                  (("" (expand "lookup_mthd" (-1 -2))
                    (("" (lift-if)
                      (("" (assert)
                        (("" (split -2)
                          (("1" (flatten)
                            (("1" (assert)
                              (("1"
                                (inst -8
                                 "down(get_class(ann_program(mp!1))(a2!1))")
                                (("1" (assert)
                                  (("1" (flatten)
                                    (("1" (inst? -9)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "method_pred")
                                          (("1" (propax) nil)))))))))))))))))
                           ("2" (propax) nil))))))))))))))))))))))))
    nil)
   proved ((id const-decl "(bijective?[T, T])" identity nil)) 1455 1390 nil
   nil)
  (method_call_lemma_TCC9-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC10 0
  (method_call_lemma_TCC10-3 nil 3431170913 3433217482
   (";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
    (skosimp*)
    ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
      (hide -16)
      ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
        (expand "id")
        ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
          (typepred "ann_program(mp!1)")
          ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
            (expand "wf_Program")
            ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
              (flatten)
              ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
                (hide -6)
                ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
                  (expand "program_pred")
                  ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
                    (copy -11)
                    ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
                      (copy -11)
                      ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
                        (expand "lookup_mthd" (-1 -2))
                        ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
                          (lift-if)
                          ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
                            (assert)
                            ((";;; Proof method_call_lemma_TCC10-2 for formula MethodCallsPreserveRelatedState.method_call_lemma_TCC10"
                              (split -2)
                              (("1" (flatten)
                                (("1" (assert)
                                  (("1"
                                    (inst -8
                                     "down(get_class(ann_program(mp!1))(a2!1))")
                                    (("1" (assert)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (inst? -9)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "method_pred")
                                              (("1"
                                                (propax)
                                                nil)))))))))))))))))
                               ("2" (propax) nil))))))))))))))))))))))))))))
    ";;; developed with shostak decision procedures")
   proved
   ((wf_set_stmts const-decl "bool" WfSetStmts nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Body type-decl nil Body_adt nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Method type-eq-decl nil Program nil) (Excpt type-decl nil Excpt_adt nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Decl type-eq-decl nil Program nil) (JType type-decl nil JType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (Val type-decl nil Val_adt nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil)
    (id const-decl "(bijective?[T, T])" identity nil))
   3306 3190 nil nil)
  (method_call_lemma_TCC10-2 nil 3430840804 3431168414
   ("" (skosimp*)
    (("" (hide -16)
      (("" (expand "id")
        (("" (typepred "ann_program(mp!1)")
          (("" (expand "wf_Program")
            (("" (flatten)
              (("" (expand "program_pred")
                (("" (copy -11)
                  (("" (copy -11)
                    (("" (expand "lookup_mthd" (-1 -2))
                      (("" (lift-if)
                        (("" (assert)
                          (("" (split -2)
                            (("1" (flatten)
                              (("1" (assert)
                                (("1"
                                  (inst -8
                                   "down(get_class(ann_program(mp!1))(a2!1))")
                                  (("1" (assert)
                                    (("1" (flatten)
                                      (("1"
                                        (inst? -9)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "method_pred")
                                            (("1"
                                              (propax)
                                              nil)))))))))))))))))
                             ("2" (propax) nil))))))))))))))))))))))))))
    nil)
   unfinished nil 2811 2690 nil nil)
  (method_call_lemma_TCC10-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC11 0
  (method_call_lemma_TCC11-2 nil 3430840837 3433217519
   ("" (subtype-tcc) nil nil) proved
   ((wf_set_stmts const-decl "bool" WfSetStmts nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (MVA_aut_vars_are_not_prog_vars const-decl "boolean" MonitoredProgram nil)
    (MVA_prog_vars_are_fields const-decl "boolean" MonitoredProgram nil)
    (MVA_events_correspond_to_methods const-decl "boolean" MonitoredProgram
     nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (trap_state const-decl "boolean" MVAProperties nil)
    (deterministic const-decl "boolean" MVAProperties nil)
    (total const-decl "boolean" MVAProperties nil)
    (complete const-decl "boolean" MVAProperties nil)
    (methods const-decl "finite_set[Method]" ProgramFunctions nil)
    (no_change const-decl "bool" WfSetStmts nil)
    (only_JMLExc const-decl "bool" WfSetStmts nil)
    (no_exc const-decl "bool" WfSetStmts nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (program_method_pred const-decl "bool" ProgramRestriction nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (wf_method_all_lvars_disjoint const-decl "boolean" WellFormedProgram nil)
    (var_names def-decl "[Name -> boolean]" ProgramFunctions nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (defined? const-decl "boolean" ValProp nil)
    (class_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (method_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (var_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (wf_store const-decl "boolean" State nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (is_field const-decl "boolean" State nil)
    (getFieldDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_local const-decl "boolean" State nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (wf_state const-decl "boolean" State nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil) (lift type-decl nil lift_adt nil)
    (Excpt type-decl nil Excpt_adt nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_ghost const-decl "boolean" SemanticsJML nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (update_PState const-decl "(update_PState_type)" AnnotatedProgramSemantics
     nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (Method type-eq-decl nil Program nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (MVA_cp_modeled? const-decl "boolean" Equivalence nil)
    (MVA_cps_modeled? const-decl "boolean" Equivalence nil)
    (MVA_vars_modeled? const-decl "boolean" Equivalence nil)
    (MVA_modeled? const-decl "boolean" Equivalence nil)
    (Program_gvs_modeled? const-decl "boolean" Equivalence nil)
    (Program_modeled? const-decl "boolean" Equivalence nil)
    (MP_modeled? const-decl "boolean" Equivalence nil)
    (related_states const-decl "boolean" Equivalence nil)
    (ext_declared_var_names const-decl "finite_set[Name]" ProgramFunctions
     nil)
    (member const-decl "bool" sets nil) (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (guard_to_expression_behavior const-decl "boolean" Equivalence nil)
    (var_names const-decl "finite_set[Name]" MVA nil)
    (wf_Body const-decl "boolean" WellFormedMVA nil)
    (wf_Expr const-decl "boolean" WellFormedMVA nil)
    (eval_action_behavior const-decl "boolean" Equivalence nil)
    (well_behaved_MVA_for_annot_gen const-decl "boolean" Equivalence nil)
    (catch const-decl "PState" State nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (on_method_exit_normal const-decl "(on_method_event_type)" SemanticsJML
     nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Body type-decl nil Body_adt nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (legal_Body const-decl "bool" LegalProgramRestriction nil)
    (raise const-decl "PState" State nil) (choose const-decl "(p)" sets nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   36374 33970 nil nil)
  (method_call_lemma_TCC11-1 nil 3430821302 nil ("" (subtype-tcc) nil nil)
   unchecked nil nil nil nil nil))
 (method_call_lemma_TCC12 0
  (method_call_lemma_TCC12-1 nil 3430821302 3433217555
   ("" (subtype-tcc) nil nil) proved
   ((wf_set_stmts const-decl "bool" WfSetStmts nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (MVA_aut_vars_are_not_prog_vars const-decl "boolean" MonitoredProgram nil)
    (MVA_prog_vars_are_fields const-decl "boolean" MonitoredProgram nil)
    (MVA_events_correspond_to_methods const-decl "boolean" MonitoredProgram
     nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (trap_state const-decl "boolean" MVAProperties nil)
    (deterministic const-decl "boolean" MVAProperties nil)
    (total const-decl "boolean" MVAProperties nil)
    (complete const-decl "boolean" MVAProperties nil)
    (methods const-decl "finite_set[Method]" ProgramFunctions nil)
    (no_change const-decl "bool" WfSetStmts nil)
    (only_JMLExc const-decl "bool" WfSetStmts nil)
    (no_exc const-decl "bool" WfSetStmts nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (program_method_pred const-decl "bool" ProgramRestriction nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (wf_method_all_lvars_disjoint const-decl "boolean" WellFormedProgram nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (defined? const-decl "boolean" ValProp nil)
    (class_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (method_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (var_names const-decl "finite_set[Name]" ProgramFunctions nil)
    (wf_store const-decl "boolean" State nil)
    (wf_AState const-decl "boolean" MVACommonSemantics nil)
    (is_field const-decl "boolean" State nil)
    (getFieldDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (is_local const-decl "boolean" State nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (wf_state const-decl "boolean" State nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (PSt type-eq-decl nil State nil) (lift type-decl nil lift_adt nil)
    (Excpt type-decl nil Excpt_adt nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (MVA type-eq-decl nil MVA nil) (Decl type-eq-decl nil Program nil)
    (JType type-decl nil JType_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-decl nil Val_adt nil) (Transition type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil)
    (EventType type-decl nil EventType_adt nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_ghost const-decl "boolean" SemanticsJML nil)
    (getGhostDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (wf_ghoststate const-decl "boolean" SemanticsJML nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (update_PState const-decl "(update_PState_type)" AnnotatedProgramSemantics
     nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (PreProgram type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (Class type-eq-decl nil Program nil) (Method type-eq-decl nil Program nil)
    (Stmt type-eq-decl nil Body_adt nil) (Expr type-eq-decl nil Body_adt nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (MVA_cp_modeled? const-decl "boolean" Equivalence nil)
    (MVA_cps_modeled? const-decl "boolean" Equivalence nil)
    (MVA_vars_modeled? const-decl "boolean" Equivalence nil)
    (MVA_modeled? const-decl "boolean" Equivalence nil)
    (Program_gvs_modeled? const-decl "boolean" Equivalence nil)
    (Program_modeled? const-decl "boolean" Equivalence nil)
    (MP_modeled? const-decl "boolean" Equivalence nil)
    (related_states const-decl "boolean" Equivalence nil)
    (ext_declared_var_names const-decl "finite_set[Name]" ProgramFunctions
     nil)
    (member const-decl "bool" sets nil) (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (guard_to_expression_behavior const-decl "boolean" Equivalence nil)
    (var_names const-decl "finite_set[Name]" MVA nil)
    (wf_Body const-decl "boolean" WellFormedMVA nil)
    (wf_Expr const-decl "boolean" WellFormedMVA nil)
    (eval_action_behavior const-decl "boolean" Equivalence nil)
    (well_behaved_MVA_for_annot_gen const-decl "boolean" Equivalence nil)
    (catch const-decl "PState" State nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (on_method_exit_normal const-decl "(on_method_event_type)" SemanticsJML
     nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (list type-decl nil list_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (below type-eq-decl nil naturalnumbers nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Body type-decl nil Body_adt nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (legal_Body const-decl "bool" LegalProgramRestriction nil)
    (raise const-decl "PState" State nil) (choose const-decl "(p)" sets nil)
    (get_monitored_class const-decl "Class" MonitoredProgram nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   36624 32990 nil nil))
 (method_call_lemma 0
  (method_call_lemma-1 nil 3430840915 3433217704
   ("" (skosimp*)
    (("" (inst-cp -7 "(m11!1, m12!1)")
      (("" (inst-cp -7 "(m21!1, m22!1)")
        (("" (assert)
          (("" (apply (repeat (inst? -9 :where (-3 -14))))
            (("" (apply (repeat (inst? -8 :where (-4 -15))))
              (("" (assert)
                (("" (split -9)
                  (("1" (flatten)
                    (("1" (assert)
                      (("1" (split -10)
                        (("1" (flatten)
                          (("1" (assert)
                            (("1" (case "cp(astate(tauMP2!1)) = halted")
                              (("1" (case "cp(astate(sMP2!1)) = halted")
                                (("1"
                                  (case "up?(ex(pstate(sAP2!1))) AND down(ex(pstate(sAP2!1))) = JMLExc")
                                  (("1" (assert)
                                    (("1"
                                      (case
                                       "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                      (("1"
                                        (case
                                         "up?(ex(pstate(sAP2!1))) AND down(ex(pstate(sAP2!1))) = JMLExc")
                                        (("1"
                                          (case
                                           "wf_state(mp!1)(sMP2!1) AND NOT stuck(sMP2!1)")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (case
                                               "wf_state(ann_program(mp!1))(sAP2!1)")
                                              (("1"
                                                (expand "related_states")
                                                (("1" (assert) nil nil))
                                                nil)
                                               ("2"
                                                (hide -17)
                                                (("2"
                                                  (expand "related_states" -9)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (apply
                                                       (branch
                                                        (split -28)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (propax) nil nil))
                                          nil)
                                         ("2" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (hide -21)
                                        (("2"
                                          (expand "related_states" -4)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (apply
                                               (branch
                                                (split -16)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("1"
                                                (replace -3)
                                                (("1"
                                                  (apply
                                                   (then
                                                    (use
                                                     "wf_update_PState"
                                                     ("p" "mp!1"))
                                                    (assert)
                                                    (skosimp*)
                                                    (expand "update_PState")
                                                    (use "wf_state_raise")
                                                    (assert)))
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (apply
                                                 (branch
                                                  (split -1)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("2"
                                                  (use
                                                   "on_method_entry_yields_wf_state_MP")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (case "wf_MP(mp!1)")
                                                      (("1"
                                                        (use
                                                         "wf_state_update_stack"
                                                         ("p" "mp!1"))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -1)
                                                            (("1"
                                                              (use
                                                               "derive_yields_wf_state_MP")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "derive_yields_wf_state_MP")
                                                                  (("1"
                                                                    (inst?
                                                                     -1
                                                                     :where
                                                                     -13)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "wf_state(mp!1)(tauMP7!1)")
                                                                        (("1"
                                                                          (replace
                                                                           -17)
                                                                          (("1"
                                                                            (split
                                                                             3)
                                                                            (("1"
                                                                              (use
                                                                               "wf_update_PState"
                                                                               ("p"
                                                                                "mp!1"))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (skosimp*)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "update_PState")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -8)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (expand
                                                                                           "lookup_mthd")
                                                                                          (("1"
                                                                                            (lift-if
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (apply
                                                                                                 (branch
                                                                                                  (split
                                                                                                   -1)
                                                                                                  ((then
                                                                                                    (flatten)
                                                                                                    (assert)
                                                                                                    (flatten)
                                                                                                    (assert)))))
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "wf_state"
                                                                                                   (-5
                                                                                                    1
                                                                                                    -25))
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "wf_state"
                                                                                                     (-25
                                                                                                      -4))
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (inst?
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           -27)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "is_field")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "is_local")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -12)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("4"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "update_PState"
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "NOT stuck(tauMP6!1)")
                                                                                (("1"
                                                                                  (apply
                                                                                   (branch
                                                                                    (split
                                                                                     -16)
                                                                                    ((then
                                                                                      (flatten)
                                                                                      (assert)
                                                                                      (flatten)
                                                                                      (assert)))))
                                                                                  (("1"
                                                                                    (use
                                                                                     "complete_MVA_never_stuck_after_on_method_exit_normal_MP")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (use
                                                                                     "complete_MVA_never_stuck_after_on_method_exit_exceptional_MP")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "complete_MVA_never_stuck_after_derive")
                                                                                  (("2"
                                                                                    (copy
                                                                                     -1)
                                                                                    (("2"
                                                                                      (inst?
                                                                                       -1
                                                                                       :where
                                                                                       -18)
                                                                                      (("2"
                                                                                        (inst?
                                                                                         -2
                                                                                         :where
                                                                                         -16)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (use
                                                                                             "complete_MVA_never_stuck_after_on_method_entry_MP")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -14)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "update_stack")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "update_PState")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (apply
                                                                           (branch
                                                                            (split
                                                                             -14)
                                                                            ((then
                                                                              (flatten)
                                                                              (assert)
                                                                              (flatten)
                                                                              (assert)))))
                                                                          (("1"
                                                                            (use
                                                                             "on_method_exit_normal_yields_wf_state_MP")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (use
                                                                             "on_method_exit_exceptional_yields_wf_state_MP")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skosimp*)
                                                              (("2"
                                                                (apply
                                                                 (branch
                                                                  (split -4)
                                                                  ((then
                                                                    (flatten)
                                                                    (assert)
                                                                    (flatten)
                                                                    (assert)))))
                                                                (("2"
                                                                  (expand
                                                                   "lookup_mthd")
                                                                  (("2"
                                                                    (lift-if
                                                                     -1)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (apply
                                                                         (branch
                                                                          (split
                                                                           -1)
                                                                          ((then
                                                                            (flatten)
                                                                            (assert)
                                                                            (flatten)
                                                                            (assert)))))
                                                                        (("2"
                                                                          (expand
                                                                           "getLocalDecls")
                                                                          (("2"
                                                                            (inst
                                                                             1
                                                                             "down(get_class(program(mp!1))(a1!1))")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "getLocalDecls")
                                                                                (("2"
                                                                                  (inst
                                                                                   1
                                                                                   "md1!1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply
                                                           (branch
                                                            (split -3)
                                                            ((then
                                                              (flatten)
                                                              (assert)
                                                              (flatten)
                                                              (assert)))))
                                                          (("2"
                                                            (expand
                                                             "lookup_mthd")
                                                            (("2"
                                                              (lift-if -1)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (apply
                                                                   (branch
                                                                    (split -1)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("2"
                                                                    (expand
                                                                     "getLocalDecls")
                                                                    (("2"
                                                                      (inst
                                                                       1
                                                                       "down(get_class(program(mp!1))(a1!1))")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "getLocalDecls")
                                                                          (("2"
                                                                            (inst
                                                                             1
                                                                             "md1!1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (typepred "mp!1")
                                                        (("2"
                                                          (expand
                                                           "wf_and_complete_MP")
                                                          (("2"
                                                            (flatten)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (expand "related_states" -3)
                                    (("2" (assert)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (flatten)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (hide -19)
                                  (("2"
                                    (apply (branch
                                            (split -10)
                                            ((then
                                              (flatten)
                                              (assert)
                                              (flatten)
                                              (assert)))))
                                    (("1" (replace -3)
                                      (("1"
                                        (expand "update_PState")
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (apply
                                       (branch
                                        (split -1)
                                        ((then
                                          (flatten)
                                          (assert)
                                          (flatten)
                                          (assert)))))
                                      (("2"
                                        (apply
                                         (branch
                                          (split -1)
                                          ((then
                                            (flatten)
                                            (assert)
                                            (flatten)
                                            (assert)))))
                                        (("2"
                                          (expand "lookup_mthd")
                                          (("2"
                                            (lift-if -1)
                                            (("2"
                                              (apply
                                               (branch
                                                (split -1)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("2"
                                                (use
                                                 "on_method_entry_preserves_related_states_halted_reached")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (split -1)
                                                    (("1"
                                                      (use
                                                       "derive_never_leaves_halted")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "derive_never_leaves_halted")
                                                          (("1"
                                                            (inst?
                                                             -1
                                                             :where
                                                             -14)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace -17)
                                                                (("1"
                                                                  (expand
                                                                   "update_PState")
                                                                  (("1"
                                                                    (apply
                                                                     (branch
                                                                      (split
                                                                       -15)
                                                                      ((then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))))
                                                                    (("1"
                                                                      (use
                                                                       "on_method_exit_normal_preserves_related_states_halted_reached")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (use
                                                                       "on_method_exit_exceptional_preserves_related_states_halted_reached")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (replace -6)
                                                      (("2"
                                                        (expand
                                                         "update_stack")
                                                        (("2"
                                                          (expand
                                                           "update_PState")
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (case "cp(astate(tauMP1!1)) = halted")
                                (("1" (lemma "derive_never_leaves_halted")
                                  (("1" (inst? -1 :where -10)
                                    (("1" (assert) nil nil)) nil))
                                  nil)
                                 ("2" (assert)
                                  (("2" (replace -2)
                                    (("2" (replace -4)
                                      (("2"
                                        (use
                                         "related_states_implies_same_exception")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (apply
                                               (branch
                                                (split -10)
                                                ((then
                                                  (flatten)
                                                  (assert)
                                                  (flatten)
                                                  (assert)))))
                                              (("1"
                                                (replace -3)
                                                (("1"
                                                  (replace -26)
                                                  (("1"
                                                    (use
                                                     "related_states_preserved_by_raise")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (apply
                                                 (branch
                                                  (split -19)
                                                  ((then
                                                    (flatten)
                                                    (assert)
                                                    (flatten)
                                                    (assert)))))
                                                (("2"
                                                  (apply
                                                   (branch
                                                    (split -1)
                                                    ((then
                                                      (flatten)
                                                      (assert)
                                                      (flatten)
                                                      (assert)))))
                                                  (("2"
                                                    (apply
                                                     (branch
                                                      (split -1)
                                                      ((then
                                                        (flatten)
                                                        (assert)
                                                        (flatten)
                                                        (assert)))))
                                                    (("2"
                                                      (apply
                                                       (branch
                                                        (split -13)
                                                        ((then
                                                          (flatten)
                                                          (assert)
                                                          (flatten)
                                                          (assert)))))
                                                      (("2"
                                                        (copy -3)
                                                        (("2"
                                                          (copy -2)
                                                          (("2"
                                                            (expand
                                                             "lookup_mthd"
                                                             (-1 -2))
                                                            (("2"
                                                              (lift-if
                                                               (-1 -2))
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (apply
                                                                   (branch
                                                                    (split -1)
                                                                    ((then
                                                                      (flatten)
                                                                      (assert)
                                                                      (flatten)
                                                                      (assert)))))
                                                                  (("2"
                                                                    (apply
                                                                     (branch
                                                                      (split
                                                                       -3)
                                                                      ((then
                                                                        (flatten)
                                                                        (assert)
                                                                        (flatten)
                                                                        (assert)))))
                                                                    (("2"
                                                                      (use
                                                                       "lookup_mthd_ann_program"
                                                                       ("m1"
                                                                        "md1!1"
                                                                        "m2"
                                                                        "md2!1"))
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case
                                                                             "wf_state(mp!1)(tauMP3!1)")
                                                                            (("1"
                                                                              (case
                                                                               "wf_state(mp!1)(tauMP4!1)")
                                                                              (("1"
                                                                                (case
                                                                                 "wf_state(mp!1)(tauMP5!1)")
                                                                                (("1"
                                                                                  (case
                                                                                   "wf_state(mp!1)(tauMP6!1)")
                                                                                  (("1"
                                                                                    (case
                                                                                     "wf_state(mp!1)(tauMP7!1)")
                                                                                    (("1"
                                                                                      (case
                                                                                       "wf_state(mp!1)(sMP2!1)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "wf_state(ann_program(mp!1))(tauAP3!1)")
                                                                                        (("1"
                                                                                          (case
                                                                                           "wf_state(ann_program(mp!1))(tauAP4!1)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "wf_state(ann_program(mp!1))(tauAP5!1)")
                                                                                            (("1"
                                                                                              (case
                                                                                               "wf_state(ann_program(mp!1))(tauAP6!1)")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "wf_state(ann_program(mp!1))(tauAP7!1)")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "wf_state(ann_program(mp!1))(sAP2!1)")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "related_states(mp!1)(tauMP4!1, tauAP4!1)")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "cp(astate(tauMP4!1)) = halted")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "cp(astate(sMP2!1)) = halted")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "NOT stuck(sMP2!1)")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "up?(ex(pstate(sAP2!1))) AND down(ex(pstate(sAP2!1))) = JMLExc")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "related_states")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "related_states"
                                                                                                               -3)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "up?(ex(pstate(tauAP4!1))) AND down(ex(pstate(tauAP4!1))) = JMLExc")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "derive"
                                                                                                                             -34)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "up?(ex(pstate(tauAP6!1))) AND down(ex(pstate(tauAP6!1))) = JMLExc")
                                                                                                                                (("1"
                                                                                                                                  (case
                                                                                                                                   "up?(ex(pstate(tauAP7!1))) AND down(ex(pstate(tauAP7!1))) = JMLExc")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -43)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "update_PState")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "on_method_exit_exceptional")
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "derive"
                                                                                                                                   -38)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "related_states")
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "related_states"
                                                                                                             -4)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "complete_MVA_never_stuck_after_derive")
                                                                                                                (("2"
                                                                                                                  (copy
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (inst?
                                                                                                                     -1
                                                                                                                     :where
                                                                                                                     -43)
                                                                                                                    (("2"
                                                                                                                      (inst?
                                                                                                                       -2
                                                                                                                       :where
                                                                                                                       -45)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -46)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "update_PState"
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (apply
                                                                                                                               (branch
                                                                                                                                (split
                                                                                                                                 -44)
                                                                                                                                ((then
                                                                                                                                  (flatten)
                                                                                                                                  (assert)
                                                                                                                                  (flatten)
                                                                                                                                  (assert)))))
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "complete_MVA_never_stuck_after_on_method_exit_normal_MP")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (use
                                                                                                                                 "complete_MVA_never_stuck_after_on_method_exit_exceptional_MP")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (use
                                                                                                           "derive_never_leaves_halted")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "derive_never_leaves_halted")
                                                                                                              (("2"
                                                                                                                (inst?
                                                                                                                 -1
                                                                                                                 :where
                                                                                                                 -41)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -44)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "update_PState")
                                                                                                                      (("2"
                                                                                                                        (apply
                                                                                                                         (branch
                                                                                                                          (split
                                                                                                                           -42)
                                                                                                                          ((then
                                                                                                                            (flatten)
                                                                                                                            (assert)
                                                                                                                            (flatten)
                                                                                                                            (assert)))))
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "on_method_exit_normal_preserves_related_states_halted_reached")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (use
                                                                                                                           "on_method_exit_exceptional_preserves_related_states_halted_reached")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case-replace
                                                                                                         "body(md1!1) = body(md2!1)")
                                                                                                        (("1"
                                                                                                          (case-replace
                                                                                                           "res(md1!1) = res(md2!1)")
                                                                                                          (("1"
                                                                                                            (case-replace
                                                                                                             "res_type(md1!1) = res_type(md2!1)")
                                                                                                            (("1"
                                                                                                              (case-replace
                                                                                                               "lvars(md1!1) = lvars(md2!1)")
                                                                                                              (("1"
                                                                                                                (case-replace
                                                                                                                 "arg(md1!1) = arg(md2!1)")
                                                                                                                (("1"
                                                                                                                  (inst-cp
                                                                                                                   -57
                                                                                                                   "(m41!1, m42!1)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (apply
                                                                                                                       (repeat
                                                                                                                        (inst?
                                                                                                                         -58
                                                                                                                         :where
                                                                                                                         (-32
                                                                                                                          -41))))
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -58)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (inst-cp
                                                                                                                               -59
                                                                                                                               "(m51!1, m52!1)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (apply
                                                                                                                                   (repeat
                                                                                                                                    (inst?
                                                                                                                                     -60
                                                                                                                                     :where
                                                                                                                                     (-45
                                                                                                                                      -36))))
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (split
                                                                                                                                       -60)
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "cp(astate(tauMP6!1)) = halted")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "related_states"
                                                                                                                                             -2)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "cp(astate(sMP2!1)) = halted")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "related_states")
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "NOT stuck(sMP2!1)")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "up?(ex(pstate(tauAP7!1))) AND down(ex(pstate(tauAP7!1))) = JMLExc")
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -46)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "update_PState")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "on_method_exit_exceptional")
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (replace
                                                                                                                                                           -54)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "update_PState"
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (apply
                                                                                                                                                                 (branch
                                                                                                                                                                  (split
                                                                                                                                                                   -51)
                                                                                                                                                                  ((then
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (assert)
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (assert)))))
                                                                                                                                                                (("1"
                                                                                                                                                                  (use
                                                                                                                                                                   "complete_MVA_never_stuck_after_on_method_exit_normal_MP")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (use
                                                                                                                                                                   "complete_MVA_never_stuck_after_on_method_exit_exceptional_MP")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replace
                                                                                                                                                       -52)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "update_PState")
                                                                                                                                                        (("2"
                                                                                                                                                          (apply
                                                                                                                                                           (branch
                                                                                                                                                            (split
                                                                                                                                                             -49)
                                                                                                                                                            ((then
                                                                                                                                                              (flatten)
                                                                                                                                                              (assert)
                                                                                                                                                              (flatten)
                                                                                                                                                              (assert)))))
                                                                                                                                                          (("1"
                                                                                                                                                            (use
                                                                                                                                                             "on_method_exit_normal_preserves_related_states_halted_reached")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (use
                                                                                                                                                             "on_method_exit_exceptional_preserves_related_states_halted_reached")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "related_states(mp!1)(tauMP7!1, tauAP7!1)")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -42)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -51)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "update_PState"
                                                                                                                                                     8
                                                                                                                                                     3)
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       8)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "related_states"
                                                                                                                                                         (1
                                                                                                                                                          -1))
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "update_PState"
                                                                                                                                                           1
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "update_PState"
                                                                                                                                                             1
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "update_PState"
                                                                                                                                                               1
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "update_PState"
                                                                                                                                                                 1
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (apply
                                                                                                                                                                   (branch
                                                                                                                                                                    (split
                                                                                                                                                                     1)
                                                                                                                                                                    ((then
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (assert)
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (assert)))))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case-replace
                                                                                                                                                                     "old_lvs1!1 = old_lvs2!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (use
                                                                                                                                                                       "MP_modeled_preserved_by_update")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (split
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (apply-extensionality
                                                                                                                                                                               :hide?
                                                                                                                                                                               t)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "related_states")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -43)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -34)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "related_states"
                                                                                                                                                                           -53)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "MP_modeled?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "Program_modeled?")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        (("2"
                                                                                                                                                          (use
                                                                                                                                                           "related_states_implies_same_exception")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (apply
                                                                                                                                                                 (branch
                                                                                                                                                                  (split
                                                                                                                                                                   -51)
                                                                                                                                                                  ((then
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (assert)
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (assert)))))
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (use
                                                                                                                                                 "related_states_implies_same_exception"
                                                                                                                                                 ("sMP"
                                                                                                                                                  "tauMP6!1"
                                                                                                                                                  "sAP"
                                                                                                                                                  "tauAP6!1"))
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -3)
                                                                                                                                                      (("2"
                                                                                                                                                        (apply
                                                                                                                                                         (branch
                                                                                                                                                          (split
                                                                                                                                                           -49)
                                                                                                                                                          ((then
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)
                                                                                                                                                            (flatten)
                                                                                                                                                            (assert)))))
                                                                                                                                                        (("1"
                                                                                                                                                          (apply
                                                                                                                                                           (branch
                                                                                                                                                            (split
                                                                                                                                                             -27)
                                                                                                                                                            ((then
                                                                                                                                                              (flatten)
                                                                                                                                                              (assert)
                                                                                                                                                              (flatten)
                                                                                                                                                              (assert)))))
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -2)
                                                                                                                                                            (("1"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_exit_normal_preserves_related_states_annotated")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (skosimp*)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -70
                                                                                                                                                                     "(n1!1, n2!1)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (apply
                                                                                                                                                                         (repeat
                                                                                                                                                                          (inst?
                                                                                                                                                                           -70
                                                                                                                                                                           :where
                                                                                                                                                                           (-3
                                                                                                                                                                            -4))))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "get_class")
                                                                                                                                                                (("2"
                                                                                                                                                                  (lift-if)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "defined?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_exit_normal_preserves_related_states_not_annotated")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (skosimp*)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -64
                                                                                                                                                                     "(n1!1, n2!1)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (apply
                                                                                                                                                                         (repeat
                                                                                                                                                                          (inst?
                                                                                                                                                                           -64
                                                                                                                                                                           :where
                                                                                                                                                                           (-3
                                                                                                                                                                            -4))))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "defined?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "get_class")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (apply
                                                                                                                                                           (branch
                                                                                                                                                            (split
                                                                                                                                                             -25)
                                                                                                                                                            ((then
                                                                                                                                                              (flatten)
                                                                                                                                                              (assert)
                                                                                                                                                              (flatten)
                                                                                                                                                              (assert)))))
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -2)
                                                                                                                                                            (("1"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_exit_exceptional_preserves_related_states_annotated")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (skosimp*)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -68
                                                                                                                                                                     "(n1!1, n2!1)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (apply
                                                                                                                                                                         (repeat
                                                                                                                                                                          (inst?
                                                                                                                                                                           -68
                                                                                                                                                                           :where
                                                                                                                                                                           (-3
                                                                                                                                                                            -4))))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "defined?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "get_class")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (use
                                                                                                                                                               "on_method_exit_exceptional_preserves_related_states_not_annotated")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (skosimp*)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -62
                                                                                                                                                                     "(n1!1, n2!1)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (apply
                                                                                                                                                                         (repeat
                                                                                                                                                                          (inst?
                                                                                                                                                                           -62
                                                                                                                                                                           :where
                                                                                                                                                                           (-3
                                                                                                                                                                            -4))))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "defined?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "get_class")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand*
                                                                                                                                         "legal_Program_AP"
                                                                                                                                         "legal_Program")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "program_pred")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -66
                                                                                                                                             "down(get_class(ann_program(mp!1))(a2!1))")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "id")
                                                                                                                                              (("2"
                                                                                                                                                (use
                                                                                                                                                 "get_class_in_classes")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -68
                                                                                                                                                       "md2!1")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (use
                                                                                                                                                           "lookup_mthd_in_methods_class"
                                                                                                                                                           ("p"
                                                                                                                                                            "ann_program(mp!1)"))
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "method_pred")
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (typepred
                                                                                                                                         "md1!1")
                                                                                                                                        (("3"
                                                                                                                                          (expand
                                                                                                                                           "wf_Method")
                                                                                                                                          (("3"
                                                                                                                                            (flatten)
                                                                                                                                            (("3"
                                                                                                                                              (expand
                                                                                                                                               "method_pred")
                                                                                                                                              (("3"
                                                                                                                                                (flatten)
                                                                                                                                                (("3"
                                                                                                                                                  (expand
                                                                                                                                                   "wf_Body"
                                                                                                                                                   -7)
                                                                                                                                                  (("3"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "subset?")
                                                                                                                                                      (("3"
                                                                                                                                                        (expand
                                                                                                                                                         "member")
                                                                                                                                                        (("3"
                                                                                                                                                          (skosimp*)
                                                                                                                                                          (("3"
                                                                                                                                                            (inst?
                                                                                                                                                             -7)
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand*
                                                                                                                             "legal_Program_AP"
                                                                                                                             "legal_Program")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "program_pred")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -64
                                                                                                                                 "down(get_class(ann_program(mp!1))(a2!1))")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "id")
                                                                                                                                    (("2"
                                                                                                                                      (use
                                                                                                                                       "get_class_in_classes")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -66
                                                                                                                                             "md2!1")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (use
                                                                                                                                                 "lookup_mthd_in_methods_class"
                                                                                                                                                 ("p"
                                                                                                                                                  "ann_program(mp!1)"))
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "method_pred")
                                                                                                                                                    (("2"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (typepred
                                                                                                                             "md1!1")
                                                                                                                            (("3"
                                                                                                                              (expand
                                                                                                                               "wf_Method")
                                                                                                                              (("3"
                                                                                                                                (expand
                                                                                                                                 "method_pred")
                                                                                                                                (("3"
                                                                                                                                  (flatten)
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "wf_Body"
                                                                                                                                     -3)
                                                                                                                                    (("3"
                                                                                                                                      (expand*
                                                                                                                                       "subset?"
                                                                                                                                       "member")
                                                                                                                                      (("3"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("3"
                                                                                                                                          (inst?
                                                                                                                                           -3)
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (apply
                                                                                                                   (branch
                                                                                                                    (split
                                                                                                                     -18)
                                                                                                                    ((then
                                                                                                                      (flatten)
                                                                                                                      (assert)
                                                                                                                      (flatten)
                                                                                                                      (assert)))))
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -2)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "ann_method_arg")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (apply
                                                                                                                 (branch
                                                                                                                  (split
                                                                                                                   -17)
                                                                                                                  ((then
                                                                                                                    (flatten)
                                                                                                                    (assert)
                                                                                                                    (flatten)
                                                                                                                    (assert)))))
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "ann_method_lvars")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (apply
                                                                                                               (branch
                                                                                                                (split
                                                                                                                 -16)
                                                                                                                ((then
                                                                                                                  (flatten)
                                                                                                                  (assert)
                                                                                                                  (flatten)
                                                                                                                  (assert)))))
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "ann_method_res_type")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (apply
                                                                                                             (branch
                                                                                                              (split
                                                                                                               -15)
                                                                                                              ((then
                                                                                                                (flatten)
                                                                                                                (assert)
                                                                                                                (flatten)
                                                                                                                (assert)))))
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -2)
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "ann_method_res")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (apply
                                                                                                           (branch
                                                                                                            (split
                                                                                                             -14)
                                                                                                            ((then
                                                                                                              (flatten)
                                                                                                              (assert)
                                                                                                              (flatten)
                                                                                                              (assert)))))
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "ann_method_body")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (case
                                                                                                       "related_states(mp!1)(tauMP3!1, tauAP3!1)")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "cp(astate(tauMP3!1)) = halted")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -35)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "update_stack")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "update_PState")
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (case
                                                                                                           "NOT up?(ex(pstate(tauAP3!1)))")
                                                                                                          (("1"
                                                                                                            (apply
                                                                                                             (branch
                                                                                                              (split
                                                                                                               -14)
                                                                                                              ((then
                                                                                                                (flatten)
                                                                                                                (assert)
                                                                                                                (flatten)
                                                                                                                (assert)))))
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "on_method_entry_preserves_related_states_annotated")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -58
                                                                                                                       "(n1!1, n2!1)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (apply
                                                                                                                           (repeat
                                                                                                                            (inst?
                                                                                                                             -58
                                                                                                                             :where
                                                                                                                             (-3
                                                                                                                              -4))))
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "get_class")
                                                                                                                  (("2"
                                                                                                                    (lift-if)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "defined?")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (use
                                                                                                               "on_method_entry_preserves_related_states_not_annotated")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -57
                                                                                                                     "(n1!1, n2!1)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (apply
                                                                                                                         (repeat
                                                                                                                          (inst?
                                                                                                                           -57
                                                                                                                           :where
                                                                                                                           (-3
                                                                                                                            -4))))
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "get_class")
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "defined?")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replace
                                                                                                             -25)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "update_stack"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "update_PState"
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "o")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "update_local"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (apply
                                                                                                                           (branch
                                                                                                                            (split
                                                                                                                             -1)
                                                                                                                            ((then
                                                                                                                              (flatten)
                                                                                                                              (assert)
                                                                                                                              (flatten)
                                                                                                                              (assert)))))
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "ex_update_locals")
                                                                                                                            (("2"
                                                                                                                              (hide-all-but
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "lvars(md2!1)")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "is_finite")
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       1
                                                                                                                                       "N!1"
                                                                                                                                       "LAMBDA(x : ({x: [Name, Val[Name]] |
                     EXISTS (l: Decl[Name]):
                       lvars(md2!1)(l) AND
                        name(l) = PROJ_1(x) AND
                         default_value[Name](jtype(l)) = PROJ_2(x)})) : f!1(choose({l : Decl[Name] | lvars(md2!1)(l) AND
                        name(l) = PROJ_1(x) AND
                         default_value[Name](jtype(l)) = PROJ_2(x)}))")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "injective?")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (apply-extensionality
                                                                                                                                                 :hide?
                                                                                                                                                 t)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (rewrite
                                                                                                                                               "nonempty_exists")
                                                                                                                                              (("2"
                                                                                                                                                (typepred
                                                                                                                                                 "x2!2")
                                                                                                                                                (("2"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (rewrite
                                                                                                                                               "nonempty_exists")
                                                                                                                                              (("3"
                                                                                                                                                (typepred
                                                                                                                                                 "x1!2")
                                                                                                                                                (("3"
                                                                                                                                                  (skosimp*)
                                                                                                                                                  (("3"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("3"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp*)
                                                                                                                                        (("2"
                                                                                                                                          (rewrite
                                                                                                                                           "nonempty_exists")
                                                                                                                                          (("2"
                                                                                                                                            (typepred
                                                                                                                                             "x!2")
                                                                                                                                            (("2"
                                                                                                                                              (skosimp*)
                                                                                                                                              (("2"
                                                                                                                                                (inst?)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (replace
                                                                                                         -33)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -23)
                                                                                                          (("2"
                                                                                                            (case-replace
                                                                                                             "arg(md1!1) = arg(md2!1)")
                                                                                                            (("1"
                                                                                                              (case-replace
                                                                                                               "lvars(md1!1) = lvars(md2!1)")
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "related_states_preserved_by_update_stack")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "getLocalDecls")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "down(get_class(program(mp!1))(a2!1))")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (use
                                                                                                                             "get_class_in_classes")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "getLocalDecls")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "md1!1")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (use
                                                                                                                                       "lookup_mthd_in_methods_class")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "getLocalDecls")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "down(get_class(program(mp!1))(a2!1))")
                                                                                                                    (("2"
                                                                                                                      (use
                                                                                                                       "get_class_in_classes")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "getLocalDecls")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "md1!1")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (use
                                                                                                                                 "lookup_mthd_in_methods_class")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (apply
                                                                                                                 (branch
                                                                                                                  (split
                                                                                                                   -14)
                                                                                                                  ((then
                                                                                                                    (flatten)
                                                                                                                    (assert)
                                                                                                                    (flatten)
                                                                                                                    (assert)))))
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "ann_method_lvars")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (apply
                                                                                                               (branch
                                                                                                                (split
                                                                                                                 -13)
                                                                                                                ((then
                                                                                                                  (flatten)
                                                                                                                  (assert)
                                                                                                                  (flatten)
                                                                                                                  (assert)))))
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "ann_method_arg")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -30)
                                                                                                    (("2"
                                                                                                      (use
                                                                                                       "wf_update_PState"
                                                                                                       ("p"
                                                                                                        "ann_program(mp!1)"))
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "update_PState")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "related_states"
                                                                                                               -42)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "wf_state"
                                                                                                                   (-2
                                                                                                                    -43))
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "wf_state"
                                                                                                                     (1
                                                                                                                      -2
                                                                                                                      -43))
                                                                                                                    (("2"
                                                                                                                      (skosimp*)
                                                                                                                      (("2"
                                                                                                                        (inst?
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (inst?
                                                                                                                           -44)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "is_local")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "is_field")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -23)
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("4"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (apply
                                                                                                   (branch
                                                                                                    (split
                                                                                                     -27)
                                                                                                    ((then
                                                                                                      (flatten)
                                                                                                      (assert)
                                                                                                      (flatten)
                                                                                                      (assert)))))
                                                                                                  (("1"
                                                                                                    (expand*
                                                                                                     "on_method_exit_normal"
                                                                                                     "check_assertion")
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (use
                                                                                                         "derive_yields_wf_state_AP")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "derive_yields_wf_state_AP")
                                                                                                            (("1"
                                                                                                              (inst?
                                                                                                               -1
                                                                                                               :where
                                                                                                               -10)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "derive_yields_wf_state_AP")
                                                                                                                (("1"
                                                                                                                  (inst?
                                                                                                                   -1
                                                                                                                   :where
                                                                                                                   -14)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -15)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (apply
                                                                                                                                   (then
                                                                                                                                    (use
                                                                                                                                     "wf_update_PState"
                                                                                                                                     ("p"
                                                                                                                                      "ann_program(mp!1)"))
                                                                                                                                    (assert)
                                                                                                                                    (skosimp*)
                                                                                                                                    (expand
                                                                                                                                     "update_PState")
                                                                                                                                    (use
                                                                                                                                     "wf_state_raise")
                                                                                                                                    (assert)))
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -11)
                                                                                                                        (("2"
                                                                                                                          (apply
                                                                                                                           (then
                                                                                                                            (lift-if)
                                                                                                                            (assert)
                                                                                                                            (split
                                                                                                                             1)
                                                                                                                            (skosimp*)
                                                                                                                            (split
                                                                                                                             1)
                                                                                                                            (skosimp*)))
                                                                                                                          (("1"
                                                                                                                            (apply
                                                                                                                             (then
                                                                                                                              (use
                                                                                                                               "wf_update_PState"
                                                                                                                               ("p"
                                                                                                                                "ann_program(mp!1)"))
                                                                                                                              (assert)
                                                                                                                              (skosimp*)
                                                                                                                              (expand
                                                                                                                               "update_PState")
                                                                                                                              (use
                                                                                                                               "wf_state_raise")
                                                                                                                              (assert)))
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (apply
                                                                                                                             (then
                                                                                                                              (use
                                                                                                                               "wf_update_PState"
                                                                                                                               ("p"
                                                                                                                                "ann_program(mp!1)"))
                                                                                                                              (assert)
                                                                                                                              (skosimp*)
                                                                                                                              (expand
                                                                                                                               "update_PState")
                                                                                                                              (use
                                                                                                                               "wf_state_raise")
                                                                                                                              (assert)))
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "md2!1")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "wf_Method")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "method_pred")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (inst?
                                                                                                                             -2)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "ann_program(mp!1)")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "wf_Program")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "program_pred")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -5
                                                                                                                           "down(get_class(ann_program(mp!1))(a2!1))")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (use
                                                                                                                               "get_class_in_classes")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "lookup_inv")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "id")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (apply
                                                                                                           (then
                                                                                                            (typepred
                                                                                                             "md2!1")
                                                                                                            (expand*
                                                                                                             "wf_Method"
                                                                                                             "method_pred")
                                                                                                            (flatten)))
                                                                                                          (("2"
                                                                                                            (inst?
                                                                                                             -5)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand*
                                                                                                     "on_method_exit_exceptional"
                                                                                                     "check_assertion")
                                                                                                    (("2"
                                                                                                      (apply
                                                                                                       (branch
                                                                                                        (split
                                                                                                         -1)
                                                                                                        ((then
                                                                                                          (flatten)
                                                                                                          (assert)
                                                                                                          (flatten)
                                                                                                          (assert)))))
                                                                                                      (("2"
                                                                                                        (skosimp*)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "derive_yields_wf_state_AP")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "derive_yields_wf_state_AP")
                                                                                                              (("1"
                                                                                                                (inst?
                                                                                                                 -1
                                                                                                                 :where
                                                                                                                 -8)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (split
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "wf_state(ann_program(mp!1))(tau2!1)")
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -11)
                                                                                                                        (("1"
                                                                                                                          (apply
                                                                                                                           (then
                                                                                                                            (lift-if)
                                                                                                                            (assert)
                                                                                                                            (split
                                                                                                                             3)
                                                                                                                            (skosimp*)
                                                                                                                            (split
                                                                                                                             1)
                                                                                                                            (skosimp*)))
                                                                                                                          (("1"
                                                                                                                            (apply
                                                                                                                             (then
                                                                                                                              (use
                                                                                                                               "wf_update_PState"
                                                                                                                               ("p"
                                                                                                                                "ann_program(mp!1)"))
                                                                                                                              (assert)
                                                                                                                              (skosimp*)
                                                                                                                              (expand
                                                                                                                               "update_PState")
                                                                                                                              (use
                                                                                                                               "wf_state_raise")
                                                                                                                              (assert)))
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -9)
                                                                                                                        (("2"
                                                                                                                          (apply
                                                                                                                           (then
                                                                                                                            (lift-if)
                                                                                                                            (assert)
                                                                                                                            (split
                                                                                                                             1)
                                                                                                                            (skosimp*)
                                                                                                                            (split
                                                                                                                             1)
                                                                                                                            (skosimp*)))
                                                                                                                          (("1"
                                                                                                                            (apply
                                                                                                                             (then
                                                                                                                              (use
                                                                                                                               "wf_update_PState"
                                                                                                                               ("p"
                                                                                                                                "ann_program(mp!1)"))
                                                                                                                              (assert)
                                                                                                                              (skosimp*)
                                                                                                                              (expand
                                                                                                                               "update_PState")
                                                                                                                              (use
                                                                                                                               "wf_state_raise")
                                                                                                                              (assert)))
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (apply
                                                                                                                             (then
                                                                                                                              (use
                                                                                                                               "wf_update_PState"
                                                                                                                               ("p"
                                                                                                                                "ann_program(mp!1)"))
                                                                                                                              (assert)
                                                                                                                              (skosimp*)
                                                                                                                              (expand
                                                                                                                               "update_PState")
                                                                                                                              (use
                                                                                                                               "wf_state_raise")
                                                                                                                              (assert)))
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (apply
                                                                                                                         (then
                                                                                                                          (use
                                                                                                                           "wf_update_PState"
                                                                                                                           ("p"
                                                                                                                            "ann_program(mp!1)"))
                                                                                                                          (assert)
                                                                                                                          (skosimp*)
                                                                                                                          (expand
                                                                                                                           "update_PState")
                                                                                                                          (use
                                                                                                                           "wf_state_catch")
                                                                                                                          (assert)))
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (typepred
                                                                                                                   "ann_program(mp!1)")
                                                                                                                  (("2"
                                                                                                                    (expand*
                                                                                                                     "wf_Program"
                                                                                                                     "program_pred")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -5
                                                                                                                         "down(get_class(ann_program(mp!1))(a2!1))")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (use
                                                                                                                             "get_class_in_classes")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "lookup_inv")
                                                                                                                                  (("2"
                                                                                                                                    (lift-if)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "id")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (apply
                                                                                                             (then
                                                                                                              (typepred
                                                                                                               "md2!1")
                                                                                                              (expand*
                                                                                                               "wf_Method"
                                                                                                               "method_pred")
                                                                                                              (flatten)))
                                                                                                            (("2"
                                                                                                              (inst?
                                                                                                               -6)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "derive_yields_wf_state_AP")
                                                                                                (("2"
                                                                                                  (inst?
                                                                                                   -1
                                                                                                   :where
                                                                                                   -26)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (apply
                                                                                                     (then
                                                                                                      (typepred
                                                                                                       "md2!1")
                                                                                                      (expand*
                                                                                                       "wf_Method"
                                                                                                       "method_pred")
                                                                                                      (flatten)))
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "derive_yields_wf_state_AP")
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -1
                                                                                                 :where
                                                                                                 -23)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (apply
                                                                                                   (then
                                                                                                    (typepred
                                                                                                     "md2!1")
                                                                                                    (expand*
                                                                                                     "wf_Method"
                                                                                                     "method_pred")
                                                                                                    (flatten)))
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand*
                                                                                             "on_method_entry"
                                                                                             "check_assertion")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "derive_yields_wf_state_AP")
                                                                                              (("2"
                                                                                                (apply
                                                                                                 (branch
                                                                                                  (split
                                                                                                   -21)
                                                                                                  ((then
                                                                                                    (flatten)
                                                                                                    (assert)
                                                                                                    (flatten)
                                                                                                    (assert)))))
                                                                                                (("2"
                                                                                                  (skosimp*)
                                                                                                  (("2"
                                                                                                    (inst?
                                                                                                     -12
                                                                                                     :where
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "derive_yields_wf_state_AP")
                                                                                                        (("1"
                                                                                                          (inst?
                                                                                                           -1
                                                                                                           :where
                                                                                                           -8)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "derive_yields_wf_state_AP")
                                                                                                            (("1"
                                                                                                              (inst?
                                                                                                               -1
                                                                                                               :where
                                                                                                               -11)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -9)
                                                                                                                    (("1"
                                                                                                                      (apply
                                                                                                                       (then
                                                                                                                        (lift-if)
                                                                                                                        (assert)
                                                                                                                        (split
                                                                                                                         1)
                                                                                                                        (skosimp*)
                                                                                                                        (split
                                                                                                                         1)
                                                                                                                        (skosimp*)))
                                                                                                                      (("1"
                                                                                                                        (apply
                                                                                                                         (then
                                                                                                                          (use
                                                                                                                           "wf_update_PState"
                                                                                                                           ("p"
                                                                                                                            "ann_program(mp!1)"))
                                                                                                                          (assert)
                                                                                                                          (skosimp*)
                                                                                                                          (expand
                                                                                                                           "update_PState")
                                                                                                                          (use
                                                                                                                           "wf_state_raise")
                                                                                                                          (assert)))
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (apply
                                                                                                                         (then
                                                                                                                          (use
                                                                                                                           "wf_update_PState"
                                                                                                                           ("p"
                                                                                                                            "ann_program(mp!1)"))
                                                                                                                          (assert)
                                                                                                                          (skosimp*)
                                                                                                                          (expand
                                                                                                                           "update_PState")
                                                                                                                          (use
                                                                                                                           "wf_state_raise")
                                                                                                                          (assert)))
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replace
                                                                                                                     -5)
                                                                                                                    (("2"
                                                                                                                      (apply
                                                                                                                       (then
                                                                                                                        (lift-if)
                                                                                                                        (assert)
                                                                                                                        (split
                                                                                                                         1)
                                                                                                                        (skosimp*)
                                                                                                                        (split
                                                                                                                         1)
                                                                                                                        (skosimp*)))
                                                                                                                      (("1"
                                                                                                                        (apply
                                                                                                                         (then
                                                                                                                          (use
                                                                                                                           "wf_update_PState"
                                                                                                                           ("p"
                                                                                                                            "ann_program(mp!1)"))
                                                                                                                          (assert)
                                                                                                                          (skosimp*)
                                                                                                                          (expand
                                                                                                                           "update_PState")
                                                                                                                          (use
                                                                                                                           "wf_state_raise")
                                                                                                                          (assert)))
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (apply
                                                                                                                         (then
                                                                                                                          (use
                                                                                                                           "wf_update_PState"
                                                                                                                           ("p"
                                                                                                                            "ann_program(mp!1)"))
                                                                                                                          (assert)
                                                                                                                          (skosimp*)
                                                                                                                          (expand
                                                                                                                           "update_PState")
                                                                                                                          (use
                                                                                                                           "wf_state_raise")
                                                                                                                          (assert)))
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (apply
                                                                                                                 (then
                                                                                                                  (typepred
                                                                                                                   "md2!1")
                                                                                                                  (expand*
                                                                                                                   "wf_Method"
                                                                                                                   "method_pred")
                                                                                                                  (flatten)))
                                                                                                                (("2"
                                                                                                                  (inst?
                                                                                                                   -4)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (apply
                                                                                                             (then
                                                                                                              (typepred
                                                                                                               "md2!1")
                                                                                                              (expand*
                                                                                                               "wf_Method"
                                                                                                               "method_pred")
                                                                                                              (flatten)))
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (typepred
                                                                                                       "ann_program(mp!1)")
                                                                                                      (("3"
                                                                                                        (expand*
                                                                                                         "wf_Program"
                                                                                                         "program_pred")
                                                                                                        (("3"
                                                                                                          (flatten)
                                                                                                          (("3"
                                                                                                            (inst
                                                                                                             -5
                                                                                                             "down(get_class(ann_program(mp!1))(a2!1))")
                                                                                                            (("3"
                                                                                                              (use
                                                                                                               "get_class_in_classes")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                (("3"
                                                                                                                  (flatten)
                                                                                                                  (("3"
                                                                                                                    (expand*
                                                                                                                     "lookup_inv"
                                                                                                                     "id")
                                                                                                                    (("3"
                                                                                                                      (lift-if)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           -17)
                                                                                          (("2"
                                                                                            (use
                                                                                             "wf_state_update_stack"
                                                                                             ("p"
                                                                                              "ann_program(mp!1)"))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (skosimp*)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "getLocalDecls")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "down(get_class(ann_program(mp!1))(a2!1))")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (use
                                                                                                           "get_class_in_classes")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "getLocalDecls")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "md2!1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (use
                                                                                                                     "lookup_mthd_in_methods_class"
                                                                                                                     ("p"
                                                                                                                      "ann_program(mp!1)"))
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "related_states")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "getLocalDecls")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "down(get_class(ann_program(mp!1))(a2!1))")
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "get_class_in_classes")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "getLocalDecls")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "md2!1")
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "lookup_mthd_in_methods_class"
                                                                                                             ("p"
                                                                                                              "ann_program(mp!1)"))
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -33)
                                                                                        (("2"
                                                                                          (use
                                                                                           "wf_update_PState"
                                                                                           ("p"
                                                                                            "mp!1"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "update_PState")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "related_states"
                                                                                                   -36)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "wf_state"
                                                                                                       (-36
                                                                                                        -2))
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_state"
                                                                                                         (-36
                                                                                                          -2
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (skosimp*)
                                                                                                          (("2"
                                                                                                            (inst?
                                                                                                             -3)
                                                                                                            (("2"
                                                                                                              (inst?
                                                                                                               -39)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -28)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "is_field")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "is_local")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (split
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("4"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "wf_MP(mp!1)")
                                                                                      (("1"
                                                                                        (apply
                                                                                         (branch
                                                                                          (split
                                                                                           -31)
                                                                                          ((then
                                                                                            (flatten)
                                                                                            (assert)
                                                                                            (flatten)
                                                                                            (assert)))))
                                                                                        (("1"
                                                                                          (use
                                                                                           "on_method_exit_normal_yields_wf_state_MP")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (use
                                                                                           "on_method_exit_exceptional_yields_wf_state_MP")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (typepred
                                                                                         "mp!1")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "wf_and_complete_MP")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "derive_yields_wf_state_MP")
                                                                                    (("2"
                                                                                      (inst?
                                                                                       -1
                                                                                       :where
                                                                                       -29)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "mp!1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "wf_and_complete_MP")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (use
                                                                                   "derive_yields_wf_state_MP")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "mp!1")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "wf_and_complete_MP")
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (use
                                                                                 "on_method_entry_yields_wf_state_MP")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "mp!1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "wf_and_complete_MP")
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (use
                                                                               "wf_state_update_stack"
                                                                               ("p"
                                                                                "mp!1"))
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (skosimp*)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "getLocalDecls")
                                                                                      (("1"
                                                                                        (inst
                                                                                         1
                                                                                         "down(get_class(program(mp!1))(a2!1))")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (use
                                                                                             "get_class_in_classes")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "getLocalDecls")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "md1!1")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "lookup_mthd_in_methods_class")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "related_states")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "getLocalDecls")
                                                                                  (("2"
                                                                                    (inst
                                                                                     1
                                                                                     "down(get_class(program(mp!1))(a2!1))")
                                                                                    (("2"
                                                                                      (use
                                                                                       "get_class_in_classes")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "getLocalDecls")
                                                                                          (("2"
                                                                                            (inst
                                                                                             1
                                                                                             "md1!1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (use
                                                                                                 "lookup_mthd_in_methods_class")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2"
                          (use "legal_Body_preserved_by_proper_subterm"
                               ("b1" "b!1" "b2" "arg(b!1)"))
                          (("2" (assert)
                            (("2" (expand "<<") (("2" (propax) nil nil)) nil))
                            nil))
                          nil)
                         ("3"
                          (apply (then
                                  (use "subterm_subset_of_var"
                                       ("b1" "b!1" "b2" "arg(b!1)"))
                                  (expand "<<") (assert) (assert)))
                          nil nil))
                        nil))
                      nil))
                    nil)
                   ("2"
                    (use "legal_Body_preserved_by_proper_subterm"
                         ("b1" "b!1" "b2" "tgt(b!1)"))
                    (("2" (assert)
                      (("2" (expand "<<") (("2" (propax) nil nil)) nil)) nil))
                    nil)
                   ("3"
                    (apply (then
                            (use "subterm_subset_of_var"
                                 ("b1" "b!1" "b2" "tgt(b!1)"))
                            (expand "<<") (assert) (assert)))
                    nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (arg adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil)
    (ext_declared_var_names const-decl "finite_set[Name]" ProgramFunctions
     nil)
    (subterm_subset_of_var formula-decl nil ProgramFunctions nil)
    (legal_Body_preserved_by_proper_subterm formula-decl nil
     LegalProgramRestriction nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     AnnotatedProgramSemantics nil)
    (<< adt-def-decl "(well_founded?[Body])" Body_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (halted const-decl "CP" MVA nil)
    (derive_never_leaves_halted formula-decl nil MonitoredProgramSemantics
     nil)
    (on_method_exit_exceptional_preserves_related_states_halted_reached
     formula-decl nil MethodCallsPreserveRelatedState nil)
    (on_method_exit_normal_preserves_related_states_halted_reached
     formula-decl nil MethodCallsPreserveRelatedState nil)
    (on_method_entry_preserves_related_states_halted_reached formula-decl nil
     MethodCallsPreserveRelatedState nil)
    (up? adt-recognizer-decl "[lift -> boolean]" lift_adt nil)
    (down adt-accessor-decl "[(up?) -> T]" lift_adt nil)
    (JMLExc? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (JMLExc adt-constructor-decl "(JMLExc?)" Excpt_adt nil)
    (wf_state const-decl "boolean" MonitoredProgramSemantics nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (wf_Program const-decl "boolean" WellFormedProgram nil)
    (wf_state const-decl "boolean" AnnotatedProgramSemantics nil)
    (ann_program const-decl "Program" AnnotateProgram nil)
    (related_states const-decl "boolean" Equivalence nil)
    (wf_state_raise formula-decl nil State nil)
    (NullPointer adt-constructor-decl "(NullPointer?)" Excpt_adt nil)
    (NullPointer? adt-recognizer-decl "[Excpt -> boolean]" Excpt_adt nil)
    (raise const-decl "PState" State nil)
    (wf_update_PState formula-decl nil MonitoredProgramSemantics nil)
    (on_method_entry_yields_wf_state_MP formula-decl nil
     MonitoredProgramSemantics nil)
    (val? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (val adt-constructor-decl "[Expr -> (val?)]" ValOrExcpt_adt nil)
    (Const adt-constructor-decl "[(defined?) -> (Const?)]" Body_adt nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (get_class const-decl "lift[Class]" ProgramFunctions nil)
    (derive_yields_wf_state_MP formula-decl nil MonitoredProgramSemantics nil)
    (on_method_exit_normal_yields_wf_state_MP formula-decl nil
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_yields_wf_state_MP formula-decl nil
     MonitoredProgramSemantics nil)
    (complete_MVA_never_stuck_after_derive formula-decl nil
     MonitoredProgramSemantics nil)
    (update_stack const-decl "FullState" Semantics nil)
    (complete_MVA_never_stuck_after_on_method_entry_MP formula-decl nil
     MonitoredProgramSemantics nil)
    (complete_MVA_never_stuck_after_on_method_exit_normal_MP formula-decl nil
     MonitoredProgramSemantics nil)
    (excpt adt-constructor-decl "[Excpt -> (excpt?)]" ValOrExcpt_adt nil)
    (excpt? adt-recognizer-decl "[ValOrExcpt -> boolean]" ValOrExcpt_adt nil)
    (complete_MVA_never_stuck_after_on_method_exit_exceptional_MP formula-decl
     nil MonitoredProgramSemantics nil)
    (lookup_mthd const-decl "lift[(methods(p))]" ProgramFunctions nil)
    (wf_state const-decl "boolean" State nil)
    (is_local const-decl "boolean" State nil)
    (is_field const-decl "boolean" State nil) (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (getLocalDecls const-decl "finite_set[Decl]" ProgramFunctions nil)
    (mp!1 skolem-const-decl
     "({mp: MonitoredProgram | wf_and_complete_MP(mp) AND wf_set_stmts(mp)})"
     MethodCallsPreserveRelatedState nil)
    (md1!1 skolem-const-decl "(wf_Method(program(mp!1)))"
     MethodCallsPreserveRelatedState nil)
    (wf_state_update_stack formula-decl nil MonitoredProgramSemantics nil)
    (related_states_preserved_by_raise formula-decl nil
     RelatedStatesProperties nil)
    (lookup_mthd_ann_program formula-decl nil AnnotateProgramProperties nil)
    (name adt-accessor-decl "[(MethodCall?) -> Name]" Body_adt nil)
    (wf_state_update_stack formula-decl nil AnnotatedProgramSemantics nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (bijective? const-decl "bool" functions nil)
    (inv!1 skolem-const-decl "(wf_Expr(id(ann_program(mp!1))))"
     MethodCallsPreserveRelatedState nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (lookup_inv const-decl "Expr" ProgramFunctions nil)
    (program_pred const-decl "bool" ProgramRestriction nil)
    (w2!1 skolem-const-decl "Val[Name]" MethodCallsPreserveRelatedState nil)
    (derive_yields_wf_state_AP formula-decl nil AnnotatedProgramSemantics nil)
    (on_method_exit_normal const-decl "(on_method_event_type)" SemanticsJML
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (check_assertion const-decl "boolean" SemanticsJML nil)
    (catch const-decl "PState" State nil)
    (tauAP6!1 skolem-const-decl "APState[Name]"
     MethodCallsPreserveRelatedState nil)
    (wf_state_catch formula-decl nil State nil)
    (inv!1 skolem-const-decl "(wf_Expr(id(ann_program(mp!1))))"
     MethodCallsPreserveRelatedState nil)
    (on_method_entry_preserves_related_states_not_annotated formula-decl nil
     MethodCallsPreserveRelatedState nil)
    (on_method_entry_preserves_related_states_annotated formula-decl nil
     MethodCallsPreserveRelatedState nil)
    (O const-decl "T3" function_props nil)
    (md2!1 skolem-const-decl "(wf_Method(ann_program(mp!1)))"
     MethodCallsPreserveRelatedState nil)
    (nonempty? const-decl "bool" sets nil) (choose const-decl "(p)" sets nil)
    (below type-eq-decl nil nat_types nil)
    (l!1 skolem-const-decl "Decl[Name]" MethodCallsPreserveRelatedState nil)
    (nonempty_exists formula-decl nil sets_lemmas nil)
    (l!1 skolem-const-decl "Decl[Name]" MethodCallsPreserveRelatedState nil)
    (x2!2 skolem-const-decl "({x: [Name, Val[Name]] |
    EXISTS (l: Decl[Name]):
      lvars(md2!1)(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     MethodCallsPreserveRelatedState nil)
    (x1!2 skolem-const-decl "({x: [Name, Val[Name]] |
    EXISTS (l: Decl[Name]):
      lvars(md2!1)(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     MethodCallsPreserveRelatedState nil)
    (injective? const-decl "bool" functions nil)
    (x!2 skolem-const-decl "({x: [Name, Val[Name]] |
    EXISTS (l: Decl[Name]):
      lvars(md2!1)(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     MethodCallsPreserveRelatedState nil)
    (l!1 skolem-const-decl "Decl[Name]" MethodCallsPreserveRelatedState nil)
    (ex_update_locals formula-decl nil State nil)
    (default_value const-decl "(defined?)" ValProp nil)
    (update_local const-decl "PState" State nil)
    (related_states_preserved_by_update_stack formula-decl nil
     RelatedStatesProperties nil)
    (update_PState const-decl "(update_PState_type)" AnnotatedProgramSemantics
     nil)
    (on_method_exit_exceptional const-decl "(on_method_event_type)"
     SemanticsJML nil)
    (derive def-decl "bool" Semantics nil)
    (ann_method_body formula-decl nil AnnotateMethod nil)
    (ann_method_res_type formula-decl nil AnnotateMethod nil)
    (ann_method_arg formula-decl nil AnnotateMethod nil)
    (MP_modeled? const-decl "boolean" Equivalence nil)
    (Program_modeled? const-decl "boolean" Equivalence nil)
    (MP_modeled_preserved_by_update formula-decl nil RelatedStatesProperties
     nil)
    (on_method_exit_exceptional_preserves_related_states_annotated
     formula-decl nil MethodCallsPreserveRelatedState nil)
    (on_method_exit_exceptional_preserves_related_states_not_annotated
     formula-decl nil MethodCallsPreserveRelatedState nil)
    (on_method_exit_normal_preserves_related_states_annotated formula-decl nil
     MethodCallsPreserveRelatedState nil)
    (a2!1 skolem-const-decl "Val[Name]" MethodCallsPreserveRelatedState nil)
    (on_method_exit_normal_preserves_related_states_not_annotated formula-decl
     nil MethodCallsPreserveRelatedState nil)
    (program_pred const-decl "bool" FullProgramRestriction nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (lookup_mthd_in_methods_class formula-decl nil ProgramFunctions nil)
    (method_pred const-decl "bool" FullProgramRestriction nil)
    (get_class_in_classes formula-decl nil ProgramFunctions nil)
    (legal_Program_AP const-decl "boolean" LegalAnnotatedProgramRestriction
     nil)
    (legal_Program const-decl "bool" LegalProgramRestriction nil)
    (method_pred const-decl "bool" ProgramRestriction nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (id_preserves application-judgement "S" identity_props nil)
    (ann_method_lvars formula-decl nil AnnotateMethod nil)
    (ann_method_res formula-decl nil AnnotateMethod nil)
    (wf_update_PState formula-decl nil AnnotatedProgramSemantics nil)
    (pv2!1 skolem-const-decl "Val[Name]" MethodCallsPreserveRelatedState nil)
    (m1!1 skolem-const-decl "nat" MethodCallsPreserveRelatedState nil)
    (inv!1 skolem-const-decl "(wf_Expr(id(ann_program(mp!1))))"
     MethodCallsPreserveRelatedState nil)
    (on_method_entry const-decl "(on_method_event_type)" SemanticsJML nil)
    (related_states_implies_same_exception formula-decl nil
     RelatedStatesProperties nil)
    (APState type-eq-decl nil AnnotatedProgramSemantics nil)
    (Name formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (Body type-decl nil Body_adt nil) (Val type-decl nil Val_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Expr type-eq-decl nil Body_adt nil) (Stmt type-eq-decl nil Body_adt nil)
    (Excpt type-decl nil Excpt_adt nil) (Method type-eq-decl nil Program nil)
    (lift type-decl nil lift_adt nil) (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (CP formal-nonempty-type-decl nil MethodCallsPreserveRelatedState nil)
    (EventType type-decl nil EventType_adt nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (wf_and_complete_MP const-decl "boolean" MonitoredProgram nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (Store type-eq-decl nil State nil) (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (PSt type-eq-decl nil State nil)
    (update_PState_type const-decl "boolean" SemanticsTypes nil)
    (update_PState const-decl "(update_PState_type)" MonitoredProgramSemantics
     nil)
    (update_GhostVars_type const-decl "boolean" SemanticsJMLTypes nil)
    (update_GhostVars const-decl "(update_GhostVars_type)"
     MonitoredProgramSemantics nil)
    (lookup const-decl "Val" SemanticsJML nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (wf_Expr const-decl "boolean" WellFormedProgram nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derive_type type-eq-decl nil SemanticsTypes nil)
    (derive_rec_type type-eq-decl nil SemanticsTypes nil)
    (execute_set_type const-decl "boolean" SemanticsTypes nil)
    (execute_set const-decl "(execute_set_type)" SemanticsJML nil)
    (execute_assert_type const-decl "boolean" SemanticsTypes nil)
    (execute_assert const-decl "(execute_assert_type)" SemanticsJML nil)
    (CaseJML? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (IfThenElse? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Sequence? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Set? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Skip? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (StmtExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Throw? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (TryCatch? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (While? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assert? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (list type-decl nil list_adt nil)
    (wf_Branches const-decl "boolean" WellFormedProgram nil)
    (execute_CaseJML_type const-decl "boolean" SemanticsTypes nil)
    (execute_CaseJML const-decl "(execute_CaseJML_type)" SemanticsJML nil)
    (wf_Method const-decl "boolean" WellFormedProgram nil)
    (ValOrExcpt type-decl nil ValOrExcpt_adt nil)
    (on_method_event_type const-decl "boolean" SemanticsTypes nil)
    (on_method_entry_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_normal_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (on_method_exit_exceptional_MP const-decl "(on_method_event_type)"
     MonitoredProgramSemantics nil)
    (wf_ap_state const-decl "boolean" MonitoredProgramSemantics nil)
    (wf_set_stmts const-decl "bool" WfSetStmts nil)
    (tgt adt-accessor-decl "[(MethodCall?) -> Expr]" Body_adt nil))
   149019 128540 t nil)))

