(|MonitoredProgram|
 (|get_monitored_class_TCC1| 0
  (|get_monitored_class_TCC1-1| NIL 3399182363 3403505899
   ("" (SKOLEM-TYPEPRED)
    (("" (EXPAND* "compatible" "nonempty?" "empty?" "member")
      (("" (SKOSIMP*) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL))
    NIL)
   PROVED
   ((|member| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (MVA TYPE-EQ-DECL NIL MVA NIL) (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgram| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgram| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   23 23 T NIL))
 (|name_get_monitored_class| 0
  (|name_get_monitored_class-1| NIL 3400563327 3403505899
   ("" (SKOSIMP*)
    (("" (EXPAND "get_monitored_class") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   PROVED ((|get_monitored_class| CONST-DECL "Class" |MonitoredProgram| NIL)) 3
   3 T SHOSTAK))
 (|get_monitored_class_in_classes| 0
  (|get_monitored_class_in_classes-1| NIL 3400563719 3403505899
   ("" (SKOSIMP*)
    (("" (EXPAND "get_monitored_class") (("" (PROPAX) NIL NIL)) NIL)) NIL)
   PROVED ((|get_monitored_class| CONST-DECL "Class" |MonitoredProgram| NIL)) 3
   3 T SHOSTAK))
 (|get_monitored_class_unique_for_wf_MP_TCC1| 0
  (|get_monitored_class_unique_for_wf_MP_TCC1-1| NIL 3399183164 3403505900
   ("" (SKOLEM-TYPEPRED)
    (("" (TYPEPRED "program(mp!1)")
      (("" (EXPAND* "wf_MP" "compatible" "singleton?")
        (("" (FLATTEN)
          (("" (SKOSIMP)
            (("" (INST?)
              (("1"
                (EXPAND* "wf_Program" "wf_program_has_unique_class_names_def")
                (("1" (FLATTEN)
                  (("1" (SKOSIMP) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|c!1| SKOLEM-CONST-DECL "Class[Name]" |MonitoredProgram| NIL)
    (|mp!1| SKOLEM-CONST-DECL "MonitoredProgram" |MonitoredProgram| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|wf_program_has_unique_class_names_def| CONST-DECL "boolean"
     |WellFormedProgram| NIL)
    (|wf_MP| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|singleton?| CONST-DECL "bool" |sets| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (MVA TYPE-EQ-DECL NIL MVA NIL) (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgram| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgram| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   86 85 T NIL))
 (|get_monitored_class_unique_for_wf_MP| 0
  (|get_monitored_class_unique_for_wf_MP-2| NIL 3399183561 3403505900
   ("" (SKOSIMP) (("" (EXPAND* "get_monitored_class" "choose" "the") NIL NIL))
    NIL)
   PROVED
   ((|get_monitored_class| CONST-DECL "Class" |MonitoredProgram| NIL)
    (|the| CONST-DECL "(p)" |sets| NIL) (|choose| CONST-DECL "(p)" |sets| NIL))
   3 3 NIL NIL)
  (|get_monitored_class_unique_for_wf_MP-1| NIL 3399183469 3399183536
   ("" (SKOSIMP)
    (("" (EXPAND* "wf_MP" "get_monitored_class" "choose" "the") NIL NIL)) NIL)
   PROVED
   ((|choose| CONST-DECL "(p)" |sets| NIL) (|the| CONST-DECL "(p)" |sets| NIL))
   67208 100 T SHOSTAK)))
(|MonitoredProgramSemantics|
 (|update_PState_TCC1| 0
  (|update_PState_TCC1-1| NIL 3391514279 3403589880 ("" (SUBTYPE-TCC) NIL NIL)
   PROVED
   ((|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL))
   40 40 NIL NIL))
 (|update_GhostVars_TCC1| 0
  (|update_GhostVars_TCC1-1| NIL 3391514279 3403589880
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL))
   46 46 NIL NIL))
 (|wf_state_implies_wf_PSt| 0
  (|wf_state_implies_wf_PSt-1| NIL 3388136206 3403589915
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_PSt")
      (("" (SKOSIMP*)
        (("" (TYPEPRED "mp!1")
          (("" (EXPAND "compatible")
            (("" (SKOSIMP*)
              (("" (EXPAND "var_names")
                (("" (SKOSIMP*)
                  (("" (INST -3 "l!1")
                    (("" (ASSERT)
                      (("" (SKOSIMP*)
                        (("" (EXPAND "wf_state")
                          (("" (INST -6 "name(l!1)") (("" (GRIND) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_PSt| CONST-DECL "boolean" |MVASemantics| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|MVA_events_correspond_to_methods| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|MVA_prog_vars_are_fields| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MVA_aut_vars_are_not_prog_vars| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL))
   3523 3521 T SHOSTAK))
 (|wf_state_vars_tricotomy| 0
  (|wf_state_vars_tricotomy-1| NIL 3396777599 3403589916
   ("" (SKOSIMP*)
    (("" (EXPAND "ext_declared_var_names")
      (("" (EXPAND "wf_state")
        (("" (EXPAND "union")
          (("" (EXPAND "member")
            (("" (FLATTEN)
              (("" (EXPAND "wf_state")
                (("" (EXPAND "wf_ghoststate")
                  (("" (INST -2 "vn!1")
                    (("" (INST -3 "vn!1")
                      (("" (ASSERT)
                        (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL))
   48 48 T SHOSTAK))
 (|wf_state_ghost_not_local_or_field| 0
  (|wf_state_ghost_not_local_or_field-1| NIL 3396777649 3403589916
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_Program")
      (("" (EXPAND "wf_program_variables_disjoint_def")
        (("" (FLATTEN)
          (("" (EXPAND "wf_state")
            (("" (AUTO-REWRITE "disjoint?" "intersection" "member" "empty?")
              (("" (ASSERT)
                (("" (FLATTEN)
                  (("" (EXPAND "wf_state")
                    (("" (EXPAND "wf_ghoststate")
                      (("" (INST -3 "vn!1")
                        (("" (ASSERT)
                          (("" (INST -5 "vn!1")
                            (("" (INST -5 "vn!1")
                              (("" (ASSERT)
                                (("" (INST -2 "vn!1")
                                  (("" (FLATTEN)
                                    (("" (SPLIT 3)
                                      (("1" (SPLIT -5)
                                        (("1" (PROPAX) NIL NIL)
                                         ("2"
                                          (EXPAND
                                           "wf_program_variables_not_reserved_words_def")
                                          (("2" (ASSERT)
                                            (("2" (INST -8 "vn!1")
                                              (("2" (EXPAND "reserved_words")
                                                (("2"
                                                  (EXPAND "declared_var_names")
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("3" (PROPAX) NIL NIL))
                                        NIL)
                                       ("2" (SPLIT -3)
                                        (("1" (PROPAX) NIL NIL)
                                         ("2" (PROPAX) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|wf_program_variables_not_reserved_words_def| CONST-DECL "boolean"
     |WellFormedProgram| NIL)
    (|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|reserved_words| CONST-DECL "finite_set[Name]" |Program| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|finite_intersection1| APPLICATION-JUDGEMENT "finite_set" |finite_sets|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|disjoint?| CONST-DECL "bool" |sets| NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|wf_program_variables_disjoint_def| CONST-DECL "boolean"
     |WellFormedProgram| NIL))
   34 34 T SHOSTAK))
 (|on_method_MVA_TCC1| 0
  (|on_method_MVA_TCC1-1| NIL 3387174104 3403589917
   ("" (SKOSIMP*) (("" (TYPEPRED "s!1") (("" (GRIND) NIL NIL)) NIL)) NIL)
   PROVED
   ((|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|wf_Store| CONST-DECL "boolean" |MVASemantics| NIL)
    (|wf_AState| CONST-DECL "boolean" |MVASemantics| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (MVA TYPE-EQ-DECL NIL MVA NIL) (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|get_monitored_class| CONST-DECL "Class" |MonitoredProgram| NIL))
   87 87 T NIL))
 (|on_method_MVA_TCC2| 0
  (|on_method_MVA_TCC2-1| NIL 3387174104 3403589917
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_PEvent")
      (("" (ASSERT)
        (("" (USE "wf_state_implies_wf_PSt")
          (("" (ASSERT) (("" (EXPAND "wf_state") (("" (PROPAX) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_PEvent| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|wf_state_implies_wf_PSt| FORMULA-DECL NIL |MonitoredProgramSemantics|
     NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL))
   47 48 T NIL))
 (|on_method_MVA_TCC3| 0
  (|on_method_MVA_TCC3-1| NIL 3392369297 3403589918
   ("" (SKOSIMP*)
    (("" (TYPEPRED "mva(mp!1)")
      (("" (EXPAND "complete") (("" (FLATTEN) NIL NIL)) NIL)) NIL))
    NIL)
   PROVED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL))
   2 3 T NIL))
 (|on_method_entry_MP_TCC1| 0
  (|on_method_entry_MP_TCC1-1| NIL 3387174104 3403589918
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (EXPAND "on_method_entry")
        (("" (ASSERT)
          (("" (SPLIT -1)
            (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
             ("2" (FLATTEN)
              (("2" (SKOSIMP*)
                (("2" (ASSERT)
                  (("2" (SPLIT -7)
                    (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                     ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL))
   39 40 T NIL))
 (|on_method_exit_normal_MP_TCC1| 0
  (|on_method_exit_normal_MP_TCC1-1| NIL 3387174104 3403589918
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (EXPAND "on_method_exit_normal")
        (("" (SPLIT -1)
          (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
           ("2" (FLATTEN)
            (("2" (SKOSIMP*)
              (("2" (ASSERT)
                (("2" (SPLIT -7)
                  (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   30 31 T NIL))
 (|on_method_exit_normal_MP_TCC2| 0
  (|on_method_exit_normal_MP_TCC2-1| NIL 3401773402 3403589918
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (FLATTEN) NIL NIL)) NIL)) NIL))
    NIL)
   PROVED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL))
   4 4 T NIL))
 (|on_method_exit_normal_MP_TCC3| 0
  (|on_method_exit_normal_MP_TCC3-1| NIL 3401773402 3403589919
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   65 65 NIL NIL))
 (|on_method_exit_normal_MP_TCC4| 0
  (|on_method_exit_normal_MP_TCC4-1| NIL 3401773402 3403589921
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|get_monitored_class| CONST-DECL "Class" |MonitoredProgram| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL) (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |MonitoredProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|wf_AState| CONST-DECL "boolean" |MVASemantics| NIL)
    (|wf_Store| CONST-DECL "boolean" |MVASemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|MVA_aut_vars_are_not_prog_vars| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|MVA_prog_vars_are_fields| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MVA_events_correspond_to_methods| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   199 200 NIL NIL))
 (|on_method_exit_normal_MP_TCC5| 0
  (|on_method_exit_normal_MP_TCC5-1| NIL 3401773402 3403589924
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|get_monitored_class| CONST-DECL "Class" |MonitoredProgram| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|wf_AState| CONST-DECL "boolean" |MVASemantics| NIL)
    (|wf_Store| CONST-DECL "boolean" |MVASemantics| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL) (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|raise| CONST-DECL "PState" |State| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|MVA_aut_vars_are_not_prog_vars| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|MVA_prog_vars_are_fields| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MVA_events_correspond_to_methods| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   272 273 NIL NIL))
 (|on_method_exit_normal_MP_TCC6| 0
  (|on_method_exit_normal_MP_TCC6-1| NIL 3401773402 3403589924
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_BoolExpr")
        (("" (EXPAND "wf_Method") (("" (FLATTEN) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   PROVED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL))
   6 6 T NIL))
 (|on_method_exit_normal_MP_TCC7| 0
  (|on_method_exit_normal_MP_TCC7-1| NIL 3401773402 3403589924
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (SPLIT -1)
        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
         ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   35 35 T NIL))
 (|on_method_exit_exceptional_MP_TCC1| 0
  (|on_method_exit_exceptional_MP_TCC1-1| NIL 3387174104 3403589924
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (EXPAND "on_method_exit_exceptional")
        (("" (SPLIT -1)
          (("1" (FLATTEN)
            (("1" (SKOSIMP*)
              (("1" (SPLIT -8)
                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (ASSERT)
                    (("2" (LIFT-IF)
                      (("2" (SPLIT -7)
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (FLATTEN)
                          (("2" (ASSERT)
                            (("2" (REPLACE -2)
                              (("2" (TYPEPRED "update_PState")
                                (("2" (EXPAND "update_PState_type")
                                  (("2" (INST?)
                                    (("2" (INST -1 "s_new!1")
                                      (("2" (ASSERT)
                                        (("2" (REPLACE -1)
                                          (("2" (EXPAND "raise")
                                            (("2" (PROPAX) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   30 29 T NIL))
 (|on_method_exit_exceptional_MP_TCC2| 0
  (|on_method_exit_exceptional_MP_TCC2-1| NIL 3401773402 3403589924
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (FLATTEN) NIL NIL)) NIL)) NIL))
    NIL)
   PROVED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL))
   3 4 T NIL))
 (|on_method_exit_exceptional_MP_TCC3| 0
  (|on_method_exit_exceptional_MP_TCC3-1| NIL 3401773402 3403589925
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   44 44 NIL NIL))
 (|on_method_exit_exceptional_MP_TCC4| 0
  (|on_method_exit_exceptional_MP_TCC4-1| NIL 3401773402 3403589927
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|catch| CONST-DECL "PState" |State| NIL)
    (|get_monitored_class| CONST-DECL "Class" |MonitoredProgram| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL) (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |MonitoredProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|wf_AState| CONST-DECL "boolean" |MVASemantics| NIL)
    (|wf_Store| CONST-DECL "boolean" |MVASemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|MVA_aut_vars_are_not_prog_vars| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|MVA_prog_vars_are_fields| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MVA_events_correspond_to_methods| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   219 218 NIL NIL))
 (|on_method_exit_exceptional_MP_TCC5| 0
  (|on_method_exit_exceptional_MP_TCC5-1| NIL 3401773402 3403589927
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (SPLIT -1)
        (("1" (SKOSIMP*)
          (("1" (ASSERT)
            (("1" (REPLACE -7)
              (("1" (LIFT-IF)
                (("1" (ASSERT)
                  (("1" (SPLIT 2)
                    (("1" (PROPAX) NIL NIL)
                     ("2" (EXPAND "update_PState")
                      (("2" (EXPAND "raise") (("2" (PROPAX) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|raise| CONST-DECL "PState" |State| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   36 36 T NIL))
 (|initial_MP_state_TCC1| 0
  (|initial_MP_state_TCC1-1| NIL 3387174104 3403589928
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|MVA_events_correspond_to_methods| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|MVA_prog_vars_are_fields| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MVA_aut_vars_are_not_prog_vars| CONST-DECL "boolean" |MonitoredProgram|
     NIL)
    (|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (MVA TYPE-EQ-DECL NIL MVA NIL) (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   66 66 NIL NIL))
 (|IMP_SemanticsProofs_TCC1| 0
  (|IMP_SemanticsProofs_TCC1-1| NIL 3392371550 3403589931
   ("" (SKOSIMP*)
    (("" (EXPAND "on_method_entry_MP")
      (("" (FLATTEN)
        (("" (SKOSIMP*)
          (("" (EXPAND "on_method_entry")
            (("" (SPLIT -2)
              (("1" (FLATTEN)
                (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (ASSERT)
                  (("2" (SKOSIMP*)
                    (("2" (REPLACE -2 :DIR RL)
                      (("2" (REPLACE -10)
                        (("2" (EXPAND "check_assertion")
                          (("2" (FLATTEN)
                            (("2" (SKOSIMP*)
                              (("2" (COPY -11)
                                (("2"
                                  (APPLY (REPEAT (INST? -1 :WHERE (-5 -17))))
                                  (("1" (ASSERT)
                                    (("1" (FLATTEN)
                                      (("1" (CASE-REPLACE "tau1!1 = tau1!2")
                                        (("1" (COPY -15)
                                          (("1"
                                            (APPLY
                                             (REPEAT
                                              (INST? -1 :WHERE (-12 -24))))
                                            (("1" (ASSERT)
                                              (("1" (FLATTEN)
                                                (("1"
                                                  (CASE-REPLACE
                                                   "tau2!1 = tau2!2")
                                                  (("1"
                                                    (APPLY
                                                     (REPEAT
                                                      (INST? -19 :WHERE
                                                       (-17 -29))))
                                                    (("1" (ASSERT)
                                                      (("1" (FLATTEN)
                                                        (("1" (REPLACE -19)
                                                          (("1" (SPLIT -32)
                                                            (("1" (FLATTEN)
                                                              (("1" (ASSERT)
                                                                NIL NIL))
                                                              NIL)
                                                             ("2" (FLATTEN)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2" (REPLACE -3)
                                                    (("2" (LIFT-IF)
                                                      (("2" (SPLIT -27)
                                                        (("1" (FLATTEN)
                                                          (("1" (ASSERT)
                                                            (("1" (SPLIT -2)
                                                              (("1" (FLATTEN)
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (FLATTEN)
                                                          (("2" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (REPLACE -3)
                                          (("2" (LIFT-IF)
                                            (("2" (SPLIT -20)
                                              (("1" (FLATTEN)
                                                (("1" (ASSERT)
                                                  (("1" (SPLIT -2)
                                                    (("1" (FLATTEN)
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL)
                                                     ("2" (FLATTEN)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (FLATTEN)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL)
                                   ("3" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|on_method_entry_MP| CONST-DECL "(on_method_event_type)"
     |MonitoredProgramSemantics| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|m1!1| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (|m1!2| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (MVA TYPE-EQ-DECL NIL MVA NIL) (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|Transition| TYPE-EQ-DECL NIL MVA NIL) (|Guard| TYPE-EQ-DECL NIL MVA NIL)
    (|Action| TYPE-EQ-DECL NIL MVA NIL) (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   335 335 T NIL))
 (|IMP_SemanticsProofs_TCC2| 0
  (|IMP_SemanticsProofs_TCC2-2| NIL 3392373362 3403589934
   ("" (SKOSIMP*)
    (("" (EXPAND "on_method_exit_normal_MP")
      (("" (FLATTEN)
        (("" (SPLIT -2)
          (("1" (FLATTEN)
            (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (ASSERT)
              (("2" (SKOSIMP*)
                (("2" (EXPAND "check_assertion")
                  (("2" (FLATTEN)
                    (("2" (SKOSIMP*)
                      (("2" (REPLACE -4 :DIR RL)
                        (("2" (REPLACE -16)
                          (("2" (COPY -12)
                            (("2" (APPLY (REPEAT (INST? -1 :WHERE (-3 -15))))
                              (("2" (ASSERT)
                                (("2" (FLATTEN)
                                  (("2" (REPLACE -1)
                                    (("2"
                                      (CASE-REPLACE "tau2!1 = tau2!2" :HIDE? T)
                                      (("1" (COPY -14)
                                        (("1"
                                          (APPLY
                                           (REPEAT (INST? -1 :WHERE (-9 -21))))
                                          (("1" (ASSERT)
                                            (("1" (FLATTEN)
                                              (("1"
                                                (CASE-REPLACE "tau3!1 = tau3!2"
                                                 :HIDE? T)
                                                (("1"
                                                  (APPLY
                                                   (REPEAT
                                                    (INST? -17 :WHERE
                                                     (-14 -26))))
                                                  (("1" (ASSERT)
                                                    (("1" (FLATTEN)
                                                      (("1" (REPLACE -19)
                                                        (("1" (LIFT-IF)
                                                          (("1" (SPLIT -15)
                                                            (("1" (FLATTEN)
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (SPLIT -2)
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (FLATTEN)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2" (FLATTEN)
                                                              (("2" (ASSERT)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (REPLACE -3)
                                                  (("2" (REPLACE -24)
                                                    (("2" (REPLACE -12)
                                                      (("2" (LIFT-IF)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE -17)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_exit_normal_MP| CONST-DECL "(on_method_event_type)"
     |MonitoredProgramSemantics| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (MVA TYPE-EQ-DECL NIL MVA NIL) (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|Transition| TYPE-EQ-DECL NIL MVA NIL) (|Guard| TYPE-EQ-DECL NIL MVA NIL)
    (|Action| TYPE-EQ-DECL NIL MVA NIL) (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL))
   239 239 T NIL)
  (|IMP_SemanticsProofs_TCC2-1| NIL 3392371550 3392371598
   ("" (ASSUMING-TCC) NIL NIL) UNFINISHED NIL 2662 2380 NIL NIL))
 (|IMP_SemanticsProofs_TCC3| 0
  (|IMP_SemanticsProofs_TCC3-2| NIL 3392373370 3403589935
   ("" (SKOSIMP*)
    (("" (EXPAND "on_method_exit_exceptional_MP")
      (("" (FLATTEN)
        (("" (SPLIT -2)
          (("1" (FLATTEN)
            (("1" (ASSERT)
              (("1" (SKOSIMP*)
                (("1" (EXPAND "check_assertion")
                  (("1" (FLATTEN)
                    (("1" (SKOSIMP*)
                      (("1" (REPLACE -5 :DIR RL)
                        (("1" (REPLACE -15)
                          (("1" (COPY -11)
                            (("1" (APPLY (REPEAT (INST? -1 :WHERE (-4 -14))))
                              (("1" (ASSERT)
                                (("1" (FLATTEN)
                                  (("1" (REPLACE -1)
                                    (("1"
                                      (CASE-REPLACE "tau2!1 = tau2!2" :HIDE? T)
                                      (("1"
                                        (APPLY
                                         (REPEAT (INST? -13 :WHERE (-9 -19))))
                                        (("1" (ASSERT)
                                          (("1" (FLATTEN)
                                            (("1" (REPLACE -13)
                                              (("1"
                                                (CASE-REPLACE
                                                 "tau3!1 = tau3!2")
                                                (("1" (REPLACE -12)
                                                  (("1" (REPLACE -24)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (REPLACE -22)
                                                  (("2" (REPLACE -10)
                                                    (("2" (LIFT-IF)
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (REPLACE -16)
                                        (("2" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_exit_exceptional_MP| CONST-DECL "(on_method_event_type)"
     |MonitoredProgramSemantics| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|catch| CONST-DECL "PState" |State| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (MVA TYPE-EQ-DECL NIL MVA NIL) (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|Transition| TYPE-EQ-DECL NIL MVA NIL) (|Guard| TYPE-EQ-DECL NIL MVA NIL)
    (|Action| TYPE-EQ-DECL NIL MVA NIL) (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL))
   114 113 T NIL)
  (|IMP_SemanticsProofs_TCC3-1| NIL 3392371550 3392371601
   ("" (ASSUMING-TCC) NIL NIL) UNFINISHED NIL 2668 2370 NIL NIL))
 (|IMP_SemanticsProofs_TCC4| 0
  (|IMP_SemanticsProofs_TCC4-1| NIL 3392371550 3403589936
   ("" (SKOSIMP*)
    (("" (EXPAND "execute_CaseJML")
      (("" (LIFT-IF)
        (("" (SPLIT -2)
          (("1" (FLATTEN)
            (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (ASSERT)
              (("2" (FLATTEN)
                (("2"
                  (INST -4
                   "IfThenElse(PROJ_1(car(branches!1)), PROJ_2(car(branches!1)),
                           CaseJML(cdr(branches!1)))"
                   "Unit" "Unit" "s!1" "s1!1" "s2!1" "n1!1" "n2!1" "n1!1 - 1"
                   "n2!1 - 1")
                  (("1" (ASSERT)
                    (("1" (SPLIT -4)
                      (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)
                       ("3" (PROPAX) NIL NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse| ADT-CONSTRUCTOR-DECL
     "[[BoolExpr, Stmt, Stmt] -> (IfThenElse?)]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|CaseJML| ADT-CONSTRUCTOR-DECL "[list[[BoolExpr, Stmt]] -> (CaseJML?)]"
     |Body_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|n2!1| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   100 99 T NIL))
 (|IMP_SemanticsProofs_TCC5| 0
  (|IMP_SemanticsProofs_TCC5-1| NIL 3392371550 3403589936
   ("" (SKOSIMP*)
    (("" (EXPAND "execute_set")
      (("" (SKOSIMP*)
        ((""
          (INST -1 "e!1" "v!1" "v!2" "s!1" "tau!1" "tau!2" "n1!1" "n2!1"
           "n1!1 - 1" "n2!1 - 1")
          (("1" (ASSERT)
            (("1" (FLATTEN)
              (("1" (REPLACE -2)
                (("1" (REPLACE -1)
                  (("1" (REPLACE -3)
                    (("1" (REPLACE -6 :DIR RL) (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|n2!1| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (|n1!1| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   36 36 T NIL))
 (|IMP_SemanticsProofs_TCC6| 0
  (|IMP_SemanticsProofs_TCC6-1| NIL 3397385945 3403589937
   ("" (SKOSIMP*)
    (("" (EXPAND "execute_assert")
      (("" (SPLIT -2)
        (("1" (FLATTEN)
          (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (ASSERT)
            (("2" (EXPAND "check_assertion")
              (("2" (SKOSIMP*)
                (("2" (APPLY (REPEAT (INST? -5 :WHERE (-2 -7))))
                  (("1" (ASSERT)
                    (("1" (FLATTEN)
                      (("1" (REPLACE -5)
                        (("1" (REPLACE -7)
                          (("1" (LIFT-IF)
                            (("1" (SPLIT -3)
                              (("1" (FLATTEN)
                                (("1" (ASSERT)
                                  (("1" (SPLIT -2)
                                    (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                      NIL)
                                     ("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|n1!1| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|n2!1| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   69 68 T NIL))
 (|determ_step_MP| 0
  (|determ_step_MP-1| NIL 3396350156 3403589937
   ("" (SKOSIMP*)
    (("" (LEMMA "derive_determ_step")
      ((""
        (INST -1 "p!1" "n1!1" "n2!1" "b!1" "v1!1" "v2!1" "sigma!1" "sigma1!1"
         "sigma2!1")
        (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL))
      NIL))
    NIL)
   PROVED
   ((|derive_determ_step| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL) (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |MonitoredProgramSemantics| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (< CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry_MP| CONST-DECL "(on_method_event_type)"
     |MonitoredProgramSemantics| NIL)
    (|on_method_exit_normal_MP| CONST-DECL "(on_method_event_type)"
     |MonitoredProgramSemantics| NIL)
    (|on_method_exit_exceptional_MP| CONST-DECL "(on_method_event_type)"
     |MonitoredProgramSemantics| NIL))
   25 25 T SHOSTAK))
 (|wf_initial_MP_state| 0
  (|wf_initial_MP_state-1| NIL 3390055553 3403589939
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_MP")
      (("" (FLATTEN)
        (("" (EXPAND "initial_MP_state")
          (("" (EXPAND "wf_state")
            (("" (SPLIT 1)
              (("1" (USE "wf_initial_MVA_state") (("1" (ASSERT) NIL NIL)) NIL)
               ("2" (USE "wf_initial_Program_state") (("2" (ASSERT) NIL NIL))
                NIL)
               ("3" (USE "wf_initial_ghost_state")
                (("1" (ASSERT) NIL NIL)
                 ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_MP| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|initial_MVA_state| CONST-DECL "AState" |MVASemantics| NIL)
    (|initial_Program_state| CONST-DECL "PState" |State| NIL)
    (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)
    (|Bottom?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Bottom| ADT-CONSTRUCTOR-DECL "(Bottom?)" |Val_adt| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|mp!1| SKOLEM-CONST-DECL "MonitoredProgram[CP, Name]"
     |MonitoredProgramSemantics| NIL)
    (|get_GhostDecl| CONST-DECL "lift[FieldDecl]" |ProgramFunctions| NIL)
    (|bottom?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|wf_initial_ghost_state| FORMULA-DECL NIL |SemanticsJML| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |MonitoredProgramSemantics| NIL)
    (|wf_initial_Program_state| FORMULA-DECL NIL |State| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|wf_initial_MVA_state| FORMULA-DECL NIL |MVASemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|initial_MP_state| CONST-DECL "MPState" |MonitoredProgramSemantics| NIL))
   120 119 T SHOSTAK))
 (|wf_update_PState| 0
  (|wf_update_PState-1| NIL 3392375856 3403589939 ("" (GRIND) NIL NIL) PROVED
   ((|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL) (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |MonitoredProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|wf_AState| CONST-DECL "boolean" |MVASemantics| NIL)
    (|wf_Store| CONST-DECL "boolean" |MVASemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   79 80 NIL NIL))
 (|wf_update_GhostVars| 0
  (|wf_update_GhostVars-1| NIL 3392375867 3403589939
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_state")
      (("" (EXPAND "update_GhostVars") (("" (FLATTEN) (("" (ASSERT) NIL))))))))
    NIL)
   PROVED
   ((|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |MonitoredProgramSemantics| NIL))
   3 2 NIL NIL))
 (|wf_state_update_stack| 0
  (|wf_state_update_stack-1| NIL 3392375879 3403589944
   ("" (SKOSIMP*)
    (("" (EXPAND "update_stack")
      (("" (SPLIT 1)
        (("1" (SKOSIMP*)
          (("1" (LEMMA "wf_update_PState")
            (("1"
              (CASE "is_finite[[Name, Val[Name]]]
                                          ({x: [Name, Val[Name]] |
                                              EXISTS (l: LocalVarDecl[Name]):
                                                lvds!1(l) AND
                                                 name(l) = PROJ_1(x) AND
                                                  default_value[Name](jtype(l)) = PROJ_2(x)})")
              (("1" (INST? -2 :WHERE 1)
                (("1" (INST -2 "p!1")
                  (("1" (ASSERT)
                    (("1" (HIDE 2)
                      (("1" (EXPAND "update_PState")
                        (("1" (EXPAND "o" 1 2)
                          (("1" (EXPAND "o")
                            (("1" (SKOSIMP*)
                              (("1" (USE "wf_state_update_local")
                                (("1"
                                  (CASE "wf_state(program(p!1))
                                                      (update_local(name(arg!1), param_val!1)
                                                                   (update_locals({x: [Name, Val[Name]]
                                                                                   |
                                                                                   EXISTS
                                                                                   (l: LocalVarDecl[Name]):
                                                                                   lvds!1(l)
                                                                                   AND
                                                                                   name(l) = PROJ_1(x)
                                                                                   AND
                                                                                   default_value(jtype(l))
                                                                                   =
                                                                                   PROJ_2(x)})
                                                                                 (pstate(s!1))))")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "wf_state" -1)
                                      (("1" (INST -1 "This")
                                        (("1" (FLATTEN) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (HIDE 2)
                                      (("2" (USE "wf_state_update_local")
                                        (("2"
                                          (CASE "wf_state(program(p!1))
                                                              (update_locals({x: [Name, Val[Name]] |
                                                                                EXISTS (l: LocalVarDecl[Name]):
                                                                                  lvds!1(l) AND
                                                                                   name(l) = PROJ_1(x) AND
                                                                                    default_value(jtype(l)) = PROJ_2(x)})
                                                                            (pstate(s!1)))")
                                          (("1" (ASSERT)
                                            (("1" (TYPEPRED "arg!1")
                                              (("1" (EXPAND "wf_state" -2)
                                                (("1" (INST -2 "name(arg!1)")
                                                  (("1" (ASSERT)
                                                    (("1" (FLATTEN)
                                                      (("1"
                                                        (EXPAND "var_names")
                                                        (("1" (INST?) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (HIDE -1 -2)
                                              (("2"
                                                (USE "wf_state_update_locals")
                                                (("2" (ASSERT)
                                                  (("2" (SKOSIMP*)
                                                    (("2" (HIDE 2 3)
                                                      (("2"
                                                        (REPLACE -3 :DIR RL)
                                                        (("2"
                                                          (EXPAND
                                                           "default_value")
                                                          (("2" (HIDE -3)
                                                            (("2"
                                                              (EXPAND
                                                               "wf_state"
                                                               -4)
                                                              (("2"
                                                                (INST -4
                                                                 "name(l!1)")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (FLATTEN)
                                                                    (("2"
                                                                      (EXPAND
                                                                       "var_names")
                                                                      (("2"
                                                                        (INST?)
                                                                        (("2"
                                                                          (INST?)
                                                                          (("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (TYPEPRED "lvds!1")
                (("2" (HIDE 2 -2)
                  (("2" (EXPAND "is_finite")
                    (("2" (SKOSIMP*)
                      (("2"
                        (INST 1 "N!1" "LAMBDA(x : ({x: [Name, Val[Name]] |
                                           EXISTS (l: LocalVarDecl[Name]):
                                             lvds!1(l) AND
                                              name(l) = PROJ_1(x) AND
                                               default_value[Name](jtype(l)) = PROJ_2(x)})) : f!1(choose({l : LocalVarDecl[Name] |
                                             lvds!1(l) AND
                                              name(l) = PROJ_1(x) AND
                                               default_value[Name](jtype(l)) = PROJ_2(x)}))")
                        (("1" (EXPAND "injective?")
                          (("1" (SKOSIMP*)
                            (("1" (INST?)
                              (("1" (ASSERT)
                                (("1" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL))
                                NIL)
                               ("2" (REWRITE "nonempty_exists")
                                (("2" (TYPEPRED "x2!1")
                                  (("2" (SKOSIMP*)
                                    (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (REWRITE "nonempty_exists")
                                (("3" (TYPEPRED "x1!1")
                                  (("3" (SKOSIMP*)
                                    (("3" (INST?) (("3" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP*)
                          (("2" (TYPEPRED "x!1")
                            (("2" (REWRITE "nonempty_exists")
                              (("2" (SKOSIMP*)
                                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKOSIMP*) NIL NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|update_stack| CONST-DECL "FullState" |Semantics| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|default_value| CONST-DECL "(defined?)" |ValProp| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|wf_state_update_locals| FORMULA-DECL NIL |State| NIL)
    (|wf_state_update_local| FORMULA-DECL NIL |State| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|lvds!1| SKOLEM-CONST-DECL "finite_set[LocalVarDecl[Name]]"
     |MonitoredProgramSemantics| NIL)
    (|update_locals| DEF-DECL "PState" |State| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (MVA TYPE-EQ-DECL NIL MVA NIL) (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|Transition| TYPE-EQ-DECL NIL MVA NIL) (|Guard| TYPE-EQ-DECL NIL MVA NIL)
    (|Action| TYPE-EQ-DECL NIL MVA NIL) (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|x!1| SKOLEM-CONST-DECL "({x: [Name, Val[Name]] |
    EXISTS (l: LocalVarDecl[Name]):
      lvds!1(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     |MonitoredProgramSemantics| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |MonitoredProgramSemantics|
     NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|x2!1| SKOLEM-CONST-DECL "({x: [Name, Val[Name]] |
    EXISTS (l: LocalVarDecl[Name]):
      lvds!1(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     |MonitoredProgramSemantics| NIL)
    (|x1!1| SKOLEM-CONST-DECL "({x: [Name, Val[Name]] |
    EXISTS (l: LocalVarDecl[Name]):
      lvds!1(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     |MonitoredProgramSemantics| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |MonitoredProgramSemantics|
     NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |MonitoredProgramSemantics|
     NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_update_PState| FORMULA-DECL NIL |MonitoredProgramSemantics| NIL))
   504 503 T NIL))
 (|on_method_MVA_yields_wf_AState| 0
  (|on_method_MVA_yields_wf_AState-1| NIL 3402486501 3403589946
   ("" (SKOSIMP)
    (("" (EXPAND "on_method_MVA")
      (("" (SPLIT)
        (("1" (FLATTEN)
          (("1" (EXPAND* "wf_AState" "step")
            (("1"
              (NAME-REPLACE "t" "choose(LAMBDA (t: Transition):
                              ts(mva(mp!1))(t) AND scp(t) = cp(astate(s!1)) AND
                              event(t) = (# etype := et!1, mname := name(m!1) #) AND
                              guard(t)(stA(astate(s!1)), st(pstate(s!1))))")
              (("1" (TYPEPRED "t")
                (("1" (TYPEPRED "mva(mp!1)")
                  (("1" (EXPAND* "complete" "wf_MVA" "wf_Trans")
                    (("1" (FLATTEN)
                      (("1" (INST?)
                        (("1" (PROP)
                          (("1" (USE "execute_action_yields_wf_state")
                            (("1" (ASSERT)
                              (("1" (EXPAND* "wf_state" "wf_AState")
                                (("1" (GROUND)
                                  (("1" (USE "wf_state_implies_wf_PSt")
                                    (("1" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2)
                (("2" (REWRITE "nonempty_exists")
                  (("2" (TYPEPRED "mva(mp!1)")
                    (("2" (EXPAND* "complete" "total")
                      (("2" (FLATTEN)
                        (("2"
                          (INST - "cp(astate(s!1))"
                           "(# etype := et!1, mname := name(m!1) #)"
                           "stA(astate(s!1))" "st(pstate(s!1))")
                          (("2" (GROUND)
                            (("1" (SKOLEM!) (("1" (INST?) NIL NIL)) NIL)
                             ("2" (EXPAND* "wf_state" "wf_AState") NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (EXPAND "wf_state" -1) (("2" (FLATTEN) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|on_method_MVA| CONST-DECL "AState" |MonitoredProgramSemantics| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Action| TYPE-EQ-DECL NIL MVA NIL) (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL) (MVA TYPE-EQ-DECL NIL MVA NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_state_implies_wf_PSt| FORMULA-DECL NIL |MonitoredProgramSemantics|
     NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|execute_action_yields_wf_state| FORMULA-DECL NIL |MVASemantics| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|OneAction| TYPE-EQ-DECL NIL MVA NIL)
    (|wf_MVA| CONST-DECL "boolean" |WellFormedMVA| NIL)
    (|wf_Trans| CONST-DECL "boolean" |WellFormedMVA| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|total| CONST-DECL "boolean" |MVASemantics| NIL)
    (|m!1| SKOLEM-CONST-DECL "(wf_Method(program(mp!1)))"
     |MonitoredProgramSemantics| NIL)
    (|et!1| SKOLEM-CONST-DECL "EventType" |MonitoredProgramSemantics| NIL)
    (|s!1| SKOLEM-CONST-DECL "MPState" |MonitoredProgramSemantics| NIL)
    (|t!1| SKOLEM-CONST-DECL "Transition[CP, Name]" |MonitoredProgramSemantics|
     NIL)
    (|mp!1| SKOLEM-CONST-DECL "MonitoredProgram[CP, Name]"
     |MonitoredProgramSemantics| NIL)
    (|wf_AState| CONST-DECL "boolean" |MVASemantics| NIL)
    (|step| CONST-DECL "AState" |MVASemantics| NIL))
   139 139 T SHOSTAK))
 (|derive_yields_wf_state_MP| 0
  (|derive_yields_wf_state_MP-1| NIL 3402832608 3403590728
   ("" (LEMMA "wf_induction[nat, LAMBDA(i, j : nat) : i < j]")
    (("1"
      (INST -1
       "LAMBDA(n : nat) : FORALL (mp: MonitoredProgram, b: (wf_Body(program(mp))), v: Val)
             (sigma1, sigma2: MPState):
        wf_MP(mp) IMPLIES
         wf_state(mp)(sigma1) IMPLIES
          derive(mp)(b, sigma1, v, sigma2)(n) IMPLIES wf_state(mp)(sigma2)")
      (("1" (SPLIT -1)
        (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (HIDE 2)
          (("2" (SKOSIMP*)
            (("2" (EXPAND "derive" -4)
              (("2" (SPLIT -4)
                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (ASSERT)
                    (("2" (LIFT-IF)
                      (("2" (LEMMA "wf_Body_preserved_by_proper_subterm")
                        (("2" (INST -1 "program(mp!1)" "b!1" _)
                          (("2"
                            (APPLY
                             (BRANCH (SPLIT -2) ((THEN (FLATTEN) (ASSERT)))))
                            (("2"
                              (APPLY
                               (BRANCH (SPLIT -1) ((THEN (FLATTEN) (ASSERT)))))
                              (("1" (SKOSIMP*)
                                (("1" (INST-CP -7 "m2!1")
                                  (("1" (INST -7 "m1!1")
                                    (("1" (ASSERT)
                                      (("1"
                                        (APPLY (REPEAT (INST? -7 :WHERE -3)))
                                        (("1"
                                          (APPLY (REPEAT (INST? -8 :WHERE -4)))
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2"
                                (APPLY
                                 (BRANCH (SPLIT -1)
                                  ((THEN (FLATTEN) (ASSERT)))))
                                (("2"
                                  (APPLY
                                   (BRANCH (SPLIT -1)
                                    ((THEN (FLATTEN) (ASSERT)))))
                                  (("2"
                                    (APPLY
                                     (BRANCH (SPLIT -1)
                                      ((THEN (FLATTEN) (ASSERT)))))
                                    (("2"
                                      (APPLY
                                       (BRANCH (SPLIT -1)
                                        ((THEN (FLATTEN) (ASSERT)))))
                                      (("1" (SKOSIMP*)
                                        (("1" (INST -6 "x!1 - 1")
                                          (("1" (ASSERT)
                                            (("1"
                                              (APPLY
                                               (REPEAT (INST? -6 :WHERE -3)))
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2"
                                        (APPLY
                                         (BRANCH (SPLIT -1)
                                          ((THEN (FLATTEN) (ASSERT)))))
                                        (("1" (SKOSIMP*)
                                          (("1" (INST-CP -7 "m2!1")
                                            (("1" (INST -7 "m1!1")
                                              (("1" (ASSERT)
                                                (("1"
                                                  (APPLY
                                                   (REPEAT
                                                    (INST? -7 :WHERE -3)))
                                                  (("1"
                                                    (APPLY
                                                     (REPEAT
                                                      (INST? -8 :WHERE -4)))
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2"
                                          (APPLY
                                           (BRANCH (SPLIT -1)
                                            ((THEN (FLATTEN) (ASSERT)))))
                                          (("1" (SKOSIMP*)
                                            (("1" (INST-CP -7 "m2!1")
                                              (("1" (INST -7 "m1!1")
                                                (("1" (ASSERT)
                                                  (("1"
                                                    (APPLY
                                                     (REPEAT
                                                      (INST? -7 :WHERE -3)))
                                                    (("1"
                                                      (APPLY
                                                       (REPEAT
                                                        (INST? -8 :WHERE -4)))
                                                      (("1" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2"
                                            (APPLY
                                             (BRANCH (SPLIT -1)
                                              ((THEN (FLATTEN) (ASSERT)))))
                                            (("2"
                                              (APPLY
                                               (BRANCH (SPLIT -1)
                                                ((THEN (FLATTEN) (ASSERT)))))
                                              (("2"
                                                (APPLY
                                                 (BRANCH (SPLIT -1)
                                                  ((THEN (FLATTEN) (ASSERT)))))
                                                (("2"
                                                  (APPLY
                                                   (BRANCH (SPLIT -1)
                                                    ((THEN (FLATTEN)
                                                      (ASSERT)))))
                                                  (("1" (SKOSIMP*)
                                                    (("1" (INST -6 "x!1 - 1")
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (APPLY
                                                           (REPEAT
                                                            (INST? -6 :WHERE
                                                             -3)))
                                                          (("1" (ASSERT)
                                                            (("1" (REPLACE -4)
                                                              (("1" (LIFT-IF)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (SPLIT 13)
                                                                    (("1"
                                                                      (PROPAX)
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (SKOSIMP*)
                                                                      (("2"
                                                                        (USE
                                                                         "wf_update_PState")
                                                                        (("2"
                                                                          (ASSERT)
                                                                          (("2"
                                                                            (SKOSIMP*)
                                                                            (("2"
                                                                              (EXPAND
                                                                               "update_PState")
                                                                              (("2"
                                                                                (USE
                                                                                 "wf_state_update")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (USE
                                                                                   "derive_bottom_iff_exception_step")
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (EXPAND
                                                                                       "defined?")
                                                                                      (("2"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (APPLY
                                                     (BRANCH (SPLIT -1)
                                                      ((THEN (FLATTEN)
                                                        (ASSERT)))))
                                                    (("1" (INST -5 "x!1 - 1")
                                                      (("1" (ASSERT)
                                                        (("1"
                                                          (APPLY
                                                           (REPEAT
                                                            (INST? -5 :WHERE
                                                             -3)))
                                                          (("1" (ASSERT) NIL
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL)
                                                     ("2"
                                                      (APPLY
                                                       (BRANCH (SPLIT -1)
                                                        ((THEN (FLATTEN)
                                                          (ASSERT)))))
                                                      (("1" (SKOSIMP*)
                                                        (("1"
                                                          (INST-CP -7 "m2!1")
                                                          (("1"
                                                            (INST -7 "m1!1")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (APPLY
                                                                 (REPEAT
                                                                  (INST? -7
                                                                   :WHERE -3)))
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (APPLY
                                                                       (BRANCH
                                                                        (SPLIT
                                                                         -4)
                                                                        ((THEN
                                                                          (FLATTEN)
                                                                          (ASSERT)))))
                                                                      (("1"
                                                                        (LIFT-IF)
                                                                        (("1"
                                                                          (APPLY
                                                                           (BRANCH
                                                                            (SPLIT
                                                                             -2)
                                                                            ((THEN
                                                                              (FLATTEN)
                                                                              (ASSERT)))))
                                                                          (("1"
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -10
                                                                               :WHERE
                                                                               -2)))
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -9
                                                                               :WHERE
                                                                               -1)))
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL)
                                                       ("2"
                                                        (APPLY
                                                         (BRANCH (SPLIT -1)
                                                          ((THEN (FLATTEN)
                                                            (ASSERT)))))
                                                        (("1" (SKOSIMP*)
                                                          (("1"
                                                            (INST-CP -16
                                                             "m5!1")
                                                            (("1"
                                                              (INST-CP -16
                                                               "m4!1")
                                                              (("1"
                                                                (INST-CP -16
                                                                 "m2!1")
                                                                (("1"
                                                                  (INST-CP -16
                                                                   "m1!1")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (APPLY
                                                                       (REPEAT
                                                                        (INST?
                                                                         -17
                                                                         :WHERE
                                                                         -3)))
                                                                      (("1"
                                                                        (APPLY
                                                                         (REPEAT
                                                                          (INST?
                                                                           -18
                                                                           :WHERE
                                                                           -4)))
                                                                        (("1"
                                                                          (APPLY
                                                                           (REPEAT
                                                                            (INST?
                                                                             -19
                                                                             :WHERE
                                                                             -10)))
                                                                          (("1"
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -20
                                                                               :WHERE
                                                                               -11)))
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (EXPAND
                                                                                 "lookup_mthd")
                                                                                (("1"
                                                                                  (LIFT-IF
                                                                                   -6)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    (("1"
                                                                                      (SPLIT
                                                                                       -6)
                                                                                      (("1"
                                                                                        (FLATTEN)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          (("1"
                                                                                            (CASE
                                                                                                "wf_state(mp!1)(tau3!1)")
                                                                                            (("1"
                                                                                              (CASE
                                                                                                  "wf_state(mp!1)(tau4!1)")
                                                                                              (("1"
                                                                                                (USE
                                                                                                 "wf_state_arg_is_local"
                                                                                                 ("s"
                                                                                                  "pstate(tau4!1)"))
                                                                                                (("1"
                                                                                                  (USE
                                                                                                   "get_class_in_classes")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "method_names")
                                                                                                      (("1"
                                                                                                        (SKOSIMP*)
                                                                                                        (("1"
                                                                                                          (CASE-REPLACE
                                                                                                           "m!1 = md!1")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (SPLIT
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (CASE
                                                                                                                      "wf_state(mp!1)(tau5!1)")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    (("1"
                                                                                                                      (CASE
                                                                                                                          "wf_state(mp!1)(tau7!1)")
                                                                                                                      (("1"
                                                                                                                        (CASE
                                                                                                                            "wf_state(mp!1)(tau8!1)")
                                                                                                                        (("1"
                                                                                                                          (REPLACE
                                                                                                                           -24)
                                                                                                                          (("1"
                                                                                                                            (LEMMA
                                                                                                                             "wf_update_PState")
                                                                                                                            (("1"
                                                                                                                              (INST?
                                                                                                                               -1
                                                                                                                               :WHERE
                                                                                                                               16)
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                (("1"
                                                                                                                                  (INST
                                                                                                                                   -1
                                                                                                                                   "mp!1")
                                                                                                                                  (("1"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("1"
                                                                                                                                      (SKOSIMP*)
                                                                                                                                      (("1"
                                                                                                                                        (EXPAND
                                                                                                                                         "update_PState")
                                                                                                                                        (("1"
                                                                                                                                          (USE
                                                                                                                                           "wf_state_update_local")
                                                                                                                                          (("1"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("1"
                                                                                                                                              (USE
                                                                                                                                               "wf_state_arg_is_local")
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                NIL
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (EXPAND*
                                                                                                                                             "is_local"
                                                                                                                                             "lookup_local"
                                                                                                                                             "defined?")
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              NIL
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (SPLIT
                                                                                                                           -21)
                                                                                                                          (("1"
                                                                                                                            (FLATTEN)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (EXPAND
                                                                                                                                 "on_method_exit_normal_MP")
                                                                                                                                (("1"
                                                                                                                                  (SKOSIMP*)
                                                                                                                                  (("1"
                                                                                                                                    (EXPAND
                                                                                                                                     "check_assertion")
                                                                                                                                    (("1"
                                                                                                                                      (SKOSIMP*)
                                                                                                                                      (("1"
                                                                                                                                        (INST-CP
                                                                                                                                         -36
                                                                                                                                         "m3!2 - 1")
                                                                                                                                        (("1"
                                                                                                                                          (INST-CP
                                                                                                                                           -36
                                                                                                                                           "m2!2 - 1")
                                                                                                                                          (("1"
                                                                                                                                            (INST
                                                                                                                                             -36
                                                                                                                                             "m1!2")
                                                                                                                                            (("1"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("1"
                                                                                                                                                (APPLY
                                                                                                                                                 (REPEAT
                                                                                                                                                  (INST?
                                                                                                                                                   -36
                                                                                                                                                   :WHERE
                                                                                                                                                   -3)))
                                                                                                                                                (("1"
                                                                                                                                                  (ASSERT)
                                                                                                                                                  (("1"
                                                                                                                                                    (APPLY
                                                                                                                                                     (REPEAT
                                                                                                                                                      (INST?
                                                                                                                                                       -37
                                                                                                                                                       :WHERE
                                                                                                                                                       -7)))
                                                                                                                                                    (("1"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("1"
                                                                                                                                                        (APPLY
                                                                                                                                                         (REPEAT
                                                                                                                                                          (INST?
                                                                                                                                                           -38
                                                                                                                                                           :WHERE
                                                                                                                                                           -10)))
                                                                                                                                                        (("1"
                                                                                                                                                          (ASSERT)
                                                                                                                                                          (("1"
                                                                                                                                                            (SPLIT
                                                                                                                                                             -38)
                                                                                                                                                            (("1"
                                                                                                                                                              (REPLACE
                                                                                                                                                               -12)
                                                                                                                                                              (("1"
                                                                                                                                                                (LIFT-IF)
                                                                                                                                                                (("1"
                                                                                                                                                                  (ASSERT)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (APPLY
                                                                                                                                                                     (THEN
                                                                                                                                                                      (SPLIT
                                                                                                                                                                       2)
                                                                                                                                                                      (SKOSIMP*)
                                                                                                                                                                      (SPLIT
                                                                                                                                                                       1)
                                                                                                                                                                      (SKOSIMP*)))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (APPLY
                                                                                                                                                                       (THEN
                                                                                                                                                                        (USE
                                                                                                                                                                         "wf_update_PState")
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        (SKOSIMP*)
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "update_PState")))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (APPLY
                                                                                                                                                                         (THEN
                                                                                                                                                                          (USE
                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                          (ASSERT)))
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL)
                                                                                                                                                             ("2"
                                                                                                                                                              (SPLIT
                                                                                                                                                               -37)
                                                                                                                                                              (("1"
                                                                                                                                                                (ASSERT)
                                                                                                                                                                (("1"
                                                                                                                                                                  (REPLACE
                                                                                                                                                                   -9)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (LIFT-IF)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (ASSERT)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (APPLY
                                                                                                                                                                         (THEN
                                                                                                                                                                          (SPLIT
                                                                                                                                                                           1)
                                                                                                                                                                          (SKOSIMP*)
                                                                                                                                                                          (SPLIT
                                                                                                                                                                           1)
                                                                                                                                                                          (SKOSIMP*)))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (APPLY
                                                                                                                                                                           (THEN
                                                                                                                                                                            (USE
                                                                                                                                                                             "wf_update_PState")
                                                                                                                                                                            (ASSERT)
                                                                                                                                                                            (SKOSIMP*)
                                                                                                                                                                            (EXPAND
                                                                                                                                                                             "update_PState")))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (APPLY
                                                                                                                                                                             (THEN
                                                                                                                                                                              (USE
                                                                                                                                                                               "wf_state_raise")
                                                                                                                                                                              (ASSERT)))
                                                                                                                                                                            NIL
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL)
                                                                                                                                                               ("2"
                                                                                                                                                                (REPLACE
                                                                                                                                                                 -4)
                                                                                                                                                                (("2"
                                                                                                                                                                  (EXPAND
                                                                                                                                                                   "wf_state"
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (EXPAND
                                                                                                                                                                     "wf_state"
                                                                                                                                                                     -36)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (FLATTEN)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (SPLIT
                                                                                                                                                                           1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (USE
                                                                                                                                                                             "on_method_MVA_yields_wf_AState")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (ASSERT)
                                                                                                                                                                              NIL
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (EXPAND
                                                                                                                                                                             "wf_ghoststate")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (EXPAND
                                                                                                                                                                               "is_ghost")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (PROPAX)
                                                                                                                                                                                NIL
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL)
                                                                                                                                         ("2"
                                                                                                                                          (ASSERT)
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (FLATTEN)
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "on_method_exit_exceptional_MP")
                                                                                                                              (("2"
                                                                                                                                (ASSERT)
                                                                                                                                (("2"
                                                                                                                                  (SKOSIMP*)
                                                                                                                                  (("2"
                                                                                                                                    (EXPAND
                                                                                                                                     "check_assertion")
                                                                                                                                    (("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (SKOSIMP*)
                                                                                                                                        (("2"
                                                                                                                                          (INST-CP
                                                                                                                                           -33
                                                                                                                                           "m2!2 - 1")
                                                                                                                                          (("1"
                                                                                                                                            (INST
                                                                                                                                             -33
                                                                                                                                             "m1!2")
                                                                                                                                            (("1"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("1"
                                                                                                                                                (APPLY
                                                                                                                                                 (REPEAT
                                                                                                                                                  (INST?
                                                                                                                                                   -33
                                                                                                                                                   :WHERE
                                                                                                                                                   -2)))
                                                                                                                                                (("1"
                                                                                                                                                  (APPLY
                                                                                                                                                   (REPEAT
                                                                                                                                                    (INST?
                                                                                                                                                     -34
                                                                                                                                                     :WHERE
                                                                                                                                                     -6)))
                                                                                                                                                  (("1"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    (("1"
                                                                                                                                                      (SPLIT
                                                                                                                                                       -33)
                                                                                                                                                      (("1"
                                                                                                                                                        (ASSERT)
                                                                                                                                                        (("1"
                                                                                                                                                          (CASE
                                                                                                                                                              "wf_state(mp!1)(tau3!2)")
                                                                                                                                                          (("1"
                                                                                                                                                            (REPLACE
                                                                                                                                                             -10)
                                                                                                                                                            (("1"
                                                                                                                                                              (LIFT-IF)
                                                                                                                                                              (("1"
                                                                                                                                                                (ASSERT)
                                                                                                                                                                (("1"
                                                                                                                                                                  (SPLIT
                                                                                                                                                                   3)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (PROPAX)
                                                                                                                                                                    NIL
                                                                                                                                                                    NIL)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (SKOSIMP*)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (APPLY
                                                                                                                                                                       (THEN
                                                                                                                                                                        (USE
                                                                                                                                                                         "wf_update_PState")
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        (SKOSIMP*)
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "update_PState")))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (APPLY
                                                                                                                                                                         (THEN
                                                                                                                                                                          (USE
                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                          (ASSERT)))
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL)
                                                                                                                                                           ("2"
                                                                                                                                                            (REPLACE
                                                                                                                                                             -8)
                                                                                                                                                            (("2"
                                                                                                                                                              (LIFT-IF)
                                                                                                                                                              (("2"
                                                                                                                                                                (SPLIT
                                                                                                                                                                 -34)
                                                                                                                                                                (("1"
                                                                                                                                                                  (ASSERT)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (APPLY
                                                                                                                                                                     (THEN
                                                                                                                                                                      (SPLIT
                                                                                                                                                                       1)
                                                                                                                                                                      (SKOSIMP*)
                                                                                                                                                                      (SPLIT
                                                                                                                                                                       1)
                                                                                                                                                                      (SKOSIMP*)))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (APPLY
                                                                                                                                                                       (THEN
                                                                                                                                                                        (USE
                                                                                                                                                                         "wf_update_PState")
                                                                                                                                                                        (ASSERT)
                                                                                                                                                                        (SKOSIMP*)
                                                                                                                                                                        (EXPAND
                                                                                                                                                                         "update_PState")))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (APPLY
                                                                                                                                                                         (THEN
                                                                                                                                                                          (USE
                                                                                                                                                                           "wf_state_raise")
                                                                                                                                                                          (ASSERT)))
                                                                                                                                                                        NIL
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (REPLACE
                                                                                                                                                                   -4)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (EXPAND
                                                                                                                                                                     "wf_state"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (EXPAND
                                                                                                                                                                       "wf_state"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (FLATTEN)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (ASSERT)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (SPLIT
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (USE
                                                                                                                                                                               "on_method_MVA_yields_wf_AState")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (ASSERT)
                                                                                                                                                                                NIL
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (EXPAND
                                                                                                                                                                               "wf_ghoststate")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (EXPAND
                                                                                                                                                                                 "is_ghost")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (PROPAX)
                                                                                                                                                                                  NIL
                                                                                                                                                                                  NIL))
                                                                                                                                                                                NIL))
                                                                                                                                                                              NIL))
                                                                                                                                                                            NIL))
                                                                                                                                                                          NIL))
                                                                                                                                                                        NIL))
                                                                                                                                                                      NIL))
                                                                                                                                                                    NIL))
                                                                                                                                                                  NIL))
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL)
                                                                                                                                                       ("2"
                                                                                                                                                        (APPLY
                                                                                                                                                         (THEN
                                                                                                                                                          (USE
                                                                                                                                                           "wf_update_PState")
                                                                                                                                                          (ASSERT)
                                                                                                                                                          (SKOSIMP*)
                                                                                                                                                          (EXPAND
                                                                                                                                                           "update_PState")))
                                                                                                                                                        (("2"
                                                                                                                                                          (APPLY
                                                                                                                                                           (THEN
                                                                                                                                                            (USE
                                                                                                                                                             "wf_state_catch")
                                                                                                                                                            (ASSERT)))
                                                                                                                                                          NIL
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL)
                                                                                                                                           ("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            NIL
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (SPLIT
                                                                                                                         -19)
                                                                                                                        (("1"
                                                                                                                          (FLATTEN)
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (FLATTEN)
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (REPLACE
                                                                                                                     -16)
                                                                                                                    (("2"
                                                                                                                      (USE
                                                                                                                       "wf_state_update_stack")
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        (("1"
                                                                                                                          (SKOSIMP*)
                                                                                                                          (("1"
                                                                                                                            (EXPAND
                                                                                                                             "getLocalDecls")
                                                                                                                            (("1"
                                                                                                                              (INST
                                                                                                                               1
                                                                                                                               "down(get_class(program(mp!1))(a!1))")
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "getLocalDecls")
                                                                                                                                  (("1"
                                                                                                                                    (INST
                                                                                                                                     1
                                                                                                                                     "md!1")
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (EXPAND
                                                                                                                         "getLocalDecls")
                                                                                                                        (("2"
                                                                                                                          (INST
                                                                                                                           1
                                                                                                                           "down(get_class(program(mp!1))(a!1))")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "getLocalDecls")
                                                                                                                              (("2"
                                                                                                                                (INST?)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (EXPAND
                                                                                                                 "wf_state"
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (FLATTEN)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL)
                                                                                                           ("2"
                                                                                                            (TYPEPRED
                                                                                                             "choose({m: Method[Name] |
                                                           classes(program(mp!1))(down(get_class(program(mp!1))(a!1))) AND
                                                            methods(down(get_class(program(mp!1))(a!1)))(m) AND
                                                             name(m) = name(b!1)})")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (REPLACE
                                                                                                                 -11
                                                                                                                 :DIR RL)
                                                                                                                (("1"
                                                                                                                  (TYPEPRED
                                                                                                                   "program(mp!1)")
                                                                                                                  (("1"
                                                                                                                    (EXPAND*
                                                                                                                     "wf_Program"
                                                                                                                     "wf_Classes"
                                                                                                                     "wf_Class")
                                                                                                                    (("1"
                                                                                                                      (FLATTEN)
                                                                                                                      (("1"
                                                                                                                        (INST
                                                                                                                         -4
                                                                                                                         "down(get_class(program(mp!1))(a!1))")
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          (("1"
                                                                                                                            (FLATTEN)
                                                                                                                            (("1"
                                                                                                                              (INST
                                                                                                                               -4
                                                                                                                               "m!1"
                                                                                                                               "md!1")
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (REWRITE
                                                                                                               "nonempty_exists")
                                                                                                              (("2"
                                                                                                                (INST?)
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (EXPAND
                                                                                                 "on_method_entry_MP")
                                                                                                (("2"
                                                                                                  (EXPAND
                                                                                                   "on_method_entry")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "check_assertion")
                                                                                                    (("2"
                                                                                                      (SKOSIMP*)
                                                                                                      (("2"
                                                                                                        (SPLIT
                                                                                                         -10)
                                                                                                        (("1"
                                                                                                          (FLATTEN)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (SKOSIMP*)
                                                                                                              (("2"
                                                                                                                (INST-CP
                                                                                                                 -29
                                                                                                                 "m3!2")
                                                                                                                (("2"
                                                                                                                  (INST-CP
                                                                                                                   -29
                                                                                                                   "m2!2 - 1")
                                                                                                                  (("1"
                                                                                                                    (INST
                                                                                                                     -29
                                                                                                                     "m1!2 - 1")
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (APPLY
                                                                                                                         (REPEAT
                                                                                                                          (INST?
                                                                                                                           -29
                                                                                                                           :WHERE
                                                                                                                           -4)))
                                                                                                                        (("1"
                                                                                                                          (APPLY
                                                                                                                           (REPEAT
                                                                                                                            (INST?
                                                                                                                             -30
                                                                                                                             :WHERE
                                                                                                                             -7)))
                                                                                                                          (("1"
                                                                                                                            (APPLY
                                                                                                                             (REPEAT
                                                                                                                              (INST?
                                                                                                                               -31
                                                                                                                               :WHERE
                                                                                                                               -9)))
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (CASE
                                                                                                                                    "wf_state(mp!1)(s_new!1)")
                                                                                                                                (("1"
                                                                                                                                  (SPLIT
                                                                                                                                   -21)
                                                                                                                                  (("1"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("2"
                                                                                                                                      (ASSERT)
                                                                                                                                      (("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (EXPAND
                                                                                                                                           "wf_state"
                                                                                                                                           (3
                                                                                                                                            -2))
                                                                                                                                          (("2"
                                                                                                                                            (FLATTEN)
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("2"
                                                                                                                                                (SPLIT
                                                                                                                                                 3)
                                                                                                                                                (("1"
                                                                                                                                                  (REWRITE
                                                                                                                                                   "on_method_MVA_yields_wf_AState")
                                                                                                                                                  NIL
                                                                                                                                                  NIL)
                                                                                                                                                 ("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "wf_ghoststate")
                                                                                                                                                  (("2"
                                                                                                                                                    (EXPAND
                                                                                                                                                     "is_ghost")
                                                                                                                                                    (("2"
                                                                                                                                                      (PROPAX)
                                                                                                                                                      NIL
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL)
                                                                                                                                 ("2"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("2"
                                                                                                                                    (REPLACE
                                                                                                                                     -8)
                                                                                                                                    (("2"
                                                                                                                                      (SPLIT
                                                                                                                                       -30)
                                                                                                                                      (("1"
                                                                                                                                        (LIFT-IF)
                                                                                                                                        (("1"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("1"
                                                                                                                                            (APPLY
                                                                                                                                             (THEN
                                                                                                                                              (SPLIT
                                                                                                                                               20)
                                                                                                                                              (SKOSIMP*)
                                                                                                                                              (SPLIT
                                                                                                                                               1)
                                                                                                                                              (SKOSIMP*)))
                                                                                                                                            (("1"
                                                                                                                                              (APPLY
                                                                                                                                               (THEN
                                                                                                                                                (USE
                                                                                                                                                 "wf_update_PState")
                                                                                                                                                (ASSERT)
                                                                                                                                                (SKOSIMP*)
                                                                                                                                                (EXPAND
                                                                                                                                                 "update_PState")))
                                                                                                                                              (("1"
                                                                                                                                                (APPLY
                                                                                                                                                 (THEN
                                                                                                                                                  (USE
                                                                                                                                                   "wf_state_raise")
                                                                                                                                                  (ASSERT)))
                                                                                                                                                NIL
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL)
                                                                                                                                       ("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -5)
                                                                                                                                        (("2"
                                                                                                                                          (LIFT-IF)
                                                                                                                                          (("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("2"
                                                                                                                                              (APPLY
                                                                                                                                               (THEN
                                                                                                                                                (SPLIT
                                                                                                                                                 1)
                                                                                                                                                (SKOSIMP*)
                                                                                                                                                (SPLIT
                                                                                                                                                 1)
                                                                                                                                                (SKOSIMP*)))
                                                                                                                                              (("2"
                                                                                                                                                (APPLY
                                                                                                                                                 (THEN
                                                                                                                                                  (USE
                                                                                                                                                   "wf_update_PState")
                                                                                                                                                  (ASSERT)
                                                                                                                                                  (SKOSIMP*)
                                                                                                                                                  (EXPAND
                                                                                                                                                   "update_PState")))
                                                                                                                                                (("2"
                                                                                                                                                  (APPLY
                                                                                                                                                   (THEN
                                                                                                                                                    (USE
                                                                                                                                                     "wf_state_raise")
                                                                                                                                                    (ASSERT)))
                                                                                                                                                  NIL
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (REPLACE
                                                                                               -8)
                                                                                              (("2"
                                                                                                (LIFT-IF)
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  (("2"
                                                                                                    (SPLIT
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (SKOSIMP*)
                                                                                                      (("1"
                                                                                                        (APPLY
                                                                                                         (THEN
                                                                                                          (USE
                                                                                                           "wf_update_PState")
                                                                                                          (ASSERT)
                                                                                                          (SKOSIMP*)
                                                                                                          (EXPAND
                                                                                                           "update_PState")))
                                                                                                        (("1"
                                                                                                          (APPLY
                                                                                                           (THEN
                                                                                                            (USE
                                                                                                             "wf_state_raise")
                                                                                                            (ASSERT)))
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (PROPAX)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (APPLY
                                                                               (THEN
                                                                                (TYPEPRED
                                                                                 "md!1")
                                                                                (EXPAND
                                                                                 "wf_Method")
                                                                                (ASSERT)))
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (APPLY
                                                           (BRANCH (SPLIT -1)
                                                            ((THEN (FLATTEN)
                                                              (ASSERT)))))
                                                          (("1"
                                                            (INST -5 "x!1 - 1")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (APPLY
                                                                 (REPEAT
                                                                  (INST? -5
                                                                   :WHERE -3)))
                                                                (("1" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (APPLY
                                                             (BRANCH (SPLIT -1)
                                                              ((THEN (FLATTEN)
                                                                (ASSERT)))))
                                                            (("1"
                                                              (INST -5
                                                               "x!1 - 1")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (APPLY
                                                                   (REPEAT
                                                                    (INST? -5
                                                                     :WHERE
                                                                     -3)))
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL)
                                                             ("2"
                                                              (APPLY
                                                               (BRANCH
                                                                (SPLIT -1)
                                                                ((THEN
                                                                  (FLATTEN)
                                                                  (ASSERT)))))
                                                              (("1"
                                                                (CASE
                                                                    "    FORALL (
            branches : (wf_Branches(program(mp!1))), 
            s1, s2 : MPState, x : nat) :
         execute_CaseJML(mp!1, branches, s1, s2, x,  LAMBDA (k: upto(x))(p: MonitoredProgram[CP, Name])
                             (b: (wf_Body(program(p))), sigma1: MPState,
                              v: Val[Name], sigma2: MPState)
                             (m: below(k)):
                        derive(p)(b, sigma1, v, sigma2)(m)) IMPLIES wf_state(mp!1)(s1) IMPLIES (FORALL (y: nat):
        y < x IMPLIES
         (FORALL (mp: MonitoredProgram, b: (wf_Body(program(mp))), v: Val)
                 (sigma1, sigma2: MPState):
            wf_MP(mp) IMPLIES
             wf_state(mp)(sigma1) IMPLIES
              derive(mp)(b, sigma1, v, sigma2)(y) IMPLIES
               wf_state(mp)(sigma2))) IMPLIES
wf_state(mp!1)(s2)")
                                                                (("1" (INST?)
                                                                  (("1"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (HIDE-ALL-BUT
                                                                   (1 -7))
                                                                  (("2"
                                                                    (INDUCT
                                                                     "branches")
                                                                    (("1"
                                                                      (TYPEPRED
                                                                       "branches!1")
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (SKOSIMP*)
                                                                      (("2"
                                                                        (EXPAND
                                                                         "execute_CaseJML")
                                                                        (("2"
                                                                          (FLATTEN)
                                                                          (("2"
                                                                            (ASSERT)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("3"
                                                                      (SKOSIMP*)
                                                                      (("3"
                                                                        (EXPAND
                                                                         "wf_Branches")
                                                                        (("3"
                                                                          (EXPAND
                                                                           "every"
                                                                           -2)
                                                                          (("3"
                                                                            (FLATTEN)
                                                                            (("3"
                                                                              (ASSERT)
                                                                              (("3"
                                                                                (EXPAND
                                                                                 "execute_CaseJML"
                                                                                 -5)
                                                                                (("3"
                                                                                  (FLATTEN)
                                                                                  (("3"
                                                                                    (REWRITE
                                                                                     "derive"
                                                                                     -6)
                                                                                    (("3"
                                                                                      (SPLIT
                                                                                       -6)
                                                                                      (("1"
                                                                                        (PROPAX)
                                                                                        NIL
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (FLATTEN)
                                                                                        (("2"
                                                                                          (SKOSIMP*)
                                                                                          (("2"
                                                                                            (EXPAND
                                                                                             "check_for_exception")
                                                                                            (("2"
                                                                                              (SPLIT
                                                                                               -4)
                                                                                              (("1"
                                                                                                (PROPAX)
                                                                                                NIL
                                                                                                NIL)
                                                                                               ("2"
                                                                                                (FLATTEN)
                                                                                                (("2"
                                                                                                  (LIFT-IF)
                                                                                                  (("2"
                                                                                                    (CASE
                                                                                                        "wf_state(mp!1)(tau!1)")
                                                                                                    (("1"
                                                                                                      (SPLIT
                                                                                                       -3)
                                                                                                      (("1"
                                                                                                        (FLATTEN)
                                                                                                        (("1"
                                                                                                          (INST
                                                                                                           -16
                                                                                                           "m2!1")
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (APPLY
                                                                                                               (REPEAT
                                                                                                                (INST?
                                                                                                                 -16
                                                                                                                 :WHERE
                                                                                                                 -2)))
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL)
                                                                                                       ("2"
                                                                                                        (FLATTEN)
                                                                                                        (("2"
                                                                                                          (INST
                                                                                                           -8
                                                                                                           "tau!1"
                                                                                                           "s2!1"
                                                                                                           "m2!1")
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (SPLIT
                                                                                                               -8)
                                                                                                              (("1"
                                                                                                                (SKOSIMP*)
                                                                                                                (("1"
                                                                                                                  (INST
                                                                                                                   -18
                                                                                                                   "y!1")
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    (("1"
                                                                                                                      (APPLY
                                                                                                                       (REPEAT
                                                                                                                        (INST?
                                                                                                                         -18
                                                                                                                         :WHERE
                                                                                                                         -4)))
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (EXPAND
                                                                                                                 "derive"
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (FLATTEN)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (INST
                                                                                                       -14
                                                                                                       "m1!1")
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (APPLY
                                                                                                           (REPEAT
                                                                                                            (INST?
                                                                                                             -14
                                                                                                             :WHERE
                                                                                                             -5)))
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (APPLY
                                                                 (BRANCH
                                                                  (SPLIT -1)
                                                                  ((THEN
                                                                    (FLATTEN)
                                                                    (ASSERT)))))
                                                                (("1"
                                                                  (SKOSIMP*)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "check_for_exception")
                                                                    (("1"
                                                                      (INST-CP
                                                                       -8
                                                                       "m2!1")
                                                                      (("1"
                                                                        (INST
                                                                         -8
                                                                         "m1!1")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -8
                                                                               :WHERE
                                                                               -4)))
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (APPLY
                                                                                 (BRANCH
                                                                                  (SPLIT
                                                                                   -5)
                                                                                  ((THEN
                                                                                    (FLATTEN)
                                                                                    (ASSERT)))))
                                                                                (("1"
                                                                                  (LIFT-IF)
                                                                                  (("1"
                                                                                    (APPLY
                                                                                     (BRANCH
                                                                                      (SPLIT
                                                                                       -2)
                                                                                      ((THEN
                                                                                        (FLATTEN)
                                                                                        (ASSERT)))))
                                                                                    (("1"
                                                                                      (APPLY
                                                                                       (REPEAT
                                                                                        (INST?
                                                                                         -11
                                                                                         :WHERE
                                                                                         -2)))
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL)
                                                                                     ("2"
                                                                                      (APPLY
                                                                                       (REPEAT
                                                                                        (INST?
                                                                                         -10
                                                                                         :WHERE
                                                                                         -1)))
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2"
                                                                  (APPLY
                                                                   (BRANCH
                                                                    (SPLIT -1)
                                                                    ((THEN
                                                                      (FLATTEN)
                                                                      (ASSERT)))))
                                                                  (("1"
                                                                    (SKOSIMP*)
                                                                    (("1"
                                                                      (INST-CP
                                                                       -7
                                                                       "m2!1")
                                                                      (("1"
                                                                        (INST
                                                                         -7
                                                                         "m1!1")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -7
                                                                               :WHERE
                                                                               -4)))
                                                                            (("1"
                                                                              (APPLY
                                                                               (REPEAT
                                                                                (INST?
                                                                                 -8
                                                                                 :WHERE
                                                                                 -5)))
                                                                              (("1"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (APPLY
                                                                     (BRANCH
                                                                      (SPLIT
                                                                       -1)
                                                                      ((THEN
                                                                        (FLATTEN)
                                                                        (ASSERT)))))
                                                                    (("1"
                                                                      (EXPAND
                                                                       "execute_set")
                                                                      (("1"
                                                                        (SKOSIMP*)
                                                                        (("1"
                                                                          (INST
                                                                           -8
                                                                           "x!1 - 1")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (APPLY
                                                                               (REPEAT
                                                                                (INST?
                                                                                 -8
                                                                                 :WHERE
                                                                                 -4)))
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -5)
                                                                                  (("1"
                                                                                    (LIFT-IF)
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (SPLIT
                                                                                         22)
                                                                                        (("1"
                                                                                          (PROPAX)
                                                                                          NIL
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (SKOSIMP*)
                                                                                          (("2"
                                                                                            (USE
                                                                                             "wf_update_GhostVars")
                                                                                            (("2"
                                                                                              (ASSERT)
                                                                                              (("2"
                                                                                                (SKOSIMP*)
                                                                                                (("2"
                                                                                                  (AUTO-REWRITE
                                                                                                   "id")
                                                                                                  (("2"
                                                                                                    (EXPAND
                                                                                                     "wf_ghoststate")
                                                                                                    (("2"
                                                                                                      (SKOSIMP*)
                                                                                                      (("2"
                                                                                                        (INST?)
                                                                                                        (("2"
                                                                                                          (ASSERT)
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "is_ghost")
                                                                                                            (("2"
                                                                                                              (EXPAND
                                                                                                               "defined?")
                                                                                                              (("2"
                                                                                                                (EXPAND
                                                                                                                 "update_GhostVars")
                                                                                                                (("2"
                                                                                                                  (EXPAND
                                                                                                                   "update_store")
                                                                                                                  (("2"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      (("2"
                                                                                                                        (TYPEPRED
                                                                                                                         "b!1")
                                                                                                                        (("2"
                                                                                                                          (EXPAND
                                                                                                                           "wf_Body")
                                                                                                                          (("2"
                                                                                                                            (FLATTEN)
                                                                                                                            (("2"
                                                                                                                              (INST
                                                                                                                               -2
                                                                                                                               "b!1")
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "subterm"
                                                                                                                                 -2)
                                                                                                                                (("2"
                                                                                                                                  (LIFT-IF)
                                                                                                                                  (("2"
                                                                                                                                    (SPLIT
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (SKOSIMP*)
                                                                                                                                      (("1"
                                                                                                                                        (REPLACE
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (ASSERT)
                                                                                                                                          (("1"
                                                                                                                                            (LEMMA
                                                                                                                                             "derive_bottom_iff_exception_step")
                                                                                                                                            (("1"
                                                                                                                                              (INST?
                                                                                                                                               -1
                                                                                                                                               :WHERE
                                                                                                                                               -10)
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                NIL
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (SKOSIMP*)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (PROP)
                                                                                                                                          NIL
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (APPLY
                                                                       (BRANCH
                                                                        (SPLIT
                                                                         -1)
                                                                        ((THEN
                                                                          (FLATTEN)
                                                                          (ASSERT)))))
                                                                      (("2"
                                                                        (APPLY
                                                                         (BRANCH
                                                                          (SPLIT
                                                                           -1)
                                                                          ((THEN
                                                                            (FLATTEN)
                                                                            (ASSERT)))))
                                                                        (("1"
                                                                          (SKOSIMP*)
                                                                          (("1"
                                                                            (INST
                                                                             -6
                                                                             "x!1 - 1")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (APPLY
                                                                                 (REPEAT
                                                                                  (INST?
                                                                                   -6
                                                                                   :WHERE
                                                                                   -4)))
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL)
                                                                         ("2"
                                                                          (APPLY
                                                                           (BRANCH
                                                                            (SPLIT
                                                                             -1)
                                                                            ((THEN
                                                                              (FLATTEN)
                                                                              (ASSERT)))))
                                                                          (("1"
                                                                            (REPLACE
                                                                             -4)
                                                                            (("1"
                                                                              (USE
                                                                               "wf_update_PState")
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (SKOSIMP*)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "update_PState")
                                                                                    (("1"
                                                                                      (USE
                                                                                       "wf_state_raise")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        NIL
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (APPLY
                                                                             (BRANCH
                                                                              (SPLIT
                                                                               -1)
                                                                              ((THEN
                                                                                (FLATTEN)
                                                                                (ASSERT)))))
                                                                            (("1"
                                                                              (SKOSIMP*)
                                                                              (("1"
                                                                                (INST-CP
                                                                                 -9
                                                                                 "m3!1")
                                                                                (("1"
                                                                                  (INST-CP
                                                                                   -9
                                                                                   "m2!1")
                                                                                  (("1"
                                                                                    (INST
                                                                                     -9
                                                                                     "m1!1")
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      (("1"
                                                                                        (APPLY
                                                                                         (REPEAT
                                                                                          (INST?
                                                                                           -9
                                                                                           :WHERE
                                                                                           -4)))
                                                                                        (("1"
                                                                                          (APPLY
                                                                                           (REPEAT
                                                                                            (INST?
                                                                                             -10
                                                                                             :WHERE
                                                                                             -5)))
                                                                                          (("1"
                                                                                            (APPLY
                                                                                             (REPEAT
                                                                                              (INST?
                                                                                               -11
                                                                                               :WHERE
                                                                                               -6)))
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (SPLIT
                                                                                                 -10)
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (SPLIT
                                                                                                     -11)
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -9)
                                                                                                      (("1"
                                                                                                        (LIFT-IF)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (SPLIT
                                                                                                             26)
                                                                                                            (("1"
                                                                                                              (SKOSIMP*)
                                                                                                              (("1"
                                                                                                                (USE
                                                                                                                 "wf_update_PState")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("1"
                                                                                                                      (EXPAND
                                                                                                                       "update_PState")
                                                                                                                      (("1"
                                                                                                                        (USE
                                                                                                                         "wf_state_raise")
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (PROPAX)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (USE
                                                                                                       "wf_update_PState")
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (SKOSIMP*)
                                                                                                          (("2"
                                                                                                            (EXPAND
                                                                                                             "update_PState")
                                                                                                            (("2"
                                                                                                              (USE
                                                                                                               "wf_state_catch")
                                                                                                              (("2"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (PROPAX)
                                                                                                  NIL
                                                                                                  NIL)
                                                                                                 ("3"
                                                                                                  (USE
                                                                                                   "wf_update_PState")
                                                                                                  (("3"
                                                                                                    (ASSERT)
                                                                                                    (("3"
                                                                                                      (SKOSIMP*)
                                                                                                      (("3"
                                                                                                        (EXPAND
                                                                                                         "update_PState")
                                                                                                        (("3"
                                                                                                          (USE
                                                                                                           "wf_state_catch")
                                                                                                          (("3"
                                                                                                            (ASSERT)
                                                                                                            NIL
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (SKOSIMP*)
                                                                                            (("2"
                                                                                              (EXPAND*
                                                                                               "wf_Body"
                                                                                               "var_names"
                                                                                               "emptyset"
                                                                                               "subterm")
                                                                                              (("2"
                                                                                                (SKOSIMP*)
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  NIL
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("3"
                                                                                            (SKOSIMP*)
                                                                                            (("3"
                                                                                              (APPLY
                                                                                               (THEN
                                                                                                (INST?)
                                                                                                (ASSERT)
                                                                                                (EXPAND
                                                                                                 "<<")))
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (APPLY
                                                                               (BRANCH
                                                                                (SPLIT
                                                                                 -1)
                                                                                ((THEN
                                                                                  (FLATTEN)
                                                                                  (ASSERT)))))
                                                                              (("1"
                                                                                (INST
                                                                                 -6
                                                                                 "x!1 - 1")
                                                                                (("1"
                                                                                  (ASSERT)
                                                                                  (("1"
                                                                                    (APPLY
                                                                                     (REPEAT
                                                                                      (INST?
                                                                                       -6
                                                                                       :WHERE
                                                                                       -4)))
                                                                                    (("1"
                                                                                      (ASSERT)
                                                                                      NIL
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL)
                                                                               ("2"
                                                                                (EXPAND
                                                                                 "execute_assert")
                                                                                (("2"
                                                                                  (EXPAND
                                                                                   "check_assertion")
                                                                                  (("2"
                                                                                    (SKOSIMP*)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -7
                                                                                       "x!1 - 1")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (APPLY
                                                                                           (REPEAT
                                                                                            (INST?
                                                                                             -7
                                                                                             :WHERE
                                                                                             -3)))
                                                                                          (("2"
                                                                                            (ASSERT)
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -4)
                                                                                              (("2"
                                                                                                (LIFT-IF)
                                                                                                (("2"
                                                                                                  (ASSERT)
                                                                                                  (("2"
                                                                                                    (SPLIT
                                                                                                     28)
                                                                                                    (("1"
                                                                                                      (SKOSIMP*)
                                                                                                      (("1"
                                                                                                        (SPLIT
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (PROPAX)
                                                                                                          NIL
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (SKOSIMP*)
                                                                                                          (("2"
                                                                                                            (USE
                                                                                                             "wf_update_PState")
                                                                                                            (("2"
                                                                                                              (ASSERT)
                                                                                                              (("2"
                                                                                                                (SKOSIMP*)
                                                                                                                (("2"
                                                                                                                  (EXPAND
                                                                                                                   "update_PState")
                                                                                                                  (("2"
                                                                                                                    (USE
                                                                                                                     "wf_state_raise")
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (PROPAX)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (USE "wf_nat") NIL NIL))
    NIL)
   PROVED
   ((|wf_induction| FORMULA-DECL NIL |wf_induction| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|wf_Body_preserved_by_proper_subterm| FORMULA-DECL NIL |WellFormedProgram|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(MethodCall?) -> Expr]" |Body_adt| NIL)
    (|md!1| SKOLEM-CONST-DECL "(wf_Method(program(mp!1)))"
     |MonitoredProgramSemantics| NIL)
    (|mp!1| SKOLEM-CONST-DECL "MonitoredProgram[CP, Name]"
     |MonitoredProgramSemantics| NIL)
    (|lookup_mthd| CONST-DECL "lift[(methods(p))]" |ProgramFunctions| NIL)
    (|m1!2| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (|Entry| ADT-CONSTRUCTOR-DECL "(Entry?)" |EventType_adt| NIL)
    (|Entry?| ADT-RECOGNIZER-DECL "[EventType -> boolean]" |EventType_adt| NIL)
    (|m2!2| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|wf_state_arg_is_local| FORMULA-DECL NIL |State| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|name| ADT-ACCESSOR-DECL "[(MethodCall?) -> Name]" |Body_adt| NIL)
    (|wf_Class| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Classes| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|b!1| SKOLEM-CONST-DECL "(wf_Body(program(mp!1)))"
     |MonitoredProgramSemantics| NIL)
    (|m!1| SKOLEM-CONST-DECL "Method[Name]" |MonitoredProgramSemantics| NIL)
    (|a!1| SKOLEM-CONST-DECL "Val[Name]" |MonitoredProgramSemantics| NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|wf_state_update_stack| FORMULA-DECL NIL |MonitoredProgramSemantics| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|wf_state_update_local| FORMULA-DECL NIL |State| NIL)
    (|old_val_arg!1| SKOLEM-CONST-DECL "Val[Name]" |MonitoredProgramSemantics|
     NIL)
    (|update_local| CONST-DECL "PState" |State| NIL)
    (|catch| CONST-DECL "PState" |State| NIL)
    (|wf_state_catch| FORMULA-DECL NIL |State| NIL)
    (|ExitExceptional| ADT-CONSTRUCTOR-DECL "(ExitExceptional?)"
     |EventType_adt| NIL)
    (|ExitExceptional?| ADT-RECOGNIZER-DECL "[EventType -> boolean]"
     |EventType_adt| NIL)
    (|m2!2| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|m3!2| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (|wf_state_raise| FORMULA-DECL NIL |State| NIL)
    (|JMLExc| ADT-CONSTRUCTOR-DECL "(JMLExc?)" |Excpt_adt| NIL)
    (|JMLExc?| ADT-RECOGNIZER-DECL "[Excpt -> boolean]" |Excpt_adt| NIL)
    (|raise| CONST-DECL "PState" |State| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|ExitNormal?| ADT-RECOGNIZER-DECL "[EventType -> boolean]" |EventType_adt|
     NIL)
    (|ExitNormal| ADT-CONSTRUCTOR-DECL "(ExitNormal?)" |EventType_adt| NIL)
    (|on_method_MVA_yields_wf_AState| FORMULA-DECL NIL
     |MonitoredProgramSemantics| NIL)
    (|m2!2| SKOLEM-CONST-DECL "nat" |MonitoredProgramSemantics| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|method_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|get_class_in_classes| FORMULA-DECL NIL |ProgramFunctions| NIL)
    (|NullPointer?| ADT-RECOGNIZER-DECL "[Excpt -> boolean]" |Excpt_adt| NIL)
    (|NullPointer| ADT-CONSTRUCTOR-DECL "(NullPointer?)" |Excpt_adt| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|tgt| ADT-ACCESSOR-DECL "[(MethodCall?) -> Expr]" |Body_adt| NIL)
    (|r| ADT-ACCESSOR-DECL "[(RExpr?) -> RefExpr]" |Body_adt| NIL)
    (|RefExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|RefVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Null?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|then_stmt| ADT-ACCESSOR-DECL "[(IfThenElse?) -> Stmt]" |Body_adt| NIL)
    (|else_stmt| ADT-ACCESSOR-DECL "[(IfThenElse?) -> Stmt]" |Body_adt| NIL)
    (|update_store| CONST-DECL "Store" |State| NIL)
    (|wf_update_GhostVars| FORMULA-DECL NIL |MonitoredProgramSemantics| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |Body_adt| NIL)
    (|expr| ADT-ACCESSOR-DECL "[D: {X: Body | Assert?(X) OR StmtExpr?(X)} ->
   {X: Body |
            IF StmtExpr?(D)
              THEN     Assign?(X) OR BExpr?(X) OR CondExpr?(X)
                    OR MethodCall?(X) OR NExpr?(X) OR RExpr?(X)
            ELSE     TT?(X) OR FF?(X) OR Neg?(X) OR Conj?(X) OR Eq?(X)
                  OR BoolVarEval?(X)
            ENDIF}]"
     |Body_adt| NIL)
    (|try| ADT-ACCESSOR-DECL "[(TryCatch?) -> Stmt]" |Body_adt| NIL)
    (<< ADT-DEF-DECL "(well_founded?[Body])" |Body_adt| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|finally| ADT-ACCESSOR-DECL "[(TryCatch?) -> Stmt]" |Body_adt| NIL)
    (|tau1!1| SKOLEM-CONST-DECL "MPState" |MonitoredProgramSemantics| NIL)
    (|catch| ADT-ACCESSOR-DECL "[(TryCatch?) -> Stmt]" |Body_adt| NIL)
    (|Skip| ADT-CONSTRUCTOR-DECL "(Skip?)" |Body_adt| NIL)
    (|While| ADT-CONSTRUCTOR-DECL "[[BoolExpr, Stmt] -> (While?)]" |Body_adt|
     NIL)
    (|body| ADT-ACCESSOR-DECL "[(While?) -> Stmt]" |Body_adt| NIL)
    (|Throwable| ADT-CONSTRUCTOR-DECL "(Throwable?)" |Excpt_adt| NIL)
    (|Throwable?| ADT-RECOGNIZER-DECL "[Excpt -> boolean]" |Excpt_adt| NIL)
    (|s1| ADT-ACCESSOR-DECL "[(Sequence?) -> Stmt]" |Body_adt| NIL)
    (|s2| ADT-ACCESSOR-DECL "[(Sequence?) -> Stmt]" |Body_adt| NIL)
    (|branches| ADT-ACCESSOR-DECL "[(CaseJML?) -> list[[BoolExpr, Stmt]]]"
     |Body_adt| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|IfThenElse| ADT-CONSTRUCTOR-DECL
     "[[BoolExpr, Stmt, Stmt] -> (IfThenElse?)]" |Body_adt| NIL)
    (|CaseJML| ADT-CONSTRUCTOR-DECL "[list[[BoolExpr, Stmt]] -> (CaseJML?)]"
     |Body_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|NumExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|n| ADT-ACCESSOR-DECL "[(NExpr?) -> NumExpr]" |Body_adt| NIL)
    (|test| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | While?(X) OR IfThenElse?(X) OR CondExpr?(X)} -> BoolExpr]"
     |Body_adt| NIL)
    (|check_for_exception| CONST-DECL "bool" |Semantics| NIL)
    (|else_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (|then_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (|update| CONST-DECL "PState" |State| NIL)
    (|target| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Name]" |Body_adt| NIL)
    (|wf_update_PState| FORMULA-DECL NIL |MonitoredProgramSemantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|v!1| SKOLEM-CONST-DECL "Val[Name]" |MonitoredProgramSemantics| NIL)
    (|wf_state_update| FORMULA-DECL NIL |State| NIL)
    (|derive_bottom_iff_exception_step| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|source| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Expr]" |Body_adt| NIL)
    (|b| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | BExpr?(X) OR Neg?(X)} -> BoolExpr]" |Body_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Plus?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)
    (|Int?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NumVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|b1| ADT-ACCESSOR-DECL "[D: {X: Body | Eq?(X) OR Conj?(X) OR Plus?(X)} ->
   {X: Body |
            IF Plus?(D) THEN Int?(X) OR Plus?(X) OR NumVarEval?(X)
            ELSE IF Conj?(D)
                   THEN     TT?(X) OR FF?(X) OR Neg?(X) OR Conj?(X)
                         OR Eq?(X) OR BoolVarEval?(X)
                 ELSE     Assign?(X) OR BExpr?(X) OR CondExpr?(X)
                       OR MethodCall?(X) OR NExpr?(X) OR RExpr?(X)
                 ENDIF
            ENDIF}]"
     |Body_adt| NIL)
    (|b2| ADT-ACCESSOR-DECL "[D: {X: Body | Eq?(X) OR Conj?(X) OR Plus?(X)} ->
   {X: Body |
            IF Plus?(D) THEN Int?(X) OR Plus?(X) OR NumVarEval?(X)
            ELSE IF Conj?(D)
                   THEN     TT?(X) OR FF?(X) OR Neg?(X) OR Conj?(X)
                         OR Eq?(X) OR BoolVarEval?(X)
                 ELSE     Assign?(X) OR BExpr?(X) OR CondExpr?(X)
                       OR MethodCall?(X) OR NExpr?(X) OR RExpr?(X)
                 ENDIF
            ENDIF}]"
     |Body_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|derive| DEF-DECL "bool" |Semantics| NIL)
    (|on_method_exit_exceptional_MP| CONST-DECL "(on_method_event_type)"
     |MonitoredProgramSemantics| NIL)
    (|on_method_exit_normal_MP| CONST-DECL "(on_method_event_type)"
     |MonitoredProgramSemantics| NIL)
    (|on_method_entry_MP| CONST-DECL "(on_method_event_type)"
     |MonitoredProgramSemantics| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |MonitoredProgramSemantics| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|wf_state| CONST-DECL "boolean" |MonitoredProgramSemantics| NIL)
    (|wf_MP| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|MPState| TYPE-EQ-DECL NIL |MonitoredProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|AState| TYPE-EQ-DECL NIL |MVASemantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|MonitoredProgram| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|compatible| CONST-DECL "boolean" |MonitoredProgram| NIL)
    (|MonitoredProgramPre| TYPE-EQ-DECL NIL |MonitoredProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|complete| CONST-DECL "boolean" |MVASemantics| NIL)
    (MVA TYPE-EQ-DECL NIL MVA NIL) (|ProgVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|MVAVarDecl| TYPE-EQ-DECL NIL MVA NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Transition| TYPE-EQ-DECL NIL MVA NIL)
    (|Guard| TYPE-EQ-DECL NIL MVA NIL) (|Action| TYPE-EQ-DECL NIL MVA NIL)
    (|Event| TYPE-EQ-DECL NIL MVA NIL)
    (|EventType| TYPE-DECL NIL |EventType_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (CP FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |MonitoredProgramSemantics| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL))
   59300 10705 T SHOSTAK)))

