(WellBehavedMVA
 (guard_to_expression_behavior_TCC1 0
  (guard_to_expression_behavior_TCC1-1 nil 3413185312 3413188939
   ("" (skosimp*) (("" (expand "wf_Expr") (("" (propax) nil nil)) nil)) nil)
   unchecked ((wf_Expr const-decl "boolean" WellFormedProgram nil)) 78 80 t
   nil))
 (eval_action_behavior_TCC1 0
  (eval_action_behavior_TCC1-1 nil 3413185312 3413188989
   ("" (skosimp*) (("" (expand "wf_Expr") (("" (propax) nil nil)) nil)) nil)
   unchecked ((wf_Expr const-decl "boolean" WellFormedProgram nil)) 4280 70 t
   nil))
 (equiv1 0
  (equiv1-1 nil 3428921821 3428921843
   ("" (skosimp*)
    (("" (expand "eval_action_behavior")
      (("" (expand "actions_have_no_side_effects")
        (("" (expand "eval_action_behavior_without_sideeffects")
          (("" (skosimp*)
            (("" (inst?)
              (("" (inst?) (("" (inst?) (("" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((eval_action_behavior const-decl "boolean" WellBehavedMVA nil)
    (eval_action_behavior_without_sideeffects const-decl "boolean"
     WellBehavedMVA nil)
    (Name formal-nonempty-type-decl nil WellBehavedMVA nil)
    (Expr type-eq-decl nil Body_adt nil)
    (CP formal-nonempty-type-decl nil WellBehavedMVA nil)
    (OneAction type-eq-decl nil MVA nil) (Val type-decl nil Val_adt nil)
    (Body type-decl nil Body_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Store type-eq-decl nil State nil)
    (eval const-decl "Val" MVACommonSemantics nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (PState type-eq-decl nil State nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (Action type-eq-decl nil MVA nil) (Event type-eq-decl nil MVA nil)
    (Guard type-eq-decl nil MVA nil) (Transition type-eq-decl nil MVA nil)
    (actions_have_no_side_effects const-decl "boolean" WellBehavedMVA nil))
   22453 320 t shostak))
 (equiv2 0
  (equiv2-1 nil 3428921853 3428922213
   ("" (skosimp*)
    (("" (expand "eval_action_behavior_without_sideeffects")
      (("" (expand "eval_action_behavior")
        (("" (expand "actions_have_no_side_effects")
          (("" (split 1)
            (("1" (skosimp*)
              (("1" (inst?)
                (("1" (inst?)
                  (("1" (inst?)
                    (("1" (assert)
                      (("1" (skosimp*)
                        (("1" (iff)
                          (("1" (split 2)
                            (("1" (skosimp*)
                              (("1" (replace -1 :dir rl)
                                (("1" (inst?) nil nil)) nil))
                              nil)
                             ("2" (skosimp*)
                              (("2" (lemma "determ_step_MP")
                                (("2" (inst?)
                                  (("2" (inst? -1 :where -6)
                                    (("2" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skosimp*)
              (("2" (inst?)
                (("2" (inst?)
                  (("2" (inst?)
                    (("2" (assert)
                      (("2" (split -6)
                        (("1" (skosimp*)
                          (("1" (lemma "determ_step_MP")
                            (("1" (inst? -1 :where (-2 -7))
                              (("1" (inst? -1 :where -7)
                                (("1" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "derive") (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((eval_action_behavior_without_sideeffects const-decl "boolean"
     WellBehavedMVA nil)
    (actions_have_no_side_effects const-decl "boolean" WellBehavedMVA nil)
    (derive def-decl "bool" Semantics nil)
    (Transition type-eq-decl nil MVA nil) (Guard type-eq-decl nil MVA nil)
    (Event type-eq-decl nil MVA nil) (Action type-eq-decl nil MVA nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (EventType type-decl nil EventType_adt nil)
    (defined? const-decl "boolean" ValProp nil)
    (JType type-decl nil JType_adt nil) (Decl type-eq-decl nil Program nil)
    (MVA type-eq-decl nil MVA nil)
    (wf_MVA const-decl "boolean" WellFormedMVA nil)
    (good_for_monitoring const-decl "boolean" MonitoredProgram nil)
    (Program type-eq-decl nil WellFormedProgram nil)
    (MonitoredProgramPre type-eq-decl nil MonitoredProgram nil)
    (compatible const-decl "boolean" MonitoredProgram nil)
    (MonitoredProgram type-eq-decl nil MonitoredProgram nil)
    (wf_MP const-decl "boolean" MonitoredProgram nil)
    (Stmt type-eq-decl nil Body_adt nil) (Excpt type-decl nil Excpt_adt nil)
    (Method type-eq-decl nil Program nil) (lift type-decl nil lift_adt nil)
    (Class type-eq-decl nil Program nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (PreProgram type-eq-decl nil Program nil)
    (wf_Body const-decl "boolean" WellFormedProgram nil)
    (determ_step_MP formula-decl nil MonitoredProgramSemantics nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (eval const-decl "Val" MVACommonSemantics nil)
    (Const? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (MethodCall? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (CondExpr? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Assign? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (RefVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (BoolVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Eq? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Conj? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Neg? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (NumVarEval? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (Plus? adt-recognizer-decl "[Body -> boolean]" Body_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Body type-decl nil Body_adt nil) (Val type-decl nil Val_adt nil)
    (MPState type-eq-decl nil MonitoredProgramSemantics nil)
    (boolean nonempty-type-decl nil booleans nil)
    (PState type-eq-decl nil State nil) (Store type-eq-decl nil State nil)
    (AState type-eq-decl nil MVACommonSemantics nil)
    (OneAction type-eq-decl nil MVA nil)
    (CP formal-nonempty-type-decl nil WellBehavedMVA nil)
    (Expr type-eq-decl nil Body_adt nil)
    (Name formal-nonempty-type-decl nil WellBehavedMVA nil)
    (eval_action_behavior const-decl "boolean" WellBehavedMVA nil))
   359575 2820 t shostak)))

