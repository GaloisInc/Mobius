(|ReferenceFunctions|)
(|SemanticsTypes|)
(|SemanticsJMLTypes|)
(|Semantics|
 (|update_stack_TCC1| 0
  (|update_stack_TCC1-1| NIL 3390908871 3401607679
   ("" (SKOSIMP*)
    (("" (TYPEPRED "lvds!1")
      (("" (EXPAND "is_finite")
        (("" (SKOSIMP*)
          ((""
            (INST 1 "N!1" "LAMBDA(x : ({x: [Name, Val[Name]] |
                     EXISTS (l: LocalVarDecl[Name]):
                       lvds!1(l) AND
                        name(l) = PROJ_1(x) AND
                         default_value[Name](jtype(l)) = PROJ_2(x)})) : f!1(choose({l : LocalVarDecl[Name] | lvds!1(l) AND
                        name(l) = PROJ_1(x) AND
                         default_value[Name](jtype(l)) = PROJ_2(x)}))")
            (("1" (EXPAND "injective?")
              (("1" (SKOSIMP*)
                (("1" (TYPEPRED "x1!1")
                  (("1" (TYPEPRED "x2!1")
                    (("1" (SKOSIMP*)
                      (("1" (INST?)
                        (("1" (ASSERT)
                          (("1" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL)) NIL)
                         ("2" (REWRITE "nonempty_exists")
                          (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)
                         ("3" (REWRITE "nonempty_exists")
                          (("3" (ASSERT) (("3" (INST 1 "l!2") NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKOSIMP*)
              (("2" (REWRITE "nonempty_exists")
                (("2" (TYPEPRED "x!1")
                  (("2" (SKOSIMP*) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL) NIL NIL
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL) NIL NIL NIL
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL) NIL
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|default_value| CONST-DECL "(defined?)" |ValProp| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   198 197 T SHOSTAK))
 (|derive_TCC1| 0
  (|derive_TCC1-1| NIL 3395749931 3401607679 ("" (TCC)) UNCHECKED NIL 40 40 NIL
   NIL))
 (|derive_TCC2| 0
  (|derive_TCC2-1| NIL 3395749931 3401607679 ("" (TCC)) UNCHECKED NIL 41 40 NIL
   NIL))
 (|derive_TCC3| 0
  (|derive_TCC3-1| NIL 3395749931 3401607680
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   62 62 T NIL))
 (|derive_TCC4| 0
  (|derive_TCC4-1| NIL 3395749931 3401607681 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|NumExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|NumVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Plus?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Int?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   103 101 NIL NIL))
 (|derive_TCC5| 0
  (|derive_TCC5-1| NIL 3395749931 3401607682
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   63 62 T NIL))
 (|derive_TCC6| 0
  (|derive_TCC6-1| NIL 3395749931 3401607683 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|NumExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|NumVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Plus?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Int?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   125 124 NIL NIL))
 (|derive_TCC7| 0
  (|derive_TCC7-1| NIL 3395749931 3401607684 ("" (TCC)) UNCHECKED
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   76 74 NIL NIL))
 (|derive_TCC8| 0
  (|derive_TCC8-1| NIL 3395749931 3401607684
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL))
   36 35 T NIL))
 (|derive_TCC9| 0
  (|derive_TCC9-1| NIL 3395749931 3401607685 ("" (TCC)) UNCHECKED NIL 41 40 NIL
   NIL))
 (|derive_TCC10| 0
  (|derive_TCC10-1| NIL 3395749931 3401607685
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   83 82 T NIL))
 (|derive_TCC11| 0
  (|derive_TCC11-1| NIL 3395749931 3401607686 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   82 81 NIL NIL))
 (|derive_TCC12| 0
  (|derive_TCC12-1| NIL 3395749931 3401607687
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   81 81 T NIL))
 (|derive_TCC13| 0
  (|derive_TCC13-1| NIL 3395749931 3401607688 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   82 81 NIL NIL))
 (|derive_TCC14| 0
  (|derive_TCC14-1| NIL 3395749931 3401607688
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   62 62 T NIL))
 (|derive_TCC15| 0
  (|derive_TCC15-1| NIL 3395749931 3401607689 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   102 100 NIL NIL))
 (|derive_TCC16| 0
  (|derive_TCC16-1| NIL 3395749931 3401607690
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   64 63 T NIL))
 (|derive_TCC17| 0
  (|derive_TCC17-1| NIL 3395749931 3401607691 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   125 125 NIL NIL))
 (|derive_TCC18| 0
  (|derive_TCC18-1| NIL 3395749931 3401607692
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   89 88 T NIL))
 (|derive_TCC19| 0
  (|derive_TCC19-1| NIL 3395749931 3401607693
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member")
                    (("" (AUTO-REWRITE "union" "member" "add")
                      (("" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL))
   37 36 T NIL))
 (|derive_TCC20| 0
  (|derive_TCC20-1| NIL 3395749931 3401607693 ("" (TCC)) UNCHECKED NIL 41 40
   NIL NIL))
 (|derive_TCC21| 0
  (|derive_TCC21-1| NIL 3395749931 3401607694 ("" (TCC)) UNCHECKED
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   114 113 NIL NIL))
 (|derive_TCC22| 0
  (|derive_TCC22-1| NIL 3395749931 3401607695
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL))
   35 34 T NIL))
 (|derive_TCC23| 0
  (|derive_TCC23-1| NIL 3395749931 3401607695 ("" (TCC)) UNCHECKED NIL 40 40
   NIL NIL))
 (|derive_TCC24| 0
  (|derive_TCC24-1| NIL 3395749931 3401607696
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   64 63 T NIL))
 (|derive_TCC25| 0
  (|derive_TCC25-1| NIL 3395749931 3401607697 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   103 101 NIL NIL))
 (|derive_TCC26| 0
  (|derive_TCC26-1| NIL 3395749931 3401607697
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   44 43 T NIL))
 (|derive_TCC27| 0
  (|derive_TCC27-1| NIL 3395749931 3401607698
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   83 82 T NIL))
 (|derive_TCC28| 0
  (|derive_TCC28-1| NIL 3395749931 3401607699 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   103 103 NIL NIL))
 (|derive_TCC29| 0
  (|derive_TCC29-1| NIL 3395749931 3401607700
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   67 68 T NIL))
 (|derive_TCC30| 0
  (|derive_TCC30-1| NIL 3395749931 3401607701 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   153 151 NIL NIL))
 (|derive_TCC31| 0
  (|derive_TCC31-1| NIL 3395749931 3401607702
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   89 88 T NIL))
 (|derive_TCC32| 0
  (|derive_TCC32-1| NIL 3395749931 3401607704 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   154 152 NIL NIL))
 (|derive_TCC33| 0
  (|derive_TCC33-1| NIL 3395749931 3401607706 ("" (TCC)) UNCHECKED
   ((|lookup_mthd| CONST-DECL "lift[(methods(p))]" |ProgramFunctions| NIL)
    (|method_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   257 255 NIL NIL))
 (|derive_TCC34| 0
  (|derive_TCC34-1| NIL 3395749931 3401607707
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   63 63 T NIL))
 (|derive_TCC35| 0
  (|derive_TCC35-1| NIL 3395749931 3401607710 ("" (TCC)) UNCHECKED
   ((|lookup_mthd| CONST-DECL "lift[(methods(p))]" |ProgramFunctions| NIL)
    (|method_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|update_stack| CONST-DECL "FullState" |Semantics| NIL)
    (|default_value| CONST-DECL "(defined?)" |ValProp| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   274 271 NIL NIL))
 (|derive_TCC36| 0
  (|derive_TCC36-1| NIL 3395749931 3401607710
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   90 90 T NIL))
 (|derive_TCC37| 0
  (|derive_TCC37-1| NIL 3396354176 3401607713 ("" (TCC)) UNCHECKED
   ((|lookup_mthd| CONST-DECL "lift[(methods(p))]" |ProgramFunctions| NIL)
    (|method_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|update_stack| CONST-DECL "FullState" |Semantics| NIL)
    (|default_value| CONST-DECL "(defined?)" |ValProp| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   273 273 NIL NIL))
 (|derive_TCC38| 0
  (|derive_TCC38-1| NIL 3396354176 3401607716 ("" (TCC)) UNCHECKED
   ((|lookup_mthd| CONST-DECL "lift[(methods(p))]" |ProgramFunctions| NIL)
    (|method_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|update_stack| CONST-DECL "FullState" |Semantics| NIL)
    (|default_value| CONST-DECL "(defined?)" |ValProp| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   322 320 NIL NIL))
 (|derive_TCC39| 0
  (|derive_TCC39-1| NIL 3401446930 3401607719 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|method_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   223 221 NIL NIL))
 (|derive_TCC40| 0
  (|derive_TCC40-1| NIL 3401446930 3401607719 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|NumExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|NumVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Plus?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Int?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   64 64 NIL NIL))
 (|derive_TCC41| 0
  (|derive_TCC41-1| NIL 3401446930 3401607721 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|NumExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|NumVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Plus?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Int?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   128 126 NIL NIL))
 (|derive_TCC42| 0
  (|derive_TCC42-1| NIL 3401446930 3401607721 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED NIL 38 37 NIL NIL))
 (|derive_TCC43| 0
  (|derive_TCC43-1| NIL 3401446930 3401607722 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|RefExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|RefVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Null?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   66 64 NIL NIL))
 (|derive_TCC44| 0
  (|derive_TCC44-1| NIL 3401446930 3401607723 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|RefExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|RefVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Null?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   118 117 NIL NIL))
 (|derive_TCC45| 0
  (|derive_TCC45-1| NIL 3401446930 3401607723 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED NIL 37 37 NIL NIL))
 (|derive_TCC46| 0
  (|derive_TCC46-1| NIL 3401446930 3401607889
   (""
    (CASE
        "FORALL(p : FullProgram, b: (wf_Body[Name](program(p))), v : Val, sigma2 : FullState, n : nat, l: list[[BoolExpr[Name], Stmt[Name]]]):
                v = return_of_stmt(sigma2) AND n > 0 AND b = CaseJML(l)
                 IMPLIES wf_Branches[Name](program(p))(l)")
    (("1" (SKOSIMP*)
      (("1" (APPLY (REPEAT (INST? -1))) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "l")
        (("1" (GRIND) NIL NIL)
         ("2" (SKOSIMP*)
          (("2" (INST -1 "p!1" _ "v!1" "sigma2!1" "n!1")
            (("2" (ASSERT)
              (("2" (TYPEPRED "b!1")
                (("2" (INST -2 "CaseJML(cons2_var!1)")
                  (("1" (EXPAND "wf_Branches")
                    (("1" (EXPAND "every" 1)
                      (("1" (ASSERT)
                        (("1" (HIDE -2)
                          (("1" (EXPAND "wf_Body")
                            (("1" (REPLACE -4)
                              (("1" (SPLIT 1)
                                (("1" (SKOSIMP*)
                                  (("1" (INST?)
                                    (("1" (ASSERT)
                                      (("1" (EXPAND "var_names" 2)
                                        (("1" (AUTO-REWRITE "union" "member")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (SKOSIMP*)
                                  (("2" (INST?)
                                    (("2" (ASSERT)
                                      (("2" (EXPAND "var_names" 2)
                                        (("2" (AUTO-REWRITE "union" "member")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (REWRITE "wf_Body_CaseJML" :DIR RL) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|return_of_stmt| CONST-DECL "Val" |Semantics| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|CaseJML| ADT-CONSTRUCTOR-DECL "[list[[BoolExpr, Stmt]] -> (CaseJML?)]"
     |Body_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL) NIL
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|wf_Body_CaseJML| FORMULA-DECL NIL |WellFormedProgram| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL) NIL NIL)
   2566 170 T NIL))
 (|derive_TCC47| 0
  (|derive_TCC47-1| NIL 3401446930 3401607725
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   57 57 T NIL))
 (|derive_TCC48| 0
  (|derive_TCC48-1| NIL 3401446930 3401607726
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   90 91 T NIL))
 (|derive_TCC49| 0
  (|derive_TCC49-1| NIL 3401446930 3401607727
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   41 41 T NIL))
 (|derive_TCC50| 0
  (|derive_TCC50-1| NIL 3401446930 3401607727
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   79 75 T NIL))
 (|derive_TCC51| 0
  (|derive_TCC51-1| NIL 3401446930 3401607728
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   99 92 T NIL))
 (|derive_TCC52| 0
  (|derive_TCC52-1| NIL 3401446930 3401607729
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   41 40 T NIL))
 (|derive_TCC53| 0
  (|derive_TCC53-1| NIL 3401446930 3401607730
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   95 92 T NIL))
 (|derive_TCC54| 0
  (|derive_TCC54-1| NIL 3401446930 3401607731
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   96 93 T NIL))
 (|derive_TCC55| 0
  (|derive_TCC55-1| NIL 3401446930 3401607731 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   74 74 NIL NIL))
 (|derive_TCC56| 0
  (|derive_TCC56-1| NIL 3401446930 3401607732
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_Expr")
      (("" (TYPEPRED "b!1")
        (("" (EXPAND "wf_Body")
          (("" (SKOSIMP*)
            (("" (INST?)
              (("" (ASSERT)
                (("" (REPLACE -5)
                  (("" (EXPAND "var_names" 1)
                    (("" (AUTO-REWRITE "union" "member" "add")
                      (("" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   34 33 T NIL))
 (|derive_TCC57| 0
  (|derive_TCC57-1| NIL 3401446930 3401607733 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|return_of_stmt| CONST-DECL "Val" |Semantics| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   105 104 NIL NIL))
 (|derive_TCC58| 0
  (|derive_TCC58-1| NIL 3401446930 3401607733
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -5)
                (("" (EXPAND "var_names" 1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL))
   32 32 T NIL))
 (|derive_TCC59| 0
  (|derive_TCC59-1| NIL 3401446930 3401607734 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED ((|return_of_stmt| CONST-DECL "Val" |Semantics| NIL)) 39 38 NIL
   NIL))
 (|derive_TCC60| 0
  (|derive_TCC60-1| NIL 3401446930 3401607734
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   42 41 T NIL))
 (|derive_TCC61| 0
  (|derive_TCC61-1| NIL 3401446930 3401607735
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (EXPAND "var_names")
                (("" (EXPAND "emptyset") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   113 111 T NIL))
 (|derive_TCC62| 0
  (|derive_TCC62-1| NIL 3401446930 3401607736
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   61 59 T NIL))
 (|derive_TCC63| 0
  (|derive_TCC63-1| NIL 3401446930 3401607736
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_Body")
      (("" (SKOSIMP*)
        (("" (EXPAND "var_names")
          (("" (EXPAND "emptyset") (("" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL))
   41 30 T NIL))
 (|derive_TCC64| 0
  (|derive_TCC64-1| NIL 3401446930 3401607737 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|return_of_stmt| CONST-DECL "Val" |Semantics| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   101 100 NIL NIL))
 (|derive_TCC65| 0
  (|derive_TCC65-1| NIL 3401446930 3401607738
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add" "emptyset")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   84 77 T NIL))
 (|derive_TCC66| 0
  (|derive_TCC66-1| NIL 3401446930 3401607739
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -5)
                (("" (EXPAND "var_names" 1)
                  (("" (EXPAND "var_names" -6)
                    (("" (AUTO-REWRITE "union" "member")
                      (("" (ASSERT)
                        (("" (FLATTEN)
                          (("" (SPLIT -6)
                            (("1" (PROPAX) NIL NIL)
                             ("2" (EXPAND "var_names")
                              (("2" (EXPAND "emptyset")
                                (("2" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   97 96 T NIL))
 (|derive_TCC67| 0
  (|derive_TCC67-1| NIL 3401446930 3401607740 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|return_of_stmt| CONST-DECL "Val" |Semantics| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   74 74 NIL NIL))
 (|derive_TCC68| 0
  (|derive_TCC68-1| NIL 3401600202 3401607740
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -5)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT)
                      (("" (EXPAND "var_names" -6)
                        (("" (ASSERT)
                          (("" (SPLIT -6)
                            (("1" (ASSERT) NIL NIL)
                             ("2" (EXPAND "var_names")
                              (("2" (EXPAND "emptyset")
                                (("2" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL))
   76 76 T NIL))
 (|derive_TCC69| 0
  (|derive_TCC69-1| NIL 3401600202 3401607741 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED ((|return_of_stmt| CONST-DECL "Val" |Semantics| NIL)) 55 55 NIL
   NIL))
 (|derive_TCC70| 0
  (|derive_TCC70-1| NIL 3401600202 3401607741
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_BoolExpr")
      (("" (TYPEPRED "b!1")
        (("" (EXPAND "wf_Body")
          (("" (SKOSIMP*)
            (("" (INST?)
              (("" (ASSERT)
                (("" (REPLACE -5)
                  (("" (EXPAND "var_names" 1) (("" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   32 32 T NIL))
 (|well_behaved_Program_TCC1| 0
  (|well_behaved_Program_TCC1-1| NIL 3395749931 3401607741
   ("" (SKOSIMP*)
    (("" (TYPEPRED "program(p!1)")
      (("" (EXPAND "wf_Program")
        (("" (FLATTEN)
          (("" (EXPAND "wf_Classes")
            (("" (INST?)
              (("" (ASSERT)
                (("" (EXPAND "wf_Class") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|wf_Class| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Classes| CONST-DECL "boolean" |WellFormedProgram| NIL))
   5 5 T NIL))
 (|well_behaved_Program_TCC2| 0
  (|well_behaved_Program_TCC2-1| NIL 3401446930 3401607742
   ("" (SKOSIMP*)
    (("" (TYPEPRED "program(p!1)")
      (("" (EXPAND "wf_Program")
        (("" (FLATTEN)
          (("" (EXPAND "wf_Classes")
            (("" (INST?)
              (("" (ASSERT)
                (("" (EXPAND "wf_Class")
                  (("" (FLATTEN)
                    (("" (INST? -5)
                      (("" (ASSERT)
                        (("" (EXPAND "wf_Method") (("" (PROPAX) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|wf_Class| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Classes| CONST-DECL "boolean" |WellFormedProgram| NIL))
   25 25 T NIL))
 (|well_behaved_Program_TCC3| 0
  (|well_behaved_Program_TCC3-2| NIL 3401450266 3401607742
   (";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
    (SKOSIMP*)
    ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
      (TYPEPRED "program(p!1)")
      ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
        (EXPAND "wf_Program")
        ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
          (FLATTEN)
          ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
            (EXPAND "wf_Classes")
            ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
              (INST?)
              ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
                (ASSERT)
                ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
                  (EXPAND "wf_Class")
                  ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
                    (FLATTEN)
                    ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
                      (INST? -5)
                      ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
                        (ASSERT)
                        ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
                          (EXPAND "wf_Method")
                          ((";;; Proof well_behaved_Program_TCC2-1 for formula Semantics.well_behaved_Program_TCC2"
                            (PROPAX) NIL))))))))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|wf_Class| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Classes| CONST-DECL "boolean" |WellFormedProgram| NIL))
   8 8 NIL NIL)
  (|well_behaved_Program_TCC3-1| NIL 3401446930 NIL ("" (SUBTYPE-TCC) NIL NIL)
   UNFINISHED NIL NIL NIL NIL NIL))
 (|well_behaved_Program_TCC4| 0
  (|well_behaved_Program_TCC4-1| NIL 3401446930 3401607743
   ("" (SUBTYPE-TCC) NIL NIL) UNCHECKED
   ((|proper_subterm_set_clause| CONST-DECL "boolean" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|spec_expr_has_no_side_effects| CONST-DECL "boolean" |Semantics| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   117 117 T NIL))
 (|well_behaved_Program_TCC5| 0
  (|well_behaved_Program_TCC5-1| NIL 3401446930 3401699785
   ("" (SKOSIMP*)
    (("" (EXPAND "proper_subterm_set_clause")
      (("" (TYPEPRED "program(p!1)")
        (("" (LEMMA "wf_Body_preserved_by_proper_subterm")
          (("" (INST -1 "program(p!1)" _ "source(s!1)")
            (("" (LEMMA "proper_subterm_is_transitive")
              (("" (INST -1 "source(s!1)" "s!1" _)
                (("" (EXPAND "<<" -1 1)
                  (("" (ASSERT)
                    (("" (EXPAND "wf_Program")
                      (("" (FLATTEN)
                        (("" (EXPAND "wf_Classes")
                          (("" (INST? -6)
                            (("" (ASSERT)
                              (("" (EXPAND "wf_Class")
                                (("" (FLATTEN)
                                  (("" (INST? -7)
                                    (("" (ASSERT)
                                      (("" (EXPAND "wf_Method")
                                        (("" (FLATTEN)
                                          (("" (SPLIT -22)
                                            (("1" (INST?)
                                              (("1" (INST?)
                                                (("1" (ASSERT) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (INST?)
                                              (("2" (INST?)
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL)
                                             ("3" (INST?)
                                              (("3" (INST?)
                                                (("3" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|proper_subterm_set_clause| CONST-DECL "boolean" |ProgramFunctions| NIL)
    (|wf_Body_preserved_by_proper_subterm| FORMULA-DECL NIL |WellFormedProgram|
     NIL)
    (|proper_subterm_is_transitive| FORMULA-DECL NIL |ProgramFunctions| NIL)
    (<< ADT-DEF-DECL "(well_founded?[Body])" |Body_adt| NIL)
    (|wf_Classes| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Class| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|source| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Expr]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   4032 132 T NIL))
 (|run_FullProgram_TCC1| 0
  (|run_FullProgram_TCC1-1| NIL 3401446930 3401607745
   ("" (SUBTYPE-TCC) NIL NIL) UNCHECKED
   ((|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |Semantics| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   125 125 NIL NIL)))
(|SemanticsProofs|
 (|derive_determ| 0
  (|derive_determ-1| NIL 3395752130 3401607745
   ("" (SKOSIMP*)
    (("" (EXPAND "derives")
      (("" (SKOSIMP*)
        (("" (LEMMA "derive_determ_step")
          (("" (INST?)
            (("" (ASSERT)
              (("" (INST? -1 :WHERE -3)
                (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|derives| CONST-DECL "bool" |Semantics| NIL)
    (|derive_determ_step| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |SemanticsProofs|
     NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL))
   25 25 T SHOSTAK))
 (|derive_bottom_iff_exception_step| 0
  (|derive_bottom_iff_exception_step-2| NIL 3401608082 3401608304
   ("" (USE "wf_induction[nat, LAMBDA(x, y : nat) : x < y]")
    (("1"
      (INST -1
       " LAMBDA(n : nat) : FORALL (p: FullProgram)(e: (wf_Body(program(p))))
                             (sigma1, sigma2: FullState, v: Val):
                        derive(p)(e, sigma1, v, sigma2)(n) IMPLIES
                         Bottom?(v) = up?(ex(pstate(sigma2)))")
      (("1" (SPLIT -1)
        (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (HIDE 2)
          (("2" (SKOSIMP*)
            (("2" (EXPAND "derive" -2)
              (("2" (SPLIT -2)
                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (ASSERT)
                    (("2" (LIFT-IF)
                      (("2" (SPLIT -1)
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (FLATTEN)
                          (("2" (ASSERT)
                            (("2"
                              (EXPAND* "check_for_exception_final"
                               "check_for_exception")
                              (("2" (SPLIT -1)
                                (("1" (FLATTEN)
                                  (("1" (SKOSIMP*)
                                    (("1" (SPLIT -5)
                                      (("1" (PROPAX) NIL NIL)
                                       ("2" (FLATTEN)
                                        (("2" (INST-CP -8 "m1!1")
                                          (("2" (INST -8 "m2!1")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (ASSERT)
                                    (("2" (SPLIT -1)
                                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (SPLIT -1)
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (FLATTEN)
                                              (("2" (ASSERT)
                                                (("2" (SPLIT -1)
                                                  (("1" (FLATTEN)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (ASSERT)
                                                      (("2" (SPLIT -1)
                                                        (("1" (FLATTEN)
                                                          (("1" (ASSERT)
                                                            (("1" (SKOSIMP*)
                                                              (("1" (SPLIT -4)
                                                                (("1" (PROPAX)
                                                                  NIL NIL)
                                                                 ("2" (FLATTEN)
                                                                  (("2"
                                                                    (INST -6
                                                                     "x!1 - 1")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2" (SPLIT -1)
                                                              (("1" (FLATTEN)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (SKOSIMP*)
                                                                    (("1"
                                                                      (SPLIT
                                                                       -5)
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (INST-CP
                                                                           -8
                                                                           "m1!1")
                                                                          (("2"
                                                                            (INST
                                                                             -8
                                                                             "m2!1")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (SPLIT -1)
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (SKOSIMP*)
                                                                          (("1"
                                                                            (SPLIT
                                                                             -5)
                                                                            (("1"
                                                                              (PROPAX)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (FLATTEN)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (SPLIT
                                                                           -1)
                                                                          (("1"
                                                                            (FLATTEN)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (SPLIT
                                                                                 -1)
                                                                                (("1"
                                                                                  (FLATTEN)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (FLATTEN)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (SPLIT
                                                                                       -1)
                                                                                      (("1"
                                                                                        (FLATTEN)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (FLATTEN)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (SPLIT
                                                                                             -1)
                                                                                            (("1"
                                                                                              (FLATTEN)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (SKOSIMP*)
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -5
                                                                                                     "x!1 - 1")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST?)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (LIFT-IF)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (SPLIT
                                                                                                                   13)
                                                                                                                  (("1"
                                                                                                                    (PROPAX)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("2"
                                                                                                                      (SPLIT
                                                                                                                       -5)
                                                                                                                      (("1"
                                                                                                                        (PROPAX)
                                                                                                                        NIL
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (FLATTEN)
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (TYPEPRED
                                                                                                                             "update_PState")
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "update_PState_type")
                                                                                                                              (("2"
                                                                                                                                (INST?)
                                                                                                                                (("2"
                                                                                                                                  (INST
                                                                                                                                   -1
                                                                                                                                   "sigma2!1")
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (REPLACE
                                                                                                                                       -2
                                                                                                                                       :DIR RL)
                                                                                                                                      (("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (EXPAND
                                                                                                                                           "update")
                                                                                                                                          (("2"
                                                                                                                                            (LIFT-IF)
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("2"
                                                                                                                                                (EXPAND
                                                                                                                                                 "update_local")
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "update_field")
                                                                                                                                                  (("2"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (SPLIT
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (FLATTEN)
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -4
                                                                                                         "x!1 - 1")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST?)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (FLATTEN)
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      (("2"
                                                                                                        (SPLIT
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (FLATTEN)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (SKOSIMP*)
                                                                                                              (("1"
                                                                                                                (SPLIT
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (FLATTEN)
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (FLATTEN)
                                                                                                                  (("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (INST-CP
                                                                                                                       -6
                                                                                                                       "m1!1")
                                                                                                                      (("2"
                                                                                                                        (INST
                                                                                                                         -6
                                                                                                                         "m2!1")
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (INST?
                                                                                                                             -7)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (LIFT-IF)
                                                                                                                                (("2"
                                                                                                                                  (SPLIT
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("1"
                                                                                                                                      (INST?)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("2"
                                                                                                                                      (INST?)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (SPLIT
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (FLATTEN)
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("1"
                                                                                                                      (TYPEPRED
                                                                                                                       "update_PState")
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "update_PState_type")
                                                                                                                        (("1"
                                                                                                                          (INST?
                                                                                                                           -1
                                                                                                                           :WHERE
                                                                                                                           -15)
                                                                                                                          (("1"
                                                                                                                            (INST
                                                                                                                             -1
                                                                                                                             "sigma2!1")
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "update_local")
                                                                                                                                  (("1"
                                                                                                                                    (SPLIT
                                                                                                                                     -14)
                                                                                                                                    (("1"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (INST-CP
                                                                                                                                           -16
                                                                                                                                           "m5!1")
                                                                                                                                          (("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("2"
                                                                                                                                              (INST?
                                                                                                                                               -17)
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (SPLIT
                                                                                                                                                   -13)
                                                                                                                                                  (("1"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (FLATTEN)
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("2"
                                                                                                                                                        (ASSERT)
                                                                                                                                                        (("2"
                                                                                                                                                          (TYPEPRED
                                                                                                                                                           "on_method_exit_exceptional")
                                                                                                                                                          (("2"
                                                                                                                                                            (EXPAND
                                                                                                                                                             "on_method_event_type")
                                                                                                                                                            (("2"
                                                                                                                                                              (INST?)
                                                                                                                                                              (("2"
                                                                                                                                                                (ASSERT)
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL)
                                                                                                                                               ("2"
                                                                                                                                                (TYPEPRED
                                                                                                                                                 "md!1")
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "wf_Method")
                                                                                                                                                  (("2"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (FLATTEN)
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  (("2"
                                                                                                                    (SPLIT
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (FLATTEN)
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        (("1"
                                                                                                                          (INST
                                                                                                                           -4
                                                                                                                           "x!1 - 1")
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            (("1"
                                                                                                                              (INST?)
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (FLATTEN)
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        (("2"
                                                                                                                          (SPLIT
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (FLATTEN)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (INST
                                                                                                                                 -4
                                                                                                                                 "x!1 - 1")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("1"
                                                                                                                                    (INST?)
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (FLATTEN)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "return_of_stmt")
                                                                                                                                (("2"
                                                                                                                                  (LIFT-IF)
                                                                                                                                  (("2"
                                                                                                                                    (SPLIT
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (USE "wf_nat") NIL NIL))
    NIL)
   UNCHECKED
   ((|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |SemanticsProofs|
     NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsProofs| NIL)
    (|lookup| FORMAL-CONST-DECL "[Name, FullState -> Val]" |SemanticsProofs|
     NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| FORMAL-CONST-DECL "(update_PState_type)" |SemanticsProofs|
     NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| FORMAL-CONST-DECL "(execute_set_type)" |SemanticsProofs|
     NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| FORMAL-CONST-DECL "(execute_assert_type)"
     |SemanticsProofs| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| FORMAL-CONST-DECL "(execute_CaseJML_type)"
     |SemanticsProofs| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|on_method_exit_normal| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|on_method_exit_exceptional| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|derive| DEF-DECL "bool" |Semantics| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Bottom?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|check_for_exception| CONST-DECL "bool" |Semantics| NIL)
    (|check_for_exception_final| CONST-DECL "bool" |Semantics| NIL)
    (|b| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | BExpr?(X) OR Neg?(X)} -> BoolExpr]" |Body_adt| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) NIL NIL
    (|r| ADT-ACCESSOR-DECL "[(RExpr?) -> RefExpr]" |Body_adt| NIL)
    (|RefExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|RefVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Null?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|return_of_stmt| CONST-DECL "Val" |Semantics| NIL)
    (|Int?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Plus?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NumVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NumExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|n| ADT-ACCESSOR-DECL "[(NExpr?) -> NumExpr]" |Body_adt| NIL)
    (|then_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (|else_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (|test| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | While?(X) OR IfThenElse?(X) OR CondExpr?(X)} -> BoolExpr]"
     |Body_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|update_field| CONST-DECL "PState" |State| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL)
    (|target| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Name]" |Body_adt| NIL)
    (|update| CONST-DECL "PState" |State| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|source| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Expr]" |Body_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_induction| FORMULA-DECL NIL |wf_induction| NIL))
   19091 3018 T NIL)
  (|derive_bottom_iff_exception_step-1| NIL 3395752639 3401608061
   ("" (USE "wf_induction[nat, LAMBDA(x, y : nat) : x < y]")
    (("1"
      (INST -1 " LAMBDA(n : nat) : FORALL (p: FullProgram)(e: Body)
                     (sigma1, sigma2: FullState, v: Val):
                derive(p)(e, sigma1, v, sigma2)(n) IMPLIES
                 Bottom?(v) = up?(ex(pstate(sigma2)))")
      (("1" (SPLIT -1)
        (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (HIDE 2)
          (("2" (SKOSIMP*)
            (("2" (EXPAND "derive" -2)
              (("2" (SPLIT -2)
                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (ASSERT)
                    (("2" (LIFT-IF)
                      (("2" (SPLIT -1)
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (FLATTEN)
                          (("2" (ASSERT)
                            (("2"
                              (EXPAND* "check_for_exception_final"
                               "check_for_exception")
                              (("2" (SPLIT -1)
                                (("1" (FLATTEN)
                                  (("1" (SKOSIMP*)
                                    (("1" (SPLIT -5)
                                      (("1" (PROPAX) NIL NIL)
                                       ("2" (FLATTEN)
                                        (("2" (INST-CP -8 "m1!1")
                                          (("2" (INST -8 "m2!1")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (ASSERT)
                                    (("2" (SPLIT -1)
                                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (SPLIT -1)
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (FLATTEN)
                                              (("2" (ASSERT)
                                                (("2" (SPLIT -1)
                                                  (("1" (FLATTEN)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (ASSERT)
                                                      (("2" (SPLIT -1)
                                                        (("1" (FLATTEN)
                                                          (("1" (ASSERT)
                                                            (("1" (SKOSIMP*)
                                                              (("1" (SPLIT -4)
                                                                (("1" (PROPAX)
                                                                  NIL NIL)
                                                                 ("2" (FLATTEN)
                                                                  (("2"
                                                                    (INST -6
                                                                     "x!1 - 1")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2" (SPLIT -1)
                                                              (("1" (FLATTEN)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (SKOSIMP*)
                                                                    (("1"
                                                                      (SPLIT
                                                                       -5)
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (INST-CP
                                                                           -8
                                                                           "m1!1")
                                                                          (("2"
                                                                            (INST
                                                                             -8
                                                                             "m2!1")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (SPLIT -1)
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (SKOSIMP*)
                                                                          (("1"
                                                                            (SPLIT
                                                                             -5)
                                                                            (("1"
                                                                              (PROPAX)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (FLATTEN)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (SPLIT
                                                                           -1)
                                                                          (("1"
                                                                            (FLATTEN)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (SPLIT
                                                                                 -1)
                                                                                (("1"
                                                                                  (FLATTEN)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (FLATTEN)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (SPLIT
                                                                                       -1)
                                                                                      (("1"
                                                                                        (FLATTEN)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (FLATTEN)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (SPLIT
                                                                                             -1)
                                                                                            (("1"
                                                                                              (FLATTEN)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (SKOSIMP*)
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -5
                                                                                                     "x!1 - 1")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST?)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (LIFT-IF)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (SPLIT
                                                                                                                   13)
                                                                                                                  (("1"
                                                                                                                    (PROPAX)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("2"
                                                                                                                      (SPLIT
                                                                                                                       -5)
                                                                                                                      (("1"
                                                                                                                        (PROPAX)
                                                                                                                        NIL
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (FLATTEN)
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (TYPEPRED
                                                                                                                             "update_PState")
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "update_PState_type")
                                                                                                                              (("2"
                                                                                                                                (INST?)
                                                                                                                                (("2"
                                                                                                                                  (INST
                                                                                                                                   -1
                                                                                                                                   "sigma2!1")
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (REPLACE
                                                                                                                                       -2
                                                                                                                                       :DIR RL)
                                                                                                                                      (("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (EXPAND
                                                                                                                                           "update")
                                                                                                                                          (("2"
                                                                                                                                            (LIFT-IF)
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("2"
                                                                                                                                                (EXPAND
                                                                                                                                                 "update_local")
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "update_field")
                                                                                                                                                  (("2"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (SPLIT
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (FLATTEN)
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -4
                                                                                                         "x!1 - 1")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST?)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (FLATTEN)
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      (("2"
                                                                                                        (SPLIT
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (FLATTEN)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (SKOSIMP*)
                                                                                                              (("1"
                                                                                                                (SPLIT
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (FLATTEN)
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (FLATTEN)
                                                                                                                  (("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (INST-CP
                                                                                                                       -6
                                                                                                                       "m1!1")
                                                                                                                      (("2"
                                                                                                                        (INST
                                                                                                                         -6
                                                                                                                         "m2!1")
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (INST?
                                                                                                                             -7)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (LIFT-IF)
                                                                                                                                (("2"
                                                                                                                                  (SPLIT
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("1"
                                                                                                                                      (INST?)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("2"
                                                                                                                                      (INST?)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (SPLIT
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (FLATTEN)
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("1"
                                                                                                                      (TYPEPRED
                                                                                                                       "update_PState")
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "update_PState_type")
                                                                                                                        (("1"
                                                                                                                          (INST?
                                                                                                                           -1
                                                                                                                           :WHERE
                                                                                                                           -15)
                                                                                                                          (("1"
                                                                                                                            (INST
                                                                                                                             -1
                                                                                                                             "sigma2!1")
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "update_local")
                                                                                                                                  (("1"
                                                                                                                                    (SPLIT
                                                                                                                                     -14)
                                                                                                                                    (("1"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (INST-CP
                                                                                                                                           -16
                                                                                                                                           "m5!1")
                                                                                                                                          (("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("2"
                                                                                                                                              (INST?
                                                                                                                                               -17)
                                                                                                                                              (("2"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("2"
                                                                                                                                                  (SPLIT
                                                                                                                                                   -13)
                                                                                                                                                  (("1"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (FLATTEN)
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("2"
                                                                                                                                                        (ASSERT)
                                                                                                                                                        (("2"
                                                                                                                                                          (TYPEPRED
                                                                                                                                                           "on_method_exit_exceptional")
                                                                                                                                                          (("2"
                                                                                                                                                            (EXPAND
                                                                                                                                                             "on_method_event_type")
                                                                                                                                                            (("2"
                                                                                                                                                              (INST?)
                                                                                                                                                              (("2"
                                                                                                                                                                (ASSERT)
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (FLATTEN)
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  (("2"
                                                                                                                    (SPLIT
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (FLATTEN)
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        (("1"
                                                                                                                          (INST
                                                                                                                           -4
                                                                                                                           "x!1 - 1")
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            (("1"
                                                                                                                              (INST?)
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (FLATTEN)
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        (("2"
                                                                                                                          (SPLIT
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (FLATTEN)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (INST
                                                                                                                                 -4
                                                                                                                                 "x!1 - 1")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("1"
                                                                                                                                    (INST?)
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (FLATTEN)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "return_of_stmt")
                                                                                                                                (("2"
                                                                                                                                  (LIFT-IF)
                                                                                                                                  (("2"
                                                                                                                                    (SPLIT
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (USE "wf_nat") NIL NIL))
    NIL)
   UNFINISHED
   ((|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL) NIL
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |SemanticsProofs|
     NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsProofs| NIL)
    (|lookup| FORMAL-CONST-DECL "[Name, FullState -> Val]" |SemanticsProofs|
     NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| FORMAL-CONST-DECL "(update_PState_type)" |SemanticsProofs|
     NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| FORMAL-CONST-DECL "(execute_set_type)" |SemanticsProofs|
     NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| FORMAL-CONST-DECL "(execute_assert_type)"
     |SemanticsProofs| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| FORMAL-CONST-DECL "(execute_CaseJML_type)"
     |SemanticsProofs| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|on_method_exit_normal| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|on_method_exit_exceptional| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|derive| DEF-DECL "bool" |Semantics| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Bottom?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|check_for_exception| CONST-DECL "bool" |Semantics| NIL)
    (|check_for_exception_final| CONST-DECL "bool" |Semantics| NIL) NIL
    (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)
    (|r| ADT-ACCESSOR-DECL "[(RExpr?) -> RefExpr]" |Body_adt| NIL)
    (|RefExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|RefVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Null?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|return_of_stmt| CONST-DECL "Val" |Semantics| NIL)
    (|Int?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Plus?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NumVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NumExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|n| ADT-ACCESSOR-DECL "[(NExpr?) -> NumExpr]" |Body_adt| NIL)
    (|then_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (|else_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (|test| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | While?(X) OR IfThenElse?(X) OR CondExpr?(X)} -> BoolExpr]"
     |Body_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|update_field| CONST-DECL "PState" |State| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL)
    (|target| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Name]" |Body_adt| NIL)
    (|update| CONST-DECL "PState" |State| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|source| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Expr]" |Body_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_induction| FORMULA-DECL NIL |wf_induction| NIL))
   15150 2600 T SHOSTAK))
 (|derive_boolean_expr_type_TCC1| 0
  (|derive_boolean_expr_type_TCC1-1| NIL 3401446935 3401607765
   ("" (SUBTYPE-TCC) NIL NIL) UNCHECKED
   ((|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |SemanticsProofs|
     NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   152 152 NIL NIL))
 (|derive_boolean_expr_type| 0
  (|derive_boolean_expr_type-1| NIL 3396347233 3401608595
   ("" (SKOSIMP)
    (("" (INDUCT "b")
      (("1" (TYPEPRED "b!1") (("1" (ASSERT) NIL NIL)) NIL)
       ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)
       ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)
       ("4" (SKOSIMP*) (("4" (ASSERT) NIL NIL)) NIL)
       ("5" (SKOSIMP*) (("5" (EXPAND "derive") (("5" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("6" (SKOSIMP*) (("6" (EXPAND "derive") (("6" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("7" (SKOSIMP*) (("7" (EXPAND "derive") (("7" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("8" (SKOSIMP*)
        (("8" (ASSERT)
          (("8" (EXPAND "derive" -4)
            (("8" (EXPAND* "check_for_exception_final" "check_for_exception")
              NIL NIL))
            NIL))
          NIL))
        NIL)
       ("9" (SKOSIMP*)
        (("9" (EXPAND "derive" -5)
          (("9" (EXPAND* "check_for_exception_final" "check_for_exception")
            (("9" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("10" (SKOSIMP*)
        (("10" (EXPAND "derive" -5)
          (("10" (EXPAND* "check_for_exception_final" "check_for_exception")
            (("10" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("11" (SKOSIMP*)
        (("11" (EXPAND "derive" -3) (("11" (ASSERT) NIL NIL)) NIL)) NIL)
       ("12" (SKOSIMP*) (("12" (ASSERT) NIL NIL)) NIL)
       ("13" (SKOSIMP*) (("13" (ASSERT) NIL NIL)) NIL)
       ("14" (SKOSIMP*) (("14" (ASSERT) NIL NIL)) NIL)
       ("15" (SKOSIMP*) (("15" (ASSERT) NIL NIL)) NIL)
       ("16" (SKOSIMP*) (("16" (ASSERT) NIL NIL)) NIL)
       ("17" (SKOSIMP*) (("17" (ASSERT) NIL NIL)) NIL)
       ("18" (SKOSIMP*) (("18" (ASSERT) NIL NIL)) NIL)
       ("19" (SKOSIMP*) (("19" (ASSERT) NIL NIL)) NIL)
       ("20" (SKOSIMP*) (("20" (ASSERT) NIL NIL)) NIL)
       ("21" (SKOSIMP*) (("21" (ASSERT) NIL NIL)) NIL)
       ("22" (SKOSIMP*) (("22" (ASSERT) NIL NIL)) NIL)
       ("23" (SKOSIMP*) (("23" (ASSERT) NIL NIL)) NIL)
       ("24" (SKOSIMP*) (("24" (ASSERT) NIL NIL)) NIL)
       ("25" (SKOSIMP*) (("25" (ASSERT) NIL NIL)) NIL)
       ("26" (SKOSIMP*) (("26" (ASSERT) NIL NIL)) NIL)
       ("27" (SKOSIMP*) (("27" (ASSERT) NIL NIL)) NIL)
       ("28" (SKOSIMP*) (("28" (ASSERT) NIL NIL)) NIL)
       ("29" (SKOSIMP*) (("29" (ASSERT) NIL NIL)) NIL)
       ("30" (SKOSIMP*)
        (("30" (EXPAND "wf_BoolExpr") (("30" (PROPAX) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsProofs| NIL)
    (|lookup| FORMAL-CONST-DECL "[Name, FullState -> Val]" |SemanticsProofs|
     NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| FORMAL-CONST-DECL "(update_PState_type)" |SemanticsProofs|
     NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| FORMAL-CONST-DECL "(execute_set_type)" |SemanticsProofs|
     NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| FORMAL-CONST-DECL "(execute_assert_type)"
     |SemanticsProofs| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| FORMAL-CONST-DECL "(execute_CaseJML_type)"
     |SemanticsProofs| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|on_method_exit_normal| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|on_method_exit_exceptional| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|derive| DEF-DECL "bool" |Semantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|Bool?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL) NIL
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |SemanticsProofs|
     NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Body_induction| FORMULA-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|check_for_exception_final| CONST-DECL "bool" |Semantics| NIL)
    (|check_for_exception| CONST-DECL "bool" |Semantics| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   27142 1514 T NIL)))
(|SemanticsJML|
 (|wf_initial_ghost_state_TCC1| 0
  (|wf_initial_ghost_state_TCC1-1| NIL 3392370163 3401700301 ("" (TCC)) PROVED
   ((|get_GhostDecl| CONST-DECL "lift[FieldDecl]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL))
   50 51 NIL NIL))
 (|wf_initial_ghost_state| 0
  (|wf_initial_ghost_state-1| NIL 3392370167 3401700303
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_ghoststate")
      (("" (SKOSIMP*)
        (("" (EXPAND "is_ghost")
          (("" (REPLACE -1 :HIDE? T)
            (("" (ASSERT)
              (("" (EXPAND "var_names")
                (("" (EXPAND "get_GhostDecl")
                  (("" (LIFT-IF)
                    (("" (ASSERT)
                      (("" (SPLIT 1)
                        (("1" (SKOSIMP*)
                          (("1"
                            (TYPEPRED "choose({g: FieldDecl[Name] |
                                getGhostDecls(program(p!1))(g) AND
                                 name(g) = vn!1})`init_val")
                            (("1" (EXPAND "defined?")
                              (("1" (ASSERT)
                                (("1" (REWRITE "nonempty_exists")
                                  (("1" (SKOSIMP*)
                                    (("1" (TYPEPRED "x!1")
                                      (("1" (INST?) (("1" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP*)
                          (("2" (REWRITE "nonempty_exists")
                            (("2" (EXPAND "defined?")
                              (("2" (SKOSIMP*)
                                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|get_GhostDecl| CONST-DECL "lift[FieldDecl]" |ProgramFunctions| NIL)
    (|vn!1| SKOLEM-CONST-DECL "Name" |SemanticsJML| NIL)
    (|f!1| SKOLEM-CONST-DECL "FieldDecl[Name]" |SemanticsJML| NIL)
    (|p!1| SKOLEM-CONST-DECL "FullProgram" |SemanticsJML| NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL))
   159 160 T SHOSTAK))
 (|execute_set_TCC1| 0
  (|execute_set_TCC1-1| NIL 3390908875 3401700304 ("" (TCC)) PROVED
   ((|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   142 143 NIL NIL))
 (|execute_set_TCC2| 0
  (|execute_set_TCC2-1| NIL 3390908875 3401700306 ("" (TCC)) PROVED
   ((|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   175 174 NIL NIL))
 (|execute_set_TCC3| 0
  (|execute_set_TCC3-1| NIL 3390908875 3401700307 ("" (TCC)) PROVED NIL 116 115
   NIL NIL))
 (|execute_set_TCC4| 0
  (|execute_set_TCC4-1| NIL 3401446938 3401700308 ("" (SUBTYPE-TCC) NIL NIL)
   PROVED
   ((|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   119 118 NIL NIL))
 (|execute_CaseJML_TCC1| 0
  (|execute_CaseJML_TCC1-1| NIL 3390908875 3401700310 ("" (TCC)) PROVED
   ((|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   188 182 NIL NIL))
 (|execute_CaseJML_TCC2| 0
  (|execute_CaseJML_TCC2-2| "no proof, because old one suddenly broken"
   3401701533 3401701533
   ("" (COMMENT "idioot") (("" (POSTPONE) NIL ";;; idioot")) NIL) UNFINISHED
   NIL 2650 1 T SHOSTAK)
  (|execute_CaseJML_TCC2-1| NIL 3390908875 3401701497
   ("" (INDUCT "xs")
    (("1" (SKOSIMP*)
      (("1" (TYPEPRED "branches!1")
        (("1" (EXPAND "wf_Branches")
          (("1" (REPLACE -3)
            (("1" (EXPAND "every")
              (("1" (EXPAND "every")
                (("1" (FLATTEN)
                  (("1" (EXPAND "wf_Body")
                    (("1" (SKOSIMP*)
                      (("1" (INST?)
                        (("1" (INST?)
                          (("1" (ASSERT)
                            (("1" (EXPAND "var_names" -4)
                              (("1" (AUTO-REWRITE "union" "member")
                                (("1" (ASSERT)
                                  (("1" (REPLACE -3) (("1" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKOSIMP*)
      (("2" (TYPEPRED "branches!1")
        (("2"
          (INST -2 "p!1" "cdr(branches!1)" "s1!1" "s2!1" "n!1" "cons1_var!1")
          (("1" (ASSERT)
            (("1" (REPLACE -4)
              (("1" (ASSERT)
                (("1" (INST -2 "CaseJML(cons2_var!1)")
                  (("1" (EXPAND "wf_Branches")
                    (("1" (EXPAND "every")
                      (("1" (FLATTEN)
                        (("1" (EXPAND "every")
                          (("1" (FLATTEN)
                            (("1" (EXPAND "wf_Body")
                              (("1" (SKOSIMP*)
                                (("1" (INST?)
                                  (("1" (INST?)
                                    (("1" (INST?)
                                      (("1" (INST?)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "var_names" -6)
                                            (("1"
                                              (AUTO-REWRITE "union" "member")
                                              (("1" (ASSERT)
                                                (("1" (REPLACE -5)
                                                  (("1" (EXPAND "var_names" -6)
                                                    (("1" (ASSERT)
                                                      (("1" (INST?)
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (EXPAND "var_names"
                                                                    5)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "wf_Branches")
            (("2" (EXPAND "every" -1)
              (("2" (ASSERT) (("2" (FLATTEN) NIL NIL)) NIL)) NIL))
            NIL)
           ("3" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL) NIL NIL NIL
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|IfThenElse| ADT-CONSTRUCTOR-DECL
     "[[BoolExpr, Stmt, Stmt] -> (IfThenElse?)]" |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|CaseJML| ADT-CONSTRUCTOR-DECL "[list[[BoolExpr, Stmt]] -> (CaseJML?)]"
     |Body_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   5099 135 T NIL))
 (|execute_CaseJML_TCC3| 0
  (|execute_CaseJML_TCC3-1| NIL 3390908875 3401613059 ("" (TCC)) UNCHECKED NIL
   41 40 T SHOSTAK))
 (|execute_CaseJML_TCC4| 0
  (|execute_CaseJML_TCC4-1| NIL 3395749089 3401613064 ("" (TCC)) UNFINISHED
   ((|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL) (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   517 510 T SHOSTAK))
 (|execute_CaseJML_TCC5| 0
  (|execute_CaseJML_TCC5-1| NIL 3401601612 3401613065
   ("" (SUBTYPE-TCC) NIL NIL) UNCHECKED
   ((|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   89 89 NIL NIL))
 (|check_assertion_TCC1| 0
  (|check_assertion_TCC1-1| NIL 3395749089 3401613065
   ("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL) UNCHECKED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   2 2 T SHOSTAK))
 (|check_assertion_TCC2| 0
  (|check_assertion_TCC2-1| NIL 3401446938 3401613065
   ("" (SKOSIMP*)
    (("" (TYPEPRED "e!1")
      (("" (EXPAND "wf_BoolExpr") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL))
   3 2 T NIL))
 (|execute_assert_TCC1| 0
  (|execute_assert_TCC1-1| NIL 3397383993 3401613066 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED NIL 37 36 NIL NIL))
 (|execute_assert_TCC2| 0
  (|execute_assert_TCC2-1| NIL 3397383993 3401613074 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   826 818 NIL NIL))
 (|on_method_entry_TCC1| 0
  (|on_method_entry_TCC1-1| NIL 3390908875 3401613076 ("" (TCC)) UNCHECKED
   ((|lookup_inv| CONST-DECL "BoolExpr" |ProgramFunctions| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   175 169 NIL NIL))
 (|on_method_entry_TCC2| 0
  (|on_method_entry_TCC2-2| "" 3395751614 3401613077 ("" (TCC)) UNCHECKED
   ((|lookup_inv| CONST-DECL "BoolExpr" |ProgramFunctions| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   149 150 T SHOSTAK)
  (|on_method_entry_TCC2-1| NIL 3390908875 3395751480
   ("" (SUBTYPE-TCC) NIL NIL) UNFINISHED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   143 143 NIL NIL))
 (|on_method_entry_TCC3| 0
  (|on_method_entry_TCC3-1| NIL 3390908875 3401613078
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method")
        (("" (EXPAND "wf_BoolExpr") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   33 33 T SHOSTAK))
 (|on_method_entry_TCC4| 0
  (|on_method_entry_TCC4-1| NIL 3390908875 3401613079 ("" (TCC)) UNCHECKED
   ((|lookup_inv| CONST-DECL "BoolExpr" |ProgramFunctions| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   152 153 T SHOSTAK))
 (|on_method_entry_TCC5| 0
  (|on_method_entry_TCC5-1| NIL 3390908875 3401613080
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   33 33 T NIL))
 (|on_method_entry_TCC6| 0
  (|on_method_entry_TCC6-1| NIL 3401446938 3401613084
   ("" (SUBTYPE-TCC) NIL NIL) UNCHECKED
   ((|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   409 403 NIL NIL))
 (|on_method_exit_normal_TCC1| 0
  (|on_method_exit_normal_TCC1-1| NIL 3390908875 3401613084
   ("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL) UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   30 30 T SHOSTAK))
 (|on_method_exit_normal_TCC2| 0
  (|on_method_exit_normal_TCC2-1| NIL 3390908875 3401613084
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   32 32 T NIL))
 (|on_method_exit_normal_TCC3| 0
  (|on_method_exit_normal_TCC3-1| NIL 3390908875 3401613084
   ("" (SKOSIMP*)
    (("" (TYPEPRED "post(md!1)") (("" (ASSERT) (("" (POSTPONE) NIL NIL)) NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   10 10 T SHOSTAK))
 (|on_method_exit_normal_TCC4| 0
  (|on_method_exit_normal_TCC4-1| NIL 3390908875 3401613085
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method")
        (("" (ASSERT) (("" (EXPAND "wf_BoolExpr") (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   34 32 T SHOSTAK))
 (|on_method_exit_normal_TCC5| 0
  (|on_method_exit_normal_TCC5-1| NIL 3390908875 3401613305
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method")
        (("" (EXPAND "wf_BoolExpr") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   1662 13 T NIL))
 (|on_method_exit_normal_TCC6| 0
  (|on_method_exit_normal_TCC6-1| NIL 3401446938 3401613228
   ("" (SUBTYPE-TCC) NIL NIL) UNCHECKED
   ((|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   415 415 NIL NIL))
 (|on_method_exit_exceptional_TCC1| 0
  (|on_method_exit_exceptional_TCC1-1| NIL 3390908875 3401613228
   ("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL) UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   8 8 T SHOSTAK))
 (|on_method_exit_exceptional_TCC2| 0
  (|on_method_exit_exceptional_TCC2-1| NIL 3390908875 3401613229
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   52 51 T NIL))
 (|on_method_exit_exceptional_TCC3| 0
  (|on_method_exit_exceptional_TCC3-1| NIL 3390908875 3401613229 ("" (TCC))
   UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   43 42 NIL NIL))
 (|on_method_exit_exceptional_TCC4| 0
  (|on_method_exit_exceptional_TCC4-1| NIL 3397385085 3401613230
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (SPLIT -1)
        (("1" (FLATTEN)
          (("1" (SKOSIMP*)
            (("1" (ASSERT)
              (("1" (LIFT-IF)
                (("1" (SPLIT -6)
                  (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (FLATTEN)
                    (("2" (TYPEPRED "update_PState")
                      (("2" (EXPAND "update_PState_type")
                        (("2" (INST?)
                          (("2" (INST -1 "s2!1")
                            (("2" (ASSERT)
                              (("2" (REPLACE -1) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   31 29 T NIL))
 (|on_method_exit_exceptional_TCC5| 0
  (|on_method_exit_exceptional_TCC5-1| NIL 3401446938 3401613230
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (SPLIT -1)
        (("1" (FLATTEN)
          (("1" (SKOSIMP*)
            (("1" (ASSERT)
              (("1" (REPLACE -6)
                (("1" (LIFT-IF)
                  (("1" (ASSERT)
                    (("1" (SPLIT 1)
                      (("1" (PROPAX) NIL NIL)
                       ("2" (SKOSIMP*)
                        (("2" (TYPEPRED "update_PState")
                          (("2" (EXPAND "update_PState_type")
                            (("2" (INST?)
                              (("2"
                                (INST -1
                                 "update_PState(tau2!1, raise[Name](down[Excpt](ex(pstate(s1!1)))))")
                                (("2" (REPLACE -1)
                                  (("2" (EXPAND "raise")
                                    (("2" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| FORMAL-CONST-DECL "(update_PState_type)" |SemanticsJML|
     NIL)
    (|raise| CONST-DECL "PState" |State| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   37 36 T NIL)))

