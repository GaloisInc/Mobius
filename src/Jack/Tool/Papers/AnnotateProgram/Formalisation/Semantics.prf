(|ReferenceFunctions|)
(|SemanticsTypes|)
(|SemanticsJMLTypes|)
(|Semantics|
 (|update_stack_TCC1| 0
  (|update_stack_TCC1-1| NIL 3390908871 3403268978
   ("" (SKOSIMP*)
    (("" (TYPEPRED "lvds!1")
      (("" (EXPAND "is_finite")
        (("" (SKOSIMP*)
          ((""
            (INST 1 "N!1" "LAMBDA(x : ({x: [Name, Val[Name]] |
                     EXISTS (l: LocalVarDecl[Name]):
                       lvds!1(l) AND
                        name(l) = PROJ_1(x) AND
                         default_value[Name](jtype(l)) = PROJ_2(x)})) : f!1(choose({l : LocalVarDecl[Name] | lvds!1(l) AND
                        name(l) = PROJ_1(x) AND
                         default_value[Name](jtype(l)) = PROJ_2(x)}))")
            (("1" (EXPAND "injective?")
              (("1" (SKOSIMP*)
                (("1" (TYPEPRED "x1!1")
                  (("1" (TYPEPRED "x2!1")
                    (("1" (SKOSIMP*)
                      (("1" (INST?)
                        (("1" (ASSERT)
                          (("1" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL)) NIL)
                         ("2" (REWRITE "nonempty_exists")
                          (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL)) NIL)
                         ("3" (REWRITE "nonempty_exists")
                          (("3" (ASSERT) (("3" (INST 1 "l!2") NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKOSIMP*)
              (("2" (REWRITE "nonempty_exists")
                (("2" (TYPEPRED "x!1")
                  (("2" (SKOSIMP*) (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   177 176 T SHOSTAK))
 (|derive_TCC1| 0
  (|derive_TCC1-1| NIL 3395749931 3403268978 ("" (TCC)) UNCHECKED NIL 44 44 NIL
   NIL))
 (|derive_TCC2| 0
  (|derive_TCC2-1| NIL 3395749931 3403268979 ("" (TCC)) UNCHECKED NIL 81 80 NIL
   NIL))
 (|derive_TCC3| 0
  (|derive_TCC3-1| NIL 3395749931 3403269964
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   14976 96 T NIL))
 (|derive_TCC4| 0
  (|derive_TCC4-1| NIL 3395749931 3403268982 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   127 125 NIL NIL))
 (|derive_TCC5| 0
  (|derive_TCC5-2| NIL 3403269980 3403270156
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   67 67 NIL NIL)
  (|derive_TCC5-1| NIL 3395749931 3403269717
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   157 156 T NIL))
 (|derive_TCC6| 0
  (|derive_TCC6-1| NIL 3395749931 3403268985 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   127 127 NIL NIL))
 (|derive_TCC7| 0
  (|derive_TCC7-1| NIL 3395749931 3403268986 ("" (TCC)) UNCHECKED
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   81 81 NIL NIL))
 (|derive_TCC8| 0
  (|derive_TCC8-2| NIL 3403269989 3403270255
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2) (("1" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   3963 67 T NIL)
  (|derive_TCC8-1| NIL 3395749931 3403269718
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   155 149 T NIL))
 (|derive_TCC9| 0
  (|derive_TCC9-1| NIL 3395749931 3403268988 ("" (TCC)) UNCHECKED NIL 81 80 NIL
   NIL))
 (|derive_TCC10| 0
  (|derive_TCC10-2| NIL 3403269995 3403270157
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   86 86 NIL NIL)
  (|derive_TCC10-1| NIL 3395749931 3403269720
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   194 195 T NIL))
 (|derive_TCC11| 0
  (|derive_TCC11-1| NIL 3395749931 3403268991 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   107 107 NIL NIL))
 (|derive_TCC12| 0
  (|derive_TCC12-2| NIL 3403269999 3403270158
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   68 68 NIL NIL)
  (|derive_TCC12-1| NIL 3395749931 3403269722
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   160 159 T NIL))
 (|derive_TCC13| 0
  (|derive_TCC13-1| NIL 3395749931 3403268994 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   147 146 NIL NIL))
 (|derive_TCC14| 0
  (|derive_TCC14-2| NIL 3403270003 3403270159
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   106 106 NIL NIL)
  (|derive_TCC14-1| NIL 3395749931 3403269723
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   159 159 T NIL))
 (|derive_TCC15| 0
  (|derive_TCC15-1| NIL 3395749931 3403268997 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   106 106 NIL NIL))
 (|derive_TCC16| 0
  (|derive_TCC16-2| NIL 3403270008 3403270160
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   68 67 NIL NIL)
  (|derive_TCC16-1| NIL 3395749931 3403269725
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   178 177 T NIL))
 (|derive_TCC17| 0
  (|derive_TCC17-1| NIL 3395749931 3403269000 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   106 106 NIL NIL))
 (|derive_TCC18| 0
  (|derive_TCC18-1| NIL 3395749931 3403269000
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body") (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   46 46 T NIL))
 (|derive_TCC19| 0
  (|derive_TCC19-2| NIL 3403270013 3403270305
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member" "add")
                      (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   4449 74 T NIL)
  (|derive_TCC19-1| NIL 3395749931 3403269726
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member")
                    (("" (AUTO-REWRITE "union" "member" "add")
                      (("" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL))
   112 113 T NIL))
 (|derive_TCC20| 0
  (|derive_TCC20-1| NIL 3395749931 3403269002 ("" (TCC)) UNCHECKED NIL 44 44
   NIL NIL))
 (|derive_TCC21| 0
  (|derive_TCC21-1| NIL 3395749931 3403269003 ("" (TCC)) UNCHECKED
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   98 98 NIL NIL))
 (|derive_TCC22| 0
  (|derive_TCC22-3| NIL 3403270321 3403270498
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2) (("1" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!2")
              (("2" (ASSERT)
                (("2" (EXPAND "subterm" 2)
                  (("2" (REPLACE -7) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   6217 120 T NIL)
  (|derive_TCC22-2| NIL 3403270025 3403270161
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 42 42 NIL NIL)
  (|derive_TCC22-1| NIL 3395749931 3403269728
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   151 150 T NIL))
 (|derive_TCC23| 0
  (|derive_TCC23-1| NIL 3395749931 3403269005 ("" (TCC)) UNCHECKED NIL 64 62
   NIL NIL))
 (|derive_TCC24| 0
  (|derive_TCC24-2| NIL 3403270031 3403270162
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   85 86 NIL NIL)
  (|derive_TCC24-1| NIL 3395749931 3403269729
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   160 160 T NIL))
 (|derive_TCC25| 0
  (|derive_TCC25-1| NIL 3395749931 3403269008 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   171 169 NIL NIL))
 (|derive_TCC26| 0
  (|derive_TCC26-2| NIL 3403270034 3403270163
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   104 105 NIL NIL)
  (|derive_TCC26-1| NIL 3395749931 3403269731
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   198 197 T NIL))
 (|derive_TCC27| 0
  (|derive_TCC27-3| NIL 3403270324 3403270619
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 3)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (AUTO-REWRITE "union" "member" "add")
                    (("1" (ASSERT)
                      (("1" (EXPAND "var_names" 2) (("1" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST? -4)
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   11403 224 T NIL)
  (|derive_TCC27-2| NIL 3403270037 3403270164
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 157 158 NIL NIL)
  (|derive_TCC27-1| NIL 3395749931 3403269733
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   161 161 T NIL))
 (|derive_TCC28| 0
  (|derive_TCC28-1| NIL 3395749931 3403269013 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   130 128 NIL NIL))
 (|derive_TCC29| 0
  (|derive_TCC29-2| NIL 3403270040 3403270165
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   75 74 NIL NIL)
  (|derive_TCC29-1| NIL 3395749931 3403269734
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   130 129 T NIL))
 (|derive_TCC30| 0
  (|derive_TCC30-1| NIL 3395749931 3403269017 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   194 192 NIL NIL))
 (|derive_TCC31| 0
  (|derive_TCC31-2| NIL 3403270056 3403270166
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   111 111 NIL NIL)
  (|derive_TCC31-1| NIL 3395749931 3403269735
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -3)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   128 128 T NIL))
 (|derive_TCC32| 0
  (|derive_TCC32-1| NIL 3395749931 3403269020 ("" (TCC)) UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   226 225 NIL NIL))
 (|derive_TCC33| 0
  (|derive_TCC33-1| NIL 3395749931 3403269023 ("" (TCC)) UNCHECKED
   ((|choose| CONST-DECL "(p)" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   291 290 NIL NIL))
 (|derive_TCC34| 0
  (|derive_TCC34-1| NIL 3395749931 3403269024
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   42 42 T NIL))
 (|derive_TCC35| 0
  (|derive_TCC35-1| NIL 3395749931 3403269027 ("" (TCC)) UNCHECKED
   ((|choose| CONST-DECL "(p)" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   345 344 NIL NIL))
 (|derive_TCC36| 0
  (|derive_TCC36-1| NIL 3395749931 3403269028
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   62 61 T NIL))
 (|derive_TCC37| 0
  (|derive_TCC37-1| NIL 3396354176 3403269031 ("" (TCC)) UNCHECKED
   ((|choose| CONST-DECL "(p)" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   332 330 NIL NIL))
 (|derive_TCC38| 0
  (|derive_TCC38-1| NIL 3396354176 3403269035 ("" (TCC)) UNCHECKED
   ((|choose| CONST-DECL "(p)" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   374 374 NIL NIL))
 (|derive_TCC39| 0
  (|derive_TCC39-1| NIL 3401446930 3403269037 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   203 203 NIL NIL))
 (|derive_TCC40| 0
  (|derive_TCC40-1| NIL 3401446930 3403269038 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   86 86 NIL NIL))
 (|derive_TCC41| 0
  (|derive_TCC41-3| NIL 3403270328 3403270380
   (";;; Proof derive_TCC8-2 for formula Semantics.derive_TCC8" (SKOSIMP*)
    ((";;; Proof derive_TCC8-2 for formula Semantics.derive_TCC8"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC8-2 for formula Semantics.derive_TCC8"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC8-2 for formula Semantics.derive_TCC8" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2) (("1" (PROPAX) NIL)))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   59 58 NIL NIL)
  (|derive_TCC41-2| NIL 3403270064 3403270166
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 46 44 NIL NIL)
  (|derive_TCC41-1| NIL 3401446930 3403269743 ("" (SUBTYPE-TCC) NIL NIL)
   UNFINISHED
   ((|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   753 750 NIL NIL))
 (|derive_TCC42| 0
  (|derive_TCC42-1| NIL 3401446930 3403269046 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED NIL 45 45 NIL NIL))
 (|derive_TCC43| 0
  (|derive_TCC43-1| NIL 3401446930 3403269047 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   69 68 NIL NIL))
 (|derive_TCC44| 0
  (|derive_TCC44-3| NIL 3403270332 3403270381
   (";;; Proof derive_TCC8-2 for formula Semantics.derive_TCC8" (SKOSIMP*)
    ((";;; Proof derive_TCC8-2 for formula Semantics.derive_TCC8"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC8-2 for formula Semantics.derive_TCC8"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC8-2 for formula Semantics.derive_TCC8" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2) (("1" (PROPAX) NIL)))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   59 59 NIL NIL)
  (|derive_TCC44-2| NIL 3403270068 3403270167
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 63 60 NIL NIL)
  (|derive_TCC44-1| NIL 3401446930 3403269749 ("" (SUBTYPE-TCC) NIL NIL)
   UNFINISHED
   ((|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   557 556 NIL NIL))
 (|derive_TCC45| 0
  (|derive_TCC45-1| NIL 3401446930 3403269053 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED NIL 82 81 NIL NIL))
 (|derive_TCC46| 0
  (|derive_TCC46-3| NIL 3403270335 3403271229
   (""
    (CASE
        "FORALL (l: list[[BoolExpr[Name], Stmt[Name]]], p: FullProgram, b: (wf_Body[Name](program(p))), sigma2 : FullState, v : Val, n : nat):
                v = return_of_stmt(sigma2) AND n > 0 AND b = CaseJML(l)
                 IMPLIES wf_Branches[Name](program(p))(l)")
    (("1" (SKOSIMP*)
      (("1" (APPLY (REPEAT (INST? -1))) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "l")
        (("1" (GRIND) NIL NIL)
         ("2" (SKOSIMP*)
          (("2" (EXPAND "wf_Branches")
            (("2" (EXPAND "every" 1)
              (("2" (INST -1 "p!1" _ "sigma2!1" "v!1" "n!1")
                (("2" (ASSERT)
                  (("2" (INST -1 "CaseJML(cons2_var!1)")
                    (("1" (ASSERT)
                      (("1" (HIDE -1)
                        (("1" (TYPEPRED "b!1")
                          (("1" (EXPAND "wf_Body")
                            (("1" (FLATTEN)
                              (("1" (REPLACE -5 :HIDE? T)
                                (("1" (EXPAND "var_names" -1)
                                  (("1" (EXPAND "subterm" -2)
                                    (("1" (AUTO-REWRITE "union" "member")
                                      (("1" (ASSERT)
                                        (("1" (SPLIT 1)
                                          (("1" (SKOSIMP*)
                                            (("1" (INST?)
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL)
                                           ("2" (SKOSIMP*)
                                            (("2" (INST? -4)
                                              (("2" (ASSERT)
                                                (("2"
                                                  (REWRITE "some_is_exists")
                                                  (("2" (INST? 2)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("3" (SKOSIMP*)
                                            (("3" (INST?)
                                              (("3" (ASSERT) NIL NIL)) NIL))
                                            NIL)
                                           ("4" (SKOSIMP*)
                                            (("4" (INST? -4)
                                              (("4" (ASSERT)
                                                (("4"
                                                  (REWRITE "some_is_exists")
                                                  (("4" (INST? 2)
                                                    (("4" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (TYPEPRED "b!1")
                      (("2" (REPLACE -4)
                        (("2" (HIDE 2)
                          (("2" (EXPAND "wf_Body")
                            (("2" (SPLIT 1)
                              (("1" (SKOSIMP*)
                                (("1" (INST?)
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "var_names" 2)
                                      (("1"
                                        (AUTO-REWRITE "union"
                                                      "member"
                                                      "emptyset")
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (SKOSIMP*)
                                (("2" (INST? -4)
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "subterm" (-2 2))
                                      (("2" (REWRITE "some_is_exists")
                                        (("2" (REWRITE "some_is_exists")
                                          (("2" (SKOSIMP*)
                                            (("2" (INST? 2)
                                              (("2" (ASSERT)
                                                (("2" (EXPAND "member" 2)
                                                  (("2" (PROPAX) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|member| DEF-DECL "bool" |list_props| NIL)
    (|some_is_exists| FORMULA-DECL NIL |listfuncs| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   59756 529 T NIL)
  (|derive_TCC46-2| NIL 3403270070 3403270169
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 160 151 NIL NIL)
  (|derive_TCC46-1| NIL 3401446930 3403269751
   (""
    (CASE
        "FORALL(p : FullProgram, b: (wf_Body[Name](program(p))), v : Val, sigma2 : FullState, n : nat, l: list[[BoolExpr[Name], Stmt[Name]]]):
                v = return_of_stmt(sigma2) AND n > 0 AND b = CaseJML(l)
                 IMPLIES wf_Branches[Name](program(p))(l)")
    (("1" (SKOSIMP*)
      (("1" (APPLY (REPEAT (INST? -1))) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
     ("2" (HIDE 2)
      (("2" (INDUCT "l")
        (("1" (GRIND) NIL NIL)
         ("2" (SKOSIMP*)
          (("2" (INST -1 "p!1" _ "v!1" "sigma2!1" "n!1")
            (("2" (ASSERT)
              (("2" (TYPEPRED "b!1")
                (("2" (INST -2 "CaseJML(cons2_var!1)")
                  (("1" (EXPAND "wf_Branches")
                    (("1" (EXPAND "every" 1)
                      (("1" (ASSERT)
                        (("1" (HIDE -2)
                          (("1" (EXPAND "wf_Body")
                            (("1" (REPLACE -4)
                              (("1" (SPLIT 1)
                                (("1" (SKOSIMP*)
                                  (("1" (INST?)
                                    (("1" (ASSERT)
                                      (("1" (EXPAND "var_names" 2)
                                        (("1" (AUTO-REWRITE "union" "member")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (SKOSIMP*)
                                  (("2" (INST?)
                                    (("2" (ASSERT)
                                      (("2" (EXPAND "var_names" 2)
                                        (("2" (AUTO-REWRITE "union" "member")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (REWRITE "wf_Body_CaseJML" :DIR RL) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL))
   247 247 T NIL))
 (|derive_TCC47| 0
  (|derive_TCC47-3| NIL 3403270337 3403271256
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (ASSERT)
                      (("1" (AUTO-REWRITE "union" "member")
                        (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   2289 119 T NIL)
  (|derive_TCC47-2| NIL 3403270074 3403270170
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 92 91 NIL NIL)
  (|derive_TCC47-1| NIL 3401446930 3403269753
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   181 181 T NIL))
 (|derive_TCC48| 0
  (|derive_TCC48-1| NIL 3401446930 3403269058
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   155 155 T NIL))
 (|derive_TCC49| 0
  (|derive_TCC49-3| NIL 3403270340 3403271327
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   6171 82 T NIL)
  (|derive_TCC49-2| NIL 3403270078 3403270171
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 92 93 NIL NIL)
  (|derive_TCC49-1| NIL 3401446930 3403269755
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   181 180 T NIL))
 (|derive_TCC50| 0
  (|derive_TCC50-3| NIL 3403270343 3403271391
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 3)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (AUTO-REWRITE "union" "member")
                  (("1" (ASSERT)
                    (("1" (REPLACE -6)
                      (("1" (EXPAND "var_names" 2) (("1" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST? -4)
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   5833 226 T NIL)
  (|derive_TCC50-2| NIL 3403270081 3403270172
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 165 161 NIL NIL)
  (|derive_TCC50-1| NIL 3401446930 3403269756
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   164 164 T NIL))
 (|derive_TCC51| 0
  (|derive_TCC51-1| NIL 3401446930 3403269064
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   158 157 T NIL))
 (|derive_TCC52| 0
  (|derive_TCC52-3| NIL 3403270345 3403271403
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   591 98 T NIL)
  (|derive_TCC52-2| NIL 3403270085 3403270173
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 90 89 NIL NIL)
  (|derive_TCC52-1| NIL 3401446930 3403269758
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   180 179 T NIL))
 (|derive_TCC53| 0
  (|derive_TCC53-1| NIL 3401446930 3403269067
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member") (("" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   155 154 T NIL))
 (|derive_TCC54| 0
  (|derive_TCC54-3| NIL 3403270347 3403271414
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   639 115 T NIL)
  (|derive_TCC54-2| NIL 3403270087 3403270174
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 72 72 NIL NIL)
  (|derive_TCC54-1| NIL 3401446930 3403269760
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   180 180 T NIL))
 (|derive_TCC55| 0
  (|derive_TCC55-1| NIL 3401446930 3403269070 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   113 112 NIL NIL))
 (|derive_TCC56| 0
  (|derive_TCC56-3| NIL 3403270350 3403271487
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Expr")
        (("" (EXPAND "wf_Body")
          (("" (SPLIT 2)
            (("1" (SKOSIMP*)
              (("1" (INST?)
                (("1" (ASSERT)
                  (("1" (REPLACE -7)
                    (("1" (EXPAND "var_names" 2)
                      (("1" (AUTO-REWRITE "union" "member" "add")
                        (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKOSIMP*)
              (("2" (INST? -4)
                (("2" (ASSERT)
                  (("2" (REPLACE -8)
                    (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   6984 156 T NIL)
  (|derive_TCC56-2| NIL 3403270090 3403270175
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 93 94 NIL NIL)
  (|derive_TCC56-1| NIL 3401446930 3403269761
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_Expr")
      (("" (TYPEPRED "b!1")
        (("" (EXPAND "wf_Body")
          (("" (SKOSIMP*)
            (("" (INST?)
              (("" (ASSERT)
                (("" (REPLACE -5)
                  (("" (EXPAND "var_names" 1)
                    (("" (AUTO-REWRITE "union" "member" "add")
                      (("" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|member| CONST-DECL "bool" |sets| NIL)
    (|add| CONST-DECL "(nonempty?)" |sets| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   96 96 T NIL))
 (|derive_TCC57| 0
  (|derive_TCC57-1| NIL 3401446930 3403269072 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   118 117 NIL NIL))
 (|derive_TCC58| 0
  (|derive_TCC58-3| NIL 3403270352 3403271522
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (EXPAND "var_names" 2)
                  (("1" (REPLACE -7) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (EXPAND "subterm" 2)
                  (("2" (REPLACE -8) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   2946 100 T NIL)
  (|derive_TCC58-2| NIL 3403270094 3403270176
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 106 105 NIL NIL)
  (|derive_TCC58-1| NIL 3401446930 3403269762
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -5)
                (("" (EXPAND "var_names" 1) (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   154 153 T NIL))
 (|derive_TCC59| 0
  (|derive_TCC59-1| NIL 3401446930 3403269074 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED NIL 45 45 NIL NIL))
 (|derive_TCC60| 0
  (|derive_TCC60-3| NIL 3403270355 3403271533
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member" "add")
                      (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   710 82 T NIL)
  (|derive_TCC60-2| NIL 3403270097 3403270177
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 75 75 NIL NIL)
  (|derive_TCC60-1| NIL 3401446930 3403269765
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   273 272 T NIL))
 (|derive_TCC61| 0
  (|derive_TCC61-1| NIL 3401446930 3403269078
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (EXPAND "var_names")
                (("" (EXPAND "emptyset") (("" (PROPAX) NIL NIL)) NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   159 158 T NIL))
 (|derive_TCC62| 0
  (|derive_TCC62-3| NIL 3403270358 3403271545
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member" "add")
                      (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   633 140 T NIL)
  (|derive_TCC62-2| NIL 3403270099 3403270178
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 114 112 NIL NIL)
  (|derive_TCC62-1| NIL 3401446930 3403269767
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   165 164 T NIL))
 (|derive_TCC63| 0
  (|derive_TCC63-3| NIL 3403270362 3403271599
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (SPLIT 3)
                (("1" (SKOSIMP*)
                  (("1" (EXPAND* "var_names" "member" "emptyset") NIL NIL))
                  NIL)
                 ("2" (SKOSIMP*)
                  (("2" (EXPAND "subterm") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|emptyset| CONST-DECL "set" |sets| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   4914 198 T NIL)
  (|derive_TCC63-2| NIL 3403270105 3403270179
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 166 166 NIL NIL)
  (|derive_TCC63-1| NIL 3401446930 3403269767
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_Body")
      (("" (SKOSIMP*)
        (("" (EXPAND "var_names")
          (("" (EXPAND "emptyset") (("" (PROPAX) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED ((|emptyset| CONST-DECL "set" |sets| NIL)) 34 34 T NIL))
 (|derive_TCC64| 0
  (|derive_TCC64-1| NIL 3401446930 3403269082 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   113 112 NIL NIL))
 (|derive_TCC65| 0
  (|derive_TCC65-3| NIL 3403270365 3403271612
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -6)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member" "add")
                      (("1" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -7)
                  (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   705 119 T NIL)
  (|derive_TCC65-2| NIL 3403270107 3403270180
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 94 93 NIL NIL)
  (|derive_TCC65-1| NIL 3401446930 3403269769
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -4)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add" "emptyset")
                    (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   183 183 T NIL))
 (|derive_TCC66| 0
  (|derive_TCC66-1| NIL 3401446930 3403269086
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -5)
                (("" (EXPAND "var_names" 1)
                  (("" (EXPAND "var_names" -6)
                    (("" (AUTO-REWRITE "union" "member")
                      (("" (ASSERT)
                        (("" (FLATTEN)
                          (("" (SPLIT -6)
                            (("1" (PROPAX) NIL NIL)
                             ("2" (EXPAND "var_names")
                              (("2" (EXPAND "emptyset")
                                (("2" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   177 175 T NIL))
 (|derive_TCC67| 0
  (|derive_TCC67-1| NIL 3401446930 3403269086 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   99 99 NIL NIL))
 (|derive_TCC68| 0
  (|derive_TCC68-3| NIL 3403270368 3403271694
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (EXPAND "var_names" 2)
                  (("1" (AUTO-REWRITE "union" "member" "add")
                    (("1" (ASSERT)
                      (("1" (REPLACE -7)
                        (("1" (ASSERT)
                          (("1" (EXPAND "var_names" -1)
                            (("1" (ASSERT)
                              (("1" (SPLIT -1)
                                (("1" (ASSERT) NIL NIL)
                                 ("2" (EXPAND* "var_names" "member" "emptyset")
                                  NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (EXPAND "subterm" 2)
                  (("2" (REPLACE -8)
                    (("2" (ASSERT)
                      (("2" (EXPAND "subterm" -2)
                        (("2" (SPLIT -2)
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "subterm" -1) (("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   7878 156 T NIL)
  (|derive_TCC68-2| NIL 3403270111 3403270181
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 48 48 NIL NIL)
  (|derive_TCC68-1| NIL 3401600202 3403269771
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_Body")
        (("" (SKOSIMP*)
          (("" (INST?)
            (("" (ASSERT)
              (("" (REPLACE -5)
                (("" (EXPAND "var_names" 1)
                  (("" (AUTO-REWRITE "union" "member" "add")
                    (("" (ASSERT)
                      (("" (EXPAND "var_names" -6)
                        (("" (ASSERT)
                          (("" (SPLIT -6)
                            (("1" (ASSERT) NIL NIL)
                             ("2" (EXPAND "var_names")
                              (("2" (EXPAND "emptyset")
                                (("2" (PROPAX) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL))
   163 160 T NIL))
 (|derive_TCC69| 0
  (|derive_TCC69-1| NIL 3401600202 3403269089 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED NIL 63 62 NIL NIL))
 (|derive_TCC70| 0
  (|derive_TCC70-3| NIL 3403270370 3403271753
   ("" (SKOSIMP*)
    (("" (TYPEPRED "b!1")
      (("" (EXPAND "wf_BoolExpr")
        (("" (EXPAND "wf_Body")
          (("" (SPLIT 2)
            (("1" (SKOSIMP*)
              (("1" (INST?)
                (("1" (ASSERT)
                  (("1" (REPLACE -7)
                    (("1" (EXPAND "var_names" 2) (("1" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (SKOSIMP*)
              (("2" (INST? -4)
                (("2" (ASSERT)
                  (("2" (REPLACE -8)
                    (("2" (EXPAND "subterm" 2) (("2" (PROPAX) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   5483 201 T NIL)
  (|derive_TCC70-2| NIL 3403270116 3403270182
   (";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SKOSIMP*)
    ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
      (TYPEPRED "b!1")
      ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3"
        (EXPAND "wf_Body")
        ((";;; Proof derive_TCC3-1 for formula Semantics.derive_TCC3" (SPLIT 2)
          (("1" (SKOSIMP*)
            (("1" (INST?)
              (("1" (ASSERT)
                (("1" (REPLACE -5)
                  (("1" (EXPAND "var_names" 2)
                    (("1" (AUTO-REWRITE "union" "member")
                      (("1" (ASSERT) NIL)))))))))))))
           ("2" (SKOSIMP*)
            (("2" (INST -4 "b1!1")
              (("2" (ASSERT)
                (("2" (REPLACE -6)
                  (("2" (EXPAND "subterm" 2)
                    (("2" (PROPAX) NIL))))))))))))))))))
    ";;; developed with SHOSTAK decision procedures")
   UNFINISHED NIL 171 170 NIL NIL)
  (|derive_TCC70-1| NIL 3401600202 3403269772
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_BoolExpr")
      (("" (TYPEPRED "b!1")
        (("" (EXPAND "wf_Body")
          (("" (SKOSIMP*)
            (("" (INST?)
              (("" (ASSERT)
                (("" (REPLACE -5)
                  (("" (EXPAND "var_names" 1) (("" (PROPAX) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   168 167 T NIL))
 (|run_FullProgram_TCC1| 0
  (|run_FullProgram_TCC1-1| NIL 3401446930 3403445441
   ("" (SKOSIMP*)
    (("" (REPLACE -1 :HIDE? T)
      (("" (EXPAND "wf_Body")
        (("" (SPLIT 1)
          (("1" (SKOSIMP*)
            (("1" (EXPAND "ext_declared_var_names")
              (("1"
                (AUTO-REWRITE "var_names"
                              "union"
                              "member"
                              "singleton"
                              "emptyset")
                (("1" (ASSERT) NIL NIL)) NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (AUTO-REWRITE "subterm") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|nonempty_singleton_finite| APPLICATION-JUDGEMENT "non_empty_finite_set"
     |finite_sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|singleton| CONST-DECL "(singleton?)" |sets| NIL)
    (|var_names| DEF-DECL "[Name -> boolean]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL))
   140880 760 T NIL)))
(|SemanticsProofs|
 (|derive_determ_step| 0
  (|derive_determ_step-2| NIL 3403534328 3403586626
   (""
    (LEMMA
     "wf_induction[[nat, nat], (LAMBDA(i, j : [nat, nat]) : proj_1(i) < proj_1(j) AND proj_2(i) < proj_2(j))]")
    (("1"
      (INST -1
       "LAMBDA(n : [nat, nat]) :  FORALL (p: FullProgram)(b: (wf_Body(program(p))))
                 (v1, v2: Val, sigma, sigma1, sigma2: FullState):
            derive(p)(b, sigma, v1, sigma1)(proj_1(n)) IMPLIES
             derive(p)(b, sigma, v2, sigma2)(proj_2(n)) IMPLIES
              v1 = v2 AND sigma1 = sigma2 AND proj_1(n) = proj_2(n)")
      (("1" (SPLIT -1)
        (("1" (SKOSIMP*)
          (("1" (INST -1 "(n1!1, n2!1)")
            (("1" (APPLY (REPEAT (INST?))) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (SKOSIMP*)
            (("2" (REWRITE "derive" -2)
              (("2" (REWRITE "derive" -3)
                (("2"
                  (APPLY
                   (BRANCH (SPLIT -2)
                    ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                  (("2" (LIFT-IF)
                    (("2"
                      (APPLY
                       (BRANCH (SPLIT -1)
                        ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                      (("2"
                        (APPLY
                         (BRANCH (SPLIT -1)
                          ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                        (("1"
                          (APPLY
                           (THEN (SKOSIMP*) (COPY -6) (INST -7 "(m1!1, m1!2)")
                            (INST -1 "(m2!1, m2!2)") (ASSERT)
                            (APPLY (REPEAT (INST? -7 :WHERE (-4 -9)))) (ASSERT)
                            (FLATTEN) (REPLACE -7) (REPLACE -8) (REPLACE -9)
                            (APPLY (REPEAT (INST? -1 :WHERE (-5 -12))))
                            (ASSERT) (FLATTEN) (REPLACE -1) (REPLACE -2)
                            (REPLACE -3) (ASSERT)))
                          (("1"
                            (EXPAND* "check_for_exception_final"
                             "check_for_exception")
                            (("1"
                              (APPLY
                               (BRANCH (SPLIT -8)
                                ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                  (ASSERT)))))
                              NIL NIL))
                            NIL))
                          NIL)
                         ("2"
                          (APPLY
                           (BRANCH (SPLIT -1)
                            ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                          (("2"
                            (APPLY
                             (BRANCH (SPLIT -1)
                              ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                            (("2"
                              (APPLY
                               (BRANCH (SPLIT -1)
                                ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                  (ASSERT)))))
                              (("2"
                                (APPLY
                                 (BRANCH (SPLIT -1)
                                  ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                    (ASSERT)))))
                                (("1"
                                  (APPLY
                                   (THEN (SKOSIMP*)
                                    (INST -5
                                     "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                    (ASSERT)
                                    (APPLY (REPEAT (INST? -5 :WHERE (-3 -7))))
                                    (ASSERT) (FLATTEN) (REPLACE -5)
                                    (REPLACE -6) (REPLACE -7) (ASSERT)))
                                  (("1"
                                    (EXPAND* "check_for_exception_final"
                                     "check_for_exception")
                                    (("1"
                                      (APPLY
                                       (BRANCH (SPLIT -4)
                                        ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                          (ASSERT)))))
                                      NIL NIL))
                                    NIL))
                                  NIL)
                                 ("2"
                                  (APPLY
                                   (BRANCH (SPLIT -1)
                                    ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                      (ASSERT)))))
                                  (("1"
                                    (APPLY
                                     (THEN (SKOSIMP*) (COPY -6)
                                      (INST -7 "(m1!1, m1!2)")
                                      (INST -1 "(m2!1, m2!2)") (ASSERT)
                                      (APPLY
                                       (REPEAT (INST? -7 :WHERE (-4 -9))))
                                      (ASSERT) (FLATTEN) (REPLACE -7)
                                      (REPLACE -8) (REPLACE -9)
                                      (APPLY
                                       (REPEAT (INST? -1 :WHERE (-5 -12))))
                                      (ASSERT) (FLATTEN) (REPLACE -1)
                                      (REPLACE -2) (REPLACE -3) (ASSERT)))
                                    (("1"
                                      (EXPAND* "check_for_exception_final"
                                       "check_for_exception")
                                      (("1"
                                        (APPLY
                                         (BRANCH (SPLIT -8)
                                          ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                            (ASSERT)))))
                                        (("1" (REPLACE -3)
                                          (("1" (REPLACE -17)
                                            (("1" (PROPAX) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2"
                                    (APPLY
                                     (BRANCH (SPLIT -1)
                                      ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                        (ASSERT)))))
                                    (("1"
                                      (APPLY
                                       (THEN (SKOSIMP*) (COPY -6)
                                        (INST -7 "(m1!1, m1!2)")
                                        (INST -1 "(m2!1, m2!2)") (ASSERT)
                                        (APPLY
                                         (REPEAT (INST? -7 :WHERE (-4 -9))))
                                        (ASSERT) (FLATTEN) (REPLACE -7)
                                        (REPLACE -8) (REPLACE -9)
                                        (APPLY
                                         (REPEAT (INST? -1 :WHERE (-5 -12))))
                                        (ASSERT) (FLATTEN) (REPLACE -1)
                                        (REPLACE -2) (REPLACE -3) (ASSERT)))
                                      (("1"
                                        (EXPAND* "check_for_exception_final"
                                         "check_for_exception")
                                        (("1"
                                          (APPLY
                                           (BRANCH (SPLIT -8)
                                            ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                              (ASSERT)))))
                                          NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2"
                                      (APPLY
                                       (BRANCH (SPLIT -1)
                                        ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                          (ASSERT)))))
                                      (("2"
                                        (APPLY
                                         (BRANCH (SPLIT -1)
                                          ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                            (ASSERT)))))
                                        (("2"
                                          (APPLY
                                           (BRANCH (SPLIT -1)
                                            ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                              (ASSERT)))))
                                          (("2"
                                            (APPLY
                                             (BRANCH (SPLIT -1)
                                              ((THEN (FLATTEN) (ASSERT)
                                                (FLATTEN) (ASSERT)))))
                                            (("1"
                                              (APPLY
                                               (THEN (SKOSIMP*)
                                                (INST -5
                                                 "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                (ASSERT)
                                                (APPLY
                                                 (REPEAT
                                                  (INST? -5 :WHERE (-3 -7))))
                                                (ASSERT) (FLATTEN) (REPLACE -5)
                                                (REPLACE -6) (REPLACE -7)
                                                (ASSERT)))
                                              (("1" (LIFT-IF)
                                                (("1"
                                                  (APPLY
                                                   (BRANCH (SPLIT -4)
                                                    ((THEN (FLATTEN) (ASSERT)
                                                      (FLATTEN) (ASSERT)))))
                                                  NIL NIL))
                                                NIL))
                                              NIL)
                                             ("2"
                                              (APPLY
                                               (BRANCH (SPLIT -1)
                                                ((THEN (FLATTEN) (ASSERT)
                                                  (FLATTEN) (ASSERT)))))
                                              (("1"
                                                (APPLY
                                                 (THEN
                                                  (INST -4
                                                   "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                  (ASSERT)
                                                  (APPLY
                                                   (REPEAT
                                                    (INST? -4 :WHERE (-3 -6))))
                                                  (ASSERT) (FLATTEN)
                                                  (REPLACE -4) (REPLACE -5)
                                                  (REPLACE -6) (ASSERT)))
                                                NIL NIL)
                                               ("2"
                                                (APPLY
                                                 (BRANCH (SPLIT -1)
                                                  ((THEN (FLATTEN) (ASSERT)
                                                    (FLATTEN) (ASSERT)))))
                                                (("1"
                                                  (APPLY
                                                   (THEN (SKOSIMP*) (COPY -6)
                                                    (INST -7 "(m1!1, m1!2)")
                                                    (INST -1 "(m2!1, m2!2)")
                                                    (ASSERT)
                                                    (APPLY
                                                     (REPEAT
                                                      (INST? -7 :WHERE
                                                       (-4 -9))))
                                                    (ASSERT) (FLATTEN)
                                                    (REPLACE -7) (REPLACE -8)
                                                    (REPLACE -9)))
                                                  (("1"
                                                    (EXPAND
                                                     "check_for_exception")
                                                    (("1"
                                                      (APPLY
                                                       (BRANCH (SPLIT -5)
                                                        ((THEN (FLATTEN)
                                                          (ASSERT) (FLATTEN)
                                                          (ASSERT)))))
                                                      (("1" (LIFT-IF)
                                                        (("1"
                                                          (APPLY
                                                           (BRANCH (SPLIT -2)
                                                            ((THEN (FLATTEN)
                                                              (ASSERT)
                                                              (FLATTEN)
                                                              (ASSERT)))))
                                                          (("1"
                                                            (APPLY
                                                             (THEN
                                                              (REPEAT
                                                               (INST? -4 :WHERE
                                                                (-2 -14)))
                                                              (ASSERT)
                                                              (FLATTEN)
                                                              (ASSERT)))
                                                            NIL NIL)
                                                           ("2"
                                                            (APPLY
                                                             (THEN
                                                              (REPEAT
                                                               (INST? -3 :WHERE
                                                                (-1 -13)))
                                                              (ASSERT)
                                                              (FLATTEN)
                                                              (ASSERT)))
                                                            NIL NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2"
                                                  (APPLY
                                                   (BRANCH (SPLIT -1)
                                                    ((THEN (FLATTEN) (ASSERT)
                                                      (FLATTEN) (ASSERT)))))
                                                  (("1" (SKOSIMP*)
                                                    (("1" (COPY -15)
                                                      (("1" (COPY -16)
                                                        (("1"
                                                          (INST -1
                                                           "(m1!1, m1!2)")
                                                          (("1"
                                                            (INST -2
                                                             "(m2!1, m2!2)")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (APPLY
                                                                 (THEN
                                                                  (REPEAT
                                                                   (INST? -1
                                                                    :WHERE
                                                                    (-5 -19)))
                                                                  (ASSERT)
                                                                  (FLATTEN)
                                                                  (ASSERT)
                                                                  (REPLACE -1)
                                                                  (REPLACE
                                                                   -2)))
                                                                (("1"
                                                                  (APPLY
                                                                   (THEN
                                                                    (REPEAT
                                                                     (INST? -4
                                                                      :WHERE
                                                                      (-8
                                                                       -22)))
                                                                    (ASSERT)
                                                                    (FLATTEN)
                                                                    (ASSERT)
                                                                    (REPLACE
                                                                     -4)
                                                                    (REPLACE
                                                                     -5)))
                                                                  (("1"
                                                                    (CASE-REPLACE
                                                                     "tau3!1 = tau3!2"
                                                                     :HIDE? T)
                                                                    (("1"
                                                                      (APPLY
                                                                       (BRANCH
                                                                        (SPLIT
                                                                         -12)
                                                                        ((THEN
                                                                          (FLATTEN)
                                                                          (ASSERT)
                                                                          (FLATTEN)
                                                                          (ASSERT)))))
                                                                      (("1"
                                                                        (REPLACE
                                                                         -2
                                                                         :DIR RL)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -27)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "on_method_entry_deterministic")
                                                                            (("1"
                                                                              (INST
                                                                               -1
                                                                               "p!1"
                                                                               "md!1"
                                                                               "a!2"
                                                                               "tau3!2"
                                                                               "tau4!1"
                                                                               "tau4!2"
                                                                               "m3!1"
                                                                               "m3!2"
                                                                               _
                                                                               _)
                                                                              (("1"
                                                                                (APPLY
                                                                                 (THEN
                                                                                  (REPEAT
                                                                                   (INST?
                                                                                    -1))
                                                                                  (ASSERT)))
                                                                                (("1"
                                                                                  (APPLY
                                                                                   (BRANCH
                                                                                    (SPLIT
                                                                                     -1)
                                                                                    ((THEN
                                                                                      (FLATTEN)
                                                                                      (ASSERT)
                                                                                      (FLATTEN)
                                                                                      (ASSERT)))))
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1)
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -2)
                                                                                      (("1"
                                                                                        (CASE-REPLACE
                                                                                         "tau5!1 = tau5!2")
                                                                                        (("1"
                                                                                          (COPY
                                                                                           -25)
                                                                                          (("1"
                                                                                            (INST
                                                                                             -1
                                                                                             "(m4!1, m4!2)")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (APPLY
                                                                                                 (THEN
                                                                                                  (REPEAT
                                                                                                   (INST?
                                                                                                    -1
                                                                                                    :WHERE
                                                                                                    (-21
                                                                                                     -35)))
                                                                                                  (ASSERT)
                                                                                                  (FLATTEN)
                                                                                                  (ASSERT)
                                                                                                  (REPLACE
                                                                                                   -1)
                                                                                                  (REPLACE
                                                                                                   -2)))
                                                                                                (("1"
                                                                                                  (CASE-REPLACE
                                                                                                   "tau7!1 = tau7!2 AND m5!1 = m5!2 AND w!1 = w!2")
                                                                                                  (("1"
                                                                                                    (FLATTEN)
                                                                                                    (("1"
                                                                                                      (REPLACE
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (REPLACE
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (APPLY
                                                                                                               (BRANCH
                                                                                                                (SPLIT
                                                                                                                 -41)
                                                                                                                ((THEN
                                                                                                                  (FLATTEN)
                                                                                                                  (ASSERT)
                                                                                                                  (FLATTEN)
                                                                                                                  (ASSERT)))))
                                                                                                              (("1"
                                                                                                                (LEMMA
                                                                                                                 "on_method_exit_normal_deterministic")
                                                                                                                (("1"
                                                                                                                  (INST
                                                                                                                   -1
                                                                                                                   "p!1"
                                                                                                                   "md!1"
                                                                                                                   "a!2"
                                                                                                                   "tau7!2"
                                                                                                                   "tau8!1"
                                                                                                                   "tau8!2"
                                                                                                                   "m6!1"
                                                                                                                   "m6!2"
                                                                                                                   _
                                                                                                                   _)
                                                                                                                  (("1"
                                                                                                                    (APPLY
                                                                                                                     (THEN
                                                                                                                      (REPEAT
                                                                                                                       (INST?
                                                                                                                        -1))
                                                                                                                      (ASSERT)))
                                                                                                                    (("1"
                                                                                                                      (APPLY
                                                                                                                       (BRANCH
                                                                                                                        (SPLIT
                                                                                                                         -1)
                                                                                                                        ((THEN
                                                                                                                          (FLATTEN)
                                                                                                                          (ASSERT)
                                                                                                                          (FLATTEN)
                                                                                                                          (ASSERT)))))
                                                                                                                      (("1"
                                                                                                                        (APPLY
                                                                                                                         (BRANCH
                                                                                                                          (SPLIT
                                                                                                                           -45)
                                                                                                                          ((THEN
                                                                                                                            (FLATTEN)
                                                                                                                            (ASSERT)
                                                                                                                            (FLATTEN)
                                                                                                                            (ASSERT)))))
                                                                                                                        NIL
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (SKOSIMP*)
                                                                                                                        (("2"
                                                                                                                          (INST
                                                                                                                           -34
                                                                                                                           "(m1!3, m2!3)")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (APPLY
                                                                                                                               (THEN
                                                                                                                                (REPEAT
                                                                                                                                 (INST?
                                                                                                                                  -34
                                                                                                                                  :WHERE
                                                                                                                                  (-1
                                                                                                                                   -2)))
                                                                                                                                (ASSERT)
                                                                                                                                (FLATTEN)
                                                                                                                                (ASSERT)
                                                                                                                                (FLATTEN)))
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (LEMMA
                                                                                                                 "on_method_exit_exceptional_deterministic")
                                                                                                                (("2"
                                                                                                                  (INST
                                                                                                                   -1
                                                                                                                   "p!1"
                                                                                                                   "md!1"
                                                                                                                   "a!2"
                                                                                                                   "tau7!2"
                                                                                                                   "tau8!1"
                                                                                                                   "tau8!2"
                                                                                                                   "m6!1"
                                                                                                                   "m6!2"
                                                                                                                   _
                                                                                                                   _)
                                                                                                                  (("2"
                                                                                                                    (APPLY
                                                                                                                     (THEN
                                                                                                                      (REPEAT
                                                                                                                       (INST?
                                                                                                                        -1))
                                                                                                                      (ASSERT)))
                                                                                                                    (("2"
                                                                                                                      (APPLY
                                                                                                                       (BRANCH
                                                                                                                        (SPLIT
                                                                                                                         -1)
                                                                                                                        ((THEN
                                                                                                                          (FLATTEN)
                                                                                                                          (ASSERT)
                                                                                                                          (FLATTEN)
                                                                                                                          (ASSERT)))))
                                                                                                                      (("1"
                                                                                                                        (APPLY
                                                                                                                         (BRANCH
                                                                                                                          (SPLIT
                                                                                                                           -44)
                                                                                                                          ((THEN
                                                                                                                            (FLATTEN)
                                                                                                                            (ASSERT)
                                                                                                                            (FLATTEN)
                                                                                                                            (ASSERT)))))
                                                                                                                        NIL
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (SKOSIMP*)
                                                                                                                        (("2"
                                                                                                                          (INST
                                                                                                                           -33
                                                                                                                           "(m1!3, m2!3)")
                                                                                                                          (("2"
                                                                                                                            (ASSERT)
                                                                                                                            (("2"
                                                                                                                              (APPLY
                                                                                                                               (THEN
                                                                                                                                (REPEAT
                                                                                                                                 (INST?
                                                                                                                                  -33
                                                                                                                                  :WHERE
                                                                                                                                  (-1
                                                                                                                                   -2)))
                                                                                                                                (ASSERT)
                                                                                                                                (FLATTEN)
                                                                                                                                (ASSERT)
                                                                                                                                (FLATTEN)))
                                                                                                                              NIL
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (APPLY
                                                                                                     (BRANCH
                                                                                                      (SPLIT
                                                                                                       -37)
                                                                                                      ((THEN
                                                                                                        (FLATTEN)
                                                                                                        (ASSERT)
                                                                                                        (FLATTEN)
                                                                                                        (ASSERT)))))
                                                                                                    (("2"
                                                                                                      (INST
                                                                                                       -28
                                                                                                       "(m5!1, m5!2)")
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (APPLY
                                                                                                           (THEN
                                                                                                            (REPEAT
                                                                                                             (INST?
                                                                                                              -28
                                                                                                              :WHERE
                                                                                                              (-1
                                                                                                               -24)))
                                                                                                            (ASSERT)
                                                                                                            (FLATTEN)
                                                                                                            (ASSERT)
                                                                                                            (FLATTEN)))
                                                                                                          NIL
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (EXPAND
                                                                                           "update_stack")
                                                                                          (("2"
                                                                                            (LIFT-IF)
                                                                                            (("2"
                                                                                              (APPLY
                                                                                               (BRANCH
                                                                                                (SPLIT
                                                                                                 -32)
                                                                                                ((THEN
                                                                                                  (FLATTEN)
                                                                                                  (ASSERT)
                                                                                                  (FLATTEN)
                                                                                                  (ASSERT)))))
                                                                                              NIL
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (SKOSIMP*)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -24
                                                                                       "(m1!3, m2!3)")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (APPLY
                                                                                           (THEN
                                                                                            (REPEAT
                                                                                             (INST?
                                                                                              -24
                                                                                              :WHERE
                                                                                              (-1
                                                                                               -2)))
                                                                                            (ASSERT)
                                                                                            (FLATTEN)
                                                                                            (ASSERT)
                                                                                            (FLATTEN)))
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (LIFT-IF)
                                                                      (("2"
                                                                        (APPLY
                                                                         (BRANCH
                                                                          (SPLIT
                                                                           -11)
                                                                          ((THEN
                                                                            (FLATTEN)
                                                                            (ASSERT)
                                                                            (FLATTEN)
                                                                            (ASSERT)))))
                                                                        (("2"
                                                                          (APPLY
                                                                           (BRANCH
                                                                            (SPLIT
                                                                             -25)
                                                                            ((THEN
                                                                              (FLATTEN)
                                                                              (ASSERT)
                                                                              (FLATTEN)
                                                                              (ASSERT)))))
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (APPLY
                                                     (BRANCH (SPLIT -1)
                                                      ((THEN (FLATTEN) (ASSERT)
                                                        (FLATTEN) (ASSERT)))))
                                                    (("1"
                                                      (APPLY
                                                       (THEN
                                                        (INST -4
                                                         "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                        (ASSERT)
                                                        (APPLY
                                                         (REPEAT
                                                          (INST? -4 :WHERE
                                                           (-3 -6))))
                                                        (ASSERT) (FLATTEN)
                                                        (REPLACE -4)
                                                        (REPLACE -5)
                                                        (REPLACE -6) (ASSERT)))
                                                      NIL NIL)
                                                     ("2"
                                                      (APPLY
                                                       (BRANCH (SPLIT -1)
                                                        ((THEN (FLATTEN)
                                                          (ASSERT) (FLATTEN)
                                                          (ASSERT)))))
                                                      (("1"
                                                        (APPLY
                                                         (THEN
                                                          (INST -4
                                                           "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                          (ASSERT)
                                                          (APPLY
                                                           (REPEAT
                                                            (INST? -4 :WHERE
                                                             (-3 -6))))
                                                          (ASSERT) (FLATTEN)
                                                          (REPLACE -4)
                                                          (REPLACE -5)
                                                          (REPLACE -6)
                                                          (ASSERT)))
                                                        NIL NIL)
                                                       ("2"
                                                        (APPLY
                                                         (BRANCH (SPLIT -1)
                                                          ((THEN (FLATTEN)
                                                            (ASSERT) (FLATTEN)
                                                            (ASSERT)))))
                                                        (("1"
                                                          (LEMMA
                                                           "execute_CaseJML_deterministic")
                                                          (("1"
                                                            (INST -1 "p!1"
                                                             "branches(b!1)"
                                                             "sigma!1"
                                                             "sigma1!1"
                                                             "sigma2!1"
                                                             "PROJ_1(x!1)"
                                                             "PROJ_2(x!1)" _ _)
                                                            (("1"
                                                              (APPLY
                                                               (REPEAT
                                                                (INST? -1)))
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (APPLY
                                                                   (BRANCH
                                                                    (SPLIT -1)
                                                                    ((THEN
                                                                      (FLATTEN)
                                                                      (ASSERT)
                                                                      (FLATTEN)
                                                                      (ASSERT)))))
                                                                  (("1"
                                                                    (SKOSIMP*)
                                                                    (("1"
                                                                      (INST -7
                                                                       "(m1!1, m2!1)")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (APPLY
                                                                           (THEN
                                                                            (REPEAT
                                                                             (INST?
                                                                              -7
                                                                              :WHERE
                                                                              (-1
                                                                               -2)))
                                                                            (ASSERT)
                                                                            (FLATTEN)
                                                                            (ASSERT)))
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (APPLY
                                                           (BRANCH (SPLIT -1)
                                                            ((THEN (FLATTEN)
                                                              (ASSERT)
                                                              (FLATTEN)
                                                              (ASSERT)))))
                                                          (("1"
                                                            (APPLY
                                                             (THEN (SKOSIMP*)
                                                              (COPY -7)
                                                              (INST -8
                                                               "(m1!1, m1!2)")
                                                              (INST -1
                                                               "(m2!1, m2!2)")
                                                              (ASSERT)
                                                              (APPLY
                                                               (REPEAT
                                                                (INST? -8
                                                                 :WHERE
                                                                 (-5 -11))))
                                                              (ASSERT)
                                                              (FLATTEN)
                                                              (REPLACE -8)
                                                              (REPLACE -9)
                                                              (REPLACE -10)))
                                                            (("1"
                                                              (EXPAND
                                                               "check_for_exception")
                                                              (("1"
                                                                (APPLY
                                                                 (BRANCH
                                                                  (SPLIT -6)
                                                                  ((THEN
                                                                    (FLATTEN)
                                                                    (ASSERT)
                                                                    (FLATTEN)
                                                                    (ASSERT)))))
                                                                (("1" (LIFT-IF)
                                                                  (("1"
                                                                    (APPLY
                                                                     (BRANCH
                                                                      (SPLIT
                                                                       -2)
                                                                      ((THEN
                                                                        (FLATTEN)
                                                                        (ASSERT)
                                                                        (FLATTEN)
                                                                        (ASSERT)))))
                                                                    (("1"
                                                                      (APPLY
                                                                       (THEN
                                                                        (REPEAT
                                                                         (INST?
                                                                          -4
                                                                          :WHERE
                                                                          (-2
                                                                           -16)))
                                                                        (ASSERT)
                                                                        (FLATTEN)
                                                                        (ASSERT)))
                                                                      NIL NIL)
                                                                     ("2"
                                                                      (APPLY
                                                                       (THEN
                                                                        (REPEAT
                                                                         (INST?
                                                                          -3
                                                                          :WHERE
                                                                          (-1
                                                                           -15)))
                                                                        (ASSERT)
                                                                        (FLATTEN)
                                                                        (ASSERT)))
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL)
                                                           ("2"
                                                            (APPLY
                                                             (BRANCH (SPLIT -1)
                                                              ((THEN (FLATTEN)
                                                                (ASSERT)
                                                                (FLATTEN)
                                                                (ASSERT)))))
                                                            (("1"
                                                              (APPLY
                                                               (THEN (SKOSIMP*)
                                                                (COPY -6)
                                                                (INST -7
                                                                 "(m1!1, m1!2)")
                                                                (INST -1
                                                                 "(m2!1, m2!2)")
                                                                (ASSERT)
                                                                (APPLY
                                                                 (REPEAT
                                                                  (INST? -7
                                                                   :WHERE
                                                                   (-5 -10))))
                                                                (ASSERT)
                                                                (FLATTEN)
                                                                (REPLACE -7)
                                                                (REPLACE -8)
                                                                (REPLACE -9)))
                                                              (("1"
                                                                (APPLY
                                                                 (THEN
                                                                  (REPEAT
                                                                   (INST? -1
                                                                    :WHERE
                                                                    (-6 -12)))
                                                                  (ASSERT)
                                                                  (FLATTEN)
                                                                  (ASSERT)))
                                                                NIL NIL))
                                                              NIL)
                                                             ("2"
                                                              (APPLY
                                                               (BRANCH
                                                                (SPLIT -1)
                                                                ((THEN
                                                                  (FLATTEN)
                                                                  (ASSERT)
                                                                  (FLATTEN)
                                                                  (ASSERT)))))
                                                              (("1"
                                                                (LEMMA
                                                                 "execute_set_deterministic")
                                                                (("1"
                                                                  (INST -1
                                                                   "p!1"
                                                                   "target(b!1)"
                                                                   "source(b!1)"
                                                                   "sigma!1"
                                                                   "sigma1!1"
                                                                   "sigma2!1"
                                                                   "PROJ_1(x!1)"
                                                                   "PROJ_2(x!1)"
                                                                   _ _)
                                                                  (("1"
                                                                    (APPLY
                                                                     (REPEAT
                                                                      (INST?
                                                                       -1)))
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (APPLY
                                                                         (BRANCH
                                                                          (SPLIT
                                                                           -1)
                                                                          ((THEN
                                                                            (FLATTEN)
                                                                            (ASSERT)
                                                                            (FLATTEN)
                                                                            (ASSERT)))))
                                                                        (("1"
                                                                          (SKOSIMP*)
                                                                          (("1"
                                                                            (INST
                                                                             -7
                                                                             "(m1!1, m2!1)")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (APPLY
                                                                                 (THEN
                                                                                  (REPEAT
                                                                                   (INST?
                                                                                    -7
                                                                                    :WHERE
                                                                                    (-1
                                                                                     -2)))
                                                                                  (ASSERT)
                                                                                  (FLATTEN)
                                                                                  (ASSERT)))
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (APPLY
                                                                 (BRANCH
                                                                  (SPLIT -1)
                                                                  ((THEN
                                                                    (FLATTEN)
                                                                    (ASSERT)
                                                                    (FLATTEN)
                                                                    (ASSERT)))))
                                                                (("2"
                                                                  (APPLY
                                                                   (BRANCH
                                                                    (SPLIT -1)
                                                                    ((THEN
                                                                      (FLATTEN)
                                                                      (ASSERT)
                                                                      (FLATTEN)
                                                                      (ASSERT)))))
                                                                  (("1"
                                                                    (APPLY
                                                                     (THEN
                                                                      (SKOSIMP*)
                                                                      (INST -5
                                                                       "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                      (ASSERT)
                                                                      (APPLY
                                                                       (REPEAT
                                                                        (INST?
                                                                         -5
                                                                         :WHERE
                                                                         (-4
                                                                          -8))))
                                                                      (ASSERT)
                                                                      (FLATTEN)
                                                                      (REPLACE
                                                                       -5)
                                                                      (REPLACE
                                                                       -6)
                                                                      (REPLACE
                                                                       -7)
                                                                      (ASSERT)))
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (APPLY
                                                                     (BRANCH
                                                                      (SPLIT
                                                                       -1)
                                                                      ((THEN
                                                                        (FLATTEN)
                                                                        (ASSERT)
                                                                        (FLATTEN)
                                                                        (ASSERT)))))
                                                                    (("2"
                                                                      (APPLY
                                                                       (BRANCH
                                                                        (SPLIT
                                                                         -1)
                                                                        ((THEN
                                                                          (FLATTEN)
                                                                          (ASSERT)
                                                                          (FLATTEN)
                                                                          (ASSERT)))))
                                                                      (("1"
                                                                        (SKOSIMP*)
                                                                        (("1"
                                                                          (COPY
                                                                           -8)
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "(m1!1, m1!2)")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (APPLY
                                                                                 (THEN
                                                                                  (REPEAT
                                                                                   (INST?
                                                                                    -1
                                                                                    :WHERE
                                                                                    (-5
                                                                                     -12)))
                                                                                  (ASSERT)
                                                                                  (FLATTEN)
                                                                                  (ASSERT)))
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -1)
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -2)
                                                                                    (("1"
                                                                                      (LIFT-IF)
                                                                                      (("1"
                                                                                        (APPLY
                                                                                         (BRANCH
                                                                                          (SPLIT
                                                                                           -7)
                                                                                          ((THEN
                                                                                            (FLATTEN)
                                                                                            (ASSERT)
                                                                                            (FLATTEN)
                                                                                            (ASSERT)))))
                                                                                        (("1"
                                                                                          (COPY
                                                                                           -11)
                                                                                          (("1"
                                                                                            (INST
                                                                                             -1
                                                                                             "(m2!1, m2!2)")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (APPLY
                                                                                                 (THEN
                                                                                                  (REPEAT
                                                                                                   (INST?
                                                                                                    -1
                                                                                                    :WHERE
                                                                                                    (-3
                                                                                                     -16)))
                                                                                                  (ASSERT)
                                                                                                  (FLATTEN)
                                                                                                  (ASSERT)
                                                                                                  (REPLACE
                                                                                                   -1)
                                                                                                  (REPLACE
                                                                                                   -2)))
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -13
                                                                                                   "(m3!1, m3!2)")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (INST?
                                                                                                       -13)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -13
                                                                                                         "Unit"
                                                                                                         "tau3!1")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (FLATTEN)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (REPLACE
                                                                                                                 -13)
                                                                                                                (("1"
                                                                                                                  (APPLY
                                                                                                                   (BRANCH
                                                                                                                    (SPLIT
                                                                                                                     -12)
                                                                                                                    ((THEN
                                                                                                                      (FLATTEN)
                                                                                                                      (ASSERT)
                                                                                                                      (FLATTEN)
                                                                                                                      (ASSERT)))))
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (EXPAND
                                                                                           "derive"
                                                                                           (-1
                                                                                            -14))
                                                                                          (("2"
                                                                                            (APPLY
                                                                                             (BRANCH
                                                                                              (SPLIT
                                                                                               -1)
                                                                                              ((THEN
                                                                                                (FLATTEN)
                                                                                                (ASSERT)
                                                                                                (FLATTEN)
                                                                                                (ASSERT)))))
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -1)
                                                                                              (("2"
                                                                                                (REPLACE
                                                                                                 -16)
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -12
                                                                                                   "(m3!1, m3!2)")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    (("2"
                                                                                                      (APPLY
                                                                                                       (THEN
                                                                                                        (REPEAT
                                                                                                         (INST?
                                                                                                          -12
                                                                                                          :WHERE
                                                                                                          (-10
                                                                                                           -19)))
                                                                                                        (ASSERT)
                                                                                                        (FLATTEN)
                                                                                                        (ASSERT)
                                                                                                        (REPLACE
                                                                                                         -12)
                                                                                                        (REPLACE
                                                                                                         -13)))
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (APPLY
                                                                         (BRANCH
                                                                          (SPLIT
                                                                           -1)
                                                                          ((THEN
                                                                            (FLATTEN)
                                                                            (ASSERT)
                                                                            (FLATTEN)
                                                                            (ASSERT)))))
                                                                        (("1"
                                                                          (APPLY
                                                                           (THEN
                                                                            (SKOSIMP*)
                                                                            (INST
                                                                             -5
                                                                             "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                            (ASSERT)
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -5
                                                                               :WHERE
                                                                               (-4
                                                                                -8))))
                                                                            (ASSERT)
                                                                            (FLATTEN)
                                                                            (REPLACE
                                                                             -5)
                                                                            (REPLACE
                                                                             -6)
                                                                            (REPLACE
                                                                             -7)
                                                                            (ASSERT)))
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (LEMMA
                                                                           "execute_assert_deterministic")
                                                                          (("2"
                                                                            (INST
                                                                             -1
                                                                             "p!1"
                                                                             "expr(b!1)"
                                                                             "sigma!1"
                                                                             "sigma1!1"
                                                                             "sigma2!1"
                                                                             "PROJ_1(x!1)"
                                                                             "PROJ_2(x!1)"
                                                                             _
                                                                             _)
                                                                            (("2"
                                                                              (APPLY
                                                                               (REPEAT
                                                                                (INST?
                                                                                 -1)))
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (APPLY
                                                                                   (BRANCH
                                                                                    (SPLIT
                                                                                     -1)
                                                                                    ((THEN
                                                                                      (FLATTEN)
                                                                                      (ASSERT)
                                                                                      (FLATTEN)
                                                                                      (ASSERT)))))
                                                                                  (("2"
                                                                                    (SKOSIMP*)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -6
                                                                                       "(m1!1, m2!1)")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (APPLY
                                                                                           (THEN
                                                                                            (REPEAT
                                                                                             (INST?
                                                                                              -6
                                                                                              :WHERE
                                                                                              (-1
                                                                                               -2)))
                                                                                            (ASSERT)
                                                                                            (FLATTEN)
                                                                                            (ASSERT)))
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (LEMMA "well_founded?_product")
      (("2" (INST -1 "LAMBDA(i, j : nat) : i < j" "LAMBDA(i, j : nat) : i < j")
        (("2" (ASSERT) (("2" (USE "wf_nat") (("2" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_induction| FORMULA-DECL NIL |wf_induction| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|check_for_exception| CONST-DECL "bool" |Semantics| NIL)
    (|check_for_exception_final| CONST-DECL "bool" |Semantics| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|b1| ADT-ACCESSOR-DECL "[D: {X: Body | Eq?(X) OR Conj?(X) OR Plus?(X)} ->
   {X: Body |
            IF Plus?(D) THEN Int?(X) OR Plus?(X) OR NumVarEval?(X)
            ELSE IF Conj?(D)
                   THEN     TT?(X) OR FF?(X) OR Neg?(X) OR Conj?(X)
                         OR Eq?(X) OR BoolVarEval?(X)
                 ELSE     Assign?(X) OR BExpr?(X) OR CondExpr?(X)
                       OR MethodCall?(X) OR NExpr?(X) OR RExpr?(X)
                 ENDIF
            ENDIF}]"
     |Body_adt| NIL)
    (|NumVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Int?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)
    (|Plus?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|b2| ADT-ACCESSOR-DECL "[D: {X: Body | Eq?(X) OR Conj?(X) OR Plus?(X)} ->
   {X: Body |
            IF Plus?(D) THEN Int?(X) OR Plus?(X) OR NumVarEval?(X)
            ELSE IF Conj?(D)
                   THEN     TT?(X) OR FF?(X) OR Neg?(X) OR Conj?(X)
                         OR Eq?(X) OR BoolVarEval?(X)
                 ELSE     Assign?(X) OR BExpr?(X) OR CondExpr?(X)
                       OR MethodCall?(X) OR NExpr?(X) OR RExpr?(X)
                 ENDIF
            ENDIF}]"
     |Body_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|b| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | BExpr?(X) OR Neg?(X)} -> BoolExpr]" |Body_adt| NIL)
    (|source| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Expr]" |Body_adt| NIL)
    (|else_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (|then_expr| ADT-ACCESSOR-DECL "[(CondExpr?) -> Expr]" |Body_adt| NIL)
    (|test| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | While?(X) OR IfThenElse?(X) OR CondExpr?(X)} -> BoolExpr]"
     |Body_adt| NIL)
    (|n| ADT-ACCESSOR-DECL "[(NExpr?) -> NumExpr]" |Body_adt| NIL)
    (|NumExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|branches| ADT-ACCESSOR-DECL "[(CaseJML?) -> list[[BoolExpr, Stmt]]]"
     |Body_adt| NIL)
    (|execute_CaseJML_deterministic| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|s2| ADT-ACCESSOR-DECL "[(Sequence?) -> Stmt]" |Body_adt| NIL)
    (|s1| ADT-ACCESSOR-DECL "[(Sequence?) -> Stmt]" |Body_adt| NIL)
    (|Skip| ADT-CONSTRUCTOR-DECL "(Skip?)" |Body_adt| NIL)
    (|body| ADT-ACCESSOR-DECL "[(While?) -> Stmt]" |Body_adt| NIL)
    (|While| ADT-CONSTRUCTOR-DECL "[[BoolExpr, Stmt] -> (While?)]" |Body_adt|
     NIL)
    (|IfThenElse| ADT-CONSTRUCTOR-DECL
     "[[BoolExpr, Stmt, Stmt] -> (IfThenElse?)]" |Body_adt| NIL)
    (|execute_assert_deterministic| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|try| ADT-ACCESSOR-DECL "[(TryCatch?) -> Stmt]" |Body_adt| NIL)
    (|catch| CONST-DECL "PState" |State| NIL)
    (|catch| ADT-ACCESSOR-DECL "[(TryCatch?) -> Stmt]" |Body_adt| NIL)
    (|finally| ADT-ACCESSOR-DECL "[(TryCatch?) -> Stmt]" |Body_adt| NIL)
    (|expr| ADT-ACCESSOR-DECL "[D: {X: Body | Assert?(X) OR StmtExpr?(X)} ->
   {X: Body |
            IF StmtExpr?(D)
              THEN     Assign?(X) OR BExpr?(X) OR CondExpr?(X)
                    OR MethodCall?(X) OR NExpr?(X) OR RExpr?(X)
            ELSE     TT?(X) OR FF?(X) OR Neg?(X) OR Conj?(X) OR Eq?(X)
                  OR BoolVarEval?(X)
            ENDIF}]"
     |Body_adt| NIL)
    (|execute_set_deterministic| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|target| SHARED-ADT-ACCESSOR-DECL
     "[{X: Body | Set?(X) OR Assign?(X)} -> Name]" |Body_adt| NIL)
    (|then_stmt| ADT-ACCESSOR-DECL "[(IfThenElse?) -> Stmt]" |Body_adt| NIL)
    (|else_stmt| ADT-ACCESSOR-DECL "[(IfThenElse?) -> Stmt]" |Body_adt| NIL)
    (|Null?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RefVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RefExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|r| ADT-ACCESSOR-DECL "[(RExpr?) -> RefExpr]" |Body_adt| NIL)
    (|tgt| ADT-ACCESSOR-DECL "[(MethodCall?) -> Expr]" |Body_adt| NIL)
    (|on_method_entry_deterministic| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|on_method_exit_exceptional_deterministic| FORMULA-DECL NIL
     |SemanticsProofs| NIL)
    (|on_method_exit_normal_deterministic| FORMULA-DECL NIL |SemanticsProofs|
     NIL)
    (|update_stack| CONST-DECL "FullState" |Semantics| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|arg| ADT-ACCESSOR-DECL "[(MethodCall?) -> Expr]" |Body_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|derive| DEF-DECL "bool" |Semantics| NIL)
    (|on_method_exit_exceptional| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|on_method_exit_normal| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|on_method_entry| FORMAL-CONST-DECL "(on_method_event_type)"
     |SemanticsProofs| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|execute_CaseJML| FORMAL-CONST-DECL "(execute_CaseJML_type)"
     |SemanticsProofs| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_assert| FORMAL-CONST-DECL "(execute_assert_type)"
     |SemanticsProofs| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_set| FORMAL-CONST-DECL "(execute_set_type)" |SemanticsProofs|
     NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|update_PState| FORMAL-CONST-DECL "(update_PState_type)" |SemanticsProofs|
     NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|lookup| FORMAL-CONST-DECL "[Name, FullState -> Val]" |SemanticsProofs|
     NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsProofs| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |SemanticsProofs|
     NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|well_founded?_product| FORMULA-DECL NIL WF NIL))
   93224 16102 T NIL)
  (|derive_determ_step-1| NIL 3403506316 3403534307
   (""
    (LEMMA
     "wf_induction[[nat, nat], (LAMBDA(i, j : [nat, nat]) : proj_1(i) < proj_1(j) AND proj_2(i) < proj_2(j))]")
    (("1"
      (INST -1
       "LAMBDA(n : [nat, nat]) :  FORALL (p: FullProgram)(b: (wf_Body(program(p))))
             (v1, v2: Val, sigma, sigma1, sigma2: FullState):
        derive(p)(b, sigma, v1, sigma1)(proj_1(n)) IMPLIES
         derive(p)(b, sigma, v2, sigma2)(proj_2(n)) IMPLIES
          v1 = v2 AND sigma1 = sigma2 AND proj_1(n) = proj_2(n)")
      (("1" (SPLIT -1)
        (("1" (SKOSIMP*)
          (("1" (INST -1 "(n1!1, n2!1)")
            (("1" (APPLY (REPEAT (INST?))) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (SKOSIMP*)
            (("2" (REWRITE "derive" -2)
              (("2" (REWRITE "derive" -3)
                (("2"
                  (APPLY
                   (BRANCH (SPLIT -2)
                    ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                  (("2" (LIFT-IF)
                    (("2"
                      (APPLY
                       (BRANCH (SPLIT -1)
                        ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                      (("2"
                        (APPLY
                         (BRANCH (SPLIT -1)
                          ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                        (("1"
                          (APPLY
                           (THEN (SKOSIMP*) (COPY -6) (INST -7 "(m1!1, m1!2)")
                            (INST -1 "(m2!1, m2!2)") (ASSERT)
                            (APPLY (REPEAT (INST? -7 :WHERE (-4 -9)))) (ASSERT)
                            (FLATTEN) (REPLACE -7) (REPLACE -8) (REPLACE -9)
                            (APPLY (REPEAT (INST? -1 :WHERE (-5 -12))))
                            (ASSERT) (FLATTEN) (REPLACE -1) (REPLACE -2)
                            (REPLACE -3) (ASSERT)))
                          (("1"
                            (EXPAND* "check_for_exception_final"
                             "check_for_exception")
                            (("1"
                              (APPLY
                               (BRANCH (SPLIT -8)
                                ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                  (ASSERT)))))
                              NIL NIL))
                            NIL))
                          NIL)
                         ("2"
                          (APPLY
                           (BRANCH (SPLIT -1)
                            ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                          (("2"
                            (APPLY
                             (BRANCH (SPLIT -1)
                              ((THEN (FLATTEN) (ASSERT) (FLATTEN) (ASSERT)))))
                            (("2"
                              (APPLY
                               (BRANCH (SPLIT -1)
                                ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                  (ASSERT)))))
                              (("2"
                                (APPLY
                                 (BRANCH (SPLIT -1)
                                  ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                    (ASSERT)))))
                                (("1"
                                  (APPLY
                                   (THEN (SKOSIMP*)
                                    (INST -5
                                     "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                    (ASSERT)
                                    (APPLY (REPEAT (INST? -5 :WHERE (-3 -7))))
                                    (ASSERT) (FLATTEN) (REPLACE -5)
                                    (REPLACE -6) (REPLACE -7) (ASSERT)))
                                  (("1"
                                    (EXPAND* "check_for_exception_final"
                                     "check_for_exception")
                                    (("1"
                                      (APPLY
                                       (BRANCH (SPLIT -4)
                                        ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                          (ASSERT)))))
                                      NIL NIL))
                                    NIL))
                                  NIL)
                                 ("2"
                                  (APPLY
                                   (BRANCH (SPLIT -1)
                                    ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                      (ASSERT)))))
                                  (("1"
                                    (APPLY
                                     (THEN (SKOSIMP*) (COPY -6)
                                      (INST -7 "(m1!1, m1!2)")
                                      (INST -1 "(m2!1, m2!2)") (ASSERT)
                                      (APPLY
                                       (REPEAT (INST? -7 :WHERE (-4 -9))))
                                      (ASSERT) (FLATTEN) (REPLACE -7)
                                      (REPLACE -8) (REPLACE -9)
                                      (APPLY
                                       (REPEAT (INST? -1 :WHERE (-5 -12))))
                                      (ASSERT) (FLATTEN) (REPLACE -1)
                                      (REPLACE -2) (REPLACE -3) (ASSERT)))
                                    (("1"
                                      (EXPAND* "check_for_exception_final"
                                       "check_for_exception")
                                      (("1"
                                        (APPLY
                                         (BRANCH (SPLIT -8)
                                          ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                            (ASSERT)))))
                                        (("1" (REPLACE -3)
                                          (("1" (REPLACE -17)
                                            (("1" (PROPAX) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2"
                                    (APPLY
                                     (BRANCH (SPLIT -1)
                                      ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                        (ASSERT)))))
                                    (("1"
                                      (APPLY
                                       (THEN (SKOSIMP*) (COPY -6)
                                        (INST -7 "(m1!1, m1!2)")
                                        (INST -1 "(m2!1, m2!2)") (ASSERT)
                                        (APPLY
                                         (REPEAT (INST? -7 :WHERE (-4 -9))))
                                        (ASSERT) (FLATTEN) (REPLACE -7)
                                        (REPLACE -8) (REPLACE -9)
                                        (APPLY
                                         (REPEAT (INST? -1 :WHERE (-5 -12))))
                                        (ASSERT) (FLATTEN) (REPLACE -1)
                                        (REPLACE -2) (REPLACE -3) (ASSERT)))
                                      (("1"
                                        (EXPAND* "check_for_exception_final"
                                         "check_for_exception")
                                        (("1"
                                          (APPLY
                                           (BRANCH (SPLIT -8)
                                            ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                              (ASSERT)))))
                                          NIL NIL))
                                        NIL))
                                      NIL)
                                     ("2"
                                      (APPLY
                                       (BRANCH (SPLIT -1)
                                        ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                          (ASSERT)))))
                                      (("2"
                                        (APPLY
                                         (BRANCH (SPLIT -1)
                                          ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                            (ASSERT)))))
                                        (("2"
                                          (APPLY
                                           (BRANCH (SPLIT -1)
                                            ((THEN (FLATTEN) (ASSERT) (FLATTEN)
                                              (ASSERT)))))
                                          (("2"
                                            (APPLY
                                             (BRANCH (SPLIT -1)
                                              ((THEN (FLATTEN) (ASSERT)
                                                (FLATTEN) (ASSERT)))))
                                            (("1"
                                              (APPLY
                                               (THEN (SKOSIMP*)
                                                (INST -5
                                                 "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                (ASSERT)
                                                (APPLY
                                                 (REPEAT
                                                  (INST? -5 :WHERE (-3 -7))))
                                                (ASSERT) (FLATTEN) (REPLACE -5)
                                                (REPLACE -6) (REPLACE -7)
                                                (ASSERT)))
                                              (("1" (LIFT-IF)
                                                (("1"
                                                  (APPLY
                                                   (BRANCH (SPLIT -4)
                                                    ((THEN (FLATTEN) (ASSERT)
                                                      (FLATTEN) (ASSERT)))))
                                                  NIL NIL))
                                                NIL))
                                              NIL)
                                             ("2"
                                              (APPLY
                                               (BRANCH (SPLIT -1)
                                                ((THEN (FLATTEN) (ASSERT)
                                                  (FLATTEN) (ASSERT)))))
                                              (("1"
                                                (APPLY
                                                 (THEN
                                                  (INST -4
                                                   "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                  (ASSERT)
                                                  (APPLY
                                                   (REPEAT
                                                    (INST? -4 :WHERE (-3 -6))))
                                                  (ASSERT) (FLATTEN)
                                                  (REPLACE -4) (REPLACE -5)
                                                  (REPLACE -6) (ASSERT)))
                                                NIL NIL)
                                               ("2"
                                                (APPLY
                                                 (BRANCH (SPLIT -1)
                                                  ((THEN (FLATTEN) (ASSERT)
                                                    (FLATTEN) (ASSERT)))))
                                                (("1" (POSTPONE) NIL NIL)
                                                 ("2"
                                                  (APPLY
                                                   (BRANCH (SPLIT -1)
                                                    ((THEN (FLATTEN) (ASSERT)
                                                      (FLATTEN) (ASSERT)))))
                                                  (("1" (SKOSIMP*)
                                                    (("1" (COPY -15)
                                                      (("1" (COPY -16)
                                                        (("1"
                                                          (INST -1
                                                           "(m1!1, m1!2)")
                                                          (("1"
                                                            (INST -2
                                                             "(m2!1, m2!2)")
                                                            (("1" (ASSERT)
                                                              (("1"
                                                                (APPLY
                                                                 (THEN
                                                                  (REPEAT
                                                                   (INST? -1
                                                                    :WHERE
                                                                    (-5 -19)))
                                                                  (ASSERT)
                                                                  (FLATTEN)
                                                                  (ASSERT)
                                                                  (REPLACE -1)
                                                                  (REPLACE
                                                                   -2)))
                                                                (("1"
                                                                  (APPLY
                                                                   (THEN
                                                                    (REPEAT
                                                                     (INST? -4
                                                                      :WHERE
                                                                      (-8
                                                                       -22)))
                                                                    (ASSERT)
                                                                    (FLATTEN)
                                                                    (ASSERT)
                                                                    (REPLACE
                                                                     -4)
                                                                    (REPLACE
                                                                     -5)))
                                                                  (("1"
                                                                    (CASE-REPLACE
                                                                     "tau3!1 = tau3!2"
                                                                     :HIDE? T)
                                                                    (("1"
                                                                      (APPLY
                                                                       (BRANCH
                                                                        (SPLIT
                                                                         -12)
                                                                        ((THEN
                                                                          (FLATTEN)
                                                                          (ASSERT)
                                                                          (FLATTEN)
                                                                          (ASSERT)))))
                                                                      (("1"
                                                                        (REPLACE
                                                                         -2
                                                                         :DIR RL)
                                                                        (("1"
                                                                          (REPLACE
                                                                           -27)
                                                                          (("1"
                                                                            (LEMMA
                                                                             "on_method_entry_deterministic")
                                                                            (("1"
                                                                              (INST
                                                                               -1
                                                                               "p!1"
                                                                               "md!1"
                                                                               "a!2"
                                                                               "tau3!2"
                                                                               "tau4!1"
                                                                               "tau4!2"
                                                                               "m3!1"
                                                                               "m3!2"
                                                                               _
                                                                               _)
                                                                              (("1"
                                                                                (APPLY
                                                                                 (THEN
                                                                                  (REPEAT
                                                                                   (INST?
                                                                                    -1))
                                                                                  (ASSERT)))
                                                                                (("1"
                                                                                  (APPLY
                                                                                   (BRANCH
                                                                                    (SPLIT
                                                                                     -1)
                                                                                    ((THEN
                                                                                      (FLATTEN)
                                                                                      (ASSERT)
                                                                                      (FLATTEN)
                                                                                      (ASSERT)))))
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -1)
                                                                                    (("1"
                                                                                      (REPLACE
                                                                                       -2)
                                                                                      (("1"
                                                                                        (CASE-REPLACE
                                                                                         "tau5!1 = tau5!2")
                                                                                        (("1"
                                                                                          (COPY
                                                                                           -25)
                                                                                          (("1"
                                                                                            (INST
                                                                                             -1
                                                                                             "(m4!1, m4!2)")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (APPLY
                                                                                                 (THEN
                                                                                                  (REPEAT
                                                                                                   (INST?
                                                                                                    -1
                                                                                                    :WHERE
                                                                                                    (-21
                                                                                                     -35)))
                                                                                                  (ASSERT)
                                                                                                  (FLATTEN)
                                                                                                  (ASSERT)
                                                                                                  (REPLACE
                                                                                                   -1)
                                                                                                  (REPLACE
                                                                                                   -2)))
                                                                                                (("1"
                                                                                                  (CASE-REPLACE
                                                                                                   "tau7!1 = tau7!2")
                                                                                                  (("1"
                                                                                                    (APPLY
                                                                                                     (BRANCH
                                                                                                      (SPLIT
                                                                                                       -25)
                                                                                                      ((THEN
                                                                                                        (FLATTEN)
                                                                                                        (ASSERT)
                                                                                                        (FLATTEN)
                                                                                                        (ASSERT)))))
                                                                                                    (("1"
                                                                                                      (LEMMA
                                                                                                       "on_method_exit_normal_deterministic")
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -1
                                                                                                         "p!1"
                                                                                                         "md!1"
                                                                                                         "a!2"
                                                                                                         "tau7!2"
                                                                                                         "tau8!1"
                                                                                                         "tau8!2"
                                                                                                         "m6!1"
                                                                                                         "m6!2"
                                                                                                         _
                                                                                                         _)
                                                                                                        (("1"
                                                                                                          (APPLY
                                                                                                           (THEN
                                                                                                            (REPEAT
                                                                                                             (INST?
                                                                                                              -1))
                                                                                                            (ASSERT)))
                                                                                                          (("1"
                                                                                                            (APPLY
                                                                                                             (BRANCH
                                                                                                              (SPLIT
                                                                                                               -1)
                                                                                                              ((THEN
                                                                                                                (FLATTEN)
                                                                                                                (ASSERT)
                                                                                                                (FLATTEN)
                                                                                                                (ASSERT)))))
                                                                                                            (("1"
                                                                                                              (REPLACE
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (APPLY
                                                                                                                 (BRANCH
                                                                                                                  (SPLIT
                                                                                                                   -29)
                                                                                                                  ((THEN
                                                                                                                    (FLATTEN)
                                                                                                                    (ASSERT)
                                                                                                                    (FLATTEN)
                                                                                                                    (ASSERT)))))
                                                                                                                (("1"
                                                                                                                  (REPLACE
                                                                                                                   -22)
                                                                                                                  (("1"
                                                                                                                    (REPLACE
                                                                                                                     -33)
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      (("1"
                                                                                                                        (REPLACE
                                                                                                                         -17)
                                                                                                                        (("1"
                                                                                                                          (REPLACE
                                                                                                                           -20)
                                                                                                                          (("1"
                                                                                                                            (REPLACE
                                                                                                                             -4)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (APPLY
                                                                                                                                 (BRANCH
                                                                                                                                  (SPLIT
                                                                                                                                   -30)
                                                                                                                                  ((THEN
                                                                                                                                    (FLATTEN)
                                                                                                                                    (ASSERT)
                                                                                                                                    (FLATTEN)
                                                                                                                                    (ASSERT)))))
                                                                                                                                (("1"
                                                                                                                                  (POSTPONE)
                                                                                                                                  NIL
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (POSTPONE)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (POSTPONE)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL)
                                                                                                     ("2"
                                                                                                      (POSTPONE)
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (POSTPONE)
                                                                                                    NIL
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (POSTPONE)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL)
                                                                                   ("2"
                                                                                    (POSTPONE)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (POSTPONE)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL)
                                                   ("2"
                                                    (APPLY
                                                     (BRANCH (SPLIT -1)
                                                      ((THEN (FLATTEN) (ASSERT)
                                                        (FLATTEN) (ASSERT)))))
                                                    (("1"
                                                      (APPLY
                                                       (THEN
                                                        (INST -4
                                                         "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                        (ASSERT)
                                                        (APPLY
                                                         (REPEAT
                                                          (INST? -4 :WHERE
                                                           (-3 -6))))
                                                        (ASSERT) (FLATTEN)
                                                        (REPLACE -4)
                                                        (REPLACE -5)
                                                        (REPLACE -6) (ASSERT)))
                                                      NIL NIL)
                                                     ("2"
                                                      (APPLY
                                                       (BRANCH (SPLIT -1)
                                                        ((THEN (FLATTEN)
                                                          (ASSERT) (FLATTEN)
                                                          (ASSERT)))))
                                                      (("1"
                                                        (APPLY
                                                         (THEN
                                                          (INST -4
                                                           "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                          (ASSERT)
                                                          (APPLY
                                                           (REPEAT
                                                            (INST? -4 :WHERE
                                                             (-3 -6))))
                                                          (ASSERT) (FLATTEN)
                                                          (REPLACE -4)
                                                          (REPLACE -5)
                                                          (REPLACE -6)
                                                          (ASSERT)))
                                                        NIL NIL)
                                                       ("2"
                                                        (APPLY
                                                         (BRANCH (SPLIT -1)
                                                          ((THEN (FLATTEN)
                                                            (ASSERT) (FLATTEN)
                                                            (ASSERT)))))
                                                        (("1"
                                                          (LEMMA
                                                           "execute_CaseJML_deterministic")
                                                          (("1"
                                                            (INST -1 "p!1"
                                                             "branches(b!1)"
                                                             "sigma!1"
                                                             "sigma1!1"
                                                             "sigma2!1"
                                                             "PROJ_1(x!1)"
                                                             "PROJ_2(x!1)" _ _)
                                                            (("1"
                                                              (APPLY
                                                               (REPEAT
                                                                (INST? -1)))
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (APPLY
                                                                   (BRANCH
                                                                    (SPLIT -1)
                                                                    ((THEN
                                                                      (FLATTEN)
                                                                      (ASSERT)
                                                                      (FLATTEN)
                                                                      (ASSERT)))))
                                                                  (("1"
                                                                    (SKOSIMP*)
                                                                    (("1"
                                                                      (INST -7
                                                                       "(m1!1, m2!1)")
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (APPLY
                                                                           (THEN
                                                                            (REPEAT
                                                                             (INST?
                                                                              -7
                                                                              :WHERE
                                                                              (-1
                                                                               -2)))
                                                                            (ASSERT)
                                                                            (FLATTEN)
                                                                            (ASSERT)))
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2"
                                                          (APPLY
                                                           (BRANCH (SPLIT -1)
                                                            ((THEN (FLATTEN)
                                                              (ASSERT)
                                                              (FLATTEN)
                                                              (ASSERT)))))
                                                          (("1" (POSTPONE) NIL
                                                            NIL)
                                                           ("2"
                                                            (APPLY
                                                             (BRANCH (SPLIT -1)
                                                              ((THEN (FLATTEN)
                                                                (ASSERT)
                                                                (FLATTEN)
                                                                (ASSERT)))))
                                                            (("1"
                                                              (APPLY
                                                               (THEN (SKOSIMP*)
                                                                (COPY -6)
                                                                (INST -7
                                                                 "(m1!1, m1!2)")
                                                                (INST -1
                                                                 "(m2!1, m2!2)")
                                                                (ASSERT)
                                                                (APPLY
                                                                 (REPEAT
                                                                  (INST? -7
                                                                   :WHERE
                                                                   (-5 -10))))
                                                                (ASSERT)
                                                                (FLATTEN)
                                                                (REPLACE -7)
                                                                (REPLACE -8)
                                                                (REPLACE -9)))
                                                              (("1"
                                                                (APPLY
                                                                 (THEN
                                                                  (REPEAT
                                                                   (INST? -1
                                                                    :WHERE
                                                                    (-6 -12)))
                                                                  (ASSERT)
                                                                  (FLATTEN)
                                                                  (ASSERT)))
                                                                NIL NIL))
                                                              NIL)
                                                             ("2"
                                                              (APPLY
                                                               (BRANCH
                                                                (SPLIT -1)
                                                                ((THEN
                                                                  (FLATTEN)
                                                                  (ASSERT)
                                                                  (FLATTEN)
                                                                  (ASSERT)))))
                                                              (("1"
                                                                (LEMMA
                                                                 "execute_set_deterministic")
                                                                (("1"
                                                                  (INST -1
                                                                   "p!1"
                                                                   "target(b!1)"
                                                                   "source(b!1)"
                                                                   "sigma!1"
                                                                   "sigma1!1"
                                                                   "sigma2!1"
                                                                   "PROJ_1(x!1)"
                                                                   "PROJ_2(x!1)"
                                                                   _ _)
                                                                  (("1"
                                                                    (APPLY
                                                                     (REPEAT
                                                                      (INST?
                                                                       -1)))
                                                                    (("1"
                                                                      (ASSERT)
                                                                      (("1"
                                                                        (APPLY
                                                                         (BRANCH
                                                                          (SPLIT
                                                                           -1)
                                                                          ((THEN
                                                                            (FLATTEN)
                                                                            (ASSERT)
                                                                            (FLATTEN)
                                                                            (ASSERT)))))
                                                                        (("1"
                                                                          (SKOSIMP*)
                                                                          (("1"
                                                                            (INST
                                                                             -7
                                                                             "(m1!1, m2!1)")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (APPLY
                                                                                 (THEN
                                                                                  (REPEAT
                                                                                   (INST?
                                                                                    -7
                                                                                    :WHERE
                                                                                    (-1
                                                                                     -2)))
                                                                                  (ASSERT)
                                                                                  (FLATTEN)
                                                                                  (ASSERT)))
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2"
                                                                (APPLY
                                                                 (BRANCH
                                                                  (SPLIT -1)
                                                                  ((THEN
                                                                    (FLATTEN)
                                                                    (ASSERT)
                                                                    (FLATTEN)
                                                                    (ASSERT)))))
                                                                (("2"
                                                                  (APPLY
                                                                   (BRANCH
                                                                    (SPLIT -1)
                                                                    ((THEN
                                                                      (FLATTEN)
                                                                      (ASSERT)
                                                                      (FLATTEN)
                                                                      (ASSERT)))))
                                                                  (("1"
                                                                    (APPLY
                                                                     (THEN
                                                                      (SKOSIMP*)
                                                                      (INST -5
                                                                       "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                      (ASSERT)
                                                                      (APPLY
                                                                       (REPEAT
                                                                        (INST?
                                                                         -5
                                                                         :WHERE
                                                                         (-4
                                                                          -8))))
                                                                      (ASSERT)
                                                                      (FLATTEN)
                                                                      (REPLACE
                                                                       -5)
                                                                      (REPLACE
                                                                       -6)
                                                                      (REPLACE
                                                                       -7)
                                                                      (ASSERT)))
                                                                    NIL NIL)
                                                                   ("2"
                                                                    (APPLY
                                                                     (BRANCH
                                                                      (SPLIT
                                                                       -1)
                                                                      ((THEN
                                                                        (FLATTEN)
                                                                        (ASSERT)
                                                                        (FLATTEN)
                                                                        (ASSERT)))))
                                                                    (("2"
                                                                      (APPLY
                                                                       (BRANCH
                                                                        (SPLIT
                                                                         -1)
                                                                        ((THEN
                                                                          (FLATTEN)
                                                                          (ASSERT)
                                                                          (FLATTEN)
                                                                          (ASSERT)))))
                                                                      (("1"
                                                                        (SKOSIMP*)
                                                                        (("1"
                                                                          (COPY
                                                                           -8)
                                                                          (("1"
                                                                            (INST
                                                                             -1
                                                                             "(m1!1, m1!2)")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (APPLY
                                                                                 (THEN
                                                                                  (REPEAT
                                                                                   (INST?
                                                                                    -1
                                                                                    :WHERE
                                                                                    (-5
                                                                                     -12)))
                                                                                  (ASSERT)
                                                                                  (FLATTEN)
                                                                                  (ASSERT)))
                                                                                (("1"
                                                                                  (REPLACE
                                                                                   -1)
                                                                                  (("1"
                                                                                    (REPLACE
                                                                                     -2)
                                                                                    (("1"
                                                                                      (LIFT-IF)
                                                                                      (("1"
                                                                                        (APPLY
                                                                                         (BRANCH
                                                                                          (SPLIT
                                                                                           -7)
                                                                                          ((THEN
                                                                                            (FLATTEN)
                                                                                            (ASSERT)
                                                                                            (FLATTEN)
                                                                                            (ASSERT)))))
                                                                                        (("1"
                                                                                          (COPY
                                                                                           -11)
                                                                                          (("1"
                                                                                            (INST
                                                                                             -1
                                                                                             "(m2!1, m2!2)")
                                                                                            (("1"
                                                                                              (ASSERT)
                                                                                              (("1"
                                                                                                (APPLY
                                                                                                 (THEN
                                                                                                  (REPEAT
                                                                                                   (INST?
                                                                                                    -1
                                                                                                    :WHERE
                                                                                                    (-3
                                                                                                     -16)))
                                                                                                  (ASSERT)
                                                                                                  (FLATTEN)
                                                                                                  (ASSERT)
                                                                                                  (REPLACE
                                                                                                   -1)
                                                                                                  (REPLACE
                                                                                                   -2)))
                                                                                                (("1"
                                                                                                  (INST
                                                                                                   -13
                                                                                                   "(m3!1, m3!2)")
                                                                                                  (("1"
                                                                                                    (ASSERT)
                                                                                                    (("1"
                                                                                                      (INST?
                                                                                                       -13)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -13
                                                                                                         "Unit"
                                                                                                         "tau3!1")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (FLATTEN)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (REPLACE
                                                                                                                 -13)
                                                                                                                (("1"
                                                                                                                  (APPLY
                                                                                                                   (BRANCH
                                                                                                                    (SPLIT
                                                                                                                     -12)
                                                                                                                    ((THEN
                                                                                                                      (FLATTEN)
                                                                                                                      (ASSERT)
                                                                                                                      (FLATTEN)
                                                                                                                      (ASSERT)))))
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL)
                                                                                         ("2"
                                                                                          (EXPAND
                                                                                           "derive"
                                                                                           (-1
                                                                                            -14))
                                                                                          (("2"
                                                                                            (APPLY
                                                                                             (BRANCH
                                                                                              (SPLIT
                                                                                               -1)
                                                                                              ((THEN
                                                                                                (FLATTEN)
                                                                                                (ASSERT)
                                                                                                (FLATTEN)
                                                                                                (ASSERT)))))
                                                                                            (("2"
                                                                                              (REPLACE
                                                                                               -1)
                                                                                              (("2"
                                                                                                (REPLACE
                                                                                                 -16)
                                                                                                (("2"
                                                                                                  (INST
                                                                                                   -12
                                                                                                   "(m3!1, m3!2)")
                                                                                                  (("2"
                                                                                                    (ASSERT)
                                                                                                    (("2"
                                                                                                      (APPLY
                                                                                                       (THEN
                                                                                                        (REPEAT
                                                                                                         (INST?
                                                                                                          -12
                                                                                                          :WHERE
                                                                                                          (-10
                                                                                                           -19)))
                                                                                                        (ASSERT)
                                                                                                        (FLATTEN)
                                                                                                        (ASSERT)
                                                                                                        (REPLACE
                                                                                                         -12)
                                                                                                        (REPLACE
                                                                                                         -13)))
                                                                                                      NIL
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (APPLY
                                                                         (BRANCH
                                                                          (SPLIT
                                                                           -1)
                                                                          ((THEN
                                                                            (FLATTEN)
                                                                            (ASSERT)
                                                                            (FLATTEN)
                                                                            (ASSERT)))))
                                                                        (("1"
                                                                          (APPLY
                                                                           (THEN
                                                                            (SKOSIMP*)
                                                                            (INST
                                                                             -5
                                                                             "(proj_1(x!1) - 1, proj_2(x!1) - 1)")
                                                                            (ASSERT)
                                                                            (APPLY
                                                                             (REPEAT
                                                                              (INST?
                                                                               -5
                                                                               :WHERE
                                                                               (-4
                                                                                -8))))
                                                                            (ASSERT)
                                                                            (FLATTEN)
                                                                            (REPLACE
                                                                             -5)
                                                                            (REPLACE
                                                                             -6)
                                                                            (REPLACE
                                                                             -7)
                                                                            (ASSERT)))
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (LEMMA
                                                                           "execute_assert_deterministic")
                                                                          (("2"
                                                                            (INST
                                                                             -1
                                                                             "p!1"
                                                                             "expr(b!1)"
                                                                             "sigma!1"
                                                                             "sigma1!1"
                                                                             "sigma2!1"
                                                                             "PROJ_1(x!1)"
                                                                             "PROJ_2(x!1)"
                                                                             _
                                                                             _)
                                                                            (("2"
                                                                              (APPLY
                                                                               (REPEAT
                                                                                (INST?
                                                                                 -1)))
                                                                              (("2"
                                                                                (ASSERT)
                                                                                (("2"
                                                                                  (APPLY
                                                                                   (BRANCH
                                                                                    (SPLIT
                                                                                     -1)
                                                                                    ((THEN
                                                                                      (FLATTEN)
                                                                                      (ASSERT)
                                                                                      (FLATTEN)
                                                                                      (ASSERT)))))
                                                                                  (("2"
                                                                                    (SKOSIMP*)
                                                                                    (("2"
                                                                                      (INST
                                                                                       -6
                                                                                       "(m1!1, m2!1)")
                                                                                      (("2"
                                                                                        (ASSERT)
                                                                                        (("2"
                                                                                          (APPLY
                                                                                           (THEN
                                                                                            (REPEAT
                                                                                             (INST?
                                                                                              -6
                                                                                              :WHERE
                                                                                              (-1
                                                                                               -2)))
                                                                                            (ASSERT)
                                                                                            (FLATTEN)
                                                                                            (ASSERT)))
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (LEMMA "well_founded?_product")
      (("2" (INST -1 "LAMBDA(i, j : nat) : i < j" "LAMBDA(i, j : nat) : i < j")
        (("2" (ASSERT) (("2" (USE "wf_nat") (("2" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED NIL 142684 13702 T SHOSTAK))
 (|derive_determ| 0
  (|derive_determ-1| NIL 3395752130 3403506313
   ("" (SKOSIMP*)
    (("" (EXPAND "derives")
      (("" (SKOSIMP*)
        (("" (LEMMA "derive_determ_step")
          (("" (INST?)
            (("" (ASSERT)
              (("" (INST? -1 :WHERE -3)
                (("" (ASSERT) (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program]" |SemanticsProofs|
     NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsProofs| NIL)
    (|derive_determ_step| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|derives| CONST-DECL "bool" |Semantics| NIL))
   34 29 T SHOSTAK))
 (|derive_bottom_iff_exception_step| 0
  (|derive_bottom_iff_exception_step-2| NIL 3401608082 3403269339
   ("" (USE "wf_induction[nat, LAMBDA(x, y : nat) : x < y]")
    (("1"
      (INST -1
       " LAMBDA(n : nat) : FORALL (p: FullProgram)(e: (wf_Body(program(p))))
                             (sigma1, sigma2: FullState, v: Val):
                        derive(p)(e, sigma1, v, sigma2)(n) IMPLIES
                         Bottom?(v) = up?(ex(pstate(sigma2)))")
      (("1" (SPLIT -1)
        (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (HIDE 2)
          (("2" (SKOSIMP*)
            (("2" (EXPAND "derive" -2)
              (("2" (SPLIT -2)
                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (ASSERT)
                    (("2" (LIFT-IF)
                      (("2" (SPLIT -1)
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (FLATTEN)
                          (("2" (ASSERT)
                            (("2"
                              (EXPAND* "check_for_exception_final"
                               "check_for_exception")
                              (("2" (SPLIT -1)
                                (("1" (FLATTEN)
                                  (("1" (SKOSIMP*)
                                    (("1" (SPLIT -5)
                                      (("1" (PROPAX) NIL NIL)
                                       ("2" (FLATTEN)
                                        (("2" (INST-CP -8 "m1!1")
                                          (("2" (INST -8 "m2!1")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (ASSERT)
                                    (("2" (SPLIT -1)
                                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (SPLIT -1)
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (FLATTEN)
                                              (("2" (ASSERT)
                                                (("2" (SPLIT -1)
                                                  (("1" (FLATTEN)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (ASSERT)
                                                      (("2" (SPLIT -1)
                                                        (("1" (FLATTEN)
                                                          (("1" (ASSERT)
                                                            (("1" (SKOSIMP*)
                                                              (("1" (SPLIT -4)
                                                                (("1" (PROPAX)
                                                                  NIL NIL)
                                                                 ("2" (FLATTEN)
                                                                  (("2"
                                                                    (INST -6
                                                                     "x!1 - 1")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2" (SPLIT -1)
                                                              (("1" (FLATTEN)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (SKOSIMP*)
                                                                    (("1"
                                                                      (SPLIT
                                                                       -5)
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (INST-CP
                                                                           -8
                                                                           "m1!1")
                                                                          (("2"
                                                                            (INST
                                                                             -8
                                                                             "m2!1")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (SPLIT -1)
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (SKOSIMP*)
                                                                          (("1"
                                                                            (SPLIT
                                                                             -5)
                                                                            (("1"
                                                                              (PROPAX)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (FLATTEN)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (SPLIT
                                                                           -1)
                                                                          (("1"
                                                                            (FLATTEN)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (SPLIT
                                                                                 -1)
                                                                                (("1"
                                                                                  (FLATTEN)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (FLATTEN)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (SPLIT
                                                                                       -1)
                                                                                      (("1"
                                                                                        (FLATTEN)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (FLATTEN)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (SPLIT
                                                                                             -1)
                                                                                            (("1"
                                                                                              (FLATTEN)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (SKOSIMP*)
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -5
                                                                                                     "x!1 - 1")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST?)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (LIFT-IF)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (SPLIT
                                                                                                                   13)
                                                                                                                  (("1"
                                                                                                                    (PROPAX)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("2"
                                                                                                                      (SPLIT
                                                                                                                       -5)
                                                                                                                      (("1"
                                                                                                                        (PROPAX)
                                                                                                                        NIL
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (FLATTEN)
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (TYPEPRED
                                                                                                                             "update_PState")
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "update_PState_type")
                                                                                                                              (("2"
                                                                                                                                (INST?)
                                                                                                                                (("2"
                                                                                                                                  (INST
                                                                                                                                   -1
                                                                                                                                   "sigma2!1")
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (REPLACE
                                                                                                                                       -2
                                                                                                                                       :DIR RL)
                                                                                                                                      (("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (EXPAND
                                                                                                                                           "update")
                                                                                                                                          (("2"
                                                                                                                                            (LIFT-IF)
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("2"
                                                                                                                                                (EXPAND
                                                                                                                                                 "update_local")
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "update_field")
                                                                                                                                                  (("2"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (SPLIT
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (FLATTEN)
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -4
                                                                                                         "x!1 - 1")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST?)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (FLATTEN)
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      (("2"
                                                                                                        (SPLIT
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (FLATTEN)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (SKOSIMP*)
                                                                                                              (("1"
                                                                                                                (SPLIT
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (FLATTEN)
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (FLATTEN)
                                                                                                                  (("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (INST-CP
                                                                                                                       -6
                                                                                                                       "m1!1")
                                                                                                                      (("2"
                                                                                                                        (INST
                                                                                                                         -6
                                                                                                                         "m2!1")
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (INST?
                                                                                                                             -7)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (LIFT-IF)
                                                                                                                                (("2"
                                                                                                                                  (SPLIT
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("1"
                                                                                                                                      (INST?)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("2"
                                                                                                                                      (INST?)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (SPLIT
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (FLATTEN)
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("1"
                                                                                                                      (TYPEPRED
                                                                                                                       "update_PState")
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "update_PState_type")
                                                                                                                        (("1"
                                                                                                                          (INST?
                                                                                                                           -1
                                                                                                                           :WHERE
                                                                                                                           -15)
                                                                                                                          (("1"
                                                                                                                            (INST
                                                                                                                             -1
                                                                                                                             "sigma2!1")
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "update_local")
                                                                                                                                  (("1"
                                                                                                                                    (SPLIT
                                                                                                                                     -14)
                                                                                                                                    (("1"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (INST-CP
                                                                                                                                           -16
                                                                                                                                           "m5!1")
                                                                                                                                          (("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("2"
                                                                                                                                              (INST?
                                                                                                                                               -17)
                                                                                                                                              (("1"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("1"
                                                                                                                                                  (SPLIT
                                                                                                                                                   -13)
                                                                                                                                                  (("1"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (FLATTEN)
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("2"
                                                                                                                                                        (ASSERT)
                                                                                                                                                        (("2"
                                                                                                                                                          (TYPEPRED
                                                                                                                                                           "on_method_exit_exceptional")
                                                                                                                                                          (("2"
                                                                                                                                                            (EXPAND
                                                                                                                                                             "on_method_event_type")
                                                                                                                                                            (("2"
                                                                                                                                                              (INST?)
                                                                                                                                                              (("2"
                                                                                                                                                                (ASSERT)
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL)
                                                                                                                                               ("2"
                                                                                                                                                (TYPEPRED
                                                                                                                                                 "md!1")
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "wf_Method")
                                                                                                                                                  (("2"
                                                                                                                                                    (ASSERT)
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (FLATTEN)
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  (("2"
                                                                                                                    (SPLIT
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (FLATTEN)
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        (("1"
                                                                                                                          (INST
                                                                                                                           -4
                                                                                                                           "x!1 - 1")
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            (("1"
                                                                                                                              (INST?)
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (FLATTEN)
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        (("2"
                                                                                                                          (SPLIT
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (FLATTEN)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (INST
                                                                                                                                 -4
                                                                                                                                 "x!1 - 1")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("1"
                                                                                                                                    (INST?)
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (FLATTEN)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "return_of_stmt")
                                                                                                                                (("2"
                                                                                                                                  (LIFT-IF)
                                                                                                                                  (("2"
                                                                                                                                    (SPLIT
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (USE "wf_nat") NIL NIL))
    NIL)
   UNCHECKED
   ((|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_induction| FORMULA-DECL NIL |wf_induction| NIL))
   1883 1880 T NIL)
  (|derive_bottom_iff_exception_step-1| NIL 3395752639 3401608061
   ("" (USE "wf_induction[nat, LAMBDA(x, y : nat) : x < y]")
    (("1"
      (INST -1 " LAMBDA(n : nat) : FORALL (p: FullProgram)(e: Body)
                     (sigma1, sigma2: FullState, v: Val):
                derive(p)(e, sigma1, v, sigma2)(n) IMPLIES
                 Bottom?(v) = up?(ex(pstate(sigma2)))")
      (("1" (SPLIT -1)
        (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (HIDE 2)
          (("2" (SKOSIMP*)
            (("2" (EXPAND "derive" -2)
              (("2" (SPLIT -2)
                (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (ASSERT)
                    (("2" (LIFT-IF)
                      (("2" (SPLIT -1)
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (FLATTEN)
                          (("2" (ASSERT)
                            (("2"
                              (EXPAND* "check_for_exception_final"
                               "check_for_exception")
                              (("2" (SPLIT -1)
                                (("1" (FLATTEN)
                                  (("1" (SKOSIMP*)
                                    (("1" (SPLIT -5)
                                      (("1" (PROPAX) NIL NIL)
                                       ("2" (FLATTEN)
                                        (("2" (INST-CP -8 "m1!1")
                                          (("2" (INST -8 "m2!1")
                                            (("2" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (FLATTEN)
                                  (("2" (ASSERT)
                                    (("2" (SPLIT -1)
                                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (ASSERT)
                                          (("2" (SPLIT -1)
                                            (("1" (FLATTEN)
                                              (("1" (ASSERT) NIL NIL)) NIL)
                                             ("2" (FLATTEN)
                                              (("2" (ASSERT)
                                                (("2" (SPLIT -1)
                                                  (("1" (FLATTEN)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (ASSERT)
                                                      (("2" (SPLIT -1)
                                                        (("1" (FLATTEN)
                                                          (("1" (ASSERT)
                                                            (("1" (SKOSIMP*)
                                                              (("1" (SPLIT -4)
                                                                (("1" (PROPAX)
                                                                  NIL NIL)
                                                                 ("2" (FLATTEN)
                                                                  (("2"
                                                                    (INST -6
                                                                     "x!1 - 1")
                                                                    (("2"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (FLATTEN)
                                                          (("2" (ASSERT)
                                                            (("2" (SPLIT -1)
                                                              (("1" (FLATTEN)
                                                                (("1" (ASSERT)
                                                                  (("1"
                                                                    (SKOSIMP*)
                                                                    (("1"
                                                                      (SPLIT
                                                                       -5)
                                                                      (("1"
                                                                        (PROPAX)
                                                                        NIL
                                                                        NIL)
                                                                       ("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (INST-CP
                                                                           -8
                                                                           "m1!1")
                                                                          (("2"
                                                                            (INST
                                                                             -8
                                                                             "m2!1")
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL)
                                                               ("2" (FLATTEN)
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (SPLIT -1)
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (ASSERT)
                                                                        (("1"
                                                                          (SKOSIMP*)
                                                                          (("1"
                                                                            (SPLIT
                                                                             -5)
                                                                            (("1"
                                                                              (PROPAX)
                                                                              NIL
                                                                              NIL)
                                                                             ("2"
                                                                              (FLATTEN)
                                                                              (("2"
                                                                                (ASSERT)
                                                                                NIL
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL)
                                                                     ("2"
                                                                      (FLATTEN)
                                                                      (("2"
                                                                        (ASSERT)
                                                                        (("2"
                                                                          (SPLIT
                                                                           -1)
                                                                          (("1"
                                                                            (FLATTEN)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              (("2"
                                                                                (SPLIT
                                                                                 -1)
                                                                                (("1"
                                                                                  (FLATTEN)
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    NIL
                                                                                    NIL))
                                                                                  NIL)
                                                                                 ("2"
                                                                                  (FLATTEN)
                                                                                  (("2"
                                                                                    (ASSERT)
                                                                                    (("2"
                                                                                      (SPLIT
                                                                                       -1)
                                                                                      (("1"
                                                                                        (FLATTEN)
                                                                                        (("1"
                                                                                          (ASSERT)
                                                                                          NIL
                                                                                          NIL))
                                                                                        NIL)
                                                                                       ("2"
                                                                                        (FLATTEN)
                                                                                        (("2"
                                                                                          (ASSERT)
                                                                                          (("2"
                                                                                            (SPLIT
                                                                                             -1)
                                                                                            (("1"
                                                                                              (FLATTEN)
                                                                                              (("1"
                                                                                                (ASSERT)
                                                                                                (("1"
                                                                                                  (SKOSIMP*)
                                                                                                  (("1"
                                                                                                    (INST
                                                                                                     -5
                                                                                                     "x!1 - 1")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST?)
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (LIFT-IF)
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                (("1"
                                                                                                                  (SPLIT
                                                                                                                   13)
                                                                                                                  (("1"
                                                                                                                    (PROPAX)
                                                                                                                    NIL
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("2"
                                                                                                                      (SPLIT
                                                                                                                       -5)
                                                                                                                      (("1"
                                                                                                                        (PROPAX)
                                                                                                                        NIL
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (FLATTEN)
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (TYPEPRED
                                                                                                                             "update_PState")
                                                                                                                            (("2"
                                                                                                                              (EXPAND
                                                                                                                               "update_PState_type")
                                                                                                                              (("2"
                                                                                                                                (INST?)
                                                                                                                                (("2"
                                                                                                                                  (INST
                                                                                                                                   -1
                                                                                                                                   "sigma2!1")
                                                                                                                                  (("2"
                                                                                                                                    (ASSERT)
                                                                                                                                    (("2"
                                                                                                                                      (REPLACE
                                                                                                                                       -2
                                                                                                                                       :DIR RL)
                                                                                                                                      (("2"
                                                                                                                                        (REPLACE
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (EXPAND
                                                                                                                                           "update")
                                                                                                                                          (("2"
                                                                                                                                            (LIFT-IF)
                                                                                                                                            (("2"
                                                                                                                                              (ASSERT)
                                                                                                                                              (("2"
                                                                                                                                                (EXPAND
                                                                                                                                                 "update_local")
                                                                                                                                                (("2"
                                                                                                                                                  (EXPAND
                                                                                                                                                   "update_field")
                                                                                                                                                  (("2"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL)
                                                                                             ("2"
                                                                                              (FLATTEN)
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                (("2"
                                                                                                  (SPLIT
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (FLATTEN)
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (INST
                                                                                                         -4
                                                                                                         "x!1 - 1")
                                                                                                        (("1"
                                                                                                          (ASSERT)
                                                                                                          (("1"
                                                                                                            (INST?)
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              NIL
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL)
                                                                                                   ("2"
                                                                                                    (FLATTEN)
                                                                                                    (("2"
                                                                                                      (ASSERT)
                                                                                                      (("2"
                                                                                                        (SPLIT
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (FLATTEN)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (SKOSIMP*)
                                                                                                              (("1"
                                                                                                                (SPLIT
                                                                                                                 -4)
                                                                                                                (("1"
                                                                                                                  (FLATTEN)
                                                                                                                  (("1"
                                                                                                                    (ASSERT)
                                                                                                                    NIL
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (FLATTEN)
                                                                                                                  (("2"
                                                                                                                    (ASSERT)
                                                                                                                    (("2"
                                                                                                                      (INST-CP
                                                                                                                       -6
                                                                                                                       "m1!1")
                                                                                                                      (("2"
                                                                                                                        (INST
                                                                                                                         -6
                                                                                                                         "m2!1")
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          (("2"
                                                                                                                            (INST?
                                                                                                                             -7)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (LIFT-IF)
                                                                                                                                (("2"
                                                                                                                                  (SPLIT
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("1"
                                                                                                                                      (INST?)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL)
                                                                                                                                   ("2"
                                                                                                                                    (FLATTEN)
                                                                                                                                    (("2"
                                                                                                                                      (INST?)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL)
                                                                                                         ("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (ASSERT)
                                                                                                            (("2"
                                                                                                              (SPLIT
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (FLATTEN)
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (SKOSIMP*)
                                                                                                                    (("1"
                                                                                                                      (TYPEPRED
                                                                                                                       "update_PState")
                                                                                                                      (("1"
                                                                                                                        (EXPAND
                                                                                                                         "update_PState_type")
                                                                                                                        (("1"
                                                                                                                          (INST?
                                                                                                                           -1
                                                                                                                           :WHERE
                                                                                                                           -15)
                                                                                                                          (("1"
                                                                                                                            (INST
                                                                                                                             -1
                                                                                                                             "sigma2!1")
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (REPLACE
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (EXPAND
                                                                                                                                   "update_local")
                                                                                                                                  (("1"
                                                                                                                                    (SPLIT
                                                                                                                                     -14)
                                                                                                                                    (("1"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        (("2"
                                                                                                                                          (INST-CP
                                                                                                                                           -16
                                                                                                                                           "m5!1")
                                                                                                                                          (("2"
                                                                                                                                            (ASSERT)
                                                                                                                                            (("2"
                                                                                                                                              (INST?
                                                                                                                                               -17)
                                                                                                                                              (("2"
                                                                                                                                                (ASSERT)
                                                                                                                                                (("2"
                                                                                                                                                  (SPLIT
                                                                                                                                                   -13)
                                                                                                                                                  (("1"
                                                                                                                                                    (PROPAX)
                                                                                                                                                    NIL
                                                                                                                                                    NIL)
                                                                                                                                                   ("2"
                                                                                                                                                    (FLATTEN)
                                                                                                                                                    (("2"
                                                                                                                                                      (ASSERT)
                                                                                                                                                      (("2"
                                                                                                                                                        (ASSERT)
                                                                                                                                                        (("2"
                                                                                                                                                          (TYPEPRED
                                                                                                                                                           "on_method_exit_exceptional")
                                                                                                                                                          (("2"
                                                                                                                                                            (EXPAND
                                                                                                                                                             "on_method_event_type")
                                                                                                                                                            (("2"
                                                                                                                                                              (INST?)
                                                                                                                                                              (("2"
                                                                                                                                                                (ASSERT)
                                                                                                                                                                NIL
                                                                                                                                                                NIL))
                                                                                                                                                              NIL))
                                                                                                                                                            NIL))
                                                                                                                                                          NIL))
                                                                                                                                                        NIL))
                                                                                                                                                      NIL))
                                                                                                                                                    NIL))
                                                                                                                                                  NIL))
                                                                                                                                                NIL))
                                                                                                                                              NIL))
                                                                                                                                            NIL))
                                                                                                                                          NIL))
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (FLATTEN)
                                                                                                                (("2"
                                                                                                                  (ASSERT)
                                                                                                                  (("2"
                                                                                                                    (SPLIT
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (FLATTEN)
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        (("1"
                                                                                                                          (INST
                                                                                                                           -4
                                                                                                                           "x!1 - 1")
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            (("1"
                                                                                                                              (INST?)
                                                                                                                              (("1"
                                                                                                                                (ASSERT)
                                                                                                                                NIL
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (FLATTEN)
                                                                                                                      (("2"
                                                                                                                        (ASSERT)
                                                                                                                        (("2"
                                                                                                                          (SPLIT
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (FLATTEN)
                                                                                                                            (("1"
                                                                                                                              (ASSERT)
                                                                                                                              (("1"
                                                                                                                                (INST
                                                                                                                                 -4
                                                                                                                                 "x!1 - 1")
                                                                                                                                (("1"
                                                                                                                                  (ASSERT)
                                                                                                                                  (("1"
                                                                                                                                    (INST?)
                                                                                                                                    (("1"
                                                                                                                                      (ASSERT)
                                                                                                                                      NIL
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL)
                                                                                                                           ("2"
                                                                                                                            (FLATTEN)
                                                                                                                            (("2"
                                                                                                                              (ASSERT)
                                                                                                                              (("2"
                                                                                                                                (EXPAND
                                                                                                                                 "return_of_stmt")
                                                                                                                                (("2"
                                                                                                                                  (LIFT-IF)
                                                                                                                                  (("2"
                                                                                                                                    (SPLIT
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("1"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL)
                                                                                                                                     ("2"
                                                                                                                                      (FLATTEN)
                                                                                                                                      (("2"
                                                                                                                                        (ASSERT)
                                                                                                                                        NIL
                                                                                                                                        NIL))
                                                                                                                                      NIL))
                                                                                                                                    NIL))
                                                                                                                                  NIL))
                                                                                                                                NIL))
                                                                                                                              NIL))
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (USE "wf_nat") NIL NIL))
    NIL)
   UNFINISHED
   ((|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_induction| FORMULA-DECL NIL |wf_induction| NIL))
   15150 2600 T SHOSTAK))
 (|derive_boolean_expr_type_TCC1| 0
  (|derive_boolean_expr_type_TCC1-1| NIL 3401446935 3403269340
   ("" (SUBTYPE-TCC) NIL NIL) UNCHECKED
   ((|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   100 99 NIL NIL))
 (|derive_boolean_expr_type| 0
  (|derive_boolean_expr_type-1| NIL 3396347233 3403269347
   ("" (SKOSIMP)
    (("" (INDUCT "b")
      (("1" (TYPEPRED "b!1") (("1" (ASSERT) NIL NIL)) NIL)
       ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL)
       ("3" (SKOSIMP*) (("3" (ASSERT) NIL NIL)) NIL)
       ("4" (SKOSIMP*) (("4" (ASSERT) NIL NIL)) NIL)
       ("5" (SKOSIMP*) (("5" (EXPAND "derive") (("5" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("6" (SKOSIMP*) (("6" (EXPAND "derive") (("6" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("7" (SKOSIMP*) (("7" (EXPAND "derive") (("7" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("8" (SKOSIMP*)
        (("8" (ASSERT)
          (("8" (EXPAND "derive" -4)
            (("8" (EXPAND* "check_for_exception_final" "check_for_exception")
              NIL NIL))
            NIL))
          NIL))
        NIL)
       ("9" (SKOSIMP*)
        (("9" (EXPAND "derive" -5)
          (("9" (EXPAND* "check_for_exception_final" "check_for_exception")
            (("9" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("10" (SKOSIMP*)
        (("10" (EXPAND "derive" -5)
          (("10" (EXPAND* "check_for_exception_final" "check_for_exception")
            (("10" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL)
       ("11" (SKOSIMP*)
        (("11" (EXPAND "derive" -3) (("11" (ASSERT) NIL NIL)) NIL)) NIL)
       ("12" (SKOSIMP*) (("12" (ASSERT) NIL NIL)) NIL)
       ("13" (SKOSIMP*) (("13" (ASSERT) NIL NIL)) NIL)
       ("14" (SKOSIMP*) (("14" (ASSERT) NIL NIL)) NIL)
       ("15" (SKOSIMP*) (("15" (ASSERT) NIL NIL)) NIL)
       ("16" (SKOSIMP*) (("16" (ASSERT) NIL NIL)) NIL)
       ("17" (SKOSIMP*) (("17" (ASSERT) NIL NIL)) NIL)
       ("18" (SKOSIMP*) (("18" (ASSERT) NIL NIL)) NIL)
       ("19" (SKOSIMP*) (("19" (ASSERT) NIL NIL)) NIL)
       ("20" (SKOSIMP*) (("20" (ASSERT) NIL NIL)) NIL)
       ("21" (SKOSIMP*) (("21" (ASSERT) NIL NIL)) NIL)
       ("22" (SKOSIMP*) (("22" (ASSERT) NIL NIL)) NIL)
       ("23" (SKOSIMP*) (("23" (ASSERT) NIL NIL)) NIL)
       ("24" (SKOSIMP*) (("24" (ASSERT) NIL NIL)) NIL)
       ("25" (SKOSIMP*) (("25" (ASSERT) NIL NIL)) NIL)
       ("26" (SKOSIMP*) (("26" (ASSERT) NIL NIL)) NIL)
       ("27" (SKOSIMP*) (("27" (ASSERT) NIL NIL)) NIL)
       ("28" (SKOSIMP*) (("28" (ASSERT) NIL NIL)) NIL)
       ("29" (SKOSIMP*) (("29" (ASSERT) NIL NIL)) NIL)
       ("30" (SKOSIMP*)
        (("30" (EXPAND "wf_BoolExpr") (("30" (PROPAX) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   735 732 T NIL)))
(|SemanticsJML|
 (|wf_initial_ghost_state_TCC1| 0
  (|wf_initial_ghost_state_TCC1-1| NIL 3392370163 3403269348 ("" (TCC))
   PROVED-INCOMPLETE
   ((|choose| CONST-DECL "(p)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL))
   49 49 NIL NIL))
 (|wf_initial_ghost_state| 0
  (|wf_initial_ghost_state-1| NIL 3392370167 3403269349
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_ghoststate")
      (("" (SKOSIMP*)
        (("" (EXPAND "is_ghost")
          (("" (REPLACE -1 :HIDE? T)
            (("" (ASSERT)
              (("" (EXPAND "var_names")
                (("" (EXPAND "get_GhostDecl")
                  (("" (LIFT-IF)
                    (("" (ASSERT)
                      (("" (SPLIT 1)
                        (("1" (SKOSIMP*)
                          (("1"
                            (TYPEPRED "choose({g: FieldDecl[Name] |
                                getGhostDecls(program(p!1))(g) AND
                                 name(g) = vn!1})`init_val")
                            (("1" (EXPAND "defined?")
                              (("1" (ASSERT)
                                (("1" (REWRITE "nonempty_exists")
                                  (("1" (SKOSIMP*)
                                    (("1" (TYPEPRED "x!1")
                                      (("1" (INST?) (("1" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP*)
                          (("2" (REWRITE "nonempty_exists")
                            (("2" (EXPAND "defined?")
                              (("2" (SKOSIMP*)
                                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNCHECKED
   ((|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   93 93 T SHOSTAK))
 (|execute_set_TCC1| 0
  (|execute_set_TCC1-1| NIL 3390908875 3403438573 ("" (TCC)) PROVED-INCOMPLETE
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   2346 2060 NIL NIL))
 (|execute_set_TCC2| 0
  (|execute_set_TCC2-1| NIL 3390908875 3403438574
   ("" (SKOSIMP*)
    (("" (TYPEPRED "e!1") (("" (EXPAND "wf_Expr") (("" (PROPAX) NIL NIL)) NIL))
      NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   995 990 T NIL))
 (|execute_set_TCC3| 0
  (|execute_set_TCC3-1| NIL 3390908875 3403438576 ("" (TCC)) PROVED-INCOMPLETE
   NIL 1988 1860 NIL NIL))
 (|execute_set_TCC4| 0
  (|execute_set_TCC4-1| NIL 3401446938 3403438578 ("" (SUBTYPE-TCC) NIL NIL)
   PROVED-INCOMPLETE
   ((|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_Expr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   2088 1950 NIL NIL))
 (|execute_CaseJML_TCC1| 0
  (|execute_CaseJML_TCC1-1| NIL 3390908875 3403446729 ("" (TCC) NIL NIL)
   PROVED-INCOMPLETE
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL) NIL
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |Body_adt| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL NIL
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   4641 1250 T NIL))
 (|execute_CaseJML_TCC2| 0
  (|execute_CaseJML_TCC2-2| "no proof, because old one suddenly broken"
   3401701533 3403447323
   ("" (SKOSIMP*)
    (("" (TYPEPRED "branches!1")
      (("" (EXPAND "wf_Branches")
        (("" (USE "every_is_forall")
          (("" (REWRITE -1)
            (("" (INST?)
              (("" (REWRITE -3)
                (("" (EXPAND "member")
                  (("" (FLATTEN) (("" (POSTPONE) NIL NIL)) NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED NIL 523341 700 T SHOSTAK)
  (|execute_CaseJML_TCC2-1| NIL 3390908875 3401701497
   ("" (INDUCT "xs")
    (("1" (SKOSIMP*)
      (("1" (TYPEPRED "branches!1")
        (("1" (EXPAND "wf_Branches")
          (("1" (REPLACE -3)
            (("1" (EXPAND "every")
              (("1" (EXPAND "every")
                (("1" (FLATTEN)
                  (("1" (EXPAND "wf_Body")
                    (("1" (SKOSIMP*)
                      (("1" (INST?)
                        (("1" (INST?)
                          (("1" (ASSERT)
                            (("1" (EXPAND "var_names" -4)
                              (("1" (AUTO-REWRITE "union" "member")
                                (("1" (ASSERT)
                                  (("1" (REPLACE -3) (("1" (GRIND) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKOSIMP*)
      (("2" (TYPEPRED "branches!1")
        (("2"
          (INST -2 "p!1" "cdr(branches!1)" "s1!1" "s2!1" "n!1" "cons1_var!1")
          (("1" (ASSERT)
            (("1" (REPLACE -4)
              (("1" (ASSERT)
                (("1" (INST -2 "CaseJML(cons2_var!1)")
                  (("1" (EXPAND "wf_Branches")
                    (("1" (EXPAND "every")
                      (("1" (FLATTEN)
                        (("1" (EXPAND "every")
                          (("1" (FLATTEN)
                            (("1" (EXPAND "wf_Body")
                              (("1" (SKOSIMP*)
                                (("1" (INST?)
                                  (("1" (INST?)
                                    (("1" (INST?)
                                      (("1" (INST?)
                                        (("1" (ASSERT)
                                          (("1" (EXPAND "var_names" -6)
                                            (("1"
                                              (AUTO-REWRITE "union" "member")
                                              (("1" (ASSERT)
                                                (("1" (REPLACE -5)
                                                  (("1" (EXPAND "var_names" -6)
                                                    (("1" (ASSERT)
                                                      (("1" (INST?)
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (EXPAND "var_names"
                                                                    5)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (EXPAND "wf_Branches")
            (("2" (EXPAND "every" -1)
              (("2" (ASSERT) (("2" (FLATTEN) NIL NIL)) NIL)) NIL))
            NIL)
           ("3" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|emptyset| CONST-DECL "set" |sets| NIL)
    (|finite_emptyset| NAME-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   5099 135 T NIL))
 (|execute_CaseJML_TCC3| 0
  (|execute_CaseJML_TCC3-1| NIL 3390908875 3403446647 ("" (TCC) NIL NIL)
   PROVED-INCOMPLETE NIL 4049 660 T SHOSTAK))
 (|execute_CaseJML_TCC4| 0
  (|execute_CaseJML_TCC4-1| NIL 3395749089 3403446630 ("" (TCC) NIL NIL)
   UNFINISHED
   ((|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|extend| CONST-DECL "R" |extend| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    NIL NIL NIL NIL
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_Branches| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL))
   4299 1220 T SHOSTAK))
 (|execute_CaseJML_TCC5| 0
  (|execute_CaseJML_TCC5-1| NIL 3403505457 NIL ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL NIL NIL NIL NIL))
 (|check_assertion_TCC1| 0
  (|check_assertion_TCC1-1| NIL 3395749089 3403438551
   ("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL) PROVED-INCOMPLETE
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   522 520 T SHOSTAK))
 (|check_assertion_TCC2| 0
  (|check_assertion_TCC2-1| NIL 3401446938 3403438553
   ("" (SKOSIMP*)
    (("" (TYPEPRED "e!1")
      (("" (EXPAND "wf_BoolExpr") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   1128 1000 T NIL))
 (|execute_assert_TCC1| 0
  (|execute_assert_TCC1-1| NIL 3397383993 3403438566 ("" (SUBTYPE-TCC) NIL NIL)
   PROVED-INCOMPLETE NIL 1767 1630 NIL NIL))
 (|execute_assert_TCC2| 0
  (|execute_assert_TCC2-1| NIL 3397383993 3403438571 ("" (SUBTYPE-TCC) NIL NIL)
   PROVED-INCOMPLETE
   ((|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   4768 4610 NIL NIL))
 (|on_method_entry_TCC1| 0
  (|on_method_entry_TCC1-1| NIL 3390908875 3403438583 ("" (TCC))
   PROVED-INCOMPLETE
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |Body_adt| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|lookup_inv| CONST-DECL "BoolExpr" |ProgramFunctions| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   4309 3860 NIL NIL))
 (|on_method_entry_TCC2| 0
  (|on_method_entry_TCC2-2| "" 3395751614 3403438587 ("" (TCC))
   PROVED-INCOMPLETE
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |Body_adt| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|lookup_inv| CONST-DECL "BoolExpr" |ProgramFunctions| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   4468 3990 T SHOSTAK)
  (|on_method_entry_TCC2-1| NIL 3390908875 3395751480
   ("" (SUBTYPE-TCC) NIL NIL) UNFINISHED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   143 143 NIL NIL))
 (|on_method_entry_TCC3| 0
  (|on_method_entry_TCC3-1| NIL 3390908875 3403438589
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method")
        (("" (EXPAND "wf_BoolExpr") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   1383 1250 T SHOSTAK))
 (|on_method_entry_TCC4| 0
  (|on_method_entry_TCC4-1| NIL 3390908875 3403438593 ("" (TCC))
   PROVED-INCOMPLETE
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|subterm| ADT-DEF-DECL "boolean" |Body_adt| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|get_class| CONST-DECL "lift[Class]" |ProgramFunctions| NIL)
    (|lookup_inv| CONST-DECL "BoolExpr" |ProgramFunctions| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   4553 4100 T SHOSTAK))
 (|on_method_entry_TCC5| 0
  (|on_method_entry_TCC5-1| NIL 3390908875 3403438595
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   1386 1260 T NIL))
 (|on_method_entry_TCC6| 0
  (|on_method_entry_TCC6-1| NIL 3401446938 3403438604
   ("" (SUBTYPE-TCC) NIL NIL) PROVED-INCOMPLETE
   ((|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   8928 8280 NIL NIL))
 (|on_method_exit_normal_TCC1| 0
  (|on_method_exit_normal_TCC1-1| NIL 3390908875 3403438686
   ("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL) PROVED-INCOMPLETE
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   842 720 T SHOSTAK))
 (|on_method_exit_normal_TCC2| 0
  (|on_method_exit_normal_TCC2-1| NIL 3390908875 3403438687
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   1353 1220 T NIL))
 (|on_method_exit_normal_TCC3| 0
  (|on_method_exit_normal_TCC3-1| NIL 3390908875 3403438688
   ("" (SKOSIMP*)
    (("" (TYPEPRED "post(md!1)") (("" (ASSERT) (("" (POSTPONE) NIL NIL)) NIL))
      NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL))
   745 750 T SHOSTAK))
 (|on_method_exit_normal_TCC4| 0
  (|on_method_exit_normal_TCC4-1| NIL 3390908875 3403438690
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method")
        (("" (ASSERT) (("" (EXPAND "wf_BoolExpr") (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   1360 1250 T SHOSTAK))
 (|on_method_exit_normal_TCC5| 0
  (|on_method_exit_normal_TCC5-1| NIL 3390908875 3403438691
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method")
        (("" (EXPAND "wf_BoolExpr") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   1490 1310 T NIL))
 (|on_method_exit_normal_TCC6| 0
  (|on_method_exit_normal_TCC6-1| NIL 3401446938 3403438700
   ("" (SUBTYPE-TCC) NIL NIL) PROVED-INCOMPLETE
   ((|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|ext_declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions|
     NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|union| CONST-DECL "set" |sets| NIL)
    (|wf_Body| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|wf_BoolExpr| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|class_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   9017 8360 NIL NIL))
 (|on_method_exit_exceptional_TCC1| 0
  (|on_method_exit_exceptional_TCC1-1| NIL 3390908875 3403438679
   ("" (SKOSIMP*) (("" (ASSERT) NIL NIL)) NIL) PROVED-INCOMPLETE
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   871 710 T SHOSTAK))
 (|on_method_exit_exceptional_TCC2| 0
  (|on_method_exit_exceptional_TCC2-1| NIL 3390908875 3403438681
   ("" (SKOSIMP*)
    (("" (TYPEPRED "md!1")
      (("" (EXPAND "wf_Method") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|wf_Method| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   1363 1200 T NIL))
 (|on_method_exit_exceptional_TCC3| 0
  (|on_method_exit_exceptional_TCC3-1| NIL 3390908875 3403438683 ("" (TCC))
   PROVED-INCOMPLETE
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   1939 1940 NIL NIL))
 (|on_method_exit_exceptional_TCC4| 0
  (|on_method_exit_exceptional_TCC4-1| NIL 3397385085 3403438684
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (SPLIT -1)
        (("1" (FLATTEN)
          (("1" (SKOSIMP*)
            (("1" (ASSERT)
              (("1" (LIFT-IF)
                (("1" (SPLIT -6)
                  (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                   ("2" (FLATTEN)
                    (("2" (TYPEPRED "update_PState")
                      (("2" (EXPAND "update_PState_type")
                        (("2" (INST?)
                          (("2" (INST -1 "s2!1")
                            (("2" (ASSERT)
                              (("2" (REPLACE -1) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   859 720 T NIL))
 (|on_method_exit_exceptional_TCC5| 0
  (|on_method_exit_exceptional_TCC5-1| NIL 3401446938 3403438685
   ("" (EXPAND "on_method_event_type")
    (("" (SKOSIMP*)
      (("" (SPLIT -1)
        (("1" (FLATTEN)
          (("1" (SKOSIMP*)
            (("1" (ASSERT)
              (("1" (REPLACE -6)
                (("1" (LIFT-IF)
                  (("1" (ASSERT)
                    (("1" (SPLIT 1)
                      (("1" (PROPAX) NIL NIL)
                       ("2" (SKOSIMP*)
                        (("2" (TYPEPRED "update_PState")
                          (("2" (EXPAND "update_PState_type")
                            (("2" (INST?)
                              (("2"
                                (INST -1
                                 "update_PState(tau2!1, raise[Name](down[Excpt](ex(pstate(s1!1)))))")
                                (("2" (REPLACE -1)
                                  (("2" (EXPAND "raise")
                                    (("2" (PROPAX) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED-INCOMPLETE
   ((|update_PState| FORMAL-CONST-DECL "(update_PState_type)" |SemanticsJML|
     NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|pstate| FORMAL-CONST-DECL "[FullState -> PState]" |SemanticsJML| NIL)
    (|program| FORMAL-CONST-DECL "[FullProgram -> Program[Name]]"
     |SemanticsJML| NIL)
    (|Program| TYPE-EQ-DECL NIL |WellFormedProgram| NIL)
    (|wf_Program| CONST-DECL "boolean" |WellFormedProgram| NIL)
    (|PreProgram| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|FullProgram| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |SemanticsJML| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|FullState| FORMAL-TYPE-DECL NIL |SemanticsJML| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|raise| CONST-DECL "PState" |State| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   1531 1400 T NIL)))

