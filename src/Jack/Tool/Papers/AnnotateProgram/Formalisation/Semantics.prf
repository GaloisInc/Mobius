(|Excpt|)
(|Val|)
(|State|)
(|Evaluation|
 (|eval_TCC1| 0
  (|eval_TCC1-1| NIL 3371189456 3371189465 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[NumExpr -> nat]" |NumExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   796 600 NIL NIL))
 (|eval_TCC2| 0
  (|eval_TCC2-1| NIL 3371189456 3371189466 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[NumExpr -> nat]" |NumExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   569 490 NIL NIL))
 (|eval_TCC3| 0
  (|eval_TCC3-1| NIL 3371189456 3371189466 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[NumExpr -> nat]" |NumExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   552 470 NIL NIL))
 (|eval_TCC4| 0
  (|eval_TCC4-1| NIL 3371189456 3371189467 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[NumExpr -> nat]" |NumExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   531 470 NIL NIL))
 (|eval_TCC5| 0
  (|eval_TCC5-1| NIL 3371189456 3371189467 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[NumExpr -> nat]" |NumExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   529 470 NIL NIL))
 (|eval_TCC6| 0
  (|eval_TCC6-1| NIL 3371189456 3371189468 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[NumExpr -> nat]" |NumExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   535 470 NIL NIL))
 (|eval_TCC7| 0
  (|eval_TCC7-1| NIL 3371189456 3371189468 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[NumExpr -> nat]" |NumExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   541 480 NIL NIL))
 (|eval_TCC8| 0
  (|eval_TCC8-1| NIL 3371189456 3371189469 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[NumExpr -> nat]" |NumExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   575 490 NIL NIL))
 (|eval_TCC9| 0
  (|eval_TCC9-1| NIL 3371189456 3371189469 ("" (SUBTYPE-TCC) NIL NIL) UNCHECKED
   ((/= CONST-DECL "boolean" |notequal| NIL)) 149 90 NIL NIL))
 (|eval_TCC10| 0
  (|eval_TCC10-1| NIL 3371189456 3371189471 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[BoolExpr -> nat]" |BoolExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   2392 2120 NIL NIL))
 (|eval_TCC11| 0
  (|eval_TCC11-1| NIL 3371189456 3371189474 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[BoolExpr -> nat]" |BoolExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   2538 2280 NIL NIL))
 (|eval_TCC12| 0
  (|eval_TCC12-1| NIL 3371189456 3371189477 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[BoolExpr -> nat]" |BoolExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   2586 2300 NIL NIL))
 (|eval_TCC13| 0
  (|eval_TCC13-1| NIL 3371189456 3371189479 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[BoolExpr -> nat]" |BoolExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   2468 2190 NIL NIL))
 (|eval_TCC14| 0
  (|eval_TCC14-1| NIL 3371189456 3371189482 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|reduce_nat| ADT-DEF-DECL "[BoolExpr -> nat]" |BoolExpr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Evaluation| NIL))
   2574 2300 NIL NIL)))
(|Semantics|
 (|deriv_expr_TCC1| 0
  (|deriv_expr_TCC1-1| NIL 3371191509 3372770409 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED NIL 16 10 NIL NIL))
 (|deriv_expr_TCC2| 0
  (|deriv_expr_TCC2-1| NIL 3371191509 3372770409 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|is_local| CONST-DECL "bool" |State| NIL))
   263 180 NIL NIL))
 (|deriv_expr_TCC3| 0
  (|deriv_expr_TCC3-1| NIL 3371191509 3372770409 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|is_local| CONST-DECL "bool" |State| NIL))
   217 150 NIL NIL))
 (|deriv_expr_TCC4| 0
  (|deriv_expr_TCC4-1| NIL 3371191509 3372770409 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|is_local| CONST-DECL "bool" |State| NIL))
   54 30 NIL NIL))
 (|deriv_expr_TCC5| 0
  (|deriv_expr_TCC5-1| NIL 3371191509 3372770409 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   260 190 NIL NIL))
 (|deriv_expr_TCC6| 0
  (|deriv_expr_TCC6-1| NIL 3371191509 3372770410 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   258 180 NIL NIL))
 (|deriv_expr_TCC7| 0
  (|deriv_expr_TCC7-1| NIL 3371191509 3372770410 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED NIL 281 250 NIL NIL))
 (|deriv_expr_TCC8| 0
  (|deriv_expr_TCC8-1| NIL 3371191509 3372770410 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   283 230 NIL NIL))
 (|deriv_expr_TCC9| 0
  (|deriv_expr_TCC9-1| NIL 3371191509 3372770410 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   267 190 NIL NIL))
 (|deriv_expr_TCC10| 0
  (|deriv_expr_TCC10-1| NIL 3371191509 3372770411
   ("" (TERMINATION-TCC) NIL NIL) UNCHECKED NIL 231 210 NIL NIL))
 (|deriv_expr_TCC11| 0
  (|deriv_expr_TCC11-1| NIL 3371191509 3372770411 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   683 560 NIL NIL))
 (|deriv_expr_TCC12| 0
  (|deriv_expr_TCC12-1| NIL 3371191509 3372770412 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   748 600 NIL NIL))
 (|deriv_expr_TCC13| 0
  (|deriv_expr_TCC13-1| NIL 3371191509 3372770413 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL))
   1046 850 NIL NIL))
 (|deriv_expr_TCC14| 0
  (|deriv_expr_TCC14-1| NIL 3371191509 3372770414 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL))
   1061 810 NIL NIL))
 (|deriv_expr_TCC15| 0
  (|deriv_expr_TCC15-1| NIL 3371191509 3372770415 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL))
   1043 790 NIL NIL))
 (|deriv_expr_TCC16| 0
  (|deriv_expr_TCC16-1| NIL 3371191509 3372770416 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL))
   1094 840 NIL NIL))
 (|deriv_expr_TCC17| 0
  (|deriv_expr_TCC17-1| NIL 3371191509 3372770419 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|lookup_local| CONST-DECL "Val" |State| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL))
   2306 840 NIL NIL))
 (|deriv_stmt_TCC1| 0
  (|deriv_stmt_TCC1-1| NIL 3371191509 3372770419 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   223 160 NIL NIL))
 (|deriv_stmt_TCC2| 0
  (|deriv_stmt_TCC2-1| NIL 3371191509 3372770419 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED NIL 32 30 NIL NIL))
 (|deriv_stmt_TCC3| 0
  (|deriv_stmt_TCC3-1| NIL 3371191509 3372770419 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   442 370 NIL NIL))
 (|deriv_stmt_TCC4| 0
  (|deriv_stmt_TCC4-1| NIL 3371191509 3372770420 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   468 400 NIL NIL))
 (|deriv_stmt_TCC5| 0
  (|deriv_stmt_TCC5-1| NIL 3371191509 3372770420 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|is_ghost| CONST-DECL "bool" |State| NIL))
   207 160 NIL NIL))
 (|deriv_stmt_TCC6| 0
  (|deriv_stmt_TCC6-1| NIL 3371191509 3372770420 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|is_ghost| CONST-DECL "bool" |State| NIL))
   226 160 NIL NIL))
 (|deriv_stmt_TCC7| 0
  (|deriv_stmt_TCC7-1| NIL 3371191509 3372770421 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   194 150 NIL NIL))
 (|deriv_stmt_TCC8| 0
  (|deriv_stmt_TCC8-1| NIL 3371191509 3372770421 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   189 150 NIL NIL))
 (|deriv_stmt_TCC9| 0
  (|deriv_stmt_TCC9-1| NIL 3371191509 3372770421 ("" (TERMINATION-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   518 420 NIL NIL))
 (|deriv_stmt_TCC10| 0
  (|deriv_stmt_TCC10-1| NIL 3371191509 3372770422
   ("" (TERMINATION-TCC) NIL NIL) UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   509 430 NIL NIL))
 (|deriv_stmt_TCC11| 0
  (|deriv_stmt_TCC11-1| NIL 3371191509 3372770422
   ("" (TERMINATION-TCC) NIL NIL) UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   547 450 NIL NIL))
 (|deriv_stmt_TCC12| 0
  (|deriv_stmt_TCC12-1| NIL 3371191509 3372770423 ("" (SUBTYPE-TCC) NIL NIL)
   UNCHECKED
   ((|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL))
   213 150 NIL NIL))
 (|deriv_stmt_TCC13| 0
  (|deriv_stmt_TCC13-1| NIL 3371191509 3372770423
   ("" (TERMINATION-TCC) NIL NIL) UNCHECKED NIL 32 30 NIL NIL))
 (|expr_determ_step| 0
  (|expr_determ_step-2| NIL 3382347845 3382347916
   ("" (ASSERT)
    (("" (SKOSIMP)
      ((""
        (LEMMA
         "wf_induction[[nat, nat], LAMBDA(n1, n2 : [nat, nat]) : proj_1(n1) < proj_1(n2) AND proj_2(n1) < proj_2(n2)]")
        (("1" (INST?)
          (("1" (SPLIT -1)
            (("1" (PROPAX) NIL NIL)
             ("2" (HIDE 2)
              (("2" (SKOSIMP)
                (("2" (INDUCT "e")
                  (("1" (SKOSIMP*)
                    (("1" (HIDE -1)
                      (("1" (REWRITE "deriv_expr" -2)
                        (("1" (REWRITE "deriv_expr" -3)
                          (("1" (CASE "up?(ex(sigma!1))")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (FLATTEN)
                                (("2" (SKOSIMP*)
                                  (("2" (INST -10 "(x!1`1 - 1, x!1`2 - 1)")
                                    (("1" (ASSERT)
                                      (("1"
                                        (INST -10 "Assign2_var!1" "sigma!1"
                                         "v1!1" "v2!1" "tau!1" "tau!2")
                                        (("1" (ASSERT)
                                          (("1" (SPLIT -10)
                                            (("1" (FLATTEN)
                                              (("1" (REPLACE -2)
                                                (("1" (CASE "up?(ex(tau!2))")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SKOSIMP*)
                                              (("2"
                                                (INST -3 "s!1" "sigma!2"
                                                 "sigma1!2" "sigma2!2" "m1!1"
                                                 "m2!1")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT) NIL NIL)
                                     ("3" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SKOSIMP*)
                    (("2" (REWRITE "deriv_expr" -2)
                      (("2" (REWRITE "deriv_expr" -3)
                        (("2" (CASE "up?(ex(sigma!1))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (SKOSIMP*)
                    (("3" (HIDE -1 -2)
                      (("3" (REWRITE "deriv_expr" -2)
                        (("3" (REWRITE "deriv_expr" -3)
                          (("3" (CASE "up?(ex(sigma!1))")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (FLATTEN)
                                (("2" (CASE "eval(CondExpr1_var!1)(sigma!1)")
                                  (("1" (ASSERT)
                                    (("1" (INST -7 "(x!1`1 - 1, x!1`2 - 1)")
                                      (("1" (ASSERT)
                                        (("1"
                                          (INST -7 "CondExpr2_var!1" "sigma!1"
                                           "v1!1" "v2!1" "sigma1!1" "sigma2!1")
                                          (("1" (ASSERT)
                                            (("1" (SPLIT -7)
                                              (("1" (PROPAX) NIL NIL)
                                               ("2" (SKOSIMP*)
                                                (("2"
                                                  (INST -4 "s!1" "sigma!2"
                                                   "sigma1!2" "sigma2!2" "m1!1"
                                                   "m2!1")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (INST -6 "(x!1`1 - 1, x!1`2 - 1)")
                                      (("2" (ASSERT)
                                        (("2"
                                          (INST -6 "CondExpr3_var!1" "sigma!1"
                                           "v1!1" "v2!1" "sigma1!1" "sigma2!1")
                                          (("2" (ASSERT)
                                            (("2" (SPLIT -6)
                                              (("1" (PROPAX) NIL NIL)
                                               ("2" (SKOSIMP*)
                                                (("2"
                                                  (INST -3 "s!1" "sigma!2"
                                                   "sigma1!2" "sigma2!2" "m1!1"
                                                   "m2!1")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("4" (SKOSIMP*)
                    (("4" (HIDE -1 -2)
                      (("4" (REWRITE "deriv_expr" -2)
                        (("4" (REWRITE "deriv_expr" -3)
                          (("4" (CASE "up?(ex(sigma!1))")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (SKOSIMP*)
                                (("2" (INST-CP -36 "(m1!1, m1!2)")
                                  (("2" (ASSERT)
                                    (("2"
                                      (INST -37 "MethodCall1_var!1" "sigma!1"
                                       "a!1" "a!2" "tau1!1" "tau1!2")
                                      (("2" (ASSERT)
                                        (("2" (SPLIT -37)
                                          (("1" (FLATTEN)
                                            (("1" (REPLACE -2)
                                              (("1"
                                                (INST-CP -39 "(m2!1, m2!2)")
                                                (("1" (ASSERT)
                                                  (("1"
                                                    (INST -40
                                                     "MethodCall3_var!1"
                                                     "tau1!2" "pv!1" "pv!2"
                                                     "tau2!1" "tau2!2")
                                                    (("1" (ASSERT)
                                                      (("1" (SPLIT -40)
                                                        (("1" (FLATTEN)
                                                          (("1" (REPLACE -2)
                                                            (("1"
                                                              (CASE-REPLACE
                                                               "tau4!1 = tau4!2")
                                                              (("1"
                                                                (CASE-REPLACE
                                                                 "md!1 = md!2")
                                                                (("1"
                                                                  (INST-CP -9
                                                                   "pre_set(md!2)"
                                                                   "tau4!2"
                                                                   "tau5!1"
                                                                   "tau5!2"
                                                                   "m3!1"
                                                                   "m3!2")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (REPLACE
                                                                         -10)
                                                                        (("1"
                                                                          (INST-CP
                                                                           -9
                                                                           "body(md!2)"
                                                                           "tau5!2"
                                                                           "tau6!1"
                                                                           "tau6!2"
                                                                           "m4!1"
                                                                           "m4!2")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -10)
                                                                                (("1"
                                                                                  (INST-CP
                                                                                   -48
                                                                                   "(m5!1, m5!2)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    (("1"
                                                                                      (INST
                                                                                       -49
                                                                                       "res(md!2)"
                                                                                       "tau6!2"
                                                                                       "v1!1"
                                                                                       "v2!1"
                                                                                       "tau7!1"
                                                                                       "tau7!2")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (SPLIT
                                                                                           -49)
                                                                                          (("1"
                                                                                            (FLATTEN)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -2)
                                                                                              (("1"
                                                                                                (CASE
                                                                                                    "bottom?(ex(tau7!2))")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (INST-CP
                                                                                                     -13
                                                                                                     "post_set(md!2)"
                                                                                                     "tau7!2"
                                                                                                     "tau8!1"
                                                                                                     "tau8!2"
                                                                                                     "m6!1"
                                                                                                     "m6!2")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (FLATTEN)
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -14)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (CASE-REPLACE
                                                                                                               "tau3!1 = tau3!2")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (LIFT-IF)
                                                                                                                (("2"
                                                                                                                  (SPLIT
                                                                                                                   -40)
                                                                                                                  (("1"
                                                                                                                    (FLATTEN)
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (FLATTEN)
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      (("2"
                                                                                                                        (SPLIT
                                                                                                                         -24)
                                                                                                                        (("1"
                                                                                                                          (FLATTEN)
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (PROPAX)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (ASSERT)
                                                                                                  (("2"
                                                                                                    (INST-CP
                                                                                                     -12
                                                                                                     "exc_set(md!2)"
                                                                                                     "tau7!2 WITH [ex := bottom]"
                                                                                                     "tau8!1 WITH [ex := bottom]"
                                                                                                     "tau8!2 WITH [ex := bottom]"
                                                                                                     "m6!1"
                                                                                                     "m6!2")
                                                                                                    (("2"
                                                                                                      (FLATTEN)
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (CASE-REPLACE
                                                                                                             "tau8!1 = tau8!2")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (CASE-REPLACE
                                                                                                                 "tau3!1 = tau3!2")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (LIFT-IF)
                                                                                                                  (("2"
                                                                                                                    (SPLIT
                                                                                                                     -40)
                                                                                                                    (("1"
                                                                                                                      (FLATTEN)
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (SPLIT
                                                                                                                       -23)
                                                                                                                      (("1"
                                                                                                                        (FLATTEN)
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (FLATTEN)
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (APPLY-EXTENSIONALITY
                                                                                                               :HIDE?
                                                                                                               T)
                                                                                                              (("2"
                                                                                                                (CASE-REPLACE
                                                                                                                 "tau8!1 = (# st := tau8!1`st, ex := tau8!1`ex #)")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (CASE-REPLACE
                                                                                                                     "tau8!2 = (# st := tau8!2`st, ex := tau8!2`ex #)")
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (APPLY-EXTENSIONALITY
                                                                                                                       :HIDE?
                                                                                                                       T)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (APPLY-EXTENSIONALITY
                                                                                                                   :HIDE?
                                                                                                                   T)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (SKOSIMP*)
                                                                                            (("2"
                                                                                              (INST
                                                                                               -11
                                                                                               "s!1"
                                                                                               "sigma!2"
                                                                                               "sigma1!2"
                                                                                               "sigma2!2"
                                                                                               "m1!3"
                                                                                               "m2!3")
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                (("2"
                                                                  (CASE
                                                                      "up?(ex(tau1!2)) AND Null?(a!2)")
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (LIFT-IF)
                                                                    (("2"
                                                                      (SPLIT
                                                                       -28)
                                                                      (("1"
                                                                        (FLATTEN)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (SPLIT
                                                                           -12)
                                                                          (("1"
                                                                            (FLATTEN)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (SKOSIMP*)
                                                          (("2"
                                                            (INST -6 "s!1"
                                                             "sigma!2"
                                                             "sigma1!2"
                                                             "sigma2!2" "m1!3"
                                                             "m2!3")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (SKOSIMP*)
                                            (("2"
                                              (INST -3 "s!1" "sigma!2"
                                               "sigma1!2" "sigma2!2" "m1!3"
                                               "m2!3")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("5" (SKOSIMP*)
                    (("5" (REWRITE "deriv_expr" -2)
                      (("5" (REWRITE "deriv_expr" -3)
                        (("5" (CASE "up?(ex(sigma!1))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2"
          (USE "well_founded?_product"
               ("ord1" "LAMBDA(i, j : nat) : i < j" "ord2"
                "LAMBDA(i, j : nat) : i < j"))
          (("2" (USE "wf_nat") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_induction| FORMULA-DECL NIL |wf_induction| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|NExpr| ADT-CONSTRUCTOR-DECL "[NumExpr -> (NExpr?)]" |Expr_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|NumExpr| TYPE-DECL NIL |NumExpr_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|MethodCall| ADT-CONSTRUCTOR-DECL "[[Expr, Name, Expr] -> (MethodCall?)]"
     |Expr_adt| NIL)
    (|Null?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|bottom?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|bottom| ADT-CONSTRUCTOR-DECL "(bottom?)" |lift_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|CondExpr| ADT-CONSTRUCTOR-DECL "[[BoolExpr, Expr, Expr] -> (CondExpr?)]"
     |Expr_adt| NIL)
    (|eval| DEF-DECL "bool" |Evaluation| NIL)
    (|BExpr| ADT-CONSTRUCTOR-DECL "[BoolExpr -> (BExpr?)]" |Expr_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|Assign| ADT-CONSTRUCTOR-DECL "[[Name, Expr] -> (Assign?)]" |Expr_adt|
     NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|x!1| SKOLEM-CONST-DECL "[nat, nat]" |Semantics| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Expr_induction| FORMULA-DECL NIL |Expr_adt| NIL)
    (|deriv_expr| DEF-DECL "bool" |Semantics| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|deriv_stmt| DEF-DECL "bool" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|ArgDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-DECL NIL |BoolExpr_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|GhostVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Stmt| TYPE-DECL NIL |Stmt_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|Expr| TYPE-DECL NIL |Expr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|well_founded?_product| FORMULA-DECL NIL WF NIL))
   6837 4989 NIL NIL)
  (|expr_determ_step-1| NIL 3372767918 3382347154
   ("" (ASSERT)
    (("" (SKOSIMP)
      ((""
        (LEMMA
         "wf_induction[[nat, nat], LAMBDA(n1, n2 : [nat, nat]) : proj_1(n1) < proj_1(n2) AND proj_2(n1) < proj_2(n2)]")
        (("1" (INST?)
          (("1" (SPLIT -1)
            (("1" (PROPAX) NIL NIL)
             ("2" (HIDE 2)
              (("2" (SKOSIMP)
                (("2" (INDUCT "e")
                  (("1" (SKOSIMP*)
                    (("1" (HIDE -1)
                      (("1" (REWRITE "deriv_expr" -2)
                        (("1" (REWRITE "deriv_expr" -3)
                          (("1" (CASE "up?(ex(sigma!1))")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (FLATTEN)
                                (("2" (SKOSIMP*)
                                  (("2" (INST -10 "(x!1`1 - 1, x!1`2 - 1)")
                                    (("1" (ASSERT)
                                      (("1"
                                        (INST -10 "Assign2_var!1" "sigma!1"
                                         "v1!1" "v2!1" "tau!1" "tau!2")
                                        (("1" (ASSERT)
                                          (("1" (SPLIT -10)
                                            (("1" (FLATTEN)
                                              (("1" (REPLACE -2)
                                                (("1" (CASE "up?(ex(tau!2))")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL)
                                             ("2" (SKOSIMP*)
                                              (("2"
                                                (INST -3 "s!1" "sigma!2"
                                                 "sigma1!2" "sigma2!2" "m1!1"
                                                 "m2!1")
                                                (("2" (ASSERT) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT) NIL NIL)
                                     ("3" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SKOSIMP*)
                    (("2" (REWRITE "deriv_expr" -2)
                      (("2" (REWRITE "deriv_expr" -3)
                        (("2" (CASE "up?(ex(sigma!1))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (SKOSIMP*)
                    (("3" (HIDE -1 -2)
                      (("3" (REWRITE "deriv_expr" -2)
                        (("3" (REWRITE "deriv_expr" -3)
                          (("3" (CASE "up?(ex(sigma!1))")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (FLATTEN)
                                (("2" (CASE "eval(CondExpr1_var!1)(sigma!1)")
                                  (("1" (ASSERT)
                                    (("1" (INST -7 "(x!1`1 - 1, x!1`2 - 1)")
                                      (("1" (ASSERT)
                                        (("1"
                                          (INST -7 "CondExpr2_var!1" "sigma!1"
                                           "v1!1" "v2!1" "sigma1!1" "sigma2!1")
                                          (("1" (ASSERT)
                                            (("1" (SPLIT -7)
                                              (("1" (PROPAX) NIL NIL)
                                               ("2" (SKOSIMP*)
                                                (("2"
                                                  (INST -4 "s!1" "sigma!2"
                                                   "sigma1!2" "sigma2!2" "m1!1"
                                                   "m2!1")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (INST -6 "(x!1`1 - 1, x!1`2 - 1)")
                                      (("2" (ASSERT)
                                        (("2"
                                          (INST -6 "CondExpr3_var!1" "sigma!1"
                                           "v1!1" "v2!1" "sigma1!1" "sigma2!1")
                                          (("2" (ASSERT)
                                            (("2" (SPLIT -6)
                                              (("1" (PROPAX) NIL NIL)
                                               ("2" (SKOSIMP*)
                                                (("2"
                                                  (INST -3 "s!1" "sigma!2"
                                                   "sigma1!2" "sigma2!2" "m1!1"
                                                   "m2!1")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("4" (SKOSIMP*)
                    (("4" (HIDE -1 -2)
                      (("4" (REWRITE "deriv_expr" -2)
                        (("4" (REWRITE "deriv_expr" -3)
                          (("4" (CASE "up?(ex(sigma!1))")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (SKOSIMP*)
                                (("2" (INST-CP -36 "(m1!1, m1!2)")
                                  (("2" (ASSERT)
                                    (("2"
                                      (INST -37 "MethodCall1_var!1" "sigma!1"
                                       "a!1" "a!2" "tau1!1" "tau1!2")
                                      (("2" (ASSERT)
                                        (("2" (SPLIT -37)
                                          (("1" (FLATTEN)
                                            (("1" (REPLACE -2)
                                              (("1"
                                                (INST-CP -39 "(m2!1, m2!2)")
                                                (("1" (ASSERT)
                                                  (("1"
                                                    (INST -40
                                                     "MethodCall3_var!1"
                                                     "tau1!2" "pv!1" "pv!2"
                                                     "tau2!1" "tau2!2")
                                                    (("1" (ASSERT)
                                                      (("1" (SPLIT -40)
                                                        (("1" (FLATTEN)
                                                          (("1" (REPLACE -2)
                                                            (("1"
                                                              (CASE-REPLACE
                                                               "tau4!1 = tau4!2")
                                                              (("1"
                                                                (CASE-REPLACE
                                                                 "md!1 = md!2")
                                                                (("1"
                                                                  (INST-CP -9
                                                                   "preset(md!2)"
                                                                   "tau4!2"
                                                                   "tau5!1"
                                                                   "tau5!2"
                                                                   "m3!1"
                                                                   "m3!2")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (REPLACE
                                                                         -10)
                                                                        (("1"
                                                                          (INST-CP
                                                                           -9
                                                                           "body(md!2)"
                                                                           "tau5!2"
                                                                           "tau6!1"
                                                                           "tau6!2"
                                                                           "m4!1"
                                                                           "m4!2")
                                                                          (("1"
                                                                            (ASSERT)
                                                                            (("1"
                                                                              (FLATTEN)
                                                                              (("1"
                                                                                (REPLACE
                                                                                 -10)
                                                                                (("1"
                                                                                  (INST-CP
                                                                                   -48
                                                                                   "(m5!1, m5!2)")
                                                                                  (("1"
                                                                                    (ASSERT)
                                                                                    (("1"
                                                                                      (INST
                                                                                       -49
                                                                                       "res(md!2)"
                                                                                       "tau6!2"
                                                                                       "v1!1"
                                                                                       "v2!1"
                                                                                       "tau7!1"
                                                                                       "tau7!2")
                                                                                      (("1"
                                                                                        (ASSERT)
                                                                                        (("1"
                                                                                          (SPLIT
                                                                                           -49)
                                                                                          (("1"
                                                                                            (FLATTEN)
                                                                                            (("1"
                                                                                              (REPLACE
                                                                                               -2)
                                                                                              (("1"
                                                                                                (CASE
                                                                                                    "bottom?(ex(tau7!2))")
                                                                                                (("1"
                                                                                                  (ASSERT)
                                                                                                  (("1"
                                                                                                    (INST-CP
                                                                                                     -13
                                                                                                     "postset(md!2)"
                                                                                                     "tau7!2"
                                                                                                     "tau8!1"
                                                                                                     "tau8!2"
                                                                                                     "m6!1"
                                                                                                     "m6!2")
                                                                                                    (("1"
                                                                                                      (ASSERT)
                                                                                                      (("1"
                                                                                                        (FLATTEN)
                                                                                                        (("1"
                                                                                                          (REPLACE
                                                                                                           -14)
                                                                                                          (("1"
                                                                                                            (ASSERT)
                                                                                                            (("1"
                                                                                                              (CASE-REPLACE
                                                                                                               "tau3!1 = tau3!2")
                                                                                                              (("1"
                                                                                                                (ASSERT)
                                                                                                                NIL
                                                                                                                NIL)
                                                                                                               ("2"
                                                                                                                (LIFT-IF)
                                                                                                                (("2"
                                                                                                                  (SPLIT
                                                                                                                   -40)
                                                                                                                  (("1"
                                                                                                                    (FLATTEN)
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL)
                                                                                                                   ("2"
                                                                                                                    (FLATTEN)
                                                                                                                    (("2"
                                                                                                                      (ASSERT)
                                                                                                                      (("2"
                                                                                                                        (SPLIT
                                                                                                                         -24)
                                                                                                                        (("1"
                                                                                                                          (FLATTEN)
                                                                                                                          (("1"
                                                                                                                            (ASSERT)
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL)
                                                                                                                         ("2"
                                                                                                                          (PROPAX)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL)
                                                                                                 ("2"
                                                                                                  (ASSERT)
                                                                                                  (("2"
                                                                                                    (INST-CP
                                                                                                     -12
                                                                                                     "excset(md!2)"
                                                                                                     "tau7!2 WITH [ex := bottom]"
                                                                                                     "tau8!1 WITH [ex := bottom]"
                                                                                                     "tau8!2 WITH [ex := bottom]"
                                                                                                     "m6!1"
                                                                                                     "m6!2")
                                                                                                    (("2"
                                                                                                      (FLATTEN)
                                                                                                      (("2"
                                                                                                        (ASSERT)
                                                                                                        (("2"
                                                                                                          (FLATTEN)
                                                                                                          (("2"
                                                                                                            (CASE-REPLACE
                                                                                                             "tau8!1 = tau8!2")
                                                                                                            (("1"
                                                                                                              (ASSERT)
                                                                                                              (("1"
                                                                                                                (CASE-REPLACE
                                                                                                                 "tau3!1 = tau3!2")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  NIL
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (LIFT-IF)
                                                                                                                  (("2"
                                                                                                                    (SPLIT
                                                                                                                     -40)
                                                                                                                    (("1"
                                                                                                                      (FLATTEN)
                                                                                                                      (("1"
                                                                                                                        (ASSERT)
                                                                                                                        NIL
                                                                                                                        NIL))
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (SPLIT
                                                                                                                       -23)
                                                                                                                      (("1"
                                                                                                                        (FLATTEN)
                                                                                                                        (("1"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL)
                                                                                                                       ("2"
                                                                                                                        (FLATTEN)
                                                                                                                        (("2"
                                                                                                                          (ASSERT)
                                                                                                                          NIL
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL)
                                                                                                             ("2"
                                                                                                              (APPLY-EXTENSIONALITY
                                                                                                               :HIDE?
                                                                                                               T)
                                                                                                              (("2"
                                                                                                                (CASE-REPLACE
                                                                                                                 "tau8!1 = (# st := tau8!1`st, ex := tau8!1`ex #)")
                                                                                                                (("1"
                                                                                                                  (ASSERT)
                                                                                                                  (("1"
                                                                                                                    (CASE-REPLACE
                                                                                                                     "tau8!2 = (# st := tau8!2`st, ex := tau8!2`ex #)")
                                                                                                                    (("1"
                                                                                                                      (ASSERT)
                                                                                                                      NIL
                                                                                                                      NIL)
                                                                                                                     ("2"
                                                                                                                      (APPLY-EXTENSIONALITY
                                                                                                                       :HIDE?
                                                                                                                       T)
                                                                                                                      NIL
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL)
                                                                                                                 ("2"
                                                                                                                  (APPLY-EXTENSIONALITY
                                                                                                                   :HIDE?
                                                                                                                   T)
                                                                                                                  NIL
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL)
                                                                                           ("2"
                                                                                            (SKOSIMP*)
                                                                                            (("2"
                                                                                              (INST
                                                                                               -11
                                                                                               "s!1"
                                                                                               "sigma!2"
                                                                                               "sigma1!2"
                                                                                               "sigma2!2"
                                                                                               "m1!3"
                                                                                               "m2!3")
                                                                                              (("2"
                                                                                                (ASSERT)
                                                                                                NIL
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL)
                                                                 ("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL)
                                                               ("2" (ASSERT)
                                                                (("2"
                                                                  (CASE
                                                                      "up?(ex(tau1!2)) AND Null?(a!2)")
                                                                  (("1"
                                                                    (FLATTEN)
                                                                    (("1"
                                                                      (ASSERT)
                                                                      NIL NIL))
                                                                    NIL)
                                                                   ("2"
                                                                    (LIFT-IF)
                                                                    (("2"
                                                                      (SPLIT
                                                                       -28)
                                                                      (("1"
                                                                        (FLATTEN)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL)
                                                                       ("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (SPLIT
                                                                           -12)
                                                                          (("1"
                                                                            (FLATTEN)
                                                                            (("1"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL)
                                                                           ("2"
                                                                            (FLATTEN)
                                                                            (("2"
                                                                              (ASSERT)
                                                                              NIL
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL)
                                                         ("2" (SKOSIMP*)
                                                          (("2"
                                                            (INST -6 "s!1"
                                                             "sigma!2"
                                                             "sigma1!2"
                                                             "sigma2!2" "m1!3"
                                                             "m2!3")
                                                            (("2" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (SKOSIMP*)
                                            (("2"
                                              (INST -3 "s!1" "sigma!2"
                                               "sigma1!2" "sigma2!2" "m1!3"
                                               "m2!3")
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("5" (SKOSIMP*)
                    (("5" (REWRITE "deriv_expr" -2)
                      (("5" (REWRITE "deriv_expr" -3)
                        (("5" (CASE "up?(ex(sigma!1))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2"
          (USE "well_founded?_product"
               ("ord1" "LAMBDA(i, j : nat) : i < j" "ord2"
                "LAMBDA(i, j : nat) : i < j"))
          (("2" (USE "wf_nat") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_induction| FORMULA-DECL NIL |wf_induction| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|NumExpr| TYPE-DECL NIL |NumExpr_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|NExpr| ADT-CONSTRUCTOR-DECL "[NumExpr -> (NExpr?)]" |Expr_adt| NIL)
    (|MethodCall| ADT-CONSTRUCTOR-DECL "[[Expr, Name, Expr] -> (MethodCall?)]"
     |Expr_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|Null?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|bottom?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|bottom| ADT-CONSTRUCTOR-DECL "(bottom?)" |lift_adt| NIL)
    (|CondExpr| ADT-CONSTRUCTOR-DECL "[[BoolExpr, Expr, Expr] -> (CondExpr?)]"
     |Expr_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|eval| DEF-DECL "bool" |Evaluation| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|BExpr| ADT-CONSTRUCTOR-DECL "[BoolExpr -> (BExpr?)]" |Expr_adt| NIL)
    (|Assign| ADT-CONSTRUCTOR-DECL "[[Name, Expr] -> (Assign?)]" |Expr_adt|
     NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Expr -> boolean]" |Expr_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL) NIL
    (|Expr_induction| FORMULA-DECL NIL |Expr_adt| NIL)
    (|deriv_expr| DEF-DECL "bool" |Semantics| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|deriv_stmt| DEF-DECL "bool" |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|ArgDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-DECL NIL |BoolExpr_adt| NIL)
    (|GhostVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|Stmt| TYPE-DECL NIL |Stmt_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|Expr| TYPE-DECL NIL |Expr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|well_founded?_product| FORMULA-DECL NIL WF NIL))
   9788 4901 T SHOSTAK))
 (|stmt_determ_step| 0
  (|stmt_determ_step-1| NIL 3371194190 3382347193
   ("" (SKOSIMP)
    ((""
      (LEMMA
       "wf_induction[[nat, nat], LAMBDA(n1, n2 : [nat, nat]) : proj_1(n1) < proj_1(n2) AND proj_2(n1) < proj_2(n2)]")
      (("1" (INST?)
        (("1" (ASSERT)
          (("1" (SPLIT -1)
            (("1" (PROPAX) NIL NIL)
             ("2" (HIDE 2)
              (("2" (SKOSIMP)
                (("2" (INDUCT "s")
                  (("1" (SKOSIMP*)
                    (("1" (HIDE -1 -2)
                      (("1" (REWRITE "deriv_stmt" -1)
                        (("1" (REWRITE "deriv_stmt" -2)
                          (("1" (CASE "up?(ex(sigma!1))")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (FLATTEN)
                                (("2" (CASE "eval(IfThenElse1_var!1)(sigma!1)")
                                  (("1" (ASSERT)
                                    (("1" (INST -6 "(x!1`1 - 1, x!1`2 - 1)")
                                      (("1" (ASSERT)
                                        (("1"
                                          (INST -6 "IfThenElse2_var!1"
                                           "sigma!1" "sigma1!1" "sigma2!1")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (INST -5 "(x!1`1 - 1, x!1`2 - 1)")
                                      (("2" (ASSERT)
                                        (("2"
                                          (INST -5 "IfThenElse3_var!1"
                                           "sigma!1" "sigma1!1" "sigma2!1")
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (SKOSIMP*)
                    (("2" (HIDE -1 -2)
                      (("2" (REWRITE "deriv_stmt" -1)
                        (("2" (REWRITE "deriv_stmt" -2)
                          (("2" (CASE "up?(ex(sigma!1))")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (SKOSIMP*)
                                (("2" (INST-CP -7 "(m1!1, m1!2)")
                                  (("2" (REPLACE -4)
                                    (("2" (REPLACE -1)
                                      (("2" (ASSERT)
                                        (("2"
                                          (INST -8 "Sequence1_var!1" "sigma!1"
                                           "tau!1" "tau!2")
                                          (("2" (ASSERT)
                                            (("2" (FLATTEN)
                                              (("2" (INST -7 "(m2!1, m2!2)")
                                                (("2" (ASSERT)
                                                  (("2"
                                                    (INST -7 "Sequence2_var!1"
                                                     "tau!1" "sigma1!1"
                                                     "sigma2!1")
                                                    (("2" (ASSERT)
                                                      (("2" (FLATTEN)
                                                        (("2" (ASSERT) NIL
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("3" (SKOSIMP*)
                    (("3" (REWRITE "deriv_stmt" -1)
                      (("3" (REWRITE "deriv_stmt" -2)
                        (("3" (CASE "up?(ex(sigma!1))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (FLATTEN)
                              (("2" (SKOSIMP*)
                                (("2"
                                  (USE "expr_determ_step"
                                       ("n1" "x!1`1 - 1" "n2" "x!1`2 - 1"))
                                  (("1" (ASSERT)
                                    (("1" (INST -1 "v!1" "v!2" "tau!1" "tau!2")
                                      (("1" (ASSERT)
                                        (("1" (SPLIT -1)
                                          (("1" (FLATTEN)
                                            (("1" (LIFT-IF)
                                              (("1" (ASSERT)
                                                (("1" (SPLIT -7)
                                                  (("1" (FLATTEN)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL)
                                                   ("2" (FLATTEN)
                                                    (("2" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (SKOSIMP*)
                                            (("2" (TYPEPRED "m1!1")
                                              (("2" (TYPEPRED "m2!1")
                                                (("2" (INST -13 "(m1!1, m2!1)")
                                                  (("2" (ASSERT)
                                                    (("2"
                                                      (INST -13 "s!1" "sigma!2"
                                                       "sigma1!2" "sigma2!2")
                                                      (("2" (ASSERT) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL)
                                   ("3" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("4" (SKOSIMP*)
                    (("4" (REWRITE "deriv_stmt" -1)
                      (("4" (REWRITE "deriv_stmt" -2)
                        (("4" (FLATTEN) (("4" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL)
                   ("5" (SKOSIMP*)
                    (("5" (REWRITE "deriv_stmt" -1)
                      (("5" (REWRITE "deriv_stmt" -2)
                        (("5" (CASE "up?(ex(sigma!1))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (FLATTEN)
                              (("2" (SKOSIMP*)
                                (("2"
                                  (USE "expr_determ_step"
                                       ("n1" "x!1`1 - 1" "n2" "x!1`2 - 1"))
                                  (("1" (ASSERT)
                                    (("1"
                                      (INST -1 "v!1" "v!2" "sigma1!1"
                                       "sigma2!1")
                                      (("1" (ASSERT)
                                        (("1" (SPLIT -1)
                                          (("1" (FLATTEN)
                                            (("1" (ASSERT) NIL NIL)) NIL)
                                           ("2" (SKOSIMP*)
                                            (("2" (INST -7 "(m1!1, m2!1)")
                                              (("2" (ASSERT)
                                                (("2"
                                                  (INST -7 "s!1" "sigma!2"
                                                   "sigma1!2" "sigma2!2")
                                                  (("2" (ASSERT) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL)
                                   ("3" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("6" (SKOSIMP*)
                    (("6" (REWRITE "deriv_stmt" -1)
                      (("6" (REWRITE "deriv_stmt" -2)
                        (("6" (CASE "up?(ex(sigma!1))")
                          (("1" (GRIND) NIL NIL)
                           ("2" (ASSERT)
                            (("2" (FLATTEN) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("7" (SKOSIMP*)
                    (("7" (HIDE -1 -2 -3)
                      (("7" (REWRITE "deriv_stmt" -1)
                        (("7" (REWRITE "deriv_stmt" -2)
                          (("7" (CASE "up?(ex(sigma!1))")
                            (("1" (GRIND) NIL NIL)
                             ("2" (ASSERT)
                              (("2" (SKOSIMP*)
                                (("2" (INST-CP -11 "(m1!1, m1!2)")
                                  (("2" (ASSERT)
                                    (("2"
                                      (INST -12 "TryCatch1_var!1" "sigma!1"
                                       "tau1!1" "tau1!2")
                                      (("2" (ASSERT)
                                        (("2" (FLATTEN)
                                          (("2" (REPLACE -12)
                                            (("2" (CASE "up?(ex(tau1!2))")
                                              (("1" (ASSERT)
                                                (("1"
                                                  (INST-CP -12 "(m2!1, m2!2)")
                                                  (("1" (ASSERT)
                                                    (("1"
                                                      (INST -13
                                                       "TryCatch2_var!1"
                                                       "tau1!2 WITH [ex := bottom]"
                                                       "tau2!1" "tau2!2")
                                                      (("1" (ASSERT)
                                                        (("1" (FLATTEN)
                                                          (("1" (REPLACE -13)
                                                            (("1"
                                                              (INST -12
                                                               "(m3!1, m3!2)")
                                                              (("1" (ASSERT)
                                                                (("1"
                                                                  (INST -12
                                                                   "TryCatch3_var!1"
                                                                   "tau2!2 WITH [ex := bottom]"
                                                                   "tau3!1"
                                                                   "tau3!2")
                                                                  (("1"
                                                                    (ASSERT)
                                                                    (("1"
                                                                      (FLATTEN)
                                                                      (("1"
                                                                        (CASE
                                                                            "up?(ex(tau2!2))")
                                                                        (("1"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL)
                                                                         ("2"
                                                                          (ASSERT)
                                                                          NIL
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (ASSERT)
                                                (("2" (REWRITE "deriv_stmt" -3)
                                                  (("2"
                                                    (REWRITE "deriv_stmt" -8)
                                                    (("2" (FLATTEN)
                                                      (("2" (ASSERT)
                                                        (("2"
                                                          (INST -13
                                                           "(m3!1, m3!2)")
                                                          (("2" (ASSERT)
                                                            (("2"
                                                              (INST -13
                                                               "TryCatch3_var!1"
                                                               "tau2!2 WITH [ex := bottom]"
                                                               "tau3!1"
                                                               "tau3!2")
                                                              (("2" (ASSERT)
                                                                (("2" (FLATTEN)
                                                                  (("2"
                                                                    (ASSERT)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("8" (SKOSIMP*)
                    (("8" (HIDE -1)
                      (("8" (REWRITE "deriv_stmt" -1)
                        (("8" (REWRITE "deriv_stmt" -2)
                          (("8" (ASSERT)
                            (("8" (CASE "up?(ex(sigma!1))")
                              (("1" (GRIND) NIL NIL)
                               ("2" (ASSERT)
                                (("2" (FLATTEN)
                                  (("2" (INST -5 "(x!1`1 - 1, x!1`2 - 1)")
                                    (("1" (ASSERT)
                                      (("1" (INST?)
                                        (("1" (INST -5 "sigma2!1")
                                          (("1" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL)
                                     ("2" (ASSERT) NIL NIL)
                                     ("3" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("2"
        (USE "well_founded?_product"
             ("ord1" "LAMBDA(i, j : nat) : i < j" "ord2"
              "LAMBDA(i, j : nat) : i < j"))
        (("2" (USE "wf_nat") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   PROVED
   ((|well_founded?_product| FORMULA-DECL NIL WF NIL)
    (|wf_nat| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|Stmt| TYPE-DECL NIL |Stmt_adt| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL) (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Expr| TYPE-DECL NIL |Expr_adt| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|GhostVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-DECL NIL |BoolExpr_adt| NIL)
    (|ArgDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|deriv_stmt| DEF-DECL "bool" |Semantics| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Stmt -> boolean]" |Stmt_adt| NIL)
    (|While| ADT-CONSTRUCTOR-DECL "[[BoolExpr, Stmt] -> (While?)]" |Stmt_adt|
     NIL)
    (|x!1| SKOLEM-CONST-DECL "[nat, nat]" |Semantics| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Stmt -> boolean]" |Stmt_adt| NIL)
    (|TryCatch| ADT-CONSTRUCTOR-DECL "[[Stmt, Stmt, Stmt] -> (TryCatch?)]"
     |Stmt_adt| NIL)
    (|bottom| ADT-CONSTRUCTOR-DECL "(bottom?)" |lift_adt| NIL)
    (|bottom?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|Throw| ADT-CONSTRUCTOR-DECL "(Throw?)" |Stmt_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Stmt -> boolean]" |Stmt_adt| NIL)
    (|StmtExpr| ADT-CONSTRUCTOR-DECL "[Expr -> (StmtExpr?)]" |Stmt_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Stmt -> boolean]" |Stmt_adt| NIL)
    (|Skip| ADT-CONSTRUCTOR-DECL "(Skip?)" |Stmt_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Stmt -> boolean]" |Stmt_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|expr_determ_step| FORMULA-DECL NIL |Semantics| NIL)
    (|Set| ADT-CONSTRUCTOR-DECL "[[Name, Expr] -> (Set?)]" |Stmt_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Stmt -> boolean]" |Stmt_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Stmt -> boolean]" |Stmt_adt| NIL)
    (|Sequence| ADT-CONSTRUCTOR-DECL "[[Stmt, Stmt] -> (Sequence?)]" |Stmt_adt|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Stmt -> boolean]" |Stmt_adt| NIL)
    (|IfThenElse| ADT-CONSTRUCTOR-DECL
     "[[BoolExpr, Stmt, Stmt] -> (IfThenElse?)]" |Stmt_adt| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|eval| DEF-DECL "bool" |Evaluation| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Stmt_induction| FORMULA-DECL NIL |Stmt_adt| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_induction| FORMULA-DECL NIL |wf_induction| NIL))
   2323 2284 T SHOSTAK))
 (|expr_determ| 0
  (|expr_determ-1| NIL 3371191515 3382347220
   ("" (SKOSIMP*)
    (("" (USE "expr_determ_step")
      (("" (ASSERT)
        (("" (EXPAND "derives")
          (("" (SKOSIMP*)
            (("" (INST?)
              (("" (INST -1 "n!2")
                (("" (INST?)
                  (("" (INST?)
                    (("" (ASSERT)
                      (("" (SPLIT -1)
                        (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (SKOSIMP*)
                          (("2" (USE "stmt_determ_step")
                            (("2" (ASSERT) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|stmt_determ_step| FORMULA-DECL NIL |Semantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|derives| CONST-DECL "bool" |Semantics| NIL)
    (|expr_determ_step| FORMULA-DECL NIL |Semantics| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-DECL NIL |Stmt_adt| NIL)
    (|ArgDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-DECL NIL |BoolExpr_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|GhostVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|Expr| TYPE-DECL NIL |Expr_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL))
   1362 1360 T SHOSTAK))
 (|stmt_determ| 0
  (|stmt_determ-1| NIL 3371193973 3382347243
   ("" (SKOSIMP*)
    (("" (USE "stmt_determ_step")
      (("" (EXPAND "derives")
        (("" (SKOSIMP*)
          (("" (INST?) (("" (INST?) (("" (ASSERT) NIL NIL)) NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|derives| CONST-DECL "bool" |Semantics| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|stmt_determ_step| FORMULA-DECL NIL |Semantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |Semantics| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-DECL NIL |Stmt_adt| NIL)
    (|ArgDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-DECL NIL |BoolExpr_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|GhostVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|Expr| TYPE-DECL NIL |Expr_adt| NIL))
   1274 1270 T SHOSTAK)))

