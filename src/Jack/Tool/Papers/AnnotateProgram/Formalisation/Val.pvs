% Values used in program model

% Boolean, Bottom, Integers, Null and non-null References, and Unit
% Types for these are defined in JType

Val[Name : TYPE+] : DATATYPE 
BEGIN

  Bool(b : bool) : Bool?
% Do not confuse Bottom (a Val) with bottom, a constructor of the lift datatype
  Bottom : Bottom?    % undefined value
  Int(i : int) : Int?
  Null : Null?
  % a is the memory address and class_name is the dynamic type of the object
  Reference(a : int, class_name : Name) : Reference?
  Unit : Unit?        % dummy value returned by void functions


END Val


ValProp[Name : TYPE+] : THEORY
BEGIN

  IMPORTING Val[Name], JType

  % A value is defined, if it is not Bottom
  defined?(v : Val) : boolean = NOT Bottom?(v)

  % For each type, a default value is defined
  default_value(t : JType) : (defined?) =
    CASES t OF
      IntType : Int(0),
      BoolType : Bool(FALSE),
      Void : Unit,
      RefType : Null
    ENDCASES

  % Return type of value
  type_of(v : (defined?)) : JType =
    CASES v OF
      Bool(b) : BoolType,
      Int(i) : IntType,
      Null : RefType,
      Reference(a, c) : RefType,
      Unit : Void
    ENDCASES

END ValProp

