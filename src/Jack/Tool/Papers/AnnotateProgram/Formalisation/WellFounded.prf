(WF
 (well_founded?_product 0
  (well_founded?_product-1 nil 3372766387 3372767677
   ("" (skosimp*)
    (("" (expand "well_founded?")
      (("" (skosimp*)
        (("" (inst -1 "LAMBDA(x : A) : EXISTS(y : B) : p!1(x, y)")
          (("" (split -1)
            (("1" (skosimp*)
              (("1" (inst -2 "LAMBDA(y : B) : p!1(y!2, y)")
                (("1" (split -2)
                  (("1" (skosimp*)
                    (("1" (inst 1 "(y!2, y!3)")
                      (("1" (skosimp*)
                        (("1" (inst -2 "PROJ_1(x!1)")
                          (("1" (typepred "x!1")
                            (("1" (inst 1 "PROJ_2(x!1)")
                              (("1"
                                (assert)
                                (("1"
                                  (case-replace
                                   "x!1 = (PROJ_1(x!1), PROJ_2(x!1))")
                                  (("1" (grind) nil nil)
                                   ("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (typepred "y!2") (("2" (propax) nil nil)) nil))
                  nil))
                nil))
              nil)
             ("2" (inst 1 "PROJ_1(y!1)" "PROJ_2(y!1)")
              (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished
   ((well_founded? const-decl "bool" orders nil)
    (A formal-type-decl nil WF nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (B formal-type-decl nil WF nil) nil nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   714379 6890 t shostak)))
(WFProperties
 (wf_founded_is_not_reflexive 0
  (wf_founded_is_not_reflexive-1 nil 3389439536 3389441483
   ("" (skosimp)
    (("" (expand* "well_founded?" "reflexive?")
      (("" (name "p" "choose({x:T|TRUE})")
        (("1" (inst - "LAMBDA (x : T) : TRUE")
          (("1" (split -)
            (("1" (skosimp*)
              (("1" (inst - "y!1") (("1" (grind) nil nil)) nil)) nil)
             ("2" (grind) nil nil))
            nil))
          nil)
         ("2" (expand "nonempty?")
          (("2" (expand "empty?")
            (("2" (expand "member") (("2" (propax) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((TRUE const-decl "bool" booleans nil)
    (choose const-decl "(p)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-nonempty-type-decl nil WFProperties nil)
    (pred type-eq-decl nil defined_types nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (well_founded? const-decl "bool" orders nil)
    (reflexive? const-decl "bool" relations nil))
   1362337 510 t shostak)))

