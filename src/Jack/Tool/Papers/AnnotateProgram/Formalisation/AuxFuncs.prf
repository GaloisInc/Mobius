(set2list
 (set2list_TCC1 0
  (set2list_TCC1-1 nil 3387877128 nil ("" (subtype-tcc) nil nil)
   unfinished nil nil nil nil nil))
 (set2list_TCC2 0
  (set2list_TCC2-1 nil 3387877128 nil ("" (termination-tcc) nil nil)
   unfinished nil nil nil nil nil))
 (excluded_middle 0
  (excluded_middle-1 nil 3388476043 3388476054
   ("" (assert) (("" (skosimp) nil nil)) nil) unchecked nil 11154 10 t
   shostak))
 (incredibly_stupid_property 0
  (incredibly_stupid_property-1 nil 3388464953 3388476102
   ("" (skosimp)
    (("" (apply-extensionality) (("" (use "excluded_middle") nil nil))
      nil))
    nil)
   unchecked
   ((excluded_middle formula-decl nil set2list nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil set2list nil))
   25766 30 t shostak))
 (stupid_property_of_choose 0
  (stupid_property_of_choose-1 nil 3388464004 3388473751
   ("" (skolem-typepred)
    (("" (name "y" "choose(s!1)")
      (("" (replace -1)
        (("" (assert) (("" (use "incredibly_stupid_property") nil nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil set2list nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (incredibly_stupid_property formula-decl nil set2list nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (choose const-decl "(p)" sets nil))
   42072 30 t shostak))
 (epsilon_membership_TCC1 0
  (epsilon_membership_TCC1-1 nil 3388477959 nil
   ("" (existence-tcc) nil nil) unfinished nil nil nil nil nil))
 (epsilon_membership 0
  (epsilon_membership-1 nil 3388477963 3388480021
   ("" (skolem-typepred)
    (("" (use "epsilon_ax[T]")
      (("" (prop)
        (("" (expand* "nonempty?" "empty?" "member")
          (("" (skolem!) (("" (inst?) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   unchecked
   ((epsilon_ax formula-decl nil epsilons nil)
    (pred type-eq-decl nil defined_types nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (T formal-type-decl nil set2list nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   2058004 50 t shostak))
 (add_remove_choose_equivalence 0
  (add_remove_choose_equivalence-1 nil 3388463415 3388480592
   ("" (skolem-typepred)
    (("" (expand* "add" "remove")
      (("" (expand "member" 1 1)
        (("" (assert)
          (("" (apply-extensionality)
            (("" (case "choose(s!1) = x!1 OR choose(s!1) /= x!1")
              (("1" (grind)
                (("1" (use "epsilon_membership")
                  (("1" (assert) nil nil)) nil))
                nil)
               ("2" (lemma "excluded_middle")
                (("2" (inst -1 "choose(s!1) = x!1")
                  (("2" (expand "/=") (("2" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil set2list nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (choose const-decl "(p)" sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (excluded_middle formula-decl nil set2list nil)
    (empty? const-decl "bool" sets nil)
    (epsilon_membership formula-decl nil set2list nil)
    (add const-decl "(nonempty?)" sets nil)
    (remove const-decl "set" sets nil))
   517739 240 t shostak))
 (add_remove_equivalence 0
  (add_remove_equivalence-1 nil 3388481102 3388481288
   ("" (skosimp)
    (("" (expand* "add" "remove")
      (("" (apply-extensionality)
        (("" (hide 2)
          (("" (case "x!1 = x!2")
            (("1" (assert) nil nil)
             ("2" (assert)
              (("2" (expand "member") (("2" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unchecked
   ((remove const-decl "set" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil) (member const-decl "bool" sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil set2list nil))
   186231 70 t shostak))
 (not_in_s_implies_not_in_set2list_TCC1 0
  (not_in_s_implies_not_in_set2list_TCC1-1 nil 3388485439 nil
   ("" (subtype-tcc) nil nil) nil nil nil nil nil nil))
 (not_in_s_implies_not_in_set2list 0
  (not_in_s_implies_not_in_set2list-1 nil 3388486051 3388486133
   ("" (skosimp) (("" (postpone) nil nil)) nil) unfinished nil 81931 40
   t shostak))
 (not_removed_set2list_TCC1 0
  (not_removed_set2list_TCC1-1 nil 3388485439 nil
   ("" (subtype-tcc) nil nil) nil nil nil nil nil nil))
 (not_removed_set2list 0
  (not_removed_set2list-1 nil 3388485440 3388486372
   ("" (skosimp) (("" (expand "remove") (("" (postpone) nil nil)) nil))
    nil)
   unfinished nil 205371 50 t shostak))
 (set2list_same_elements 0
  (set2list_same_elements-1 nil 3388429899 3388485859
   ("" (skosimp)
    (("" (prop)
      (("1" (expand* "member" "set2list")
        (("1" (lift-if)
          (("1" (assert)
            (("1" (prop)
              (("1" (expand* "empty?" "member") (("1" (inst?) nil nil))
                nil)
               ("2" (lemma "not_removed_set2list")
                (("2" (inst -1 "s!1" "x!1" "choose(s!1)")
                  (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand* "member" "set2list")
        (("2" (lift-if)
          (("2" (assert)
            (("2" (prop)
              (("1" (replace -1)
                (("1" (expand "choose")
                  (("1" (use "epsilon_membership")
                    (("1" (expand "nonempty?") (("1" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (case "x!1 = choose(s!1)")
                (("1" (replace -1)
                  (("1" (expand "choose")
                    (("1" (use "epsilon_membership")
                      (("1" (expand "nonempty?")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (use "not_in_s_implies_not_in_set2list")
                  (("2" (assert)
                    (("2" (expand "remove" -1)
                      (("2" (expand "member" -1)
                        (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   proved
   ((= const-decl "[T, T -> boolean]" equalities nil)
    (remove const-decl "set" sets nil)
    (not_in_s_implies_not_in_set2list formula-decl nil set2list nil)
    (epsilon_membership formula-decl nil set2list nil)
    (s!1 skolem-const-decl "finite_set[T]" set2list nil)
    (set2list def-decl "list[T]" set2list nil)
    (member def-decl "bool" list_props nil)
    (member const-decl "bool" sets nil)
    (not_removed_set2list formula-decl nil set2list nil)
    (finite_remove application-judgement "finite_set" finite_sets nil)
    (choose const-decl "(p)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (empty? const-decl "bool" sets nil)
    (T formal-type-decl nil set2list nil))
   382544 350 t shostak))
 (remove_list2set_set2list 0
  (remove_list2set_set2list-1 nil 3388473330 3388473501
   ("" (skosimp)
    (("" (expand* "list2set" "set2list" "remove")
      (("" (grind)
        (("1" (expand "emptyset") (("1" (propax) nil nil)) nil)
         ("2" (expand "emptyset") (("2" (postpone) nil nil)) nil)
         ("3" (postpone) nil nil))
        nil))
      nil))
    nil)
   unfinished nil 170992 380 t shostak))
 (set_list_set 0
  (set_list_set-1 nil 3387877130 3388473254
   ("" (skosimp)
    (("" (expand* "list2set" "set2list")
      (("" (lift-if)
        (("" (assert)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "emptyset")
                (("1" (apply-extensionality)
                  (("1" (expand "empty?")
                    (("1" (inst?)
                      (("1" (expand "member") (("1" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten) (("2" (postpone) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   unfinished nil 552110 90 t shostak)))
(listfuncs
 (before_TCC1 0
  (before_TCC1-1 nil 3388429891 nil ("" (termination-tcc) nil nil)
   unfinished nil nil nil nil nil)))

