(|State|
 (|update_locals_TCC1| 0
  (|update_locals_TCC1-1| NIL 3391159723 3395750968 ("" (SUBTYPE-TCC) NIL NIL)
   PROVED
   ((|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   40 40 NIL NIL))
 (|update_locals_TCC2| 0
  (|update_locals_TCC2-1| NIL 3391159723 3395750968
   ("" (SKOSIMP*) (("" (REWRITE "card_rest") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   PROVED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|card_rest| FORMULA-DECL NIL |finite_sets| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   22 23 T NIL))
 (|initial_Program_state_TCC1| 0
  (|initial_Program_state_TCC1-1| NIL 3390799294 3395750968
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL))
   10 10 NIL NIL))
 (|initial_Program_state_TCC2| 0
  (|initial_Program_state_TCC2-1| NIL 3390799294 3395750968
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL))
   29 29 NIL NIL))
 (|wf_initial_Program_state| 0
  (|wf_initial_Program_state-1| NIL 3390799316 3395750971
   ("" (SKOSIMP*)
    (("" (EXPAND "initial_Program_state")
      (("" (EXPAND "wf_state")
        (("" (SKOSIMP*)
          (("" (EXPAND "is_field")
            (("" (EXPAND "is_local")
              (("" (EXPAND "defined?")
                (("" (EXPAND "var_names")
                  (("" (EXPAND "get_FieldDecl")
                    (("" (EXPAND "get_LocalDecl")
                      (("" (SPLIT 1)
                        (("1" (LIFT-IF)
                          (("1" (ASSERT)
                            (("1" (SPLIT 1)
                              (("1" (SKOSIMP*)
                                (("1" (REWRITE "nonempty_exists")
                                  (("1" (SKOSIMP*)
                                    (("1" (TYPEPRED "x!1")
                                      (("1" (INST?) (("1" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP*)
                          (("2" (LIFT-IF)
                            (("2" (ASSERT)
                              (("2" (SPLIT 1)
                                (("1" (PROPAX) NIL NIL)
                                 ("2" (REWRITE "nonempty_exists")
                                  (("2" (INST?) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (ASSERT)
                          (("3" (LIFT-IF)
                            (("3" (ASSERT)
                              (("3" (SPLIT 1)
                                (("1" (PROPAX) NIL NIL)
                                 ("2" (SKOSIMP*)
                                  (("2" (SPLIT 2)
                                    (("1" (SKOSIMP*)
                                      (("1" (EXPAND "default_value")
                                        (("1" (LIFT-IF)
                                          (("1" (ASSERT)
                                            (("1" (REWRITE "nonempty_exists")
                                              (("1" (SKOSIMP*)
                                                (("1" (TYPEPRED "x!1")
                                                  (("1" (INST?)
                                                    (("1" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL)
                                     ("2" (PROPAX) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("4" (LIFT-IF)
                          (("4" (ASSERT)
                            (("4" (TYPEPRED "this_val!1")
                              (("4" (EXPAND "defined?")
                                (("4" (ASSERT)
                                  (("4" (SPLIT 2)
                                    (("1" (PROPAX) NIL NIL)
                                     ("2" (SKOSIMP*)
                                      (("2" (SPLIT 2)
                                        (("1" (EXPAND "default_value")
                                          (("1" (LIFT-IF)
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL)
                                         ("2" (SKOSIMP*)
                                          (("2" (REWRITE "nonempty_exists")
                                            (("2" (INST?)
                                              (("2" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|initial_Program_state| CONST-DECL "PState" |State| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|get_LocalDecl| CONST-DECL "lift[LocalVarDecl]" |ProgramFunctions| NIL)
    (|vn!1| SKOLEM-CONST-DECL "Name" |State| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |State| NIL)
    (|p!1| SKOLEM-CONST-DECL "Program[Name]" |State| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|default_value| CONST-DECL "(defined?)" |ValProp| NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|get_FieldDecl| CONST-DECL "lift[FieldDecl]" |ProgramFunctions| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL))
   264 261 T NIL))
 (|wf_state_vars_local_or_field| 0
  (|wf_state_vars_local_or_field-1| NIL 3390798989 3395751110
   ("" (SKOSIMP*)
    (("" (USE "wf_program_variables_disjoint")
      (("" (CASE-REPLACE "vn!1 = This")
        (("1" (USE "wf_program_variables_not_reserved_words")
          (("1" (ASSERT) (("1" (GRIND) NIL NIL)) NIL)) NIL)
         ("2" (GRIND) NIL NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|wf_program_variables_disjoint| FORMULA-DECL NIL |WellFormedProgram| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL)
    (|wf_program_variables_not_reserved_words| FORMULA-DECL NIL
     |WellFormedProgram| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|disjoint?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|reserved_words| CONST-DECL "finite_set[Name]" |Program| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|finite_intersection1| APPLICATION-JUDGEMENT "finite_set" |finite_sets|
     NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   9812 1913 T NIL))
 (|wf_state_update_local| 0
  (|wf_state_update_local-1| NIL 3391158897 3395750996
   ("" (SKOSIMP*)
    (("" (EXPAND "update_local")
      (("" (EXPAND "wf_state")
        (("" (EXPAND "is_field")
          (("" (EXPAND "is_local")
            (("" (EXPAND "defined?")
              (("" (SKOSIMP*)
                (("" (INST -1 "vn!2")
                  (("" (FLATTEN)
                    (("" (ASSERT)
                      (("" (SPLIT 2)
                        (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)
                         ("3" (SKOSIMP*)
                          (("3" (CASE-REPLACE "vn!1 = vn!2")
                            (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL)
                         ("4" (SKOSIMP*)
                          (("4" (ASSERT)
                            (("4" (CASE-REPLACE "vn!1 = vn!2")
                              (("1" (ASSERT)
                                (("1" (TYPEPRED "v!1") (("1" (GRIND) NIL NIL))
                                  NIL))
                                NIL)
                               ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|update_local| CONST-DECL "PState" |State| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL))
   41 40 T SHOSTAK))
 (|wf_state_update_locals| 0
  (|wf_state_update_locals-1| NIL 3391159739 3395750998
   (""
    (USE
     "wf_induction[finite_set[[Name, Val]], (LAMBDA(x, y : finite_set[[Name, Val]]) : card(x) < card(y))]")
    (("1"
      (INST -1
       "LAMBDA (V : finite_set[[Name, Val]]) : FORALL (p: Program, s: PState) :

        wf_state(p)(s) IMPLIES
         (FORALL (v: [Name, Val]): V(v) IMPLIES
            is_local(PROJ_1(v), s) AND defined?(PROJ_2(v)))
          IMPLIES wf_state(p)(update_locals(V)(s))")
      (("1" (SPLIT -1)
        (("1" (SKOSIMP*) (("1" (INST?) (("1" (ASSERT) NIL NIL)) NIL)) NIL)
         ("2" (HIDE 2)
          (("2" (SKOSIMP*)
            (("2" (EXPAND "update_locals" 1)
              (("2" (SPLIT 1)
                (("1" (SKOSIMP*) NIL NIL)
                 ("2" (SKOSIMP*)
                  (("2" (INST -1 "rest(x!1)")
                    (("2" (REWRITE "card_rest")
                      (("2" (ASSERT)
                        (("2" (INST?)
                          (("2" (ASSERT)
                            (("2" (SPLIT -1)
                              (("1" (SKOSIMP*)
                                (("1" (INST-CP -3 "v!1")
                                  (("1" (ASSERT)
                                    (("1" (INST -3 "choose(x!1)")
                                      (("1" (ASSERT)
                                        (("1" (SPLIT -4)
                                          (("1" (FLATTEN)
                                            (("1" (ASSERT)
                                              (("1" (EXPAND "update_local" 1)
                                                (("1" (EXPAND "is_local" 1)
                                                  (("1" (EXPAND "defined?")
                                                    (("1"
                                                      (CASE-REPLACE
                                                       "choose(x!1)`1 = proj_1(v!1)")
                                                      (("1" (ASSERT) NIL NIL)
                                                       ("2" (ASSERT)
                                                        (("2" (GRIND) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (GRIND) NIL NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (LEMMA "wf_state_update_local")
                                (("2"
                                  (INST -1 "p!1" "s!1" "proj_1(choose(x!1))"
                                   "proj_2(choose(x!1))")
                                  (("1" (ASSERT)
                                    (("1" (INST? -3)
                                      (("1" (ASSERT)
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT)
                                            (("1" (GRIND) NIL NIL)) NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (USE "wf_card[[Name, Val]]") NIL NIL))
    NIL)
   PROVED
   ((|wf_card| FORMULA-DECL NIL |WF_Card| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|update_locals| DEF-DECL "PState" |State| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|card_rest| FORMULA-DECL NIL |finite_sets| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (/= CONST-DECL "boolean" |notequal| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|remove| CONST-DECL "set" |sets| NIL)
    (|finite_remove| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|x!1| SKOLEM-CONST-DECL "finite_set[[Name, Val]]" |State| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|wf_state_update_local| FORMULA-DECL NIL |State| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|finite_rest| APPLICATION-JUDGEMENT "finite_set" |finite_sets| NIL)
    (|rest| CONST-DECL "set" |sets| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|well_founded?| CONST-DECL "bool" |orders| NIL)
    (|card| CONST-DECL "{n: nat | n = Card(S)}" |finite_sets| NIL)
    (|Card| CONST-DECL "nat" |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL)
    (|wf_induction| FORMULA-DECL NIL |wf_induction| NIL))
   215 214 T SHOSTAK))
 (|wf_state_update| 0
  (|wf_state_update-1| NIL 3390803416 3395750999
   ("" (SKOSIMP*)
    (("" (EXPAND "update")
      (("" (EXPAND "wf_state")
        (("" (SPLIT 1)
          (("1" (SKOSIMP*)
            (("1" (INST-CP -2 "vn!1")
              (("1" (ASSERT)
                (("1" (FLATTEN)
                  (("1" (EXPAND "update_local")
                    (("1" (EXPAND "is_field")
                      (("1" (EXPAND "is_local")
                        (("1" (ASSERT)
                          (("1" (INST -2 "vn!2")
                            (("1" (EXPAND "defined?")
                              (("1" (ASSERT)
                                (("1" (FLATTEN)
                                  (("1" (SPLIT 2)
                                    (("1" (PROPAX) NIL NIL)
                                     ("2" (PROPAX) NIL NIL)
                                     ("3" (SKOSIMP*)
                                      (("3" (ASSERT) (("3" (ASSERT) NIL NIL))
                                        NIL))
                                      NIL)
                                     ("4" (SKOSIMP*)
                                      (("4" (ASSERT)
                                        (("4" (ASSERT)
                                          (("4" (CASE-REPLACE "vn!2 = vn!1")
                                            (("1" (ASSERT)
                                              (("1" (TYPEPRED "v!1")
                                                (("1" (GRIND) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (SKOSIMP*)
            (("2" (SPLIT 2)
              (("1" (SKOSIMP*)
                (("1" (INST-CP -2 "vn!1")
                  (("1" (INST -2 "vn!2")
                    (("1" (ASSERT)
                      (("1" (FLATTEN)
                        (("1" (ASSERT)
                          (("1" (EXPAND "update_field")
                            (("1" (EXPAND "is_field")
                              (("1" (EXPAND "is_local")
                                (("1" (EXPAND "defined?")
                                  (("1" (ASSERT)
                                    (("1" (SPLIT 2)
                                      (("1" (SKOSIMP*)
                                        (("1" (ASSERT)
                                          (("1" (CASE-REPLACE "vn!2 = vn!1")
                                            (("1" (ASSERT) NIL NIL)) NIL))
                                          NIL))
                                        NIL)
                                       ("2" (SKOSIMP*)
                                        (("2" (ASSERT)
                                          (("2" (CASE-REPLACE "vn!2 = vn!1")
                                            (("1" (ASSERT)
                                              (("1" (TYPEPRED "v!1")
                                                (("1" (GRIND) NIL NIL)) NIL))
                                              NIL)
                                             ("2" (ASSERT) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("3" (PROPAX) NIL NIL)
                                       ("4" (PROPAX) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (SKOSIMP*) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|update| CONST-DECL "PState" |State| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL)
    (|update_field| CONST-DECL "PState" |State| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL))
   115 115 T SHOSTAK))
 (|wf_state_raise| 0
  (|wf_state_raise-1| NIL 3390908545 3395751000 ("" (GRIND) NIL NIL) PROVED
   ((|raise| CONST-DECL "PState" |State| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL))
   30 30 T SHOSTAK))
 (|wf_state_catch| 0
  (|wf_state_catch-1| NIL 3390908555 3395751000 ("" (GRIND) NIL NIL) PROVED
   ((|catch| CONST-DECL "PState" |State| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |State| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL))
   29 29 T SHOSTAK)))

