(|AnnotatedProgramSemantics|
 (|update_PState_TCC1| 0
  (|update_PState_TCC1-1| NIL 3390796236 3397385557 ("" (SUBTYPE-TCC) NIL NIL)
   PROVED
   ((|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL))
   23 23 NIL NIL))
 (|update_GhostVars_TCC1| 0
  (|update_GhostVars_TCC1-1| NIL 3390796236 3397385557
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL))
   4 4 T NIL))
 (|initial_AP_state_TCC1| 0
  (|initial_AP_state_TCC1-1| NIL 3389427978 3397385557
   ("" (SUBTYPE-TCC) NIL NIL) PROVED
   ((|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL))
   28 27 NIL NIL))
 (|IMP_SemanticsProofs_TCC1| 0
  (|IMP_SemanticsProofs_TCC1-1| NIL 3390796236 3397385559
   ("" (SKOSIMP*)
    (("" (EXPAND "on_method_entry")
      (("" (SPLIT -3)
        (("1" (FLATTEN)
          (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (ASSERT)
            (("2" (SKOSIMP*)
              (("2" (EXPAND "check_assertion")
                (("2" (SKOSIMP*)
                  (("2" (REPLACE -2 :DIR RL)
                    (("2" (REPLACE -13)
                      (("2"
                        (INST-CP -11 "inv!1" "v!4" "v!2" "s!1" "tau1!5"
                         "tau1!3" "m1!2" "m1!1" "m1!2 - 1" "m1!1 - 1")
                        (("1" (ASSERT)
                          (("1" (FLATTEN)
                            (("1" (REPLACE -12)
                              (("1" (REPLACE -13)
                                (("1" (REPLACE -14)
                                  (("1" (REPLACE -5 :DIR RL)
                                    (("1" (REPLACE -19)
                                      (("1"
                                        (INST-CP -11 "pre(m!1)" "v!5" "v!3"
                                         "tau1!1" "tau1!6" "tau1!4" "m2!2"
                                         "m2!1" "m2!2 - 1" "m2!1 - 1")
                                        (("1" (ASSERT)
                                          (("1" (FLATTEN)
                                            (("1" (REPLACE -12)
                                              (("1" (REPLACE -13)
                                                (("1" (REPLACE -14)
                                                  (("1" (REPLACE -8 :DIR RL)
                                                    (("1" (REPLACE -25)
                                                      (("1"
                                                        (INST -11
                                                         "pre_set(m!1)" "Unit"
                                                         "Unit" "tau2!1" "s1!1"
                                                         "s2!1" "n1!1" "n2!1"
                                                         "m3!2" "m3!1")
                                                        (("1" (ASSERT)
                                                          (("1" (FLATTEN)
                                                            (("1" (ASSERT) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|m1!2| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|m1!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL) (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   235 234 T NIL))
 (|IMP_SemanticsProofs_TCC2| 0
  (|IMP_SemanticsProofs_TCC2-1| NIL 3390796236 3397385561
   ("" (SKOSIMP*)
    (("" (EXPAND "on_method_exit_normal")
      (("" (SPLIT -3)
        (("1" (FLATTEN)
          (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (ASSERT)
            (("2" (SKOSIMP*)
              (("2" (EXPAND "check_assertion")
                (("2" (SKOSIMP*)
                  (("2"
                    (INST-CP -11 "post_set(m!1)" "Unit" "Unit" "s!1" "tau1!2"
                     "tau1!1" "n1!1" "n2!1" "m1!2" "m1!1")
                    (("2" (ASSERT)
                      (("2" (FLATTEN)
                        (("2" (REPLACE -12)
                          (("2" (REPLACE -13)
                            (("2"
                              (INST-CP -11 "post(m!1)" "v!4" "v!2" "tau1!1"
                               "tau1!5" "tau1!3" "m2!2" "m2!1" "m2!2 - 1"
                               "m2!1 - 1")
                              (("2" (ASSERT)
                                (("2" (FLATTEN)
                                  (("2" (REPLACE -12)
                                    (("2" (REPLACE -13)
                                      (("2" (REPLACE -14)
                                        (("2" (ASSERT)
                                          (("2" (REPLACE -5 :DIR RL)
                                            (("2" (REPLACE -21)
                                              (("2" (REPLACE -22 :DIR RL)
                                                (("2" (REPLACE -6)
                                                  (("2"
                                                    (INST -11 "inv!2" "v!5"
                                                     "v!3" "tau2!1" "tau1!6"
                                                     "tau1!4" "m3!2" "m3!1"
                                                     "m3!2 - 1" "m3!1 - 1")
                                                    (("2" (ASSERT)
                                                      (("2" (FLATTEN)
                                                        (("2" (REPLACE -11)
                                                          (("2" (REPLACE -12)
                                                            (("2" (REPLACE -13)
                                                              (("2"
                                                                (REPLACE -27
                                                                         :DIR RL)
                                                                (("2" (ASSERT)
                                                                  NIL NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   165 165 T NIL))
 (|IMP_SemanticsProofs_TCC3| 0
  (|IMP_SemanticsProofs_TCC3-1| NIL 3390796236 3397385562
   ("" (SKOSIMP*)
    (("" (EXPAND "on_method_exit_exceptional")
      (("" (SPLIT -3)
        (("1" (FLATTEN)
          (("1" (ASSERT)
            (("1" (EXPAND "check_assertion")
              (("1" (SKOSIMP*)
                (("1"
                  (INST-CP -10 "exc_set(m!1)" "Unit" "Unit"
                   "update_PState(s!1, catch)" "tau1!3" "tau1!1" "n1!1" "n2!1"
                   "m1!2" "m1!1")
                  (("1" (ASSERT)
                    (("1" (FLATTEN)
                      (("1" (REPLACE -11)
                        (("1" (REPLACE -15 :DIR RL)
                          (("1" (REPLACE -4)
                            (("1"
                              (INST -10 "inv!2" "v!3" "v!2" "tau1!3" "tau1!4"
                               "tau1!2" "m2!2" "m2!1" "m2!2 - 1" "m2!1 - 1")
                              (("1" (ASSERT)
                                (("1" (FLATTEN)
                                  (("1" (REPLACE -10)
                                    (("1" (REPLACE -11)
                                      (("1" (REPLACE -12)
                                        (("1" (REPLACE -7 :DIR RL)
                                          (("1" (REPLACE -20)
                                            (("1" (REPLACE -21 :DIR RL)
                                              (("1" (ASSERT) NIL NIL)) NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL) (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|catch| CONST-DECL "PState" |State| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|id_preserves| APPLICATION-JUDGEMENT "S" |identity_props| NIL))
   114 114 T NIL))
 (|IMP_SemanticsProofs_TCC4| 0
  (|IMP_SemanticsProofs_TCC4-1| NIL 3390796236 3397385563
   ("" (SKOSIMP*)
    (("" (EXPAND "execute_CaseJML")
      (("" (LIFT-IF)
        (("" (SPLIT -3)
          (("1" (FLATTEN)
            (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL)
           ("2" (FLATTEN)
            (("2" (ASSERT)
              (("2" (FLATTEN)
                (("2" (ASSERT)
                  (("2"
                    (INST -4
                     "IfThenElse(PROJ_1(car(branches!1)), PROJ_2(car(branches!1)),
                           CaseJML(cdr(branches!1)))"
                     "Unit" "Unit" "s!1" "s1!1" "s2!1" "n1!1" "n2!1" "n1!1 - 1"
                     "n2!1 - 1")
                    (("2" (ASSERT)
                      (("2" (SPLIT -4)
                        (("1" (PROPAX) NIL NIL) ("2" (PROPAX) NIL NIL)
                         ("3" (PROPAX) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|Unit| ADT-CONSTRUCTOR-DECL "(Unit?)" |Val_adt| NIL)
    (|Unit?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|CaseJML| ADT-CONSTRUCTOR-DECL "[list[[BoolExpr, Stmt]] -> (CaseJML?)]"
     |Body_adt| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|IfThenElse| ADT-CONSTRUCTOR-DECL
     "[[BoolExpr, Stmt, Stmt] -> (IfThenElse?)]" |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL))
   52 52 T NIL))
 (|IMP_SemanticsProofs_TCC5| 0
  (|IMP_SemanticsProofs_TCC5-1| NIL 3390796236 3397385563
   ("" (SKOSIMP*)
    (("" (EXPAND "execute_set")
      (("" (SKOSIMP*)
        ((""
          (INST -1 "e!1" "v!1" "v!2" "s!1" "tau!1" "tau!2" "n1!1" "n2!1"
           "n1!1 - 1" "n2!1 - 1")
          (("1" (ASSERT)
            (("1" (FLATTEN)
              (("1" (REPLACE -2)
                (("1" (REPLACE -3)
                  (("1" (REPLACE -1)
                    (("1" (ASSERT)
                      (("1" (REPLACE -6 :DIR RL) (("1" (ASSERT) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL) (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|n2!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|n1!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   31 31 T NIL))
 (|IMP_SemanticsProofs_TCC6| 0
  (|IMP_SemanticsProofs_TCC6-1| NIL 3397385547 3397385808
   ("" (SKOSIMP*)
    (("" (EXPAND "execute_assert")
      (("" (SPLIT -2)
        (("1" (FLATTEN)
          (("1" (ASSERT) (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL)
         ("2" (FLATTEN)
          (("2" (ASSERT)
            (("2" (FLATTEN)
              (("2" (EXPAND "check_assertion")
                (("2" (SKOSIMP*)
                  (("2" (APPLY (REPEAT (INST? -5 :WHERE (-2 -7))))
                    (("1" (ASSERT)
                      (("1" (FLATTEN)
                        (("1" (REPLACE -5)
                          (("1" (REPLACE -7)
                            (("1" (LIFT-IF)
                              (("1" (ASSERT)
                                (("1" (SPLIT -3)
                                  (("1" (FLATTEN)
                                    (("1" (ASSERT)
                                      (("1" (SPLIT -2)
                                        (("1" (FLATTEN)
                                          (("1" (ASSERT) NIL NIL)) NIL)
                                         ("2" (FLATTEN)
                                          (("2" (ASSERT) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN) (("2" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL) ("3" (ASSERT) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|n2!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|n1!1| SKOLEM-CONST-DECL "nat" |AnnotatedProgramSemantics| NIL)
    (|check_assertion| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL))
   14500 105 T NIL))
 (|wf_state_vars_tricotomy| 0
  (|wf_state_vars_tricotomy-1| NIL 3395147174 3397385591
   ("" (SKOSIMP)
    (("" (EXPAND* "wf_state" "declared_var_names")
      (("" (EXPAND* "wf_state" "wf_ghoststate" "id")
        (("" (FLATTEN)
          (("" (INST?) (("" (INST?) (("" (PROP) NIL NIL)) NIL)) NIL)) NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL))
   26 25 T SHOSTAK))
 (|wf_state_ghost_not_local_or_field| 0
  (|wf_state_ghost_not_local_or_field-1| NIL 3390125110 3397385594
   ("" (SKOSIMP)
    (("" (EXPAND "wf_state")
      ((""
        (EXPAND* "wf_state" "wf_ghoststate" "id" "is_ghost" "is_field"
         "is_local")
        (("" (FLATTEN)
          (("" (USE "wf_program_variables_disjoint")
            (("" (USE "wf_program_variables_not_reserved_words")
              (("" (ASSERT)
                (("" (FLATTEN)
                  (("" (CASE-REPLACE "vn!1 = This")
                    (("1" (HIDE -3 -4 -5)
                      (("1"
                        (EXPAND* "disjoint?" "intersection" "empty?" "member"
                         "declared_var_names")
                        (("1" (INST? -)
                          (("1" (SPLIT)
                            (("1" (INST? -3)
                              (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL))
                              NIL)
                             ("2" (EXPAND "reserved_words")
                              (("2" (FLATTEN) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (HIDE -1)
                      (("2"
                        (EXPAND* "disjoint?" "empty?" "intersection" "member")
                        (("2" (INST - "vn!1")
                          (("2" (INST - "vn!1")
                            (("2" (INST - "vn!1")
                              (("2" (INST - "vn!1")
                                (("2" (INST - "vn!1") (("2" (GROUND) NIL NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|wf_program_variables_not_reserved_words| FORMULA-DECL NIL
     |WellFormedProgram| NIL)
    (|reserved_words| CONST-DECL "finite_set[Name]" |Program| NIL)
    (|disjoint?| CONST-DECL "bool" |sets| NIL)
    (|intersection| CONST-DECL "set" |sets| NIL)
    (|empty?| CONST-DECL "bool" |sets| NIL)
    (|member| CONST-DECL "bool" |sets| NIL)
    (|declared_var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|wf_program_variables_disjoint| FORMULA-DECL NIL |WellFormedProgram| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL))
   219 219 T SHOSTAK))
 (|wf_update_PState| 0
  (|wf_update_PState-2| NIL 3392375532 3397385594 ("" (GRIND) NIL NIL) PROVED
   ((|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|wf_ghoststate| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|getGhostDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_ghost| CONST-DECL "boolean" |SemanticsJML| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|is_local| CONST-DECL "boolean" |State| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|getFieldDecls| CONST-DECL "finite_set[FieldDecl]" |ProgramFunctions| NIL)
    (|is_field| CONST-DECL "boolean" |State| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL))
   66 65 NIL NIL)
  (|wf_update_PState-1| NIL 3391156508 3392371192 ("" (GRIND) NIL NIL)
   UNCHECKED
   ((|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   468 420 T SHOSTAK))
 (|wf_update_GhostVars| 0
  (|wf_update_GhostVars-1| NIL 3391169512 3397385594
   ("" (SKOSIMP*)
    (("" (EXPAND "wf_state")
      (("" (EXPAND "update_GhostVars")
        (("" (FLATTEN) (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   PROVED
   ((|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL))
   2 2 T SHOSTAK))
 (|wf_state_update_stack| 0
  (|wf_state_update_stack-1| NIL 3391162146 3397385598
   ("" (SKOSIMP*)
    (("" (EXPAND "update_stack")
      (("" (SPLIT 1)
        (("1" (SKOSIMP*)
          (("1" (LEMMA "wf_update_PState")
            (("1"
              (CASE "is_finite[[Name, Val[Name]]]
                        ({x: [Name, Val[Name]] |
                            EXISTS (l: LocalVarDecl[Name]):
                              lvds!1(l) AND
                               name(l) = PROJ_1(x) AND
                                default_value[Name](jtype(l)) = PROJ_2(x)})")
              (("1" (INST? -2 :WHERE 1)
                (("1" (INST -2 "p!1")
                  (("1" (ASSERT)
                    (("1" (HIDE 2)
                      (("1" (EXPAND "update_PState")
                        (("1" (EXPAND "o" 1 2)
                          (("1" (EXPAND "o")
                            (("1" (SKOSIMP*)
                              (("1" (USE "wf_state_update_local")
                                (("1"
                                  (CASE "wf_state(p!1)
                                (update_local(name(arg!1), param_val!1)
                                             (update_locals({x: [Name, Val[Name]]
                                                             |
                                                             EXISTS
                                                             (l: LocalVarDecl[Name]):
                                                             lvds!1(l)
                                                             AND
                                                             name(l) = PROJ_1(x)
                                                             AND
                                                             default_value(jtype(l))
                                                             =
                                                             PROJ_2(x)})
                                                           (pstate(s!1))))")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "wf_state" -1)
                                      (("1" (INST -1 "This")
                                        (("1" (FLATTEN) NIL NIL)) NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT)
                                    (("2" (HIDE 2)
                                      (("2" (USE "wf_state_update_local")
                                        (("2"
                                          (CASE "wf_state(p!1)
                                    (update_locals({x: [Name, Val[Name]] |
                                                      EXISTS (l: LocalVarDecl[Name]):
                                                        lvds!1(l) AND
                                                         name(l) = PROJ_1(x) AND
                                                          default_value(jtype(l)) = PROJ_2(x)})
                                                  (pstate(s!1)))")
                                          (("1" (ASSERT)
                                            (("1" (TYPEPRED "arg!1")
                                              (("1" (EXPAND "wf_state" -2)
                                                (("1" (INST -2 "name(arg!1)")
                                                  (("1" (ASSERT)
                                                    (("1" (FLATTEN)
                                                      (("1"
                                                        (EXPAND "var_names")
                                                        (("1" (INST?) NIL NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL)
                                           ("2" (ASSERT)
                                            (("2" (HIDE -1 -2)
                                              (("2"
                                                (USE "wf_state_update_locals")
                                                (("2" (ASSERT)
                                                  (("2" (HIDE 2 3)
                                                    (("2" (SKOSIMP*)
                                                      (("2"
                                                        (REPLACE -3 :DIR RL)
                                                        (("2"
                                                          (EXPAND
                                                           "default_value")
                                                          (("2" (HIDE -3)
                                                            (("2"
                                                              (EXPAND
                                                               "wf_state"
                                                               -4)
                                                              (("2"
                                                                (INST -4
                                                                 "name(l!1)")
                                                                (("2" (ASSERT)
                                                                  (("2"
                                                                    (INST? -8)
                                                                    (("2"
                                                                      (ASSERT)
                                                                      (("2"
                                                                        (FLATTEN)
                                                                        (("2"
                                                                          (EXPAND
                                                                           "var_names")
                                                                          (("2"
                                                                            (INST?)
                                                                            NIL
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (TYPEPRED "lvds!1")
                (("2" (HIDE 2 -2)
                  (("2" (EXPAND "is_finite")
                    (("2" (SKOSIMP*)
                      (("2"
                        (INST 1 "N!1" "LAMBDA(x : ({x: [Name, Val[Name]] |
                               EXISTS (l: LocalVarDecl[Name]):
                                 lvds!1(l) AND
                                  name(l) = PROJ_1(x) AND
                                   default_value[Name](jtype(l)) = PROJ_2(x)})) : f!1(choose({l : LocalVarDecl[Name] |
                                 lvds!1(l) AND
                                  name(l) = PROJ_1(x) AND
                                   default_value[Name](jtype(l)) = PROJ_2(x)}))")
                        (("1" (EXPAND "injective?")
                          (("1" (SKOSIMP*)
                            (("1" (INST?)
                              (("1" (ASSERT)
                                (("1" (APPLY-EXTENSIONALITY :HIDE? T) NIL NIL))
                                NIL)
                               ("2" (REWRITE "nonempty_exists")
                                (("2" (TYPEPRED "x2!1")
                                  (("2" (SKOSIMP*)
                                    (("2" (INST?) (("2" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("3" (REWRITE "nonempty_exists")
                                (("3" (TYPEPRED "x1!1")
                                  (("3" (SKOSIMP*)
                                    (("3" (INST?) (("3" (ASSERT) NIL NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (SKOSIMP*)
                          (("2" (TYPEPRED "x!1")
                            (("2" (REWRITE "nonempty_exists")
                              (("2" (SKOSIMP*)
                                (("2" (INST?) (("2" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (SKOSIMP*) NIL NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|update_stack| CONST-DECL "FullState" |Semantics| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|set| TYPE-EQ-DECL NIL |sets| NIL)
    (|is_finite| CONST-DECL "bool" |finite_sets| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|default_value| CONST-DECL "(defined?)" |ValProp| NIL)
    (|wf_state| CONST-DECL "boolean" |State| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|var_names| CONST-DECL "finite_set[Name]" |ProgramFunctions| NIL)
    (|wf_state_update_locals| FORMULA-DECL NIL |State| NIL)
    (|wf_state_update_local| FORMULA-DECL NIL |State| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|lvds!1| SKOLEM-CONST-DECL "finite_set[LocalVarDecl[Name]]"
     |AnnotatedProgramSemantics| NIL)
    (|update_locals| DEF-DECL "PState" |State| NIL)
    (|getLocalDecls| CONST-DECL "finite_set[LocalVarDecl]" |ProgramFunctions|
     NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|This| CONST-DECL "Name" |Program| NIL)
    (|update_local| CONST-DECL "PState" |State| NIL)
    (O CONST-DECL "T3" |function_props| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL) (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|x!1| SKOLEM-CONST-DECL "({x: [Name, Val[Name]] |
    EXISTS (l: LocalVarDecl[Name]):
      lvds!1(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     |AnnotatedProgramSemantics| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |AnnotatedProgramSemantics|
     NIL)
    (|injective?| CONST-DECL "bool" |functions| NIL)
    (|x2!1| SKOLEM-CONST-DECL "({x: [Name, Val[Name]] |
    EXISTS (l: LocalVarDecl[Name]):
      lvds!1(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     |AnnotatedProgramSemantics| NIL)
    (|x1!1| SKOLEM-CONST-DECL "({x: [Name, Val[Name]] |
    EXISTS (l: LocalVarDecl[Name]):
      lvds!1(l) AND
       name(l) = PROJ_1(x) AND default_value[Name](jtype(l)) = PROJ_2(x)})"
     |AnnotatedProgramSemantics| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |AnnotatedProgramSemantics|
     NIL)
    (|nonempty_exists| FORMULA-DECL NIL |sets_lemmas| NIL)
    (|l!1| SKOLEM-CONST-DECL "LocalVarDecl[Name]" |AnnotatedProgramSemantics|
     NIL)
    (|nonempty?| CONST-DECL "bool" |sets| NIL)
    (|choose| CONST-DECL "(p)" |sets| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|wf_update_PState| FORMULA-DECL NIL |AnnotatedProgramSemantics| NIL))
   353 353 T SHOSTAK))
 (|wf_initial_AP_state| 0
  (|wf_initial_AP_state-1| NIL 3390075578 3397385598
   ("" (SKOSIMP*)
    (("" (EXPAND "initial_AP_state")
      (("" (EXPAND "wf_state")
        (("" (SPLIT 1)
          (("1" (LEMMA "wf_initial_Program_state")
            (("1" (INST -1 "p!1" "this_val!1") (("1" (ASSERT) NIL NIL)) NIL))
            NIL)
           ("2" (USE "wf_initial_ghost_state")
            (("1" (EXPAND "id") (("1" (PROPAX) NIL NIL)) NIL)
             ("2" (SKOSIMP*) (("2" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|initial_AP_state| CONST-DECL "APState" |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|wf_initial_Program_state| FORMULA-DECL NIL |State| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|wf_initial_ghost_state| FORMULA-DECL NIL |SemanticsJML| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bottom?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|get_GhostDecl| CONST-DECL "lift[FieldDecl]" |ProgramFunctions| NIL)
    (|p!1| SKOLEM-CONST-DECL "Program[Name]" |AnnotatedProgramSemantics| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|down| ADT-ACCESSOR-DECL "[(up?) -> T]" |lift_adt| NIL)
    (|Bottom| ADT-CONSTRUCTOR-DECL "(Bottom?)" |Val_adt| NIL)
    (|Bottom?| ADT-RECOGNIZER-DECL "[Val -> boolean]" |Val_adt| NIL)
    (IF CONST-DECL "[boolean, T, T -> T]" |if_def| NIL)
    (|initial_Program_state| CONST-DECL "PState" |State| NIL)
    (|wf_state| CONST-DECL "boolean" |AnnotatedProgramSemantics| NIL))
   31 31 T SHOSTAK))
 (|on_method_entry_AP_TCC1| 0
  (|on_method_entry_AP_TCC1-1| NIL 3391506354 3397385598
   ("" (TYPEPRED "on_method_entry")
    (("" (ASSERT)
      (("" (EXPAND "on_method_event_type") (("" (PROPAX) NIL NIL)) NIL)) NIL))
    NIL)
   PROVED
   ((|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   15 15 T NIL))
 (|determ_step_AP| 0
  (|determ_step_AP-1| NIL 3396347126 3397385599
   ("" (SKOSIMP*) (("" (USE "derive_determ_step") (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   PROVED
   ((|derive_determ_step| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL))
   25 25 T SHOSTAK))
 (|derive_bottom_iff_exception_step_AP| 0
  (|derive_bottom_iff_exception_step_AP-1| NIL 3396347163 3397385599
   ("" (SKOSIMP*)
    (("" (USE "derive_bottom_iff_exception_step") (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   PROVED
   ((|derive_bottom_iff_exception_step| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL))
   24 23 T SHOSTAK))
 (|derive_boolean_expr_type_AP| 0
  (|derive_boolean_expr_type_AP-1| NIL 3396347184 3397385599
   ("" (SKOSIMP*)
    (("" (USE "derive_boolean_expr_type") (("" (ASSERT) NIL NIL)) NIL)) NIL)
   PROVED
   ((|derive_boolean_expr_type| FORMULA-DECL NIL |SemanticsProofs| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|defined?| CONST-DECL "boolean" |ValProp| NIL)
    (|JType| TYPE-DECL NIL |JType_adt| NIL)
    (|FieldDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|BoolExpr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|LocalVarDecl| TYPE-EQ-DECL NIL |Program| NIL)
    (|Stmt| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Expr| TYPE-EQ-DECL NIL |Body_adt| NIL)
    (|Method| TYPE-EQ-DECL NIL |Program| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|Class| TYPE-EQ-DECL NIL |Program| NIL)
    (|Program| TYPE-EQ-DECL NIL |Program| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|Excpt| TYPE-DECL NIL |Excpt_adt| NIL)
    (|PSt| TYPE-EQ-DECL NIL |State| NIL)
    (|update_PState_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|update_PState| CONST-DECL "(update_PState_type)"
     |AnnotatedProgramSemantics| NIL)
    (|update_GhostVars_type| CONST-DECL "boolean" |SemanticsJMLTypes| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|lookup| CONST-DECL "Val" |SemanticsJML| NIL)
    (|Body| TYPE-DECL NIL |Body_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|Assign?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|CondExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|MethodCall?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|NExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|RExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|derive_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|derive_rec_type| TYPE-EQ-DECL NIL |SemanticsTypes| NIL)
    (|execute_set_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (TT? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (FF? ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Neg?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Conj?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Eq?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|BoolVarEval?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|execute_assert_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_assert| CONST-DECL "(execute_assert_type)" |SemanticsJML| NIL)
    (|CaseJML?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|IfThenElse?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Sequence?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Set?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Skip?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|StmtExpr?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Throw?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|TryCatch?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|While?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|Assert?| ADT-RECOGNIZER-DECL "[Body -> boolean]" |Body_adt| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|execute_CaseJML_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|execute_CaseJML| CONST-DECL "(execute_CaseJML_type)" |SemanticsJML| NIL)
    (|on_method_event_type| CONST-DECL "boolean" |SemanticsTypes| NIL)
    (|on_method_entry| CONST-DECL "(on_method_event_type)" |SemanticsJML| NIL)
    (|on_method_exit_normal| CONST-DECL "(on_method_event_type)" |SemanticsJML|
     NIL)
    (|on_method_exit_exceptional| CONST-DECL "(on_method_event_type)"
     |SemanticsJML| NIL))
   5 4 T SHOSTAK)))
(|APSemanticsProperties|
 (|non_interference_of_set_stmt| 0
  (|non_interference_of_set_stmt-1| NIL 3389426699 3397385600
   ("" (SKOSIMP*)
    (("" (EXPAND "derive")
      (("" (EXPAND "spec_expr_has_no_side_effects")
        (("" (EXPAND "execute_set")
          (("" (ASSERT)
            (("" (PROP)
              (("" (SKOSIMP)
                (("" (INST?)
                  (("1" (ASSERT)
                    (("1" (REPLACE -7)
                      (("1" (LIFT-IF)
                        (("1" (ASSERT)
                          (("1" (EXPAND "update_GhostVars")
                            (("1" (EXPAND "update_store")
                              (("1" (ASSERT) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT) NIL NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   PROVED
   ((|derive| DEF-DECL "bool" |Semantics| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|execute_set| CONST-DECL "(execute_set_type)" |SemanticsJML| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|Name| FORMAL-NONEMPTY-TYPE-DECL NIL |APSemanticsProperties| NIL)
    (|Store| TYPE-EQ-DECL NIL |State| NIL)
    (|PState| TYPE-EQ-DECL NIL |State| NIL)
    (|APState| TYPE-EQ-DECL NIL |AnnotatedProgramSemantics| NIL)
    (|Val| TYPE-DECL NIL |Val_adt| NIL)
    (|n!1| SKOLEM-CONST-DECL "nat" |APSemanticsProperties| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|update_store| CONST-DECL "Store" |State| NIL)
    (|update_GhostVars| CONST-DECL "(update_GhostVars_type)"
     |AnnotatedProgramSemantics| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|spec_expr_has_no_side_effects| CONST-DECL "boolean" |Semantics| NIL))
   135 135 T NIL))
 (|CaseJML_evaluates_true_stmt| 0
  (|CaseJML_evaluates_true_stmt-1| NIL 3392546029 3397385605
   ("" (INDUCT "bs")
    (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)
     ("2" (SKOSIMP*)
      (("2" (ASSERT)
        (("2" (EXPAND "member" -3)
          (("2" (SPLIT -3)
            (("1" (REPLACE -1)
              (("1" (HIDE -1 -2 -5)
                (("1" (EXPAND "deriv_stmt" -3)
                  (("1" (EXPAND "execute_CaseJML")
                    (("1" (EXPAND "deriv_stmt" -3)
                      (("1" (SKOSIMP*)
                        (("1" (LIFT-IF)
                          (("1" (INST -2 "tau!1" "v!1" "m1!1")
                            (("1" (EXPAND "deriv_expr" -2)
                              (("1" (ASSERT)
                                (("1" (FLATTEN)
                                  (("1" (REPLACE -3 -7)
                                    (("1" (ASSERT)
                                      (("1" (REPLACE -2)
                                        (("1" (INST?) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (EXPAND "deriv_stmt" -6)
              (("2" (EXPAND "execute_CaseJML")
                (("2" (EXPAND "deriv_stmt" -6)
                  (("2" (SKOSIMP*)
                    (("2" (LIFT-IF)
                      (("2" (INST -2 "p!1" "tau!1" "s2!1" "m2!1" "b1!1")
                        (("2" (ASSERT)
                          (("2" (CASE "b1!1 = cons1_var!1")
                            (("1" (REPLACE -1)
                              (("1" (EXPAND "deriv_expr" -5)
                                (("1" (INST? -5)
                                  (("1" (ASSERT)
                                    (("1" (FLATTEN)
                                      (("1" (REPLACE -6 -11)
                                        (("1" (REPLACE -5)
                                          (("1" (ASSERT)
                                            (("1" (INST 2 "s2!1" "m2!1") NIL
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (INST -5 "cons1_var!1" "tau!1" "v!1" "m1!1")
                              (("2" (EXPAND "member" -5)
                                (("2" (EXPAND "before" -5)
                                  (("2" (ASSERT)
                                    (("2" (EXPAND "deriv_expr" -5)
                                      (("2" (FLATTEN)
                                        (("2" (REPLACE -6 -10)
                                          (("2" (REPLACE -5)
                                            (("2" (ASSERT)
                                              (("2" (SPLIT -2)
                                                (("1" (PROPAX) NIL NIL)
                                                 ("2" (PROPAX) NIL NIL)
                                                 ("3" (REVEAL -1)
                                                  (("3" (SKOSIMP)
                                                    (("3"
                                                      (INST -1 "b2!1" "tau!2"
                                                       "v!2" "m2!2")
                                                      (("3" (ASSERT)
                                                        (("3"
                                                          (EXPAND "member" -1)
                                                          (("3"
                                                            (EXPAND "before"
                                                                    -1)
                                                            (("3"
                                                              (REPLACE -8 -1)
                                                              (("3" (PROPAX)
                                                                NIL NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL)
                                                 ("4" (SKOSIMP)
                                                  (("4" (INST?)
                                                    (("4" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("5" (EXPAND "deriv_stmt" -9)
                                                  (("5" (FLATTEN) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|before| DEF-DECL "boolean" |listfuncs| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   448 447 T NIL))
 (|CaseJML_exclusive_branches_semantics| 0
  (|CaseJML_exclusive_branches_semantics-1| NIL 3389427193 3397385610
   ("" (INDUCT "bs")
    (("1" (EXPAND "member") (("1" (PROPAX) NIL NIL)) NIL)
     ("2" (SKOSIMP*)
      (("2" (EXPAND "derive" -6)
        (("2" (ASSERT)
          (("2" (EXPAND "execute_CaseJML")
            (("2" (EXPAND "derive" -6)
              (("2" (SKOSIMP*)
                (("2" (EXPAND "check_for_exception")
                  (("2" (PROP)
                    (("2" (LIFT-IF)
                      (("2" (EXPAND "member" -5)
                        (("2" (SPLIT -5)
                          (("1" (HIDE -4 -7)
                            (("1" (REPLACE -1 :HIDE? T)
                              (("1" (INST?)
                                (("1" (ASSERT)
                                  (("1" (FLATTEN)
                                    (("1" (REPLACE -5 -2 :HIDE? T)
                                      (("1" (ASSERT)
                                        (("1" (REPLACE -4 :HIDE? T)
                                          (("1" (INST?) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (CASE "b1!1 = cons1_var!1")
                            (("1" (HIDE -5 -8)
                              (("1" (REPLACE -1 :HIDE? T)
                                (("1" (INST?)
                                  (("1" (ASSERT)
                                    (("1" (FLATTEN)
                                      (("1" (REPLACE -6 -3 :HIDE? T)
                                        (("1" (REPLACE -5 :HIDE? T)
                                          (("1" (ASSERT)
                                            (("1" (INST 3 "m2!1" "Unit") NIL
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (ASSERT) NIL NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2"
                              (INST - "p!1" "s1!1" "s2!1" "Unit" "m2!1" "b1!1")
                              (("2"
                                (INST -7 "cons1_var!1" "tau!1" "v1!1" "m1!1")
                                (("1" (EXPAND "member" -7)
                                  (("1" (EXPAND "before" -7)
                                    (("1" (ASSERT)
                                      (("1" (FLATTEN)
                                        (("1" (REPLACE -8 -3 :HIDE? T)
                                          (("1" (REPLACE -7 :HIDE? T)
                                            (("1" (ASSERT)
                                              (("1" (SPLIT -4)
                                                (("1" (PROPAX) NIL NIL)
                                                 ("2" (REVEAL -3)
                                                  (("2" (SKOSIMP)
                                                    (("2" (POSTPONE) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("3" (SKOSIMP)
                                                  (("3" (INST?)
                                                    (("3" (ASSERT) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("4" (EXPAND "derive" -3)
                                                  (("4" (FLATTEN) NIL NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL)
                                 ("3" (TYPEPRED "cons1_var!1`1")
                                  (("3" (POSTPONE) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   UNFINISHED
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|upto| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|up?| ADT-RECOGNIZER-DECL "[lift -> boolean]" |lift_adt| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|lift| TYPE-DECL NIL |lift_adt| NIL)
    (|finite_set| TYPE-EQ-DECL NIL |finite_sets| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   520 520 T NIL)))

